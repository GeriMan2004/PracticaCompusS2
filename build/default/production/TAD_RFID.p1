Version 4.0 HI-TECH Software Intermediate Code
"1941 C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1941:     struct {
[s S70 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S70 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1951
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1951:     struct {
[s S71 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S71 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"1940
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1940: typedef union {
[u S69 `S70 1 `S71 1 ]
[n S69 . . . ]
"1962
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1962: extern volatile TRISCbits_t TRISCbits __attribute__((address(0xF94)));
[v _TRISCbits `VS69 ~T0 @X0 0 e@3988 ]
"8 C:\Program Files\Microchip\xc8\v3.00\pic\include/builtins.h
[v ___nop `(v ~T0 @X0 0 ef ]
[p i ___nop ]
"1216 C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1216:     struct {
[s S49 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S49 . LATC0 LATC1 LATC2 LATC3 LATC4 LATC5 LATC6 LATC7 ]
"1226
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1226:     struct {
[s S50 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S50 . LC0 LC1 LC2 LC3 LC4 LC5 LC6 LC7 ]
"1215
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1215: typedef union {
[u S48 `S49 1 `S50 1 ]
[n S48 . . . ]
"1237
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1237: extern volatile LATCbits_t LATCbits __attribute__((address(0xF8B)));
[v _LATCbits `VS48 ~T0 @X0 0 e@3979 ]
"467
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 467:     struct {
[s S21 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S21 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"477
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 477:     struct {
[s S22 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S22 . T1OSO T1OSI CCP1 SCK SDI SDO TX RX ]
"487
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 487:     struct {
[s S23 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S23 . T13CKI CCP2 P1A SCL SDA . CK DT ]
"497
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 497:     struct {
[s S24 :1 `uc 1 ]
[n S24 . T1CKI ]
"500
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 500:     struct {
[s S25 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S25 . . PA2 PA1 ]
"466
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 466: typedef union {
[u S20 `S21 1 `S22 1 `S23 1 `S24 1 `S25 1 ]
[n S20 . . . . . . ]
"506
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 506: extern volatile PORTCbits_t PORTCbits __attribute__((address(0xF82)));
[v _PORTCbits `VS20 ~T0 @X0 0 e@3970 ]
"10 ./TAD_DATOS.h
[; ;./TAD_DATOS.h: 10: unsigned char* getActualUID(void);
[v _getActualUID `(*uc ~T0 @X0 0 ef ]
"13
[; ;./TAD_DATOS.h: 13: void setCurrentUser(char UID0, char UID1, char UID2, char UID3, char UID4);
[v _setCurrentUser `(v ~T0 @X0 0 ef5`uc`uc`uc`uc`uc ]
"52 C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 52: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"284
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 284: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"463
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 463: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"643
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 643: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"785
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 785: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"988
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 988: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"1100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1100: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"1212
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1212: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1324
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1324: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1436
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1436: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1488
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1488: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1493
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1493: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1710
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1710: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1715
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1715: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1932
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1932: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1937
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1937: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"2154
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2154: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"2159
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2159: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2376
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2376: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2381
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2381: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2540
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2540: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"2605
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2605: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2682
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2682: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2759
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2759: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2836
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2836: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2902
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2902: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2968
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2968: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"3034
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3034: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"3100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3100: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"3107
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3107: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"3114
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3114: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"3121
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3121: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"3126
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3126: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"3331
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3331: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"3336
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3336: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3587
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3587: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3592
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3592: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3599
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3599: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3604
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3604: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3611
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3611: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3616
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3616: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3623
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3623: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"3630
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3630: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3742
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3742: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3749
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3749: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3756
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3756: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3763
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3763: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"3853
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3853: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"3932
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3932: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"4014
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4014: __asm("ECCP1DEL equ 0FB7h");
[; <" ECCP1DEL equ 0FB7h ;# ">
"4019
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4019: __asm("PWM1CON equ 0FB7h");
[; <" PWM1CON equ 0FB7h ;# ">
"4152
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4152: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"4157
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4157: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"4332
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4332: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"4411
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4411: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"4418
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4418: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"4425
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4425: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"4432
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4432: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"4437
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4437: __asm("ECCP1CON equ 0FBDh");
[; <" ECCP1CON equ 0FBDh ;# ">
"4624
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4624: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"4631
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4631: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"4638
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4638: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"4645
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4645: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"4716
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4716: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"4801
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4801: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"4920
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4920: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"4927
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4927: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"4934
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4934: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"4941
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4941: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"5036
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5036: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"5106
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5106: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"5327
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5327: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"5334
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5334: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"5341
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5341: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"5439
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5439: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"5444
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5444: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"5549
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5549: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"5556
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5556: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"5659
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5659: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"5666
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5666: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"5673
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5673: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"5680
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5680: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"5814
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5814: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"5842
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5842: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"5847
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5847: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"6100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6100: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"6183
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6183: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"6260
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6260: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"6267
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6267: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"6274
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6274: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"6281
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6281: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"6352
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6352: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"6359
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6359: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"6366
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6366: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"6373
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6373: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"6380
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6380: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"6387
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6387: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"6394
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6394: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"6401
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6401: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"6408
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6408: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"6415
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6415: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"6422
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6422: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"6429
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6429: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"6436
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6436: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"6443
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6443: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"6450
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6450: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"6457
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6457: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"6464
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6464: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"6471
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6471: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"6483
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6483: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"6490
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6490: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"6497
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6497: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"6504
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6504: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"6511
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6511: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"6518
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6518: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"6525
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6525: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"6532
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6532: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"6539
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6539: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"6631
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6631: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"6701
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6701: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"6818
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6818: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"6825
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6825: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"6832
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6832: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"6839
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6839: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"6848
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6848: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"6855
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6855: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"6862
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6862: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"6869
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6869: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"6878
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6878: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"6885
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6885: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"6892
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6892: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"6899
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6899: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"6906
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6906: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"6913
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6913: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"6987
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6987: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"6994
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6994: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"7001
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 7001: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"7008
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 7008: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"17 TAD_RFID.c
[; ;TAD_RFID.c: 17: void InitPortDirections () {
[v _InitPortDirections `(v ~T0 @X0 1 ef ]
{
[e :U _InitPortDirections ]
[f ]
"18
[; ;TAD_RFID.c: 18:     TRISCbits.TRISC0 = 1;
[e = . . _TRISCbits 0 0 -> -> 1 `i `uc ]
"19
[; ;TAD_RFID.c: 19:     TRISCbits.TRISC1 = 0;
[e = . . _TRISCbits 0 1 -> -> 0 `i `uc ]
"20
[; ;TAD_RFID.c: 20:     TRISCbits.TRISC2 = 0;
[e = . . _TRISCbits 0 2 -> -> 0 `i `uc ]
"21
[; ;TAD_RFID.c: 21:     TRISCbits.TRISC3 = 0;
[e = . . _TRISCbits 0 3 -> -> 0 `i `uc ]
"22
[; ;TAD_RFID.c: 22:     TRISCbits.TRISC4 = 0;
[e = . . _TRISCbits 0 4 -> -> 0 `i `uc ]
"23
[; ;TAD_RFID.c: 23: }
[e :UE 302 ]
}
"25
[; ;TAD_RFID.c: 25: void delay_us (char howMany) {
[v _delay_us `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _delay_us ]
[v _howMany `uc ~T0 @X0 1 r1 ]
[f ]
"26
[; ;TAD_RFID.c: 26:     char x;
[v _x `uc ~T0 @X0 1 a ]
"27
[; ;TAD_RFID.c: 27:     for (x = 0; x < howMany * 16; x++) __nop();
{
[e = _x -> -> 0 `i `uc ]
[e $U 307  ]
[e :U 304 ]
[e ( ___nop ..  ]
[e ++ _x -> -> 1 `i `uc ]
[e :U 307 ]
[e $ < -> _x `i * -> _howMany `i -> 16 `i 304  ]
[e :U 305 ]
}
"28
[; ;TAD_RFID.c: 28: }
[e :UE 303 ]
}
"30
[; ;TAD_RFID.c: 30: unsigned char MFRC522_Rd (unsigned char Address) {
[v _MFRC522_Rd `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _MFRC522_Rd ]
[v _Address `uc ~T0 @X0 1 r1 ]
[f ]
"31
[; ;TAD_RFID.c: 31:     unsigned char i, ucAddr = ((Address<<1) & 0x7E) | 0x80;
[v _i `uc ~T0 @X0 1 a ]
[v _ucAddr `uc ~T0 @X0 1 a ]
[e = _ucAddr -> | & << -> _Address `i -> 1 `i -> 126 `i -> 128 `i `uc ]
"32
[; ;TAD_RFID.c: 32:     unsigned char ucResult = 0;
[v _ucResult `uc ~T0 @X0 1 a ]
[e = _ucResult -> -> 0 `i `uc ]
"34
[; ;TAD_RFID.c: 34:     LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"35
[; ;TAD_RFID.c: 35:     LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"37
[; ;TAD_RFID.c: 37:     for (i = 8; i > 0; i--) {
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 309  ]
[e $U 310  ]
[e :U 309 ]
{
"38
[; ;TAD_RFID.c: 38:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
[e = . . _LATCbits 0 1 -> -> == & -> _ucAddr `i -> 128 `i -> 128 `i `i `uc ]
"39
[; ;TAD_RFID.c: 39:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"40
[; ;TAD_RFID.c: 40:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"41
[; ;TAD_RFID.c: 41:         ucAddr <<= 1;
[e =<< _ucAddr -> -> 1 `i `uc ]
"42
[; ;TAD_RFID.c: 42:         LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"43
[; ;TAD_RFID.c: 43:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"44
[; ;TAD_RFID.c: 44:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 309  ]
[e :U 310 ]
}
"46
[; ;TAD_RFID.c: 46:     for (i = 8; i > 0; i--) {
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 312  ]
[e $U 313  ]
[e :U 312 ]
{
"47
[; ;TAD_RFID.c: 47:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"48
[; ;TAD_RFID.c: 48:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"49
[; ;TAD_RFID.c: 49:         ucResult <<= 1;
[e =<< _ucResult -> -> 1 `i `uc ]
"50
[; ;TAD_RFID.c: 50:         ucResult|= PORTCbits.RC0;
[e =| _ucResult -> . . _PORTCbits 0 0 `uc ]
"51
[; ;TAD_RFID.c: 51:         LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"52
[; ;TAD_RFID.c: 52:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"53
[; ;TAD_RFID.c: 53:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 312  ]
[e :U 313 ]
}
"55
[; ;TAD_RFID.c: 55:     LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"56
[; ;TAD_RFID.c: 56:     LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"57
[; ;TAD_RFID.c: 57:     return ucResult;
[e ) _ucResult ]
[e $UE 308  ]
"58
[; ;TAD_RFID.c: 58: }
[e :UE 308 ]
}
"61
[; ;TAD_RFID.c: 61: void MFRC522_Wr (unsigned char Address, unsigned char value) {
[v _MFRC522_Wr `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _MFRC522_Wr ]
[v _Address `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
[f ]
"62
[; ;TAD_RFID.c: 62:     unsigned char i, ucAddr = ((Address << 1) & 0x7E);
[v _i `uc ~T0 @X0 1 a ]
[v _ucAddr `uc ~T0 @X0 1 a ]
[e = _ucAddr -> & << -> _Address `i -> 1 `i -> 126 `i `uc ]
"63
[; ;TAD_RFID.c: 63:     LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"64
[; ;TAD_RFID.c: 64:     LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"65
[; ;TAD_RFID.c: 65:     for (i = 8; i > 0; i--) {
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 316  ]
[e $U 317  ]
[e :U 316 ]
{
"66
[; ;TAD_RFID.c: 66:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
[e = . . _LATCbits 0 1 -> -> == & -> _ucAddr `i -> 128 `i -> 128 `i `i `uc ]
"67
[; ;TAD_RFID.c: 67:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"68
[; ;TAD_RFID.c: 68:         ucAddr <<= 1;
[e =<< _ucAddr -> -> 1 `i `uc ]
"69
[; ;TAD_RFID.c: 69:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"70
[; ;TAD_RFID.c: 70:         LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"71
[; ;TAD_RFID.c: 71:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"72
[; ;TAD_RFID.c: 72:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 316  ]
[e :U 317 ]
}
"74
[; ;TAD_RFID.c: 74:     for (i = 8; i > 0; i--) {
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 319  ]
[e $U 320  ]
[e :U 319 ]
{
"75
[; ;TAD_RFID.c: 75:         LATCbits.LATC1 = ((value & 0x80) == 0x80);
[e = . . _LATCbits 0 1 -> -> == & -> _value `i -> 128 `i -> 128 `i `i `uc ]
"76
[; ;TAD_RFID.c: 76:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"77
[; ;TAD_RFID.c: 77:         value <<= 1;
[e =<< _value -> -> 1 `i `uc ]
"78
[; ;TAD_RFID.c: 78:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"79
[; ;TAD_RFID.c: 79:         LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"80
[; ;TAD_RFID.c: 80:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"81
[; ;TAD_RFID.c: 81:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 319  ]
[e :U 320 ]
}
"83
[; ;TAD_RFID.c: 83:     LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"84
[; ;TAD_RFID.c: 84:     LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"85
[; ;TAD_RFID.c: 85: }
[e :UE 315 ]
}
"89
[; ;TAD_RFID.c: 89: void MFRC522_Clear_Bit(char addr, char mask) {
[v _MFRC522_Clear_Bit `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _MFRC522_Clear_Bit ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
[f ]
"90
[; ;TAD_RFID.c: 90:     MFRC522_Wr(addr, MFRC522_Rd(addr) & ~mask);
[e ( _MFRC522_Wr (2 , -> _addr `uc -> & -> ( _MFRC522_Rd (1 -> _addr `uc `i ~ -> _mask `i `uc ]
"91
[; ;TAD_RFID.c: 91: }
[e :UE 322 ]
}
"93
[; ;TAD_RFID.c: 93: void MFRC522_Set_Bit(char addr, char mask) {
[v _MFRC522_Set_Bit `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _MFRC522_Set_Bit ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
[f ]
"94
[; ;TAD_RFID.c: 94:     MFRC522_Wr(addr, MFRC522_Rd(addr) | mask);
[e ( _MFRC522_Wr (2 , -> _addr `uc -> | -> ( _MFRC522_Rd (1 -> _addr `uc `i -> _mask `i `uc ]
"95
[; ;TAD_RFID.c: 95: }
[e :UE 323 ]
}
"97
[; ;TAD_RFID.c: 97: void MFRC522_Reset () {
[v _MFRC522_Reset `(v ~T0 @X0 1 ef ]
{
[e :U _MFRC522_Reset ]
[f ]
"98
[; ;TAD_RFID.c: 98:     LATCbits.LATC4 = 1;
[e = . . _LATCbits 0 4 -> -> 1 `i `uc ]
"99
[; ;TAD_RFID.c: 99:     delay_us (1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"100
[; ;TAD_RFID.c: 100:     LATCbits.LATC4 = 0;
[e = . . _LATCbits 0 4 -> -> 0 `i `uc ]
"101
[; ;TAD_RFID.c: 101:     delay_us (1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"102
[; ;TAD_RFID.c: 102:     LATCbits.LATC4 = 1;
[e = . . _LATCbits 0 4 -> -> 1 `i `uc ]
"103
[; ;TAD_RFID.c: 103:     delay_us (1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"104
[; ;TAD_RFID.c: 104:     MFRC522_Wr(0x01, 0x0F);
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 15 `i `uc ]
"105
[; ;TAD_RFID.c: 105:     delay_us (1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"106
[; ;TAD_RFID.c: 106: }
[e :UE 324 ]
}
"108
[; ;TAD_RFID.c: 108: void MFRC522_AntennaOn () {
[v _MFRC522_AntennaOn `(v ~T0 @X0 1 ef ]
{
[e :U _MFRC522_AntennaOn ]
[f ]
"109
[; ;TAD_RFID.c: 109:     MFRC522_Set_Bit(0x14, 0x03);
[e ( _MFRC522_Set_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"110
[; ;TAD_RFID.c: 110: }
[e :UE 325 ]
}
"112
[; ;TAD_RFID.c: 112: void MFRC522_AntennaOff () {
[v _MFRC522_AntennaOff `(v ~T0 @X0 1 ef ]
{
[e :U _MFRC522_AntennaOff ]
[f ]
"113
[; ;TAD_RFID.c: 113:     MFRC522_Clear_Bit(0x14, 0x03);
[e ( _MFRC522_Clear_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"114
[; ;TAD_RFID.c: 114: }
[e :UE 326 ]
}
"116
[; ;TAD_RFID.c: 116: void MFRC522_Init() {
[v _MFRC522_Init `(v ~T0 @X0 1 ef ]
{
[e :U _MFRC522_Init ]
[f ]
"117
[; ;TAD_RFID.c: 117:     LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"118
[; ;TAD_RFID.c: 118:     LATCbits.LATC4 = 1;
[e = . . _LATCbits 0 4 -> -> 1 `i `uc ]
"120
[; ;TAD_RFID.c: 120:     MFRC522_Reset();
[e ( _MFRC522_Reset ..  ]
"121
[; ;TAD_RFID.c: 121:     MFRC522_Wr(0x2A, 0x8D);
[e ( _MFRC522_Wr (2 , -> -> 42 `i `uc -> -> 141 `i `uc ]
"122
[; ;TAD_RFID.c: 122:     MFRC522_Wr(0x2B, 0x3E);
[e ( _MFRC522_Wr (2 , -> -> 43 `i `uc -> -> 62 `i `uc ]
"123
[; ;TAD_RFID.c: 123:     MFRC522_Wr(0x2D, 30);
[e ( _MFRC522_Wr (2 , -> -> 45 `i `uc -> -> 30 `i `uc ]
"124
[; ;TAD_RFID.c: 124:     MFRC522_Wr(0x2C, 0);
[e ( _MFRC522_Wr (2 , -> -> 44 `i `uc -> -> 0 `i `uc ]
"125
[; ;TAD_RFID.c: 125:     MFRC522_Wr(0x15, 0x40);
[e ( _MFRC522_Wr (2 , -> -> 21 `i `uc -> -> 64 `i `uc ]
"126
[; ;TAD_RFID.c: 126:     MFRC522_Wr(0x11, 0x3D);
[e ( _MFRC522_Wr (2 , -> -> 17 `i `uc -> -> 61 `i `uc ]
"128
[; ;TAD_RFID.c: 128:     MFRC522_AntennaOff();
[e ( _MFRC522_AntennaOff ..  ]
"129
[; ;TAD_RFID.c: 129:     MFRC522_AntennaOn();
[e ( _MFRC522_AntennaOn ..  ]
"130
[; ;TAD_RFID.c: 130: }
[e :UE 327 ]
}
"132
[; ;TAD_RFID.c: 132: char motor_Write(char addr, char value) {
[v _motor_Write `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _motor_Write ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
[f ]
"133
[; ;TAD_RFID.c: 133:     static char state_write = 0;
[v F2776 `uc ~T0 @X0 1 s state_write ]
[i F2776
-> -> 0 `i `uc
]
"134
[; ;TAD_RFID.c: 134:     static unsigned char ucAddr;
[v F2777 `uc ~T0 @X0 1 s ucAddr ]
"135
[; ;TAD_RFID.c: 135:     static unsigned char ucValue;
[v F2778 `uc ~T0 @X0 1 s ucValue ]
"136
[; ;TAD_RFID.c: 136:     static char bit_count = 0;
[v F2779 `uc ~T0 @X0 1 s bit_count ]
[i F2779
-> -> 0 `i `uc
]
"138
[; ;TAD_RFID.c: 138:     switch (state_write) {
[e $U 330  ]
{
"139
[; ;TAD_RFID.c: 139:         case 0:
[e :U 331 ]
"140
[; ;TAD_RFID.c: 140:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"141
[; ;TAD_RFID.c: 141:             LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"142
[; ;TAD_RFID.c: 142:             ucAddr = ((addr << 1) & 0x7E);
[e = F2777 -> & << -> _addr `i -> 1 `i -> 126 `i `uc ]
"143
[; ;TAD_RFID.c: 143:             ucValue = value;
[e = F2778 -> _value `uc ]
"144
[; ;TAD_RFID.c: 144:             bit_count = 0;
[e = F2779 -> -> 0 `i `uc ]
"145
[; ;TAD_RFID.c: 145:             state_write = 1;
[e = F2776 -> -> 1 `i `uc ]
"146
[; ;TAD_RFID.c: 146:             break;
[e $U 329  ]
"148
[; ;TAD_RFID.c: 148:         case 1:
[e :U 332 ]
"149
[; ;TAD_RFID.c: 149:             LATCbits.LATC1 = ((ucAddr & 0x80) != 0);
[e = . . _LATCbits 0 1 -> -> != & -> F2777 `i -> 128 `i -> 0 `i `i `uc ]
"150
[; ;TAD_RFID.c: 150:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"151
[; ;TAD_RFID.c: 151:             ucAddr <<= 1;
[e =<< F2777 -> -> 1 `i `uc ]
"152
[; ;TAD_RFID.c: 152:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"153
[; ;TAD_RFID.c: 153:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"154
[; ;TAD_RFID.c: 154:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"155
[; ;TAD_RFID.c: 155:             bit_count++;
[e ++ F2779 -> -> 1 `i `uc ]
"156
[; ;TAD_RFID.c: 156:             if (bit_count == 8) {
[e $ ! == -> F2779 `i -> 8 `i 333  ]
{
"157
[; ;TAD_RFID.c: 157:                 bit_count = 0;
[e = F2779 -> -> 0 `i `uc ]
"158
[; ;TAD_RFID.c: 158:                 state_write = 2;
[e = F2776 -> -> 2 `i `uc ]
"159
[; ;TAD_RFID.c: 159:             }
}
[e :U 333 ]
"160
[; ;TAD_RFID.c: 160:             break;
[e $U 329  ]
"162
[; ;TAD_RFID.c: 162:         case 2:
[e :U 334 ]
"163
[; ;TAD_RFID.c: 163:             LATCbits.LATC1 = ((ucValue & 0x80) != 0);
[e = . . _LATCbits 0 1 -> -> != & -> F2778 `i -> 128 `i -> 0 `i `i `uc ]
"164
[; ;TAD_RFID.c: 164:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"165
[; ;TAD_RFID.c: 165:             ucValue <<= 1;
[e =<< F2778 -> -> 1 `i `uc ]
"166
[; ;TAD_RFID.c: 166:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"167
[; ;TAD_RFID.c: 167:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"168
[; ;TAD_RFID.c: 168:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"169
[; ;TAD_RFID.c: 169:             bit_count++;
[e ++ F2779 -> -> 1 `i `uc ]
"170
[; ;TAD_RFID.c: 170:             if (bit_count == 8) {
[e $ ! == -> F2779 `i -> 8 `i 335  ]
{
"171
[; ;TAD_RFID.c: 171:                 LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"172
[; ;TAD_RFID.c: 172:                 LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"173
[; ;TAD_RFID.c: 173:                 state_write = 0;
[e = F2776 -> -> 0 `i `uc ]
"174
[; ;TAD_RFID.c: 174:                 return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 328  ]
"175
[; ;TAD_RFID.c: 175:             }
}
[e :U 335 ]
"176
[; ;TAD_RFID.c: 176:             break;
[e $U 329  ]
"177
[; ;TAD_RFID.c: 177:     }
}
[e $U 329  ]
[e :U 330 ]
[e [\ F2776 , $ -> 0 `i 331
 , $ -> 1 `i 332
 , $ -> 2 `i 334
 329 ]
[e :U 329 ]
"178
[; ;TAD_RFID.c: 178:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 328  ]
"179
[; ;TAD_RFID.c: 179: }
[e :UE 328 ]
}
"182
[; ;TAD_RFID.c: 182: char motor_Read(char addr) {
[v _motor_Read `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _motor_Read ]
[v _addr `uc ~T0 @X0 1 r1 ]
[f ]
"183
[; ;TAD_RFID.c: 183:     static char state_read = 0;
[v F2782 `uc ~T0 @X0 1 s state_read ]
[i F2782
-> -> 0 `i `uc
]
"184
[; ;TAD_RFID.c: 184:     static char bit_count = 0;
[v F2783 `uc ~T0 @X0 1 s bit_count ]
[i F2783
-> -> 0 `i `uc
]
"185
[; ;TAD_RFID.c: 185:     static unsigned char ucAddr;
[v F2784 `uc ~T0 @X0 1 s ucAddr ]
"186
[; ;TAD_RFID.c: 186:     static unsigned char ucResult;
[v F2785 `uc ~T0 @X0 1 s ucResult ]
"188
[; ;TAD_RFID.c: 188:     switch(state_read) {
[e $U 338  ]
{
"189
[; ;TAD_RFID.c: 189:         case 0:
[e :U 339 ]
"190
[; ;TAD_RFID.c: 190:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"191
[; ;TAD_RFID.c: 191:             LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"192
[; ;TAD_RFID.c: 192:             ucAddr = ((addr<<1) & 0x7E) | 0x80;
[e = F2784 -> | & << -> _addr `i -> 1 `i -> 126 `i -> 128 `i `uc ]
"193
[; ;TAD_RFID.c: 193:             ucResult = 0;
[e = F2785 -> -> 0 `i `uc ]
"194
[; ;TAD_RFID.c: 194:             bit_count = 0;
[e = F2783 -> -> 0 `i `uc ]
"195
[; ;TAD_RFID.c: 195:             state_read = 1;
[e = F2782 -> -> 1 `i `uc ]
"196
[; ;TAD_RFID.c: 196:             break;
[e $U 337  ]
"198
[; ;TAD_RFID.c: 198:         case 1:
[e :U 340 ]
"199
[; ;TAD_RFID.c: 199:             LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
[e = . . _LATCbits 0 1 -> -> == & -> F2784 `i -> 128 `i -> 128 `i `i `uc ]
"200
[; ;TAD_RFID.c: 200:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"201
[; ;TAD_RFID.c: 201:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"202
[; ;TAD_RFID.c: 202:             ucAddr <<= 1;
[e =<< F2784 -> -> 1 `i `uc ]
"203
[; ;TAD_RFID.c: 203:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"204
[; ;TAD_RFID.c: 204:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"205
[; ;TAD_RFID.c: 205:             bit_count++;
[e ++ F2783 -> -> 1 `i `uc ]
"207
[; ;TAD_RFID.c: 207:             if (bit_count >= 8) {
[e $ ! >= -> F2783 `i -> 8 `i 341  ]
{
"208
[; ;TAD_RFID.c: 208:                 bit_count = 0;
[e = F2783 -> -> 0 `i `uc ]
"209
[; ;TAD_RFID.c: 209:                 state_read = 2;
[e = F2782 -> -> 2 `i `uc ]
"210
[; ;TAD_RFID.c: 210:             }
}
[e :U 341 ]
"211
[; ;TAD_RFID.c: 211:             break;
[e $U 337  ]
"213
[; ;TAD_RFID.c: 213:         case 2:
[e :U 342 ]
"214
[; ;TAD_RFID.c: 214:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"215
[; ;TAD_RFID.c: 215:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"216
[; ;TAD_RFID.c: 216:             ucResult <<= 1;
[e =<< F2785 -> -> 1 `i `uc ]
"217
[; ;TAD_RFID.c: 217:             ucResult |= PORTCbits.RC0;
[e =| F2785 -> . . _PORTCbits 0 0 `uc ]
"218
[; ;TAD_RFID.c: 218:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"219
[; ;TAD_RFID.c: 219:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"220
[; ;TAD_RFID.c: 220:             bit_count++;
[e ++ F2783 -> -> 1 `i `uc ]
"222
[; ;TAD_RFID.c: 222:             if (bit_count >= 8) {
[e $ ! >= -> F2783 `i -> 8 `i 343  ]
{
"223
[; ;TAD_RFID.c: 223:                 LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"224
[; ;TAD_RFID.c: 224:                 LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"225
[; ;TAD_RFID.c: 225:                 state_read = 0;
[e = F2782 -> -> 0 `i `uc ]
"226
[; ;TAD_RFID.c: 226:                 return ucResult;
[e ) -> F2785 `uc ]
[e $UE 336  ]
"227
[; ;TAD_RFID.c: 227:             }
}
[e :U 343 ]
"228
[; ;TAD_RFID.c: 228:             break;
[e $U 337  ]
"229
[; ;TAD_RFID.c: 229:     }
}
[e $U 337  ]
[e :U 338 ]
[e [\ F2782 , $ -> 0 `i 339
 , $ -> 1 `i 340
 , $ -> 2 `i 342
 337 ]
[e :U 337 ]
"230
[; ;TAD_RFID.c: 230:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 336  ]
"231
[; ;TAD_RFID.c: 231: }
[e :UE 336 ]
}
"234
[; ;TAD_RFID.c: 234: void initRFID() {
[v _initRFID `(v ~T0 @X0 1 ef ]
{
[e :U _initRFID ]
[f ]
"235
[; ;TAD_RFID.c: 235:     InitPortDirections();
[e ( _InitPortDirections ..  ]
"236
[; ;TAD_RFID.c: 236:     MFRC522_Init();
[e ( _MFRC522_Init ..  ]
"237
[; ;TAD_RFID.c: 237: }
[e :UE 344 ]
}
"240
[; ;TAD_RFID.c: 240: void motor_RFID(void) {
[v _motor_RFID `(v ~T0 @X0 1 ef ]
{
[e :U _motor_RFID ]
[f ]
"241
[; ;TAD_RFID.c: 241:     static char state = 0;
[v F2788 `uc ~T0 @X0 1 s state ]
[i F2788
-> -> 0 `i `uc
]
"242
[; ;TAD_RFID.c: 242:     static char substate = 0;
[v F2789 `uc ~T0 @X0 1 s substate ]
[i F2789
-> -> 0 `i `uc
]
"243
[; ;TAD_RFID.c: 243:     static char irqEn, waitIRq, n;
[v F2790 `uc ~T0 @X0 1 s irqEn ]
[v F2791 `uc ~T0 @X0 1 s waitIRq ]
[v F2792 `uc ~T0 @X0 1 s n ]
"244
[; ;TAD_RFID.c: 244:     static unsigned char i;
[v F2793 `uc ~T0 @X0 1 s i ]
"245
[; ;TAD_RFID.c: 245:     static char _status;
[v F2794 `uc ~T0 @X0 1 s _status ]
"246
[; ;TAD_RFID.c: 246:     static unsigned unLen;
[v F2795 `ui ~T0 @X0 1 s unLen ]
"247
[; ;TAD_RFID.c: 247:     static char TagType;
[v F2796 `uc ~T0 @X0 1 s TagType ]
"248
[; ;TAD_RFID.c: 248:     static unsigned char UID[6];
[v F2797 `uc ~T0 @X0 -> 6 `i s UID ]
"249
[; ;TAD_RFID.c: 249:     static unsigned char checksum;
[v F2798 `uc ~T0 @X0 1 s checksum ]
"250
[; ;TAD_RFID.c: 250:     static unsigned char allZero;
[v F2799 `uc ~T0 @X0 1 s allZero ]
"251
[; ;TAD_RFID.c: 251:     static unsigned char tempRegValue;
[v F2800 `uc ~T0 @X0 1 s tempRegValue ]
"252
[; ;TAD_RFID.c: 252:     unsigned char flag = 0;
[v _flag `uc ~T0 @X0 1 a ]
[e = _flag -> -> 0 `i `uc ]
"253
[; ;TAD_RFID.c: 253:     static unsigned char lastBitsVal;
[v F2802 `uc ~T0 @X0 1 s lastBitsVal ]
"254
[; ;TAD_RFID.c: 254:     static unsigned char fifoLevel;
[v F2803 `uc ~T0 @X0 1 s fifoLevel ]
"255
[; ;TAD_RFID.c: 255:     unsigned char backBitsCalc;
[v _backBitsCalc `uc ~T0 @X0 1 a ]
"256
[; ;TAD_RFID.c: 256:     switch(state) {
[e $U 347  ]
{
"258
[; ;TAD_RFID.c: 258:         case 0:
[e :U 348 ]
"259
[; ;TAD_RFID.c: 259:             switch(substate) {
[e $U 350  ]
{
"260
[; ;TAD_RFID.c: 260:                 case 0:
[e :U 351 ]
"262
[; ;TAD_RFID.c: 262:                     flag = motor_Write(0x0D, 0x07);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> -> 7 `i `uc `uc ]
"263
[; ;TAD_RFID.c: 263:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 352  ]
{
"264
[; ;TAD_RFID.c: 264:                     TagType = 0x26;
[e = F2796 -> -> 38 `i `uc ]
"265
[; ;TAD_RFID.c: 265:                     substate = 1;
[e = F2789 -> -> 1 `i `uc ]
"266
[; ;TAD_RFID.c: 266:                     }
}
[e :U 352 ]
"267
[; ;TAD_RFID.c: 267:                     break;
[e $U 349  ]
"268
[; ;TAD_RFID.c: 268:                 case 1:
[e :U 353 ]
"270
[; ;TAD_RFID.c: 270:                     irqEn = 0x77;
[e = F2790 -> -> 119 `i `uc ]
"271
[; ;TAD_RFID.c: 271:                     waitIRq = 0x30;
[e = F2791 -> -> 48 `i `uc ]
"272
[; ;TAD_RFID.c: 272:                     flag = motor_Write(0x02, irqEn | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 2 `i `uc -> | -> F2790 `i -> 128 `i `uc `uc ]
"273
[; ;TAD_RFID.c: 273:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 354  ]
{
"274
[; ;TAD_RFID.c: 274:                     substate = 2;
[e = F2789 -> -> 2 `i `uc ]
"275
[; ;TAD_RFID.c: 275:                     }
}
[e :U 354 ]
"276
[; ;TAD_RFID.c: 276:                     break;
[e $U 349  ]
"277
[; ;TAD_RFID.c: 277:                 case 2:
[e :U 355 ]
"279
[; ;TAD_RFID.c: 279:                     flag = motor_Read(0x04);
[e = _flag -> ( _motor_Read (1 -> -> 4 `i `uc `uc ]
"280
[; ;TAD_RFID.c: 280:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 356  ]
{
"281
[; ;TAD_RFID.c: 281:                         tempRegValue = flag;
[e = F2800 _flag ]
"282
[; ;TAD_RFID.c: 282:                         substate = 3;
[e = F2789 -> -> 3 `i `uc ]
"283
[; ;TAD_RFID.c: 283:                     }
}
[e :U 356 ]
"284
[; ;TAD_RFID.c: 284:                     break;
[e $U 349  ]
"285
[; ;TAD_RFID.c: 285:                 case 3:
[e :U 357 ]
"287
[; ;TAD_RFID.c: 287:                     flag = motor_Write(0x02, tempRegValue & ~0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 2 `i `uc -> & -> F2800 `i ~ -> 128 `i `uc `uc ]
"288
[; ;TAD_RFID.c: 288:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 358  ]
{
"289
[; ;TAD_RFID.c: 289:                         substate = 4;
[e = F2789 -> -> 4 `i `uc ]
"290
[; ;TAD_RFID.c: 290:                     }
}
[e :U 358 ]
"291
[; ;TAD_RFID.c: 291:                     break;
[e $U 349  ]
"292
[; ;TAD_RFID.c: 292:                 case 4:
[e :U 359 ]
"294
[; ;TAD_RFID.c: 294:                     tempRegValue = MFRC522_Rd(0x0A);
[e = F2800 ( _MFRC522_Rd (1 -> -> 10 `i `uc ]
"295
[; ;TAD_RFID.c: 295:                     substate = 5;
[e = F2789 -> -> 5 `i `uc ]
"296
[; ;TAD_RFID.c: 296:                     break;
[e $U 349  ]
"297
[; ;TAD_RFID.c: 297:                 case 5:
[e :U 360 ]
"299
[; ;TAD_RFID.c: 299:                     flag = motor_Write(0x0A, tempRegValue | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 10 `i `uc -> | -> F2800 `i -> 128 `i `uc `uc ]
"300
[; ;TAD_RFID.c: 300:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 361  ]
{
"301
[; ;TAD_RFID.c: 301:                         substate = 6;
[e = F2789 -> -> 6 `i `uc ]
"302
[; ;TAD_RFID.c: 302:                     }
}
[e :U 361 ]
"303
[; ;TAD_RFID.c: 303:                     break;
[e $U 349  ]
"304
[; ;TAD_RFID.c: 304:                 case 6:
[e :U 362 ]
"306
[; ;TAD_RFID.c: 306:                     flag = motor_Write(0x01, 0x00);
[e = _flag -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 0 `i `uc `uc ]
"307
[; ;TAD_RFID.c: 307:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 363  ]
{
"308
[; ;TAD_RFID.c: 308:                         substate = 7;
[e = F2789 -> -> 7 `i `uc ]
"309
[; ;TAD_RFID.c: 309:                     }
}
[e :U 363 ]
"310
[; ;TAD_RFID.c: 310:                     break;
[e $U 349  ]
"311
[; ;TAD_RFID.c: 311:                 case 7:
[e :U 364 ]
"313
[; ;TAD_RFID.c: 313:                     flag = motor_Write(0x09, TagType);
[e = _flag -> ( _motor_Write (2 , -> -> 9 `i `uc F2796 `uc ]
"314
[; ;TAD_RFID.c: 314:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 365  ]
{
"315
[; ;TAD_RFID.c: 315:                         substate = 8;
[e = F2789 -> -> 8 `i `uc ]
"316
[; ;TAD_RFID.c: 316:                     }
}
[e :U 365 ]
"317
[; ;TAD_RFID.c: 317:                     break;
[e $U 349  ]
"318
[; ;TAD_RFID.c: 318:                 case 8:
[e :U 366 ]
"320
[; ;TAD_RFID.c: 320:                     flag = motor_Write(0x01, 0x0C);
[e = _flag -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 12 `i `uc `uc ]
"321
[; ;TAD_RFID.c: 321:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 367  ]
{
"322
[; ;TAD_RFID.c: 322:                         substate = 9;
[e = F2789 -> -> 9 `i `uc ]
"323
[; ;TAD_RFID.c: 323:                     }
}
[e :U 367 ]
"324
[; ;TAD_RFID.c: 324:                     break;
[e $U 349  ]
"325
[; ;TAD_RFID.c: 325:                 case 9:
[e :U 368 ]
"327
[; ;TAD_RFID.c: 327:                     flag = motor_Read(0x0D);
[e = _flag -> ( _motor_Read (1 -> -> 13 `i `uc `uc ]
"328
[; ;TAD_RFID.c: 328:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 369  ]
{
"329
[; ;TAD_RFID.c: 329:                         tempRegValue = flag;
[e = F2800 _flag ]
"330
[; ;TAD_RFID.c: 330:                         substate = 10;
[e = F2789 -> -> 10 `i `uc ]
"331
[; ;TAD_RFID.c: 331:                     }
}
[e :U 369 ]
"332
[; ;TAD_RFID.c: 332:                     break;
[e $U 349  ]
"333
[; ;TAD_RFID.c: 333:                 case 10:
[e :U 370 ]
"335
[; ;TAD_RFID.c: 335:                     flag = motor_Write(0x0D, tempRegValue | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> | -> F2800 `i -> 128 `i `uc `uc ]
"336
[; ;TAD_RFID.c: 336:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 371  ]
{
"337
[; ;TAD_RFID.c: 337:                         i = 0xFF;
[e = F2793 -> -> 255 `i `uc ]
"338
[; ;TAD_RFID.c: 338:                         substate = 11;
[e = F2789 -> -> 11 `i `uc ]
"339
[; ;TAD_RFID.c: 339:                     }
}
[e :U 371 ]
"340
[; ;TAD_RFID.c: 340:                     break;
[e $U 349  ]
"341
[; ;TAD_RFID.c: 341:                 case 11:
[e :U 372 ]
"343
[; ;TAD_RFID.c: 343:                     flag = motor_Read(0x04);
[e = _flag -> ( _motor_Read (1 -> -> 4 `i `uc `uc ]
"344
[; ;TAD_RFID.c: 344:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 373  ]
{
"345
[; ;TAD_RFID.c: 345:                         n = flag;
[e = F2792 -> _flag `uc ]
"346
[; ;TAD_RFID.c: 346:                         if ((n & 0x01) || (n & waitIRq) || (--i == 0)) {
[e $ ! || || != & -> F2792 `i -> 1 `i -> 0 `i != & -> F2792 `i -> F2791 `i -> 0 `i == -> =- F2793 -> -> 1 `i `uc `i -> 0 `i 374  ]
{
"347
[; ;TAD_RFID.c: 347:                             substate = 12;
[e = F2789 -> -> 12 `i `uc ]
"348
[; ;TAD_RFID.c: 348:                         }
}
[e :U 374 ]
"349
[; ;TAD_RFID.c: 349:                     }
}
[e :U 373 ]
"350
[; ;TAD_RFID.c: 350:                     break;
[e $U 349  ]
"351
[; ;TAD_RFID.c: 351:                 case 12:
[e :U 375 ]
"353
[; ;TAD_RFID.c: 353:                     flag = motor_Read(0x0D);
[e = _flag -> ( _motor_Read (1 -> -> 13 `i `uc `uc ]
"354
[; ;TAD_RFID.c: 354:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 376  ]
{
"355
[; ;TAD_RFID.c: 355:                         tempRegValue = flag;
[e = F2800 _flag ]
"356
[; ;TAD_RFID.c: 356:                         substate = 13;
[e = F2789 -> -> 13 `i `uc ]
"357
[; ;TAD_RFID.c: 357:                     }
}
[e :U 376 ]
"358
[; ;TAD_RFID.c: 358:                     break;
[e $U 349  ]
"359
[; ;TAD_RFID.c: 359:                 case 13:
[e :U 377 ]
"361
[; ;TAD_RFID.c: 361:                     flag = motor_Write(0x0D, tempRegValue & ~0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> & -> F2800 `i ~ -> 128 `i `uc `uc ]
"362
[; ;TAD_RFID.c: 362:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 378  ]
{
"363
[; ;TAD_RFID.c: 363:                         substate = 14;
[e = F2789 -> -> 14 `i `uc ]
"364
[; ;TAD_RFID.c: 364:                     }
}
[e :U 378 ]
"365
[; ;TAD_RFID.c: 365:                     break;
[e $U 349  ]
"366
[; ;TAD_RFID.c: 366:                 case 14:
[e :U 379 ]
"368
[; ;TAD_RFID.c: 368:                     tempRegValue = MFRC522_Rd(0x06);
[e = F2800 ( _MFRC522_Rd (1 -> -> 6 `i `uc ]
"369
[; ;TAD_RFID.c: 369:                     if (i != 0 && !(tempRegValue & 0x1B)) {
[e $ ! && != -> F2793 `i -> 0 `i ! != & -> F2800 `i -> 27 `i -> 0 `i 380  ]
{
"370
[; ;TAD_RFID.c: 370:                         substate = 15;
[e = F2789 -> -> 15 `i `uc ]
"371
[; ;TAD_RFID.c: 371:                     } else {
}
[e $U 381  ]
[e :U 380 ]
{
"372
[; ;TAD_RFID.c: 372:                         substate = 0;
[e = F2789 -> -> 0 `i `uc ]
"373
[; ;TAD_RFID.c: 373:                         state = 0;
[e = F2788 -> -> 0 `i `uc ]
"374
[; ;TAD_RFID.c: 374:                     }
}
[e :U 381 ]
"375
[; ;TAD_RFID.c: 375:                     break;
[e $U 349  ]
"377
[; ;TAD_RFID.c: 377:                 case 15:
[e :U 382 ]
"379
[; ;TAD_RFID.c: 379:                     fifoLevel = MFRC522_Rd(0x0A);
[e = F2803 ( _MFRC522_Rd (1 -> -> 10 `i `uc ]
"380
[; ;TAD_RFID.c: 380:                     substate = 16;
[e = F2789 -> -> 16 `i `uc ]
"381
[; ;TAD_RFID.c: 381:                     break;
[e $U 349  ]
"383
[; ;TAD_RFID.c: 383:                 case 16:
[e :U 383 ]
"385
[; ;TAD_RFID.c: 385:                     flag = motor_Read(0x0C);
[e = _flag -> ( _motor_Read (1 -> -> 12 `i `uc `uc ]
"386
[; ;TAD_RFID.c: 386:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 384  ]
{
"387
[; ;TAD_RFID.c: 387:                         lastBitsVal = flag & 0x07;
[e = F2802 -> & -> _flag `i -> 7 `i `uc ]
"388
[; ;TAD_RFID.c: 388:                         substate = 17;
[e = F2789 -> -> 17 `i `uc ]
"389
[; ;TAD_RFID.c: 389:                     }
}
[e :U 384 ]
"390
[; ;TAD_RFID.c: 390:                     break;
[e $U 349  ]
"392
[; ;TAD_RFID.c: 392:                 case 17:
[e :U 385 ]
"394
[; ;TAD_RFID.c: 394:                     if (lastBitsVal)
[e $ ! != -> F2802 `i -> 0 `i 386  ]
"395
[; ;TAD_RFID.c: 395:                         backBitsCalc = (fifoLevel - 1) * 8 + lastBitsVal;
[e = _backBitsCalc -> + * - -> F2803 `i -> 1 `i -> 8 `i -> F2802 `i `uc ]
[e $U 387  ]
"396
[; ;TAD_RFID.c: 396:                     else
[e :U 386 ]
"397
[; ;TAD_RFID.c: 397:                         backBitsCalc = fifoLevel * 8;
[e = _backBitsCalc -> * -> F2803 `i -> 8 `i `uc ]
[e :U 387 ]
"400
[; ;TAD_RFID.c: 400:                     if (backBitsCalc == 0x10) {
[e $ ! == -> _backBitsCalc `i -> 16 `i 388  ]
{
"401
[; ;TAD_RFID.c: 401:                         state = 1;
[e = F2788 -> -> 1 `i `uc ]
"402
[; ;TAD_RFID.c: 402:                         substate = 0;
[e = F2789 -> -> 0 `i `uc ]
"403
[; ;TAD_RFID.c: 403:                     } else {
}
[e $U 389  ]
[e :U 388 ]
{
"404
[; ;TAD_RFID.c: 404:                         state = 0;
[e = F2788 -> -> 0 `i `uc ]
"405
[; ;TAD_RFID.c: 405:                         substate = 0;
[e = F2789 -> -> 0 `i `uc ]
"406
[; ;TAD_RFID.c: 406:                     }
}
[e :U 389 ]
"407
[; ;TAD_RFID.c: 407:                     break;
[e $U 349  ]
"408
[; ;TAD_RFID.c: 408:             }
}
[e $U 349  ]
[e :U 350 ]
[e [\ F2789 , $ -> 0 `i 351
 , $ -> 1 `i 353
 , $ -> 2 `i 355
 , $ -> 3 `i 357
 , $ -> 4 `i 359
 , $ -> 5 `i 360
 , $ -> 6 `i 362
 , $ -> 7 `i 364
 , $ -> 8 `i 366
 , $ -> 9 `i 368
 , $ -> 10 `i 370
 , $ -> 11 `i 372
 , $ -> 12 `i 375
 , $ -> 13 `i 377
 , $ -> 14 `i 379
 , $ -> 15 `i 382
 , $ -> 16 `i 383
 , $ -> 17 `i 385
 349 ]
[e :U 349 ]
"409
[; ;TAD_RFID.c: 409:             break;
[e $U 346  ]
"411
[; ;TAD_RFID.c: 411:         case 1:
[e :U 390 ]
"412
[; ;TAD_RFID.c: 412:             switch(substate) {
[e $U 392  ]
{
"413
[; ;TAD_RFID.c: 413:                 case 0:
[e :U 393 ]
"415
[; ;TAD_RFID.c: 415:                     flag = motor_Write(0x0D, 0x00);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> -> 0 `i `uc `uc ]
"416
[; ;TAD_RFID.c: 416:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 394  ]
{
"417
[; ;TAD_RFID.c: 417:                     UID[0] = 0x93;
[e = *U + &U F2797 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2797 `ui `ux -> -> 147 `i `uc ]
"418
[; ;TAD_RFID.c: 418:                     UID[1] = 0x20;
[e = *U + &U F2797 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2797 `ui `ux -> -> 32 `i `uc ]
"419
[; ;TAD_RFID.c: 419:                     substate = 1;
[e = F2789 -> -> 1 `i `uc ]
"420
[; ;TAD_RFID.c: 420:                     }
}
[e :U 394 ]
"421
[; ;TAD_RFID.c: 421:                     break;
[e $U 391  ]
"422
[; ;TAD_RFID.c: 422:                 case 1:
[e :U 395 ]
"424
[; ;TAD_RFID.c: 424:                     flag = motor_Read(0x08);
[e = _flag -> ( _motor_Read (1 -> -> 8 `i `uc `uc ]
"425
[; ;TAD_RFID.c: 425:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 396  ]
{
"426
[; ;TAD_RFID.c: 426:                         tempRegValue = flag;
[e = F2800 _flag ]
"427
[; ;TAD_RFID.c: 427:                         substate = 2;
[e = F2789 -> -> 2 `i `uc ]
"428
[; ;TAD_RFID.c: 428:                     }
}
[e :U 396 ]
"429
[; ;TAD_RFID.c: 429:                     break;
[e $U 391  ]
"430
[; ;TAD_RFID.c: 430:                 case 2:
[e :U 397 ]
"432
[; ;TAD_RFID.c: 432:                     flag = motor_Write(0x08, tempRegValue & ~0x08);
[e = _flag -> ( _motor_Write (2 , -> -> 8 `i `uc -> & -> F2800 `i ~ -> 8 `i `uc `uc ]
"433
[; ;TAD_RFID.c: 433:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 398  ]
{
"434
[; ;TAD_RFID.c: 434:                         substate = 3;
[e = F2789 -> -> 3 `i `uc ]
"435
[; ;TAD_RFID.c: 435:                     }
}
[e :U 398 ]
"436
[; ;TAD_RFID.c: 436:                     break;
[e $U 391  ]
"437
[; ;TAD_RFID.c: 437:                 case 3:
[e :U 399 ]
"439
[; ;TAD_RFID.c: 439:                     irqEn = 0x77;
[e = F2790 -> -> 119 `i `uc ]
"440
[; ;TAD_RFID.c: 440:                     waitIRq = 0x30;
[e = F2791 -> -> 48 `i `uc ]
"441
[; ;TAD_RFID.c: 441:                     flag = motor_Write(0x02, irqEn | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 2 `i `uc -> | -> F2790 `i -> 128 `i `uc `uc ]
"442
[; ;TAD_RFID.c: 442:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 400  ]
{
"443
[; ;TAD_RFID.c: 443:                         substate = 4;
[e = F2789 -> -> 4 `i `uc ]
"444
[; ;TAD_RFID.c: 444:                     }
}
[e :U 400 ]
"445
[; ;TAD_RFID.c: 445:                     break;
[e $U 391  ]
"446
[; ;TAD_RFID.c: 446:                 case 4:
[e :U 401 ]
"448
[; ;TAD_RFID.c: 448:                     flag = motor_Read(0x04);
[e = _flag -> ( _motor_Read (1 -> -> 4 `i `uc `uc ]
"449
[; ;TAD_RFID.c: 449:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 402  ]
{
"450
[; ;TAD_RFID.c: 450:                         tempRegValue = flag;
[e = F2800 _flag ]
"451
[; ;TAD_RFID.c: 451:                         substate = 5;
[e = F2789 -> -> 5 `i `uc ]
"452
[; ;TAD_RFID.c: 452:                     }
}
[e :U 402 ]
"453
[; ;TAD_RFID.c: 453:                     break;
[e $U 391  ]
"454
[; ;TAD_RFID.c: 454:                 case 5:
[e :U 403 ]
"456
[; ;TAD_RFID.c: 456:                     flag = motor_Write(0x04, tempRegValue & ~0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 4 `i `uc -> & -> F2800 `i ~ -> 128 `i `uc `uc ]
"457
[; ;TAD_RFID.c: 457:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 404  ]
{
"458
[; ;TAD_RFID.c: 458:                         substate = 6;
[e = F2789 -> -> 6 `i `uc ]
"459
[; ;TAD_RFID.c: 459:                     }
}
[e :U 404 ]
"460
[; ;TAD_RFID.c: 460:                     break;
[e $U 391  ]
"461
[; ;TAD_RFID.c: 461:                 case 6:
[e :U 405 ]
"463
[; ;TAD_RFID.c: 463:                     flag = motor_Read(0x0A);
[e = _flag -> ( _motor_Read (1 -> -> 10 `i `uc `uc ]
"464
[; ;TAD_RFID.c: 464:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 406  ]
{
"465
[; ;TAD_RFID.c: 465:                         tempRegValue = flag;
[e = F2800 _flag ]
"466
[; ;TAD_RFID.c: 466:                         substate = 7;
[e = F2789 -> -> 7 `i `uc ]
"467
[; ;TAD_RFID.c: 467:                     }
}
[e :U 406 ]
"468
[; ;TAD_RFID.c: 468:                     break;
[e $U 391  ]
"469
[; ;TAD_RFID.c: 469:                 case 7:
[e :U 407 ]
"471
[; ;TAD_RFID.c: 471:                     flag = motor_Write(0x0A, tempRegValue | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 10 `i `uc -> | -> F2800 `i -> 128 `i `uc `uc ]
"472
[; ;TAD_RFID.c: 472:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 408  ]
{
"473
[; ;TAD_RFID.c: 473:                         substate = 8;
[e = F2789 -> -> 8 `i `uc ]
"474
[; ;TAD_RFID.c: 474:                     }
}
[e :U 408 ]
"475
[; ;TAD_RFID.c: 475:                     break;
[e $U 391  ]
"476
[; ;TAD_RFID.c: 476:                 case 8:
[e :U 409 ]
"478
[; ;TAD_RFID.c: 478:                     flag = motor_Write(0x01, 0x00);
[e = _flag -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 0 `i `uc `uc ]
"479
[; ;TAD_RFID.c: 479:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 410  ]
{
"480
[; ;TAD_RFID.c: 480:                         substate = 9;
[e = F2789 -> -> 9 `i `uc ]
"481
[; ;TAD_RFID.c: 481:                     }
}
[e :U 410 ]
"482
[; ;TAD_RFID.c: 482:                     break;
[e $U 391  ]
"483
[; ;TAD_RFID.c: 483:                 case 9:
[e :U 411 ]
"485
[; ;TAD_RFID.c: 485:                     flag = motor_Write(0x09, UID[0]);
[e = _flag -> ( _motor_Write (2 , -> -> 9 `i `uc -> *U + &U F2797 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2797 `ui `ux `uc `uc ]
"486
[; ;TAD_RFID.c: 486:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 412  ]
{
"487
[; ;TAD_RFID.c: 487:                         substate = 10;
[e = F2789 -> -> 10 `i `uc ]
"488
[; ;TAD_RFID.c: 488:                     }
}
[e :U 412 ]
"489
[; ;TAD_RFID.c: 489:                     break;
[e $U 391  ]
"490
[; ;TAD_RFID.c: 490:                 case 10:
[e :U 413 ]
"491
[; ;TAD_RFID.c: 491:                     flag = motor_Write(0x09, UID[1]);
[e = _flag -> ( _motor_Write (2 , -> -> 9 `i `uc -> *U + &U F2797 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2797 `ui `ux `uc `uc ]
"492
[; ;TAD_RFID.c: 492:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 414  ]
{
"493
[; ;TAD_RFID.c: 493:                         substate = 11;
[e = F2789 -> -> 11 `i `uc ]
"494
[; ;TAD_RFID.c: 494:                     }
}
[e :U 414 ]
"495
[; ;TAD_RFID.c: 495:                     break;
[e $U 391  ]
"496
[; ;TAD_RFID.c: 496:                 case 11:
[e :U 415 ]
"498
[; ;TAD_RFID.c: 498:                     flag = motor_Write(0x01, 0x0C);
[e = _flag -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 12 `i `uc `uc ]
"499
[; ;TAD_RFID.c: 499:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 416  ]
{
"500
[; ;TAD_RFID.c: 500:                         substate = 12;
[e = F2789 -> -> 12 `i `uc ]
"501
[; ;TAD_RFID.c: 501:                     }
}
[e :U 416 ]
"502
[; ;TAD_RFID.c: 502:                     break;
[e $U 391  ]
"503
[; ;TAD_RFID.c: 503:                 case 12:
[e :U 417 ]
"505
[; ;TAD_RFID.c: 505:                     tempRegValue = MFRC522_Rd(0x0D);
[e = F2800 ( _MFRC522_Rd (1 -> -> 13 `i `uc ]
"506
[; ;TAD_RFID.c: 506:                     substate = 13;
[e = F2789 -> -> 13 `i `uc ]
"507
[; ;TAD_RFID.c: 507:                     break;
[e $U 391  ]
"508
[; ;TAD_RFID.c: 508:                 case 13:
[e :U 418 ]
"510
[; ;TAD_RFID.c: 510:                     flag = motor_Write(0x0D, tempRegValue | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> | -> F2800 `i -> 128 `i `uc `uc ]
"511
[; ;TAD_RFID.c: 511:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 419  ]
{
"512
[; ;TAD_RFID.c: 512:                     i = 0xFF;
[e = F2793 -> -> 255 `i `uc ]
"513
[; ;TAD_RFID.c: 513:                         substate = 14;
[e = F2789 -> -> 14 `i `uc ]
"514
[; ;TAD_RFID.c: 514:                     }
}
[e :U 419 ]
"515
[; ;TAD_RFID.c: 515:                     break;
[e $U 391  ]
"516
[; ;TAD_RFID.c: 516:                 case 14:
[e :U 420 ]
"518
[; ;TAD_RFID.c: 518:                     n = MFRC522_Rd(0x04);
[e = F2792 -> ( _MFRC522_Rd (1 -> -> 4 `i `uc `uc ]
"519
[; ;TAD_RFID.c: 519:                     if ((n & 0x01) || (n & waitIRq) || (--i == 0)) {
[e $ ! || || != & -> F2792 `i -> 1 `i -> 0 `i != & -> F2792 `i -> F2791 `i -> 0 `i == -> =- F2793 -> -> 1 `i `uc `i -> 0 `i 421  ]
{
"520
[; ;TAD_RFID.c: 520:                         substate = 15;
[e = F2789 -> -> 15 `i `uc ]
"521
[; ;TAD_RFID.c: 521:                     }
}
[e :U 421 ]
"522
[; ;TAD_RFID.c: 522:                     break;
[e $U 391  ]
"523
[; ;TAD_RFID.c: 523:                 case 15:
[e :U 422 ]
"525
[; ;TAD_RFID.c: 525:                     tempRegValue = MFRC522_Rd(0x0D);
[e = F2800 ( _MFRC522_Rd (1 -> -> 13 `i `uc ]
"526
[; ;TAD_RFID.c: 526:                     substate = 16;
[e = F2789 -> -> 16 `i `uc ]
"527
[; ;TAD_RFID.c: 527:                     break;
[e $U 391  ]
"528
[; ;TAD_RFID.c: 528:                 case 16:
[e :U 423 ]
"530
[; ;TAD_RFID.c: 530:                     flag = motor_Write(0x0D, tempRegValue & ~0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> & -> F2800 `i ~ -> 128 `i `uc `uc ]
"531
[; ;TAD_RFID.c: 531:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 424  ]
{
"532
[; ;TAD_RFID.c: 532:                         substate = 17;
[e = F2789 -> -> 17 `i `uc ]
"533
[; ;TAD_RFID.c: 533:                     }
}
[e :U 424 ]
"534
[; ;TAD_RFID.c: 534:                     break;
[e $U 391  ]
"535
[; ;TAD_RFID.c: 535:                 case 17:
[e :U 425 ]
"537
[; ;TAD_RFID.c: 537:                     tempRegValue = MFRC522_Rd(0x06);
[e = F2800 ( _MFRC522_Rd (1 -> -> 6 `i `uc ]
"538
[; ;TAD_RFID.c: 538:                     if (i != 0 && !(tempRegValue & 0x1B)) {
[e $ ! && != -> F2793 `i -> 0 `i ! != & -> F2800 `i -> 27 `i -> 0 `i 426  ]
{
"540
[; ;TAD_RFID.c: 540:                         substate = 18;
[e = F2789 -> -> 18 `i `uc ]
"541
[; ;TAD_RFID.c: 541:                     } else {
}
[e $U 427  ]
[e :U 426 ]
{
"543
[; ;TAD_RFID.c: 543:                         state = 0;
[e = F2788 -> -> 0 `i `uc ]
"544
[; ;TAD_RFID.c: 544:                         substate = 0;
[e = F2789 -> -> 0 `i `uc ]
"545
[; ;TAD_RFID.c: 545:                     }
}
[e :U 427 ]
"546
[; ;TAD_RFID.c: 546:                     break;
[e $U 391  ]
"548
[; ;TAD_RFID.c: 548:                 case 18:
[e :U 428 ]
"550
[; ;TAD_RFID.c: 550:                     flag = motor_Read(0x09);
[e = _flag -> ( _motor_Read (1 -> -> 9 `i `uc `uc ]
"551
[; ;TAD_RFID.c: 551:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 429  ]
{
"552
[; ;TAD_RFID.c: 552:                         UID[0] = flag;
[e = *U + &U F2797 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2797 `ui `ux _flag ]
"553
[; ;TAD_RFID.c: 553:                         substate = 19;
[e = F2789 -> -> 19 `i `uc ]
"554
[; ;TAD_RFID.c: 554:                     }
}
[e :U 429 ]
"555
[; ;TAD_RFID.c: 555:                     break;
[e $U 391  ]
"556
[; ;TAD_RFID.c: 556:                 case 19:
[e :U 430 ]
"558
[; ;TAD_RFID.c: 558:                     UID[1] = MFRC522_Rd(0x09);
[e = *U + &U F2797 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2797 `ui `ux ( _MFRC522_Rd (1 -> -> 9 `i `uc ]
"559
[; ;TAD_RFID.c: 559:                     substate = 20;
[e = F2789 -> -> 20 `i `uc ]
"560
[; ;TAD_RFID.c: 560:                     break;
[e $U 391  ]
"561
[; ;TAD_RFID.c: 561:                 case 20:
[e :U 431 ]
"563
[; ;TAD_RFID.c: 563:                     UID[2] = MFRC522_Rd(0x09);
[e = *U + &U F2797 * -> -> -> 2 `i `ui `ux -> -> # *U &U F2797 `ui `ux ( _MFRC522_Rd (1 -> -> 9 `i `uc ]
"564
[; ;TAD_RFID.c: 564:                     substate = 21;
[e = F2789 -> -> 21 `i `uc ]
"565
[; ;TAD_RFID.c: 565:                     break;
[e $U 391  ]
"566
[; ;TAD_RFID.c: 566:                 case 21:
[e :U 432 ]
"568
[; ;TAD_RFID.c: 568:                     flag = motor_Read(0x09);
[e = _flag -> ( _motor_Read (1 -> -> 9 `i `uc `uc ]
"569
[; ;TAD_RFID.c: 569:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 433  ]
{
"570
[; ;TAD_RFID.c: 570:                         UID[3] = flag;
[e = *U + &U F2797 * -> -> -> 3 `i `ui `ux -> -> # *U &U F2797 `ui `ux _flag ]
"571
[; ;TAD_RFID.c: 571:                         substate = 22;
[e = F2789 -> -> 22 `i `uc ]
"572
[; ;TAD_RFID.c: 572:                     }
}
[e :U 433 ]
"573
[; ;TAD_RFID.c: 573:                     break;
[e $U 391  ]
"575
[; ;TAD_RFID.c: 575:                 case 22:
[e :U 434 ]
"577
[; ;TAD_RFID.c: 577:                     UID[4] = MFRC522_Rd(0x09);
[e = *U + &U F2797 * -> -> -> 4 `i `ui `ux -> -> # *U &U F2797 `ui `ux ( _MFRC522_Rd (1 -> -> 9 `i `uc ]
"578
[; ;TAD_RFID.c: 578:                     UID[5] = 0;
[e = *U + &U F2797 * -> -> -> 5 `i `ui `ux -> -> # *U &U F2797 `ui `ux -> -> 0 `i `uc ]
"579
[; ;TAD_RFID.c: 579:                     substate = 23;
[e = F2789 -> -> 23 `i `uc ]
"580
[; ;TAD_RFID.c: 580:                     break;
[e $U 391  ]
"582
[; ;TAD_RFID.c: 582:                 case 23:
[e :U 435 ]
"584
[; ;TAD_RFID.c: 584:                     checksum = UID[0] ^ UID[1] ^ UID[2] ^ UID[3];
[e = F2798 -> ^ ^ ^ -> *U + &U F2797 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i -> *U + &U F2797 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i -> *U + &U F2797 * -> -> -> 2 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i -> *U + &U F2797 * -> -> -> 3 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i `uc ]
"586
[; ;TAD_RFID.c: 586:                     allZero = 1;
[e = F2799 -> -> 1 `i `uc ]
"587
[; ;TAD_RFID.c: 587:                     substate = 24;
[e = F2789 -> -> 24 `i `uc ]
"588
[; ;TAD_RFID.c: 588:                     break;
[e $U 391  ]
"590
[; ;TAD_RFID.c: 590:                 case 24:
[e :U 436 ]
"592
[; ;TAD_RFID.c: 592:                     if (UID[0] != 0 || UID[1] != 0) {
[e $ ! || != -> *U + &U F2797 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i -> 0 `i != -> *U + &U F2797 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i -> 0 `i 437  ]
{
"593
[; ;TAD_RFID.c: 593:                         allZero = 0;
[e = F2799 -> -> 0 `i `uc ]
"594
[; ;TAD_RFID.c: 594:                     }
}
[e :U 437 ]
"595
[; ;TAD_RFID.c: 595:                     substate = 25;
[e = F2789 -> -> 25 `i `uc ]
"596
[; ;TAD_RFID.c: 596:                     break;
[e $U 391  ]
"598
[; ;TAD_RFID.c: 598:                 case 25:
[e :U 438 ]
"600
[; ;TAD_RFID.c: 600:                     if (UID[2] != 0 || UID[3] != 0) {
[e $ ! || != -> *U + &U F2797 * -> -> -> 2 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i -> 0 `i != -> *U + &U F2797 * -> -> -> 3 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i -> 0 `i 439  ]
{
"601
[; ;TAD_RFID.c: 601:                         allZero = 0;
[e = F2799 -> -> 0 `i `uc ]
"602
[; ;TAD_RFID.c: 602:                     }
}
[e :U 439 ]
"603
[; ;TAD_RFID.c: 603:                     substate = 26;
[e = F2789 -> -> 26 `i `uc ]
"604
[; ;TAD_RFID.c: 604:                     break;
[e $U 391  ]
"606
[; ;TAD_RFID.c: 606:                 case 26:
[e :U 440 ]
"608
[; ;TAD_RFID.c: 608:                     if (checksum != UID[4] || allZero) {
[e $ ! || != -> F2798 `i -> *U + &U F2797 * -> -> -> 4 `i `ui `ux -> -> # *U &U F2797 `ui `ux `i != -> F2799 `i -> 0 `i 441  ]
{
"610
[; ;TAD_RFID.c: 610:                         state = 0;
[e = F2788 -> -> 0 `i `uc ]
"611
[; ;TAD_RFID.c: 611:                         substate = 0;
[e = F2789 -> -> 0 `i `uc ]
"612
[; ;TAD_RFID.c: 612:                     } else {
}
[e $U 442  ]
[e :U 441 ]
{
"614
[; ;TAD_RFID.c: 614:                         substate = 27;
[e = F2789 -> -> 27 `i `uc ]
"615
[; ;TAD_RFID.c: 615:                     }
}
[e :U 442 ]
"616
[; ;TAD_RFID.c: 616:                     break;
[e $U 391  ]
"618
[; ;TAD_RFID.c: 618:                 case 27:
[e :U 443 ]
"619
[; ;TAD_RFID.c: 619:                     {
{
"620
[; ;TAD_RFID.c: 620:                         char differentUID = 1;
[v _differentUID `uc ~T0 @X0 1 a ]
[e = _differentUID -> -> 1 `i `uc ]
"621
[; ;TAD_RFID.c: 621:                         unsigned char* currentUser = getActualUID();
[v _currentUser `*uc ~T0 @X0 1 a ]
[e = _currentUser ( _getActualUID ..  ]
"622
[; ;TAD_RFID.c: 622:                         for (int i = 0; i < 5; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 5 `i 444  ]
[e $U 445  ]
[e :U 444 ]
{
"623
[; ;TAD_RFID.c: 623:                             if(currentUser[i] != UID[i]) {
[e $ ! != -> *U + _currentUser * -> _i `x -> -> # *U _currentUser `i `x `i -> *U + &U F2797 * -> -> _i `ui `ux -> -> # *U &U F2797 `ui `ux `i 447  ]
{
"624
[; ;TAD_RFID.c: 624:                                 differentUID = 0;
[e = _differentUID -> -> 0 `i `uc ]
"625
[; ;TAD_RFID.c: 625:                                 break;
[e $U 445  ]
"626
[; ;TAD_RFID.c: 626:                             }
}
[e :U 447 ]
"627
[; ;TAD_RFID.c: 627:                         }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 5 `i 444  ]
[e :U 445 ]
}
"628
[; ;TAD_RFID.c: 628:                         if(differentUID == 0) {
[e $ ! == -> _differentUID `i -> 0 `i 448  ]
{
"629
[; ;TAD_RFID.c: 629:                             setCurrentUser(UID[0], UID[1], UID[2], UID[3], UID[4]);
[e ( _setCurrentUser (4 , , , , -> *U + &U F2797 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2797 `ui `ux `uc -> *U + &U F2797 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2797 `ui `ux `uc -> *U + &U F2797 * -> -> -> 2 `i `ui `ux -> -> # *U &U F2797 `ui `ux `uc -> *U + &U F2797 * -> -> -> 3 `i `ui `ux -> -> # *U &U F2797 `ui `ux `uc -> *U + &U F2797 * -> -> -> 4 `i `ui `ux -> -> # *U &U F2797 `ui `ux `uc ]
"630
[; ;TAD_RFID.c: 630:                         }
}
[e :U 448 ]
"631
[; ;TAD_RFID.c: 631:                         substate = 28;
[e = F2789 -> -> 28 `i `uc ]
"632
[; ;TAD_RFID.c: 632:                     }
}
"633
[; ;TAD_RFID.c: 633:                     break;
[e $U 391  ]
"635
[; ;TAD_RFID.c: 635:                 case 28:
[e :U 449 ]
"637
[; ;TAD_RFID.c: 637:                     flag = motor_Write(0x0D, 0x00);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> -> 0 `i `uc `uc ]
"638
[; ;TAD_RFID.c: 638:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 450  ]
{
"639
[; ;TAD_RFID.c: 639:                         state = 0;
[e = F2788 -> -> 0 `i `uc ]
"640
[; ;TAD_RFID.c: 640:                         substate = 0;
[e = F2789 -> -> 0 `i `uc ]
"641
[; ;TAD_RFID.c: 641:                     }
}
[e :U 450 ]
"642
[; ;TAD_RFID.c: 642:                     break;
[e $U 391  ]
"643
[; ;TAD_RFID.c: 643:             }
}
[e $U 391  ]
[e :U 392 ]
[e [\ F2789 , $ -> 0 `i 393
 , $ -> 1 `i 395
 , $ -> 2 `i 397
 , $ -> 3 `i 399
 , $ -> 4 `i 401
 , $ -> 5 `i 403
 , $ -> 6 `i 405
 , $ -> 7 `i 407
 , $ -> 8 `i 409
 , $ -> 9 `i 411
 , $ -> 10 `i 413
 , $ -> 11 `i 415
 , $ -> 12 `i 417
 , $ -> 13 `i 418
 , $ -> 14 `i 420
 , $ -> 15 `i 422
 , $ -> 16 `i 423
 , $ -> 17 `i 425
 , $ -> 18 `i 428
 , $ -> 19 `i 430
 , $ -> 20 `i 431
 , $ -> 21 `i 432
 , $ -> 22 `i 434
 , $ -> 23 `i 435
 , $ -> 24 `i 436
 , $ -> 25 `i 438
 , $ -> 26 `i 440
 , $ -> 27 `i 443
 , $ -> 28 `i 449
 391 ]
[e :U 391 ]
"644
[; ;TAD_RFID.c: 644:             break;
[e $U 346  ]
"645
[; ;TAD_RFID.c: 645:     }
}
[e $U 346  ]
[e :U 347 ]
[e [\ F2788 , $ -> 0 `i 348
 , $ -> 1 `i 390
 346 ]
[e :U 346 ]
"646
[; ;TAD_RFID.c: 646: }
[e :UE 345 ]
}
