Version 4.0 HI-TECH Software Intermediate Code
"1941 C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1941:     struct {
[s S70 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S70 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1951
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1951:     struct {
[s S71 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S71 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"1940
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1940: typedef union {
[u S69 `S70 1 `S71 1 ]
[n S69 . . . ]
"1962
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1962: extern volatile TRISCbits_t TRISCbits __attribute__((address(0xF94)));
[v _TRISCbits `VS69 ~T0 @X0 0 e@3988 ]
"8 C:\Program Files\Microchip\xc8\v3.00\pic\include/builtins.h
[v ___nop `(v ~T0 @X0 0 ef ]
[p i ___nop ]
"1216 C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1216:     struct {
[s S49 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S49 . LATC0 LATC1 LATC2 LATC3 LATC4 LATC5 LATC6 LATC7 ]
"1226
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1226:     struct {
[s S50 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S50 . LC0 LC1 LC2 LC3 LC4 LC5 LC6 LC7 ]
"1215
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1215: typedef union {
[u S48 `S49 1 `S50 1 ]
[n S48 . . . ]
"1237
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1237: extern volatile LATCbits_t LATCbits __attribute__((address(0xF8B)));
[v _LATCbits `VS48 ~T0 @X0 0 e@3979 ]
"467
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 467:     struct {
[s S21 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S21 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"477
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 477:     struct {
[s S22 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S22 . T1OSO T1OSI CCP1 SCK SDI SDO TX RX ]
"487
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 487:     struct {
[s S23 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S23 . T13CKI CCP2 P1A SCL SDA . CK DT ]
"497
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 497:     struct {
[s S24 :1 `uc 1 ]
[n S24 . T1CKI ]
"500
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 500:     struct {
[s S25 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S25 . . PA2 PA1 ]
"466
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 466: typedef union {
[u S20 `S21 1 `S22 1 `S23 1 `S24 1 `S25 1 ]
[n S20 . . . . . . ]
"506
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 506: extern volatile PORTCbits_t PORTCbits __attribute__((address(0xF82)));
[v _PORTCbits `VS20 ~T0 @X0 0 e@3970 ]
"10 ./TAD_DATOS.h
[; ;./TAD_DATOS.h: 10: unsigned char* getActualUID(void);
[v _getActualUID `(*uc ~T0 @X0 0 ef ]
"13
[; ;./TAD_DATOS.h: 13: void setCurrentUser(char UID0, char UID1, char UID2, char UID3, char UID4);
[v _setCurrentUser `(v ~T0 @X0 0 ef5`uc`uc`uc`uc`uc ]
"52 C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 52: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"284
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 284: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"463
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 463: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"643
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 643: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"785
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 785: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"988
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 988: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"1100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1100: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"1212
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1212: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1324
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1324: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1436
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1436: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1488
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1488: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1493
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1493: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1710
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1710: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1715
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1715: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1932
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1932: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1937
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1937: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"2154
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2154: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"2159
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2159: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2376
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2376: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2381
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2381: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2540
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2540: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"2605
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2605: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2682
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2682: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2759
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2759: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2836
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2836: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2902
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2902: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2968
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2968: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"3034
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3034: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"3100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3100: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"3107
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3107: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"3114
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3114: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"3121
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3121: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"3126
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3126: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"3331
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3331: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"3336
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3336: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3587
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3587: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3592
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3592: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3599
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3599: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3604
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3604: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3611
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3611: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3616
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3616: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3623
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3623: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"3630
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3630: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3742
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3742: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3749
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3749: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3756
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3756: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3763
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3763: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"3853
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3853: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"3932
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3932: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"4014
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4014: __asm("ECCP1DEL equ 0FB7h");
[; <" ECCP1DEL equ 0FB7h ;# ">
"4019
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4019: __asm("PWM1CON equ 0FB7h");
[; <" PWM1CON equ 0FB7h ;# ">
"4152
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4152: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"4157
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4157: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"4332
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4332: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"4411
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4411: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"4418
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4418: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"4425
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4425: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"4432
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4432: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"4437
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4437: __asm("ECCP1CON equ 0FBDh");
[; <" ECCP1CON equ 0FBDh ;# ">
"4624
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4624: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"4631
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4631: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"4638
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4638: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"4645
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4645: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"4716
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4716: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"4801
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4801: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"4920
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4920: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"4927
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4927: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"4934
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4934: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"4941
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4941: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"5036
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5036: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"5106
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5106: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"5327
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5327: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"5334
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5334: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"5341
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5341: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"5439
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5439: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"5444
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5444: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"5549
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5549: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"5556
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5556: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"5659
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5659: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"5666
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5666: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"5673
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5673: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"5680
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5680: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"5814
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5814: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"5842
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5842: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"5847
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5847: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"6100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6100: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"6183
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6183: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"6260
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6260: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"6267
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6267: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"6274
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6274: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"6281
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6281: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"6352
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6352: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"6359
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6359: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"6366
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6366: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"6373
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6373: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"6380
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6380: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"6387
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6387: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"6394
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6394: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"6401
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6401: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"6408
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6408: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"6415
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6415: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"6422
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6422: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"6429
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6429: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"6436
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6436: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"6443
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6443: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"6450
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6450: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"6457
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6457: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"6464
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6464: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"6471
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6471: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"6483
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6483: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"6490
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6490: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"6497
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6497: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"6504
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6504: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"6511
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6511: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"6518
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6518: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"6525
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6525: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"6532
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6532: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"6539
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6539: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"6631
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6631: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"6701
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6701: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"6818
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6818: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"6825
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6825: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"6832
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6832: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"6839
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6839: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"6848
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6848: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"6855
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6855: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"6862
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6862: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"6869
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6869: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"6878
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6878: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"6885
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6885: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"6892
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6892: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"6899
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6899: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"6906
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6906: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"6913
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6913: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"6987
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6987: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"6994
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6994: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"7001
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 7001: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"7008
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 7008: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"19 TAD_RFID.c
[; ;TAD_RFID.c: 19: char state_read = 0;
[v _state_read `uc ~T0 @X0 1 e ]
[i _state_read
-> -> 0 `i `uc
]
"20
[; ;TAD_RFID.c: 20: char state_write = 0;
[v _state_write `uc ~T0 @X0 1 e ]
[i _state_write
-> -> 0 `i `uc
]
"23
[; ;TAD_RFID.c: 23: void InitPortDirections () {
[v _InitPortDirections `(v ~T0 @X0 1 ef ]
{
[e :U _InitPortDirections ]
[f ]
"24
[; ;TAD_RFID.c: 24:     TRISCbits.TRISC0 = 1;
[e = . . _TRISCbits 0 0 -> -> 1 `i `uc ]
"25
[; ;TAD_RFID.c: 25:     TRISCbits.TRISC1 = 0;
[e = . . _TRISCbits 0 1 -> -> 0 `i `uc ]
"26
[; ;TAD_RFID.c: 26:     TRISCbits.TRISC2 = 0;
[e = . . _TRISCbits 0 2 -> -> 0 `i `uc ]
"27
[; ;TAD_RFID.c: 27:     TRISCbits.TRISC3 = 0;
[e = . . _TRISCbits 0 3 -> -> 0 `i `uc ]
"28
[; ;TAD_RFID.c: 28:     TRISCbits.TRISC4 = 0;
[e = . . _TRISCbits 0 4 -> -> 0 `i `uc ]
"29
[; ;TAD_RFID.c: 29: }
[e :UE 304 ]
}
"31
[; ;TAD_RFID.c: 31: void delay_us (char howMany) {
[v _delay_us `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _delay_us ]
[v _howMany `uc ~T0 @X0 1 r1 ]
[f ]
"32
[; ;TAD_RFID.c: 32:     char x;
[v _x `uc ~T0 @X0 1 a ]
"33
[; ;TAD_RFID.c: 33:     for (x = 0; x < howMany * 16; x++) __nop();
{
[e = _x -> -> 0 `i `uc ]
[e $U 309  ]
[e :U 306 ]
[e ( ___nop ..  ]
[e ++ _x -> -> 1 `i `uc ]
[e :U 309 ]
[e $ < -> _x `i * -> _howMany `i -> 16 `i 306  ]
[e :U 307 ]
}
"34
[; ;TAD_RFID.c: 34: }
[e :UE 305 ]
}
"36
[; ;TAD_RFID.c: 36: unsigned char MFRC522_Rd (unsigned char Address) {
[v _MFRC522_Rd `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _MFRC522_Rd ]
[v _Address `uc ~T0 @X0 1 r1 ]
[f ]
"37
[; ;TAD_RFID.c: 37:     unsigned char i, ucAddr = ((Address<<1) & 0x7E) | 0x80;
[v _i `uc ~T0 @X0 1 a ]
[v _ucAddr `uc ~T0 @X0 1 a ]
[e = _ucAddr -> | & << -> _Address `i -> 1 `i -> 126 `i -> 128 `i `uc ]
"38
[; ;TAD_RFID.c: 38:     unsigned char ucResult = 0;
[v _ucResult `uc ~T0 @X0 1 a ]
[e = _ucResult -> -> 0 `i `uc ]
"40
[; ;TAD_RFID.c: 40:     LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"41
[; ;TAD_RFID.c: 41:     LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"43
[; ;TAD_RFID.c: 43:     for (i = 8; i > 0; i--) {
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 311  ]
[e $U 312  ]
[e :U 311 ]
{
"44
[; ;TAD_RFID.c: 44:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
[e = . . _LATCbits 0 1 -> -> == & -> _ucAddr `i -> 128 `i -> 128 `i `i `uc ]
"45
[; ;TAD_RFID.c: 45:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"46
[; ;TAD_RFID.c: 46:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"47
[; ;TAD_RFID.c: 47:         ucAddr <<= 1;
[e =<< _ucAddr -> -> 1 `i `uc ]
"48
[; ;TAD_RFID.c: 48:         LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"49
[; ;TAD_RFID.c: 49:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"50
[; ;TAD_RFID.c: 50:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 311  ]
[e :U 312 ]
}
"52
[; ;TAD_RFID.c: 52:     for (i = 8; i > 0; i--) {
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 314  ]
[e $U 315  ]
[e :U 314 ]
{
"53
[; ;TAD_RFID.c: 53:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"54
[; ;TAD_RFID.c: 54:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"55
[; ;TAD_RFID.c: 55:         ucResult <<= 1;
[e =<< _ucResult -> -> 1 `i `uc ]
"56
[; ;TAD_RFID.c: 56:         ucResult|= PORTCbits.RC0;
[e =| _ucResult -> . . _PORTCbits 0 0 `uc ]
"57
[; ;TAD_RFID.c: 57:         LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"58
[; ;TAD_RFID.c: 58:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"59
[; ;TAD_RFID.c: 59:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 314  ]
[e :U 315 ]
}
"61
[; ;TAD_RFID.c: 61:     LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"62
[; ;TAD_RFID.c: 62:     LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"63
[; ;TAD_RFID.c: 63:     return ucResult;
[e ) _ucResult ]
[e $UE 310  ]
"64
[; ;TAD_RFID.c: 64: }
[e :UE 310 ]
}
"67
[; ;TAD_RFID.c: 67: void MFRC522_Wr (unsigned char Address, unsigned char value) {
[v _MFRC522_Wr `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _MFRC522_Wr ]
[v _Address `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
[f ]
"68
[; ;TAD_RFID.c: 68:     unsigned char i, ucAddr = ((Address << 1) & 0x7E);
[v _i `uc ~T0 @X0 1 a ]
[v _ucAddr `uc ~T0 @X0 1 a ]
[e = _ucAddr -> & << -> _Address `i -> 1 `i -> 126 `i `uc ]
"69
[; ;TAD_RFID.c: 69:     LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"70
[; ;TAD_RFID.c: 70:     LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"71
[; ;TAD_RFID.c: 71:     for (i = 8; i > 0; i--) {
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 318  ]
[e $U 319  ]
[e :U 318 ]
{
"72
[; ;TAD_RFID.c: 72:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
[e = . . _LATCbits 0 1 -> -> == & -> _ucAddr `i -> 128 `i -> 128 `i `i `uc ]
"73
[; ;TAD_RFID.c: 73:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"74
[; ;TAD_RFID.c: 74:         ucAddr <<= 1;
[e =<< _ucAddr -> -> 1 `i `uc ]
"75
[; ;TAD_RFID.c: 75:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"76
[; ;TAD_RFID.c: 76:         LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"77
[; ;TAD_RFID.c: 77:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"78
[; ;TAD_RFID.c: 78:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 318  ]
[e :U 319 ]
}
"80
[; ;TAD_RFID.c: 80:     for (i = 8; i > 0; i--) {
{
[e = _i -> -> 8 `i `uc ]
[e $ > -> _i `i -> 0 `i 321  ]
[e $U 322  ]
[e :U 321 ]
{
"81
[; ;TAD_RFID.c: 81:         LATCbits.LATC1 = ((value & 0x80) == 0x80);
[e = . . _LATCbits 0 1 -> -> == & -> _value `i -> 128 `i -> 128 `i `i `uc ]
"82
[; ;TAD_RFID.c: 82:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"83
[; ;TAD_RFID.c: 83:         value <<= 1;
[e =<< _value -> -> 1 `i `uc ]
"84
[; ;TAD_RFID.c: 84:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"85
[; ;TAD_RFID.c: 85:         LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"86
[; ;TAD_RFID.c: 86:         delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"87
[; ;TAD_RFID.c: 87:     }
}
[e -- _i -> -> 1 `i `uc ]
[e $ > -> _i `i -> 0 `i 321  ]
[e :U 322 ]
}
"89
[; ;TAD_RFID.c: 89:     LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"90
[; ;TAD_RFID.c: 90:     LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"91
[; ;TAD_RFID.c: 91: }
[e :UE 317 ]
}
"95
[; ;TAD_RFID.c: 95: void MFRC522_Clear_Bit(char addr, char mask) {
[v _MFRC522_Clear_Bit `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _MFRC522_Clear_Bit ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
[f ]
"96
[; ;TAD_RFID.c: 96:     MFRC522_Wr(addr, MFRC522_Rd(addr) & ~mask);
[e ( _MFRC522_Wr (2 , -> _addr `uc -> & -> ( _MFRC522_Rd (1 -> _addr `uc `i ~ -> _mask `i `uc ]
"97
[; ;TAD_RFID.c: 97: }
[e :UE 324 ]
}
"99
[; ;TAD_RFID.c: 99: void MFRC522_Set_Bit(char addr, char mask) {
[v _MFRC522_Set_Bit `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _MFRC522_Set_Bit ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
[f ]
"100
[; ;TAD_RFID.c: 100:     MFRC522_Wr(addr, MFRC522_Rd(addr) | mask);
[e ( _MFRC522_Wr (2 , -> _addr `uc -> | -> ( _MFRC522_Rd (1 -> _addr `uc `i -> _mask `i `uc ]
"101
[; ;TAD_RFID.c: 101: }
[e :UE 325 ]
}
"103
[; ;TAD_RFID.c: 103: void resetMotorStates() {
[v _resetMotorStates `(v ~T0 @X0 1 ef ]
{
[e :U _resetMotorStates ]
[f ]
"105
[; ;TAD_RFID.c: 105:     state_read = 0;
[e = _state_read -> -> 0 `i `uc ]
"106
[; ;TAD_RFID.c: 106:     state_write = 0;
[e = _state_write -> -> 0 `i `uc ]
"109
[; ;TAD_RFID.c: 109:     LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"110
[; ;TAD_RFID.c: 110:     LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"111
[; ;TAD_RFID.c: 111: }
[e :UE 326 ]
}
"113
[; ;TAD_RFID.c: 113: void MFRC522_Reset () {
[v _MFRC522_Reset `(v ~T0 @X0 1 ef ]
{
[e :U _MFRC522_Reset ]
[f ]
"114
[; ;TAD_RFID.c: 114:     resetMotorStates();
[e ( _resetMotorStates ..  ]
"116
[; ;TAD_RFID.c: 116:     LATCbits.LATC4 = 1;
[e = . . _LATCbits 0 4 -> -> 1 `i `uc ]
"117
[; ;TAD_RFID.c: 117:     delay_us (1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"118
[; ;TAD_RFID.c: 118:     LATCbits.LATC4 = 0;
[e = . . _LATCbits 0 4 -> -> 0 `i `uc ]
"119
[; ;TAD_RFID.c: 119:     delay_us (1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"120
[; ;TAD_RFID.c: 120:     LATCbits.LATC4 = 1;
[e = . . _LATCbits 0 4 -> -> 1 `i `uc ]
"121
[; ;TAD_RFID.c: 121:     delay_us (1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"122
[; ;TAD_RFID.c: 122:     MFRC522_Wr(0x01, 0x0F);
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 15 `i `uc ]
"123
[; ;TAD_RFID.c: 123:     delay_us (1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"124
[; ;TAD_RFID.c: 124: }
[e :UE 327 ]
}
"126
[; ;TAD_RFID.c: 126: void MFRC522_AntennaOn () {
[v _MFRC522_AntennaOn `(v ~T0 @X0 1 ef ]
{
[e :U _MFRC522_AntennaOn ]
[f ]
"127
[; ;TAD_RFID.c: 127:     MFRC522_Set_Bit(0x14, 0x03);
[e ( _MFRC522_Set_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"128
[; ;TAD_RFID.c: 128: }
[e :UE 328 ]
}
"130
[; ;TAD_RFID.c: 130: void MFRC522_AntennaOff () {
[v _MFRC522_AntennaOff `(v ~T0 @X0 1 ef ]
{
[e :U _MFRC522_AntennaOff ]
[f ]
"131
[; ;TAD_RFID.c: 131:     MFRC522_Clear_Bit(0x14, 0x03);
[e ( _MFRC522_Clear_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"132
[; ;TAD_RFID.c: 132: }
[e :UE 329 ]
}
"134
[; ;TAD_RFID.c: 134: void MFRC522_Init() {
[v _MFRC522_Init `(v ~T0 @X0 1 ef ]
{
[e :U _MFRC522_Init ]
[f ]
"135
[; ;TAD_RFID.c: 135:     LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"136
[; ;TAD_RFID.c: 136:     LATCbits.LATC4 = 1;
[e = . . _LATCbits 0 4 -> -> 1 `i `uc ]
"138
[; ;TAD_RFID.c: 138:     MFRC522_Reset();
[e ( _MFRC522_Reset ..  ]
"139
[; ;TAD_RFID.c: 139:     MFRC522_Wr(0x2A, 0x8D);
[e ( _MFRC522_Wr (2 , -> -> 42 `i `uc -> -> 141 `i `uc ]
"140
[; ;TAD_RFID.c: 140:     MFRC522_Wr(0x2B, 0x3E);
[e ( _MFRC522_Wr (2 , -> -> 43 `i `uc -> -> 62 `i `uc ]
"141
[; ;TAD_RFID.c: 141:     MFRC522_Wr(0x2D, 30);
[e ( _MFRC522_Wr (2 , -> -> 45 `i `uc -> -> 30 `i `uc ]
"142
[; ;TAD_RFID.c: 142:     MFRC522_Wr(0x2C, 0);
[e ( _MFRC522_Wr (2 , -> -> 44 `i `uc -> -> 0 `i `uc ]
"143
[; ;TAD_RFID.c: 143:     MFRC522_Wr(0x15, 0x40);
[e ( _MFRC522_Wr (2 , -> -> 21 `i `uc -> -> 64 `i `uc ]
"144
[; ;TAD_RFID.c: 144:     MFRC522_Wr(0x11, 0x3D);
[e ( _MFRC522_Wr (2 , -> -> 17 `i `uc -> -> 61 `i `uc ]
"146
[; ;TAD_RFID.c: 146:     MFRC522_AntennaOff();
[e ( _MFRC522_AntennaOff ..  ]
"147
[; ;TAD_RFID.c: 147:     MFRC522_AntennaOn();
[e ( _MFRC522_AntennaOn ..  ]
"148
[; ;TAD_RFID.c: 148: }
[e :UE 330 ]
}
"150
[; ;TAD_RFID.c: 150: char motor_Write(char addr, char value) {
[v _motor_Write `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _motor_Write ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
[f ]
"151
[; ;TAD_RFID.c: 151:     static char bit_count = 0;
[v F3115 `uc ~T0 @X0 1 s bit_count ]
[i F3115
-> -> 0 `i `uc
]
"152
[; ;TAD_RFID.c: 152:     static unsigned char ucAddr;
[v F3116 `uc ~T0 @X0 1 s ucAddr ]
"153
[; ;TAD_RFID.c: 153:     static unsigned char ucValue;
[v F3117 `uc ~T0 @X0 1 s ucValue ]
"155
[; ;TAD_RFID.c: 155:     switch (state_write) {
[e $U 333  ]
{
"156
[; ;TAD_RFID.c: 156:         case 0:
[e :U 334 ]
"157
[; ;TAD_RFID.c: 157:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"158
[; ;TAD_RFID.c: 158:             LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"159
[; ;TAD_RFID.c: 159:             ucAddr = ((addr << 1) & 0x7E);
[e = F3116 -> & << -> _addr `i -> 1 `i -> 126 `i `uc ]
"160
[; ;TAD_RFID.c: 160:             ucValue = value;
[e = F3117 -> _value `uc ]
"161
[; ;TAD_RFID.c: 161:             bit_count = 0;
[e = F3115 -> -> 0 `i `uc ]
"162
[; ;TAD_RFID.c: 162:             state_write = 1;
[e = _state_write -> -> 1 `i `uc ]
"163
[; ;TAD_RFID.c: 163:             break;
[e $U 332  ]
"165
[; ;TAD_RFID.c: 165:         case 1:
[e :U 335 ]
"166
[; ;TAD_RFID.c: 166:             LATCbits.LATC1 = ((ucAddr & 0x80) != 0);
[e = . . _LATCbits 0 1 -> -> != & -> F3116 `i -> 128 `i -> 0 `i `i `uc ]
"167
[; ;TAD_RFID.c: 167:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"168
[; ;TAD_RFID.c: 168:             ucAddr <<= 1;
[e =<< F3116 -> -> 1 `i `uc ]
"169
[; ;TAD_RFID.c: 169:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"170
[; ;TAD_RFID.c: 170:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"171
[; ;TAD_RFID.c: 171:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"172
[; ;TAD_RFID.c: 172:             bit_count++;
[e ++ F3115 -> -> 1 `i `uc ]
"173
[; ;TAD_RFID.c: 173:             if (bit_count == 8) {
[e $ ! == -> F3115 `i -> 8 `i 336  ]
{
"174
[; ;TAD_RFID.c: 174:                 bit_count = 0;
[e = F3115 -> -> 0 `i `uc ]
"175
[; ;TAD_RFID.c: 175:                 state_write = 2;
[e = _state_write -> -> 2 `i `uc ]
"176
[; ;TAD_RFID.c: 176:             }
}
[e :U 336 ]
"177
[; ;TAD_RFID.c: 177:             break;
[e $U 332  ]
"179
[; ;TAD_RFID.c: 179:         case 2:
[e :U 337 ]
"180
[; ;TAD_RFID.c: 180:             LATCbits.LATC1 = ((ucValue & 0x80) != 0);
[e = . . _LATCbits 0 1 -> -> != & -> F3117 `i -> 128 `i -> 0 `i `i `uc ]
"181
[; ;TAD_RFID.c: 181:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"182
[; ;TAD_RFID.c: 182:             ucValue <<= 1;
[e =<< F3117 -> -> 1 `i `uc ]
"183
[; ;TAD_RFID.c: 183:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"184
[; ;TAD_RFID.c: 184:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"185
[; ;TAD_RFID.c: 185:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"186
[; ;TAD_RFID.c: 186:             bit_count++;
[e ++ F3115 -> -> 1 `i `uc ]
"187
[; ;TAD_RFID.c: 187:             if (bit_count == 8) {
[e $ ! == -> F3115 `i -> 8 `i 338  ]
{
"188
[; ;TAD_RFID.c: 188:                 LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"189
[; ;TAD_RFID.c: 189:                 LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"190
[; ;TAD_RFID.c: 190:                 state_write = 0;
[e = _state_write -> -> 0 `i `uc ]
"191
[; ;TAD_RFID.c: 191:                 return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 331  ]
"192
[; ;TAD_RFID.c: 192:             }
}
[e :U 338 ]
"193
[; ;TAD_RFID.c: 193:             break;
[e $U 332  ]
"194
[; ;TAD_RFID.c: 194:     }
}
[e $U 332  ]
[e :U 333 ]
[e [\ _state_write , $ -> 0 `i 334
 , $ -> 1 `i 335
 , $ -> 2 `i 337
 332 ]
[e :U 332 ]
"195
[; ;TAD_RFID.c: 195:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 331  ]
"196
[; ;TAD_RFID.c: 196: }
[e :UE 331 ]
}
"199
[; ;TAD_RFID.c: 199: char motor_Read(char addr) {
[v _motor_Read `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _motor_Read ]
[v _addr `uc ~T0 @X0 1 r1 ]
[f ]
"200
[; ;TAD_RFID.c: 200:     static char bit_count = 0;
[v F3120 `uc ~T0 @X0 1 s bit_count ]
[i F3120
-> -> 0 `i `uc
]
"201
[; ;TAD_RFID.c: 201:     static unsigned char ucAddr;
[v F3121 `uc ~T0 @X0 1 s ucAddr ]
"202
[; ;TAD_RFID.c: 202:     static unsigned char ucResult;
[v F3122 `uc ~T0 @X0 1 s ucResult ]
"203
[; ;TAD_RFID.c: 203:     static unsigned int timeout_counter = 0;
[v F3123 `ui ~T0 @X0 1 s timeout_counter ]
[i F3123
-> -> 0 `i `ui
]
"204
[; ;TAD_RFID.c: 204:     const unsigned int MAX_TIMEOUT = 1000;
[v _MAX_TIMEOUT `Cui ~T0 @X0 1 a ]
[e = _MAX_TIMEOUT -> -> 1000 `i `ui ]
"207
[; ;TAD_RFID.c: 207:     timeout_counter++;
[e ++ F3123 -> -> 1 `i `ui ]
"210
[; ;TAD_RFID.c: 210:     if (timeout_counter > MAX_TIMEOUT) {
[e $ ! > F3123 _MAX_TIMEOUT 340  ]
{
"211
[; ;TAD_RFID.c: 211:         LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"212
[; ;TAD_RFID.c: 212:         LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"213
[; ;TAD_RFID.c: 213:         state_read = 0;
[e = _state_read -> -> 0 `i `uc ]
"214
[; ;TAD_RFID.c: 214:         timeout_counter = 0;
[e = F3123 -> -> 0 `i `ui ]
"215
[; ;TAD_RFID.c: 215:         return 0xFF;
[e ) -> -> 255 `i `uc ]
[e $UE 339  ]
"216
[; ;TAD_RFID.c: 216:     }
}
[e :U 340 ]
"218
[; ;TAD_RFID.c: 218:     switch(state_read) {
[e $U 342  ]
{
"219
[; ;TAD_RFID.c: 219:         case 0:
[e :U 343 ]
"220
[; ;TAD_RFID.c: 220:             timeout_counter = 0;
[e = F3123 -> -> 0 `i `ui ]
"221
[; ;TAD_RFID.c: 221:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"222
[; ;TAD_RFID.c: 222:             LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"223
[; ;TAD_RFID.c: 223:             ucAddr = ((addr<<1) & 0x7E) | 0x80;
[e = F3121 -> | & << -> _addr `i -> 1 `i -> 126 `i -> 128 `i `uc ]
"224
[; ;TAD_RFID.c: 224:             ucResult = 0;
[e = F3122 -> -> 0 `i `uc ]
"225
[; ;TAD_RFID.c: 225:             bit_count = 0;
[e = F3120 -> -> 0 `i `uc ]
"226
[; ;TAD_RFID.c: 226:             state_read = 1;
[e = _state_read -> -> 1 `i `uc ]
"227
[; ;TAD_RFID.c: 227:             return 0xFE;
[e ) -> -> 254 `i `uc ]
[e $UE 339  ]
"229
[; ;TAD_RFID.c: 229:         case 1:
[e :U 344 ]
"230
[; ;TAD_RFID.c: 230:             LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
[e = . . _LATCbits 0 1 -> -> == & -> F3121 `i -> 128 `i -> 128 `i `i `uc ]
"231
[; ;TAD_RFID.c: 231:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"232
[; ;TAD_RFID.c: 232:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"233
[; ;TAD_RFID.c: 233:             ucAddr <<= 1;
[e =<< F3121 -> -> 1 `i `uc ]
"234
[; ;TAD_RFID.c: 234:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"235
[; ;TAD_RFID.c: 235:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"236
[; ;TAD_RFID.c: 236:             bit_count++;
[e ++ F3120 -> -> 1 `i `uc ]
"238
[; ;TAD_RFID.c: 238:             if (bit_count >= 8) {
[e $ ! >= -> F3120 `i -> 8 `i 345  ]
{
"239
[; ;TAD_RFID.c: 239:                 bit_count = 0;
[e = F3120 -> -> 0 `i `uc ]
"240
[; ;TAD_RFID.c: 240:                 state_read = 2;
[e = _state_read -> -> 2 `i `uc ]
"241
[; ;TAD_RFID.c: 241:             }
}
[e :U 345 ]
"242
[; ;TAD_RFID.c: 242:             return 0xFE;
[e ) -> -> 254 `i `uc ]
[e $UE 339  ]
"244
[; ;TAD_RFID.c: 244:         case 2:
[e :U 346 ]
"245
[; ;TAD_RFID.c: 245:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"246
[; ;TAD_RFID.c: 246:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"247
[; ;TAD_RFID.c: 247:             ucResult <<= 1;
[e =<< F3122 -> -> 1 `i `uc ]
"248
[; ;TAD_RFID.c: 248:             ucResult |= PORTCbits.RC0;
[e =| F3122 -> . . _PORTCbits 0 0 `uc ]
"249
[; ;TAD_RFID.c: 249:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"250
[; ;TAD_RFID.c: 250:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"251
[; ;TAD_RFID.c: 251:             bit_count++;
[e ++ F3120 -> -> 1 `i `uc ]
"253
[; ;TAD_RFID.c: 253:             if (bit_count >= 8) {
[e $ ! >= -> F3120 `i -> 8 `i 347  ]
{
"254
[; ;TAD_RFID.c: 254:                 LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"255
[; ;TAD_RFID.c: 255:                 LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"256
[; ;TAD_RFID.c: 256:                 state_read = 0;
[e = _state_read -> -> 0 `i `uc ]
"257
[; ;TAD_RFID.c: 257:                 timeout_counter = 0;
[e = F3123 -> -> 0 `i `ui ]
"259
[; ;TAD_RFID.c: 259:                 if (ucResult == 0xFE || ucResult == 0xFF) {
[e $ ! || == -> F3122 `i -> 254 `i == -> F3122 `i -> 255 `i 348  ]
{
"260
[; ;TAD_RFID.c: 260:                     return 0xFD;
[e ) -> -> 253 `i `uc ]
[e $UE 339  ]
"261
[; ;TAD_RFID.c: 261:                 }
}
[e :U 348 ]
"262
[; ;TAD_RFID.c: 262:                 return ucResult;
[e ) -> F3122 `uc ]
[e $UE 339  ]
"263
[; ;TAD_RFID.c: 263:             }
}
[e :U 347 ]
"264
[; ;TAD_RFID.c: 264:             return 0xFE;
[e ) -> -> 254 `i `uc ]
[e $UE 339  ]
"265
[; ;TAD_RFID.c: 265:     }
}
[e $U 341  ]
[e :U 342 ]
[e [\ _state_read , $ -> 0 `i 343
 , $ -> 1 `i 344
 , $ -> 2 `i 346
 341 ]
[e :U 341 ]
"266
[; ;TAD_RFID.c: 266:     return 0xFE;
[e ) -> -> 254 `i `uc ]
[e $UE 339  ]
"267
[; ;TAD_RFID.c: 267: }
[e :UE 339 ]
}
"270
[; ;TAD_RFID.c: 270: void initRFID() {
[v _initRFID `(v ~T0 @X0 1 ef ]
{
[e :U _initRFID ]
[f ]
"271
[; ;TAD_RFID.c: 271:     InitPortDirections();
[e ( _InitPortDirections ..  ]
"272
[; ;TAD_RFID.c: 272:     MFRC522_Init();
[e ( _MFRC522_Init ..  ]
"273
[; ;TAD_RFID.c: 273: }
[e :UE 349 ]
}
"275
[; ;TAD_RFID.c: 275: void motor_RFID(void) {
[v _motor_RFID `(v ~T0 @X0 1 ef ]
{
[e :U _motor_RFID ]
[f ]
"276
[; ;TAD_RFID.c: 276:     static char state = 0;
[v F3127 `uc ~T0 @X0 1 s state ]
[i F3127
-> -> 0 `i `uc
]
"277
[; ;TAD_RFID.c: 277:     static char substate = 0;
[v F3128 `uc ~T0 @X0 1 s substate ]
[i F3128
-> -> 0 `i `uc
]
"278
[; ;TAD_RFID.c: 278:     static char irqEn, waitIRq, n;
[v F3129 `uc ~T0 @X0 1 s irqEn ]
[v F3130 `uc ~T0 @X0 1 s waitIRq ]
[v F3131 `uc ~T0 @X0 1 s n ]
"279
[; ;TAD_RFID.c: 279:     static unsigned char i;
[v F3132 `uc ~T0 @X0 1 s i ]
"280
[; ;TAD_RFID.c: 280:     static char _status;
[v F3133 `uc ~T0 @X0 1 s _status ]
"281
[; ;TAD_RFID.c: 281:     static unsigned unLen;
[v F3134 `ui ~T0 @X0 1 s unLen ]
"282
[; ;TAD_RFID.c: 282:     static char TagType;
[v F3135 `uc ~T0 @X0 1 s TagType ]
"283
[; ;TAD_RFID.c: 283:     static unsigned char UID[6];
[v F3136 `uc ~T0 @X0 -> 6 `i s UID ]
"284
[; ;TAD_RFID.c: 284:     static unsigned char checksum;
[v F3137 `uc ~T0 @X0 1 s checksum ]
"285
[; ;TAD_RFID.c: 285:     static unsigned char allZero;
[v F3138 `uc ~T0 @X0 1 s allZero ]
"286
[; ;TAD_RFID.c: 286:     static unsigned char tempRegValue;
[v F3139 `uc ~T0 @X0 1 s tempRegValue ]
"287
[; ;TAD_RFID.c: 287:     unsigned char flag = 0;
[v _flag `uc ~T0 @X0 1 a ]
[e = _flag -> -> 0 `i `uc ]
"288
[; ;TAD_RFID.c: 288:     static unsigned char lastBitsVal;
[v F3141 `uc ~T0 @X0 1 s lastBitsVal ]
"289
[; ;TAD_RFID.c: 289:     static unsigned char fifoLevel;
[v F3142 `uc ~T0 @X0 1 s fifoLevel ]
"290
[; ;TAD_RFID.c: 290:     unsigned char backBitsCalc;
[v _backBitsCalc `uc ~T0 @X0 1 a ]
"292
[; ;TAD_RFID.c: 292:     switch(state) {
[e $U 352  ]
{
"294
[; ;TAD_RFID.c: 294:         case 0:
[e :U 353 ]
"295
[; ;TAD_RFID.c: 295:             switch(substate) {
[e $U 355  ]
{
"296
[; ;TAD_RFID.c: 296:                 case 0:
[e :U 356 ]
"298
[; ;TAD_RFID.c: 298:                     flag = motor_Write(0x0D, 0x07);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> -> 7 `i `uc `uc ]
"299
[; ;TAD_RFID.c: 299:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 357  ]
{
"300
[; ;TAD_RFID.c: 300:                     TagType = 0x26;
[e = F3135 -> -> 38 `i `uc ]
"301
[; ;TAD_RFID.c: 301:                     substate = 1;
[e = F3128 -> -> 1 `i `uc ]
"302
[; ;TAD_RFID.c: 302:                     }
}
[e :U 357 ]
"303
[; ;TAD_RFID.c: 303:                     break;
[e $U 354  ]
"304
[; ;TAD_RFID.c: 304:                 case 1:
[e :U 358 ]
"306
[; ;TAD_RFID.c: 306:                     irqEn = 0x77;
[e = F3129 -> -> 119 `i `uc ]
"307
[; ;TAD_RFID.c: 307:                     waitIRq = 0x30;
[e = F3130 -> -> 48 `i `uc ]
"308
[; ;TAD_RFID.c: 308:                     flag = motor_Write(0x02, irqEn | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 2 `i `uc -> | -> F3129 `i -> 128 `i `uc `uc ]
"309
[; ;TAD_RFID.c: 309:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 359  ]
{
"310
[; ;TAD_RFID.c: 310:                     substate = 2;
[e = F3128 -> -> 2 `i `uc ]
"311
[; ;TAD_RFID.c: 311:                     }
}
[e :U 359 ]
"312
[; ;TAD_RFID.c: 312:                     break;
[e $U 354  ]
"313
[; ;TAD_RFID.c: 313:                 case 2:
[e :U 360 ]
"315
[; ;TAD_RFID.c: 315:                     flag = motor_Read(0x04);
[e = _flag -> ( _motor_Read (1 -> -> 4 `i `uc `uc ]
"316
[; ;TAD_RFID.c: 316:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 361  ]
{
"318
[; ;TAD_RFID.c: 318:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"319
[; ;TAD_RFID.c: 319:                     } else if (flag != 0xFE) {
}
[e $U 362  ]
[e :U 361 ]
[e $ ! != -> _flag `i -> 254 `i 363  ]
{
"320
[; ;TAD_RFID.c: 320:                         tempRegValue = flag;
[e = F3139 _flag ]
"321
[; ;TAD_RFID.c: 321:                         substate = 3;
[e = F3128 -> -> 3 `i `uc ]
"322
[; ;TAD_RFID.c: 322:                     }
}
[e :U 363 ]
[e :U 362 ]
"323
[; ;TAD_RFID.c: 323:                     break;
[e $U 354  ]
"324
[; ;TAD_RFID.c: 324:                 case 3:
[e :U 364 ]
"326
[; ;TAD_RFID.c: 326:                     flag = motor_Write(0x02, tempRegValue & ~0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 2 `i `uc -> & -> F3139 `i ~ -> 128 `i `uc `uc ]
"327
[; ;TAD_RFID.c: 327:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 365  ]
{
"328
[; ;TAD_RFID.c: 328:                         substate = 4;
[e = F3128 -> -> 4 `i `uc ]
"329
[; ;TAD_RFID.c: 329:                     }
}
[e :U 365 ]
"330
[; ;TAD_RFID.c: 330:                     break;
[e $U 354  ]
"331
[; ;TAD_RFID.c: 331:                 case 4:
[e :U 366 ]
"333
[; ;TAD_RFID.c: 333:                     flag = motor_Read(0x0A);
[e = _flag -> ( _motor_Read (1 -> -> 10 `i `uc `uc ]
"334
[; ;TAD_RFID.c: 334:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 367  ]
{
"336
[; ;TAD_RFID.c: 336:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"337
[; ;TAD_RFID.c: 337:                     } else if (flag != 0xFE) {
}
[e $U 368  ]
[e :U 367 ]
[e $ ! != -> _flag `i -> 254 `i 369  ]
{
"338
[; ;TAD_RFID.c: 338:                         tempRegValue = flag;
[e = F3139 _flag ]
"339
[; ;TAD_RFID.c: 339:                         substate = 5;
[e = F3128 -> -> 5 `i `uc ]
"340
[; ;TAD_RFID.c: 340:                     }
}
[e :U 369 ]
[e :U 368 ]
"341
[; ;TAD_RFID.c: 341:                     break;
[e $U 354  ]
"342
[; ;TAD_RFID.c: 342:                 case 5:
[e :U 370 ]
"344
[; ;TAD_RFID.c: 344:                     flag = motor_Write(0x0A, tempRegValue | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 10 `i `uc -> | -> F3139 `i -> 128 `i `uc `uc ]
"345
[; ;TAD_RFID.c: 345:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 371  ]
{
"346
[; ;TAD_RFID.c: 346:                         substate = 6;
[e = F3128 -> -> 6 `i `uc ]
"347
[; ;TAD_RFID.c: 347:                     }
}
[e :U 371 ]
"348
[; ;TAD_RFID.c: 348:                     break;
[e $U 354  ]
"349
[; ;TAD_RFID.c: 349:                 case 6:
[e :U 372 ]
"351
[; ;TAD_RFID.c: 351:                     flag = motor_Write(0x01, 0x00);
[e = _flag -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 0 `i `uc `uc ]
"352
[; ;TAD_RFID.c: 352:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 373  ]
{
"353
[; ;TAD_RFID.c: 353:                         substate = 7;
[e = F3128 -> -> 7 `i `uc ]
"354
[; ;TAD_RFID.c: 354:                     }
}
[e :U 373 ]
"355
[; ;TAD_RFID.c: 355:                     break;
[e $U 354  ]
"356
[; ;TAD_RFID.c: 356:                 case 7:
[e :U 374 ]
"358
[; ;TAD_RFID.c: 358:                     flag = motor_Write(0x09, TagType);
[e = _flag -> ( _motor_Write (2 , -> -> 9 `i `uc F3135 `uc ]
"359
[; ;TAD_RFID.c: 359:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 375  ]
{
"360
[; ;TAD_RFID.c: 360:                         substate = 8;
[e = F3128 -> -> 8 `i `uc ]
"361
[; ;TAD_RFID.c: 361:                     }
}
[e :U 375 ]
"362
[; ;TAD_RFID.c: 362:                     break;
[e $U 354  ]
"363
[; ;TAD_RFID.c: 363:                 case 8:
[e :U 376 ]
"365
[; ;TAD_RFID.c: 365:                     flag = motor_Write(0x01, 0x0C);
[e = _flag -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 12 `i `uc `uc ]
"366
[; ;TAD_RFID.c: 366:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 377  ]
{
"367
[; ;TAD_RFID.c: 367:                         substate = 9;
[e = F3128 -> -> 9 `i `uc ]
"368
[; ;TAD_RFID.c: 368:                     }
}
[e :U 377 ]
"369
[; ;TAD_RFID.c: 369:                     break;
[e $U 354  ]
"370
[; ;TAD_RFID.c: 370:                 case 9:
[e :U 378 ]
"372
[; ;TAD_RFID.c: 372:                     flag = motor_Read(0x0D);
[e = _flag -> ( _motor_Read (1 -> -> 13 `i `uc `uc ]
"373
[; ;TAD_RFID.c: 373:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 379  ]
{
"375
[; ;TAD_RFID.c: 375:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"376
[; ;TAD_RFID.c: 376:                     } else if (flag != 0xFE) {
}
[e $U 380  ]
[e :U 379 ]
[e $ ! != -> _flag `i -> 254 `i 381  ]
{
"377
[; ;TAD_RFID.c: 377:                         tempRegValue = flag;
[e = F3139 _flag ]
"378
[; ;TAD_RFID.c: 378:                         substate = 10;
[e = F3128 -> -> 10 `i `uc ]
"379
[; ;TAD_RFID.c: 379:                     }
}
[e :U 381 ]
[e :U 380 ]
"380
[; ;TAD_RFID.c: 380:                     break;
[e $U 354  ]
"381
[; ;TAD_RFID.c: 381:                 case 10:
[e :U 382 ]
"383
[; ;TAD_RFID.c: 383:                     flag = motor_Write(0x0D, tempRegValue | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> | -> F3139 `i -> 128 `i `uc `uc ]
"384
[; ;TAD_RFID.c: 384:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 383  ]
{
"385
[; ;TAD_RFID.c: 385:                         i = 0xFF;
[e = F3132 -> -> 255 `i `uc ]
"386
[; ;TAD_RFID.c: 386:                         substate = 11;
[e = F3128 -> -> 11 `i `uc ]
"387
[; ;TAD_RFID.c: 387:                     }
}
[e :U 383 ]
"388
[; ;TAD_RFID.c: 388:                     break;
[e $U 354  ]
"389
[; ;TAD_RFID.c: 389:                 case 11:
[e :U 384 ]
"391
[; ;TAD_RFID.c: 391:                     flag = motor_Read(0x04);
[e = _flag -> ( _motor_Read (1 -> -> 4 `i `uc `uc ]
"392
[; ;TAD_RFID.c: 392:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 385  ]
{
"394
[; ;TAD_RFID.c: 394:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"395
[; ;TAD_RFID.c: 395:                     } else if (flag != 0xFE) {
}
[e $U 386  ]
[e :U 385 ]
[e $ ! != -> _flag `i -> 254 `i 387  ]
{
"396
[; ;TAD_RFID.c: 396:                         n = flag;
[e = F3131 -> _flag `uc ]
"397
[; ;TAD_RFID.c: 397:                         if ((n & 0x01) || (n & waitIRq) || (--i == 0)) {
[e $ ! || || != & -> F3131 `i -> 1 `i -> 0 `i != & -> F3131 `i -> F3130 `i -> 0 `i == -> =- F3132 -> -> 1 `i `uc `i -> 0 `i 388  ]
{
"398
[; ;TAD_RFID.c: 398:                             substate = 12;
[e = F3128 -> -> 12 `i `uc ]
"399
[; ;TAD_RFID.c: 399:                         }
}
[e :U 388 ]
"400
[; ;TAD_RFID.c: 400:                     }
}
[e :U 387 ]
[e :U 386 ]
"401
[; ;TAD_RFID.c: 401:                     break;
[e $U 354  ]
"402
[; ;TAD_RFID.c: 402:                 case 12:
[e :U 389 ]
"404
[; ;TAD_RFID.c: 404:                     flag = motor_Read(0x0D);
[e = _flag -> ( _motor_Read (1 -> -> 13 `i `uc `uc ]
"405
[; ;TAD_RFID.c: 405:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 390  ]
{
"406
[; ;TAD_RFID.c: 406:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"407
[; ;TAD_RFID.c: 407:                     } else if (flag != 0xFE && flag != 0x00) {
}
[e $U 391  ]
[e :U 390 ]
[e $ ! && != -> _flag `i -> 254 `i != -> _flag `i -> 0 `i 392  ]
{
"408
[; ;TAD_RFID.c: 408:                         substate = 13;
[e = F3128 -> -> 13 `i `uc ]
"409
[; ;TAD_RFID.c: 409:                     }
}
[e :U 392 ]
[e :U 391 ]
"410
[; ;TAD_RFID.c: 410:                     break;
[e $U 354  ]
"411
[; ;TAD_RFID.c: 411:                 case 13:
[e :U 393 ]
"413
[; ;TAD_RFID.c: 413:                     flag = motor_Write(0x0D, tempRegValue & ~0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> & -> F3139 `i ~ -> 128 `i `uc `uc ]
"414
[; ;TAD_RFID.c: 414:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 394  ]
{
"415
[; ;TAD_RFID.c: 415:                         substate = 14;
[e = F3128 -> -> 14 `i `uc ]
"416
[; ;TAD_RFID.c: 416:                     }
}
[e :U 394 ]
"417
[; ;TAD_RFID.c: 417:                     break;
[e $U 354  ]
"418
[; ;TAD_RFID.c: 418:                 case 14:
[e :U 395 ]
"420
[; ;TAD_RFID.c: 420:                     flag = motor_Read(0x06);
[e = _flag -> ( _motor_Read (1 -> -> 6 `i `uc `uc ]
"421
[; ;TAD_RFID.c: 421:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 396  ]
{
"423
[; ;TAD_RFID.c: 423:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"424
[; ;TAD_RFID.c: 424:                     } else if (flag != 0xFE) {
}
[e $U 397  ]
[e :U 396 ]
[e $ ! != -> _flag `i -> 254 `i 398  ]
{
"425
[; ;TAD_RFID.c: 425:                         tempRegValue = flag;
[e = F3139 _flag ]
"426
[; ;TAD_RFID.c: 426:                         if (i != 0 && !(tempRegValue & 0x1B)) {
[e $ ! && != -> F3132 `i -> 0 `i ! != & -> F3139 `i -> 27 `i -> 0 `i 399  ]
{
"427
[; ;TAD_RFID.c: 427:                             substate = 15;
[e = F3128 -> -> 15 `i `uc ]
"428
[; ;TAD_RFID.c: 428:                         } else {
}
[e $U 400  ]
[e :U 399 ]
{
"429
[; ;TAD_RFID.c: 429:                             substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"430
[; ;TAD_RFID.c: 430:                             state = 0;
[e = F3127 -> -> 0 `i `uc ]
"431
[; ;TAD_RFID.c: 431:                         }
}
[e :U 400 ]
"432
[; ;TAD_RFID.c: 432:                     }
}
[e :U 398 ]
[e :U 397 ]
"433
[; ;TAD_RFID.c: 433:                     break;
[e $U 354  ]
"435
[; ;TAD_RFID.c: 435:                 case 15:
[e :U 401 ]
"437
[; ;TAD_RFID.c: 437:                     flag = motor_Read(0x0A);
[e = _flag -> ( _motor_Read (1 -> -> 10 `i `uc `uc ]
"438
[; ;TAD_RFID.c: 438:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 402  ]
{
"440
[; ;TAD_RFID.c: 440:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"441
[; ;TAD_RFID.c: 441:                     } else if (flag != 0xFE) {
}
[e $U 403  ]
[e :U 402 ]
[e $ ! != -> _flag `i -> 254 `i 404  ]
{
"442
[; ;TAD_RFID.c: 442:                         fifoLevel = flag;
[e = F3142 _flag ]
"443
[; ;TAD_RFID.c: 443:                         substate = 16;
[e = F3128 -> -> 16 `i `uc ]
"444
[; ;TAD_RFID.c: 444:                     }
}
[e :U 404 ]
[e :U 403 ]
"445
[; ;TAD_RFID.c: 445:                     break;
[e $U 354  ]
"447
[; ;TAD_RFID.c: 447:                 case 16:
[e :U 405 ]
"449
[; ;TAD_RFID.c: 449:                     flag = motor_Read(0x0C);
[e = _flag -> ( _motor_Read (1 -> -> 12 `i `uc `uc ]
"450
[; ;TAD_RFID.c: 450:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 406  ]
{
"452
[; ;TAD_RFID.c: 452:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"453
[; ;TAD_RFID.c: 453:                     } else if (flag != 0xFE) {
}
[e $U 407  ]
[e :U 406 ]
[e $ ! != -> _flag `i -> 254 `i 408  ]
{
"454
[; ;TAD_RFID.c: 454:                         lastBitsVal = flag & 0x07;
[e = F3141 -> & -> _flag `i -> 7 `i `uc ]
"455
[; ;TAD_RFID.c: 455:                         substate = 17;
[e = F3128 -> -> 17 `i `uc ]
"456
[; ;TAD_RFID.c: 456:                     }
}
[e :U 408 ]
[e :U 407 ]
"457
[; ;TAD_RFID.c: 457:                     break;
[e $U 354  ]
"459
[; ;TAD_RFID.c: 459:                 case 17:
[e :U 409 ]
"461
[; ;TAD_RFID.c: 461:                     if (lastBitsVal)
[e $ ! != -> F3141 `i -> 0 `i 410  ]
"462
[; ;TAD_RFID.c: 462:                         backBitsCalc = (fifoLevel - 1) * 8 + lastBitsVal;
[e = _backBitsCalc -> + * - -> F3142 `i -> 1 `i -> 8 `i -> F3141 `i `uc ]
[e $U 411  ]
"463
[; ;TAD_RFID.c: 463:                     else
[e :U 410 ]
"464
[; ;TAD_RFID.c: 464:                         backBitsCalc = fifoLevel * 8;
[e = _backBitsCalc -> * -> F3142 `i -> 8 `i `uc ]
[e :U 411 ]
"467
[; ;TAD_RFID.c: 467:                     if (backBitsCalc == 0x10) {
[e $ ! == -> _backBitsCalc `i -> 16 `i 412  ]
{
"468
[; ;TAD_RFID.c: 468:                         state = 1;
[e = F3127 -> -> 1 `i `uc ]
"469
[; ;TAD_RFID.c: 469:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"470
[; ;TAD_RFID.c: 470:                     } else {
}
[e $U 413  ]
[e :U 412 ]
{
"471
[; ;TAD_RFID.c: 471:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"472
[; ;TAD_RFID.c: 472:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"473
[; ;TAD_RFID.c: 473:                     }
}
[e :U 413 ]
"474
[; ;TAD_RFID.c: 474:                     break;
[e $U 354  ]
"475
[; ;TAD_RFID.c: 475:             }
}
[e $U 354  ]
[e :U 355 ]
[e [\ F3128 , $ -> 0 `i 356
 , $ -> 1 `i 358
 , $ -> 2 `i 360
 , $ -> 3 `i 364
 , $ -> 4 `i 366
 , $ -> 5 `i 370
 , $ -> 6 `i 372
 , $ -> 7 `i 374
 , $ -> 8 `i 376
 , $ -> 9 `i 378
 , $ -> 10 `i 382
 , $ -> 11 `i 384
 , $ -> 12 `i 389
 , $ -> 13 `i 393
 , $ -> 14 `i 395
 , $ -> 15 `i 401
 , $ -> 16 `i 405
 , $ -> 17 `i 409
 354 ]
[e :U 354 ]
"476
[; ;TAD_RFID.c: 476:             break;
[e $U 351  ]
"478
[; ;TAD_RFID.c: 478:         case 1:
[e :U 414 ]
"479
[; ;TAD_RFID.c: 479:             switch(substate) {
[e $U 416  ]
{
"480
[; ;TAD_RFID.c: 480:                 case 0:
[e :U 417 ]
"482
[; ;TAD_RFID.c: 482:                     flag = motor_Write(0x0D, 0x00);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> -> 0 `i `uc `uc ]
"483
[; ;TAD_RFID.c: 483:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 418  ]
{
"484
[; ;TAD_RFID.c: 484:                     UID[0] = 0x93;
[e = *U + &U F3136 * -> -> -> 0 `i `ui `ux -> -> # *U &U F3136 `ui `ux -> -> 147 `i `uc ]
"485
[; ;TAD_RFID.c: 485:                     UID[1] = 0x20;
[e = *U + &U F3136 * -> -> -> 1 `i `ui `ux -> -> # *U &U F3136 `ui `ux -> -> 32 `i `uc ]
"486
[; ;TAD_RFID.c: 486:                     substate = 1;
[e = F3128 -> -> 1 `i `uc ]
"487
[; ;TAD_RFID.c: 487:                     }
}
[e :U 418 ]
"488
[; ;TAD_RFID.c: 488:                     break;
[e $U 415  ]
"489
[; ;TAD_RFID.c: 489:                 case 1:
[e :U 419 ]
"491
[; ;TAD_RFID.c: 491:                     flag = motor_Read(0x08);
[e = _flag -> ( _motor_Read (1 -> -> 8 `i `uc `uc ]
"492
[; ;TAD_RFID.c: 492:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 420  ]
{
"494
[; ;TAD_RFID.c: 494:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"495
[; ;TAD_RFID.c: 495:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"496
[; ;TAD_RFID.c: 496:                     } else if (flag != 0xFE) {
}
[e $U 421  ]
[e :U 420 ]
[e $ ! != -> _flag `i -> 254 `i 422  ]
{
"497
[; ;TAD_RFID.c: 497:                         tempRegValue = flag;
[e = F3139 _flag ]
"498
[; ;TAD_RFID.c: 498:                         substate = 2;
[e = F3128 -> -> 2 `i `uc ]
"499
[; ;TAD_RFID.c: 499:                     }
}
[e :U 422 ]
[e :U 421 ]
"500
[; ;TAD_RFID.c: 500:                     break;
[e $U 415  ]
"501
[; ;TAD_RFID.c: 501:                 case 2:
[e :U 423 ]
"503
[; ;TAD_RFID.c: 503:                     flag = motor_Write(0x08, tempRegValue & ~0x08);
[e = _flag -> ( _motor_Write (2 , -> -> 8 `i `uc -> & -> F3139 `i ~ -> 8 `i `uc `uc ]
"504
[; ;TAD_RFID.c: 504:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 424  ]
{
"505
[; ;TAD_RFID.c: 505:                         substate = 3;
[e = F3128 -> -> 3 `i `uc ]
"506
[; ;TAD_RFID.c: 506:                     }
}
[e :U 424 ]
"507
[; ;TAD_RFID.c: 507:                     break;
[e $U 415  ]
"508
[; ;TAD_RFID.c: 508:                 case 3:
[e :U 425 ]
"510
[; ;TAD_RFID.c: 510:                     irqEn = 0x77;
[e = F3129 -> -> 119 `i `uc ]
"511
[; ;TAD_RFID.c: 511:                     waitIRq = 0x30;
[e = F3130 -> -> 48 `i `uc ]
"512
[; ;TAD_RFID.c: 512:                     flag = motor_Write(0x02, irqEn | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 2 `i `uc -> | -> F3129 `i -> 128 `i `uc `uc ]
"513
[; ;TAD_RFID.c: 513:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 426  ]
{
"514
[; ;TAD_RFID.c: 514:                         substate = 4;
[e = F3128 -> -> 4 `i `uc ]
"515
[; ;TAD_RFID.c: 515:                     }
}
[e :U 426 ]
"516
[; ;TAD_RFID.c: 516:                     break;
[e $U 415  ]
"517
[; ;TAD_RFID.c: 517:                 case 4:
[e :U 427 ]
"519
[; ;TAD_RFID.c: 519:                     flag = motor_Read(0x04);
[e = _flag -> ( _motor_Read (1 -> -> 4 `i `uc `uc ]
"520
[; ;TAD_RFID.c: 520:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 428  ]
{
"522
[; ;TAD_RFID.c: 522:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"523
[; ;TAD_RFID.c: 523:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"524
[; ;TAD_RFID.c: 524:                     } else if (flag != 0xFE) {
}
[e $U 429  ]
[e :U 428 ]
[e $ ! != -> _flag `i -> 254 `i 430  ]
{
"525
[; ;TAD_RFID.c: 525:                         tempRegValue = flag;
[e = F3139 _flag ]
"526
[; ;TAD_RFID.c: 526:                         substate = 5;
[e = F3128 -> -> 5 `i `uc ]
"527
[; ;TAD_RFID.c: 527:                     }
}
[e :U 430 ]
[e :U 429 ]
"528
[; ;TAD_RFID.c: 528:                     break;
[e $U 415  ]
"529
[; ;TAD_RFID.c: 529:                 case 5:
[e :U 431 ]
"531
[; ;TAD_RFID.c: 531:                     flag = motor_Write(0x04, tempRegValue & ~0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 4 `i `uc -> & -> F3139 `i ~ -> 128 `i `uc `uc ]
"532
[; ;TAD_RFID.c: 532:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 432  ]
{
"533
[; ;TAD_RFID.c: 533:                         substate = 6;
[e = F3128 -> -> 6 `i `uc ]
"534
[; ;TAD_RFID.c: 534:                     }
}
[e :U 432 ]
"535
[; ;TAD_RFID.c: 535:                     break;
[e $U 415  ]
"536
[; ;TAD_RFID.c: 536:                 case 6:
[e :U 433 ]
"538
[; ;TAD_RFID.c: 538:                     flag = motor_Read(0x0A);
[e = _flag -> ( _motor_Read (1 -> -> 10 `i `uc `uc ]
"539
[; ;TAD_RFID.c: 539:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 434  ]
{
"541
[; ;TAD_RFID.c: 541:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"542
[; ;TAD_RFID.c: 542:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"543
[; ;TAD_RFID.c: 543:                     } else if (flag != 0xFE) {
}
[e $U 435  ]
[e :U 434 ]
[e $ ! != -> _flag `i -> 254 `i 436  ]
{
"544
[; ;TAD_RFID.c: 544:                         tempRegValue = flag;
[e = F3139 _flag ]
"545
[; ;TAD_RFID.c: 545:                         substate = 7;
[e = F3128 -> -> 7 `i `uc ]
"546
[; ;TAD_RFID.c: 546:                     }
}
[e :U 436 ]
[e :U 435 ]
"547
[; ;TAD_RFID.c: 547:                     break;
[e $U 415  ]
"548
[; ;TAD_RFID.c: 548:                 case 7:
[e :U 437 ]
"550
[; ;TAD_RFID.c: 550:                     flag = motor_Write(0x0A, tempRegValue | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 10 `i `uc -> | -> F3139 `i -> 128 `i `uc `uc ]
"551
[; ;TAD_RFID.c: 551:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 438  ]
{
"552
[; ;TAD_RFID.c: 552:                         substate = 8;
[e = F3128 -> -> 8 `i `uc ]
"553
[; ;TAD_RFID.c: 553:                     }
}
[e :U 438 ]
"554
[; ;TAD_RFID.c: 554:                     break;
[e $U 415  ]
"555
[; ;TAD_RFID.c: 555:                 case 8:
[e :U 439 ]
"557
[; ;TAD_RFID.c: 557:                     flag = motor_Write(0x01, 0x00);
[e = _flag -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 0 `i `uc `uc ]
"558
[; ;TAD_RFID.c: 558:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 440  ]
{
"559
[; ;TAD_RFID.c: 559:                         substate = 9;
[e = F3128 -> -> 9 `i `uc ]
"560
[; ;TAD_RFID.c: 560:                     }
}
[e :U 440 ]
"561
[; ;TAD_RFID.c: 561:                     break;
[e $U 415  ]
"562
[; ;TAD_RFID.c: 562:                 case 9:
[e :U 441 ]
"564
[; ;TAD_RFID.c: 564:                     flag = motor_Write(0x09, UID[0]);
[e = _flag -> ( _motor_Write (2 , -> -> 9 `i `uc -> *U + &U F3136 * -> -> -> 0 `i `ui `ux -> -> # *U &U F3136 `ui `ux `uc `uc ]
"565
[; ;TAD_RFID.c: 565:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 442  ]
{
"566
[; ;TAD_RFID.c: 566:                         substate = 10;
[e = F3128 -> -> 10 `i `uc ]
"567
[; ;TAD_RFID.c: 567:                     }
}
[e :U 442 ]
"568
[; ;TAD_RFID.c: 568:                     break;
[e $U 415  ]
"569
[; ;TAD_RFID.c: 569:                 case 10:
[e :U 443 ]
"570
[; ;TAD_RFID.c: 570:                     flag = motor_Write(0x09, UID[1]);
[e = _flag -> ( _motor_Write (2 , -> -> 9 `i `uc -> *U + &U F3136 * -> -> -> 1 `i `ui `ux -> -> # *U &U F3136 `ui `ux `uc `uc ]
"571
[; ;TAD_RFID.c: 571:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 444  ]
{
"572
[; ;TAD_RFID.c: 572:                         substate = 11;
[e = F3128 -> -> 11 `i `uc ]
"573
[; ;TAD_RFID.c: 573:                     }
}
[e :U 444 ]
"574
[; ;TAD_RFID.c: 574:                     break;
[e $U 415  ]
"575
[; ;TAD_RFID.c: 575:                 case 11:
[e :U 445 ]
"577
[; ;TAD_RFID.c: 577:                     flag = motor_Write(0x01, 0x0C);
[e = _flag -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 12 `i `uc `uc ]
"578
[; ;TAD_RFID.c: 578:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 446  ]
{
"579
[; ;TAD_RFID.c: 579:                         substate = 12;
[e = F3128 -> -> 12 `i `uc ]
"580
[; ;TAD_RFID.c: 580:                     }
}
[e :U 446 ]
"581
[; ;TAD_RFID.c: 581:                     break;
[e $U 415  ]
"582
[; ;TAD_RFID.c: 582:                 case 12:
[e :U 447 ]
"584
[; ;TAD_RFID.c: 584:                     flag = motor_Read(0x0D);
[e = _flag -> ( _motor_Read (1 -> -> 13 `i `uc `uc ]
"585
[; ;TAD_RFID.c: 585:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 448  ]
{
"587
[; ;TAD_RFID.c: 587:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"588
[; ;TAD_RFID.c: 588:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"589
[; ;TAD_RFID.c: 589:                     } else if (flag != 0xFE) {
}
[e $U 449  ]
[e :U 448 ]
[e $ ! != -> _flag `i -> 254 `i 450  ]
{
"590
[; ;TAD_RFID.c: 590:                         tempRegValue = flag;
[e = F3139 _flag ]
"591
[; ;TAD_RFID.c: 591:                         substate = 13;
[e = F3128 -> -> 13 `i `uc ]
"592
[; ;TAD_RFID.c: 592:                     }
}
[e :U 450 ]
[e :U 449 ]
"593
[; ;TAD_RFID.c: 593:                     break;
[e $U 415  ]
"594
[; ;TAD_RFID.c: 594:                 case 13:
[e :U 451 ]
"596
[; ;TAD_RFID.c: 596:                     flag = motor_Write(0x0D, tempRegValue | 0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> | -> F3139 `i -> 128 `i `uc `uc ]
"597
[; ;TAD_RFID.c: 597:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 452  ]
{
"598
[; ;TAD_RFID.c: 598:                     i = 0xFF;
[e = F3132 -> -> 255 `i `uc ]
"599
[; ;TAD_RFID.c: 599:                         substate = 14;
[e = F3128 -> -> 14 `i `uc ]
"600
[; ;TAD_RFID.c: 600:                     }
}
[e :U 452 ]
"601
[; ;TAD_RFID.c: 601:                     break;
[e $U 415  ]
"602
[; ;TAD_RFID.c: 602:                 case 14:
[e :U 453 ]
"604
[; ;TAD_RFID.c: 604:                     flag = motor_Read(0x04);
[e = _flag -> ( _motor_Read (1 -> -> 4 `i `uc `uc ]
"605
[; ;TAD_RFID.c: 605:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 454  ]
{
"607
[; ;TAD_RFID.c: 607:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"608
[; ;TAD_RFID.c: 608:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"609
[; ;TAD_RFID.c: 609:                     } else if (flag != 0xFE) {
}
[e $U 455  ]
[e :U 454 ]
[e $ ! != -> _flag `i -> 254 `i 456  ]
{
"610
[; ;TAD_RFID.c: 610:                         n = flag;
[e = F3131 -> _flag `uc ]
"611
[; ;TAD_RFID.c: 611:                         if ((n & 0x01) || (n & waitIRq) || (--i == 0)) {
[e $ ! || || != & -> F3131 `i -> 1 `i -> 0 `i != & -> F3131 `i -> F3130 `i -> 0 `i == -> =- F3132 -> -> 1 `i `uc `i -> 0 `i 457  ]
{
"612
[; ;TAD_RFID.c: 612:                             substate = 15;
[e = F3128 -> -> 15 `i `uc ]
"613
[; ;TAD_RFID.c: 613:                         }
}
[e :U 457 ]
"614
[; ;TAD_RFID.c: 614:                     }
}
[e :U 456 ]
[e :U 455 ]
"615
[; ;TAD_RFID.c: 615:                     break;
[e $U 415  ]
"616
[; ;TAD_RFID.c: 616:                 case 15:
[e :U 458 ]
"618
[; ;TAD_RFID.c: 618:                     flag = motor_Read(0x0D);
[e = _flag -> ( _motor_Read (1 -> -> 13 `i `uc `uc ]
"619
[; ;TAD_RFID.c: 619:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 459  ]
{
"621
[; ;TAD_RFID.c: 621:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"622
[; ;TAD_RFID.c: 622:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"623
[; ;TAD_RFID.c: 623:                     } else if (flag != 0xFE) {
}
[e $U 460  ]
[e :U 459 ]
[e $ ! != -> _flag `i -> 254 `i 461  ]
{
"624
[; ;TAD_RFID.c: 624:                         tempRegValue = flag;
[e = F3139 _flag ]
"625
[; ;TAD_RFID.c: 625:                         substate = 16;
[e = F3128 -> -> 16 `i `uc ]
"626
[; ;TAD_RFID.c: 626:                     }
}
[e :U 461 ]
[e :U 460 ]
"627
[; ;TAD_RFID.c: 627:                     break;
[e $U 415  ]
"628
[; ;TAD_RFID.c: 628:                 case 16:
[e :U 462 ]
"630
[; ;TAD_RFID.c: 630:                     flag = motor_Write(0x0D, tempRegValue & ~0x80);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> & -> F3139 `i ~ -> 128 `i `uc `uc ]
"631
[; ;TAD_RFID.c: 631:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 463  ]
{
"632
[; ;TAD_RFID.c: 632:                         substate = 17;
[e = F3128 -> -> 17 `i `uc ]
"633
[; ;TAD_RFID.c: 633:                     }
}
[e :U 463 ]
"634
[; ;TAD_RFID.c: 634:                     break;
[e $U 415  ]
"635
[; ;TAD_RFID.c: 635:                 case 17:
[e :U 464 ]
"637
[; ;TAD_RFID.c: 637:                     flag = motor_Read(0x06);
[e = _flag -> ( _motor_Read (1 -> -> 6 `i `uc `uc ]
"638
[; ;TAD_RFID.c: 638:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 465  ]
{
"640
[; ;TAD_RFID.c: 640:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"641
[; ;TAD_RFID.c: 641:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"642
[; ;TAD_RFID.c: 642:                     } else if (flag != 0xFE) {
}
[e $U 466  ]
[e :U 465 ]
[e $ ! != -> _flag `i -> 254 `i 467  ]
{
"643
[; ;TAD_RFID.c: 643:                         tempRegValue = flag;
[e = F3139 _flag ]
"644
[; ;TAD_RFID.c: 644:                         if (i != 0 && !(tempRegValue & 0x1B)) {
[e $ ! && != -> F3132 `i -> 0 `i ! != & -> F3139 `i -> 27 `i -> 0 `i 468  ]
{
"646
[; ;TAD_RFID.c: 646:                             substate = 18;
[e = F3128 -> -> 18 `i `uc ]
"647
[; ;TAD_RFID.c: 647:                         } else {
}
[e $U 469  ]
[e :U 468 ]
{
"649
[; ;TAD_RFID.c: 649:                             state = 0;
[e = F3127 -> -> 0 `i `uc ]
"650
[; ;TAD_RFID.c: 650:                             substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"651
[; ;TAD_RFID.c: 651:                         }
}
[e :U 469 ]
"652
[; ;TAD_RFID.c: 652:                     }
}
[e :U 467 ]
[e :U 466 ]
"653
[; ;TAD_RFID.c: 653:                     break;
[e $U 415  ]
"655
[; ;TAD_RFID.c: 655:                 case 18:
[e :U 470 ]
"657
[; ;TAD_RFID.c: 657:                     flag = motor_Read(0x09);
[e = _flag -> ( _motor_Read (1 -> -> 9 `i `uc `uc ]
"658
[; ;TAD_RFID.c: 658:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 471  ]
{
"660
[; ;TAD_RFID.c: 660:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"661
[; ;TAD_RFID.c: 661:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"662
[; ;TAD_RFID.c: 662:                     } else if (flag != 0xFE) {
}
[e $U 472  ]
[e :U 471 ]
[e $ ! != -> _flag `i -> 254 `i 473  ]
{
"663
[; ;TAD_RFID.c: 663:                         UID[0] = flag;
[e = *U + &U F3136 * -> -> -> 0 `i `ui `ux -> -> # *U &U F3136 `ui `ux _flag ]
"664
[; ;TAD_RFID.c: 664:                         substate = 19;
[e = F3128 -> -> 19 `i `uc ]
"665
[; ;TAD_RFID.c: 665:                     }
}
[e :U 473 ]
[e :U 472 ]
"666
[; ;TAD_RFID.c: 666:                     break;
[e $U 415  ]
"667
[; ;TAD_RFID.c: 667:                 case 19:
[e :U 474 ]
"669
[; ;TAD_RFID.c: 669:                     flag = motor_Read(0x09);
[e = _flag -> ( _motor_Read (1 -> -> 9 `i `uc `uc ]
"670
[; ;TAD_RFID.c: 670:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 475  ]
{
"672
[; ;TAD_RFID.c: 672:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"673
[; ;TAD_RFID.c: 673:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"674
[; ;TAD_RFID.c: 674:                     } else if (flag != 0xFE) {
}
[e $U 476  ]
[e :U 475 ]
[e $ ! != -> _flag `i -> 254 `i 477  ]
{
"675
[; ;TAD_RFID.c: 675:                         UID[1] = flag;
[e = *U + &U F3136 * -> -> -> 1 `i `ui `ux -> -> # *U &U F3136 `ui `ux _flag ]
"676
[; ;TAD_RFID.c: 676:                         substate = 20;
[e = F3128 -> -> 20 `i `uc ]
"677
[; ;TAD_RFID.c: 677:                     }
}
[e :U 477 ]
[e :U 476 ]
"678
[; ;TAD_RFID.c: 678:                     break;
[e $U 415  ]
"679
[; ;TAD_RFID.c: 679:                 case 20:
[e :U 478 ]
"681
[; ;TAD_RFID.c: 681:                     flag = motor_Read(0x09);
[e = _flag -> ( _motor_Read (1 -> -> 9 `i `uc `uc ]
"682
[; ;TAD_RFID.c: 682:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 479  ]
{
"684
[; ;TAD_RFID.c: 684:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"685
[; ;TAD_RFID.c: 685:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"686
[; ;TAD_RFID.c: 686:                     } else if (flag != 0xFE) {
}
[e $U 480  ]
[e :U 479 ]
[e $ ! != -> _flag `i -> 254 `i 481  ]
{
"687
[; ;TAD_RFID.c: 687:                         UID[2] = flag;
[e = *U + &U F3136 * -> -> -> 2 `i `ui `ux -> -> # *U &U F3136 `ui `ux _flag ]
"688
[; ;TAD_RFID.c: 688:                         substate = 21;
[e = F3128 -> -> 21 `i `uc ]
"689
[; ;TAD_RFID.c: 689:                     }
}
[e :U 481 ]
[e :U 480 ]
"690
[; ;TAD_RFID.c: 690:                     break;
[e $U 415  ]
"691
[; ;TAD_RFID.c: 691:                 case 21:
[e :U 482 ]
"693
[; ;TAD_RFID.c: 693:                     flag = motor_Read(0x09);
[e = _flag -> ( _motor_Read (1 -> -> 9 `i `uc `uc ]
"694
[; ;TAD_RFID.c: 694:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 483  ]
{
"696
[; ;TAD_RFID.c: 696:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"697
[; ;TAD_RFID.c: 697:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"698
[; ;TAD_RFID.c: 698:                     } else if (flag != 0xFE) {
}
[e $U 484  ]
[e :U 483 ]
[e $ ! != -> _flag `i -> 254 `i 485  ]
{
"699
[; ;TAD_RFID.c: 699:                         UID[3] = flag;
[e = *U + &U F3136 * -> -> -> 3 `i `ui `ux -> -> # *U &U F3136 `ui `ux _flag ]
"700
[; ;TAD_RFID.c: 700:                         substate = 22;
[e = F3128 -> -> 22 `i `uc ]
"701
[; ;TAD_RFID.c: 701:                     }
}
[e :U 485 ]
[e :U 484 ]
"702
[; ;TAD_RFID.c: 702:                     break;
[e $U 415  ]
"704
[; ;TAD_RFID.c: 704:                 case 22:
[e :U 486 ]
"706
[; ;TAD_RFID.c: 706:                     flag = motor_Read(0x09);
[e = _flag -> ( _motor_Read (1 -> -> 9 `i `uc `uc ]
"707
[; ;TAD_RFID.c: 707:                     if (flag == 0xFF) {
[e $ ! == -> _flag `i -> 255 `i 487  ]
{
"709
[; ;TAD_RFID.c: 709:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"710
[; ;TAD_RFID.c: 710:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"711
[; ;TAD_RFID.c: 711:                     } else if (flag != 0xFE) {
}
[e $U 488  ]
[e :U 487 ]
[e $ ! != -> _flag `i -> 254 `i 489  ]
{
"712
[; ;TAD_RFID.c: 712:                         UID[4] = flag;
[e = *U + &U F3136 * -> -> -> 4 `i `ui `ux -> -> # *U &U F3136 `ui `ux _flag ]
"713
[; ;TAD_RFID.c: 713:                         UID[5] = 0;
[e = *U + &U F3136 * -> -> -> 5 `i `ui `ux -> -> # *U &U F3136 `ui `ux -> -> 0 `i `uc ]
"714
[; ;TAD_RFID.c: 714:                         substate = 23;
[e = F3128 -> -> 23 `i `uc ]
"715
[; ;TAD_RFID.c: 715:                     }
}
[e :U 489 ]
[e :U 488 ]
"716
[; ;TAD_RFID.c: 716:                     break;
[e $U 415  ]
"718
[; ;TAD_RFID.c: 718:                 case 23:
[e :U 490 ]
"720
[; ;TAD_RFID.c: 720:                     checksum = UID[0] ^ UID[1] ^ UID[2] ^ UID[3];
[e = F3137 -> ^ ^ ^ -> *U + &U F3136 * -> -> -> 0 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i -> *U + &U F3136 * -> -> -> 1 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i -> *U + &U F3136 * -> -> -> 2 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i -> *U + &U F3136 * -> -> -> 3 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i `uc ]
"722
[; ;TAD_RFID.c: 722:                     allZero = 1;
[e = F3138 -> -> 1 `i `uc ]
"723
[; ;TAD_RFID.c: 723:                     substate = 24;
[e = F3128 -> -> 24 `i `uc ]
"724
[; ;TAD_RFID.c: 724:                     break;
[e $U 415  ]
"726
[; ;TAD_RFID.c: 726:                 case 24:
[e :U 491 ]
"728
[; ;TAD_RFID.c: 728:                     if (UID[0] != 0 || UID[1] != 0) {
[e $ ! || != -> *U + &U F3136 * -> -> -> 0 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i -> 0 `i != -> *U + &U F3136 * -> -> -> 1 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i -> 0 `i 492  ]
{
"729
[; ;TAD_RFID.c: 729:                         allZero = 0;
[e = F3138 -> -> 0 `i `uc ]
"730
[; ;TAD_RFID.c: 730:                     }
}
[e :U 492 ]
"731
[; ;TAD_RFID.c: 731:                     substate = 25;
[e = F3128 -> -> 25 `i `uc ]
"732
[; ;TAD_RFID.c: 732:                     break;
[e $U 415  ]
"734
[; ;TAD_RFID.c: 734:                 case 25:
[e :U 493 ]
"736
[; ;TAD_RFID.c: 736:                     if (UID[2] != 0 || UID[3] != 0) {
[e $ ! || != -> *U + &U F3136 * -> -> -> 2 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i -> 0 `i != -> *U + &U F3136 * -> -> -> 3 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i -> 0 `i 494  ]
{
"737
[; ;TAD_RFID.c: 737:                         allZero = 0;
[e = F3138 -> -> 0 `i `uc ]
"738
[; ;TAD_RFID.c: 738:                     }
}
[e :U 494 ]
"739
[; ;TAD_RFID.c: 739:                     substate = 26;
[e = F3128 -> -> 26 `i `uc ]
"740
[; ;TAD_RFID.c: 740:                     break;
[e $U 415  ]
"742
[; ;TAD_RFID.c: 742:                 case 26:
[e :U 495 ]
"744
[; ;TAD_RFID.c: 744:                     if (checksum != UID[4] || allZero) {
[e $ ! || != -> F3137 `i -> *U + &U F3136 * -> -> -> 4 `i `ui `ux -> -> # *U &U F3136 `ui `ux `i != -> F3138 `i -> 0 `i 496  ]
{
"746
[; ;TAD_RFID.c: 746:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"747
[; ;TAD_RFID.c: 747:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"748
[; ;TAD_RFID.c: 748:                     } else {
}
[e $U 497  ]
[e :U 496 ]
{
"750
[; ;TAD_RFID.c: 750:                         substate = 27;
[e = F3128 -> -> 27 `i `uc ]
"751
[; ;TAD_RFID.c: 751:                     }
}
[e :U 497 ]
"752
[; ;TAD_RFID.c: 752:                     break;
[e $U 415  ]
"754
[; ;TAD_RFID.c: 754:                 case 27:
[e :U 498 ]
"755
[; ;TAD_RFID.c: 755:                     {
{
"756
[; ;TAD_RFID.c: 756:                         char differentUID = 1;
[v _differentUID `uc ~T0 @X0 1 a ]
[e = _differentUID -> -> 1 `i `uc ]
"757
[; ;TAD_RFID.c: 757:                         unsigned char* currentUser = getActualUID();
[v _currentUser `*uc ~T0 @X0 1 a ]
[e = _currentUser ( _getActualUID ..  ]
"758
[; ;TAD_RFID.c: 758:                         for (int i = 0; i < 5; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 5 `i 499  ]
[e $U 500  ]
[e :U 499 ]
{
"759
[; ;TAD_RFID.c: 759:                             if(currentUser[i] != UID[i]) {
[e $ ! != -> *U + _currentUser * -> _i `x -> -> # *U _currentUser `i `x `i -> *U + &U F3136 * -> -> _i `ui `ux -> -> # *U &U F3136 `ui `ux `i 502  ]
{
"760
[; ;TAD_RFID.c: 760:                                 differentUID = 0;
[e = _differentUID -> -> 0 `i `uc ]
"761
[; ;TAD_RFID.c: 761:                                 break;
[e $U 500  ]
"762
[; ;TAD_RFID.c: 762:                             }
}
[e :U 502 ]
"763
[; ;TAD_RFID.c: 763:                         }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 5 `i 499  ]
[e :U 500 ]
}
"764
[; ;TAD_RFID.c: 764:                         if(differentUID == 0) {
[e $ ! == -> _differentUID `i -> 0 `i 503  ]
{
"765
[; ;TAD_RFID.c: 765:                             setCurrentUser(UID[0], UID[1], UID[2], UID[3], UID[4]);
[e ( _setCurrentUser (4 , , , , -> *U + &U F3136 * -> -> -> 0 `i `ui `ux -> -> # *U &U F3136 `ui `ux `uc -> *U + &U F3136 * -> -> -> 1 `i `ui `ux -> -> # *U &U F3136 `ui `ux `uc -> *U + &U F3136 * -> -> -> 2 `i `ui `ux -> -> # *U &U F3136 `ui `ux `uc -> *U + &U F3136 * -> -> -> 3 `i `ui `ux -> -> # *U &U F3136 `ui `ux `uc -> *U + &U F3136 * -> -> -> 4 `i `ui `ux -> -> # *U &U F3136 `ui `ux `uc ]
"766
[; ;TAD_RFID.c: 766:                         }
}
[e :U 503 ]
"767
[; ;TAD_RFID.c: 767:                         substate = 28;
[e = F3128 -> -> 28 `i `uc ]
"768
[; ;TAD_RFID.c: 768:                     }
}
"769
[; ;TAD_RFID.c: 769:                     break;
[e $U 415  ]
"771
[; ;TAD_RFID.c: 771:                 case 28:
[e :U 504 ]
"773
[; ;TAD_RFID.c: 773:                     flag = motor_Write(0x0D, 0x00);
[e = _flag -> ( _motor_Write (2 , -> -> 13 `i `uc -> -> 0 `i `uc `uc ]
"774
[; ;TAD_RFID.c: 774:                     if (flag != 0){
[e $ ! != -> _flag `i -> 0 `i 505  ]
{
"775
[; ;TAD_RFID.c: 775:                         state = 0;
[e = F3127 -> -> 0 `i `uc ]
"776
[; ;TAD_RFID.c: 776:                         substate = 0;
[e = F3128 -> -> 0 `i `uc ]
"777
[; ;TAD_RFID.c: 777:                     }
}
[e :U 505 ]
"778
[; ;TAD_RFID.c: 778:                     break;
[e $U 415  ]
"779
[; ;TAD_RFID.c: 779:             }
}
[e $U 415  ]
[e :U 416 ]
[e [\ F3128 , $ -> 0 `i 417
 , $ -> 1 `i 419
 , $ -> 2 `i 423
 , $ -> 3 `i 425
 , $ -> 4 `i 427
 , $ -> 5 `i 431
 , $ -> 6 `i 433
 , $ -> 7 `i 437
 , $ -> 8 `i 439
 , $ -> 9 `i 441
 , $ -> 10 `i 443
 , $ -> 11 `i 445
 , $ -> 12 `i 447
 , $ -> 13 `i 451
 , $ -> 14 `i 453
 , $ -> 15 `i 458
 , $ -> 16 `i 462
 , $ -> 17 `i 464
 , $ -> 18 `i 470
 , $ -> 19 `i 474
 , $ -> 20 `i 478
 , $ -> 21 `i 482
 , $ -> 22 `i 486
 , $ -> 23 `i 490
 , $ -> 24 `i 491
 , $ -> 25 `i 493
 , $ -> 26 `i 495
 , $ -> 27 `i 498
 , $ -> 28 `i 504
 415 ]
[e :U 415 ]
"780
[; ;TAD_RFID.c: 780:             break;
[e $U 351  ]
"781
[; ;TAD_RFID.c: 781:     }
}
[e $U 351  ]
[e :U 352 ]
[e [\ F3127 , $ -> 0 `i 353
 , $ -> 1 `i 414
 351 ]
[e :U 351 ]
"782
[; ;TAD_RFID.c: 782: }
[e :UE 350 ]
}
