

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 05 19:13:04 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 05/12/2024 GMT
    53                           ; 
    54                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4321 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000FE0                     bsr             equ	4064
    87   000FE9                     fsr0            equ	4073
    88   000FEA                     fsr0h           equ	4074
    89   000FE9                     fsr0l           equ	4073
    90   000FE1                     fsr1            equ	4065
    91   000FE2                     fsr1h           equ	4066
    92   000FE1                     fsr1l           equ	4065
    93   000FD9                     fsr2            equ	4057
    94   000FDA                     fsr2h           equ	4058
    95   000FD9                     fsr2l           equ	4057
    96   000FEF                     indf0           equ	4079
    97   000FE7                     indf1           equ	4071
    98   000FDF                     indf2           equ	4063
    99   000FF2                     intcon          equ	4082
   100   000000                     nvmcon          equ	0
   101   000FF9                     pcl             equ	4089
   102   000FFA                     pclath          equ	4090
   103   000FFB                     pclatu          equ	4091
   104   000FEB                     plusw0          equ	4075
   105   000FE3                     plusw1          equ	4067
   106   000FDB                     plusw2          equ	4059
   107   000FED                     postdec0        equ	4077
   108   000FE5                     postdec1        equ	4069
   109   000FDD                     postdec2        equ	4061
   110   000FEE                     postinc0        equ	4078
   111   000FE6                     postinc1        equ	4070
   112   000FDE                     postinc2        equ	4062
   113   000FEC                     preinc0         equ	4076
   114   000FE4                     preinc1         equ	4068
   115   000FDC                     preinc2         equ	4060
   116   000FF3                     prod            equ	4083
   117   000FF4                     prodh           equ	4084
   118   000FF3                     prodl           equ	4083
   119   000FD8                     status          equ	4056
   120   000FF5                     tablat          equ	4085
   121   000FF6                     tblptr          equ	4086
   122   000FF7                     tblptrh         equ	4087
   123   000FF6                     tblptrl         equ	4086
   124   000FF8                     tblptru         equ	4088
   125   000FFD                     tosl            equ	4093
   126   000FE8                     wreg            equ	4072
   127   000F80                     PORTA           equ	3968	;# 
   128   000F81                     PORTB           equ	3969	;# 
   129   000F82                     PORTC           equ	3970	;# 
   130   000F83                     PORTD           equ	3971	;# 
   131   000F84                     PORTE           equ	3972	;# 
   132   000F89                     LATA            equ	3977	;# 
   133   000F8A                     LATB            equ	3978	;# 
   134   000F8B                     LATC            equ	3979	;# 
   135   000F8C                     LATD            equ	3980	;# 
   136   000F8D                     LATE            equ	3981	;# 
   137   000F92                     TRISA           equ	3986	;# 
   138   000F92                     DDRA            equ	3986	;# 
   139   000F93                     TRISB           equ	3987	;# 
   140   000F93                     DDRB            equ	3987	;# 
   141   000F94                     TRISC           equ	3988	;# 
   142   000F94                     DDRC            equ	3988	;# 
   143   000F95                     TRISD           equ	3989	;# 
   144   000F95                     DDRD            equ	3989	;# 
   145   000F96                     TRISE           equ	3990	;# 
   146   000F96                     DDRE            equ	3990	;# 
   147   000F9B                     OSCTUNE         equ	3995	;# 
   148   000F9D                     PIE1            equ	3997	;# 
   149   000F9E                     PIR1            equ	3998	;# 
   150   000F9F                     IPR1            equ	3999	;# 
   151   000FA0                     PIE2            equ	4000	;# 
   152   000FA1                     PIR2            equ	4001	;# 
   153   000FA2                     IPR2            equ	4002	;# 
   154   000FA6                     EECON1          equ	4006	;# 
   155   000FA7                     EECON2          equ	4007	;# 
   156   000FA8                     EEDATA          equ	4008	;# 
   157   000FA9                     EEADR           equ	4009	;# 
   158   000FAB                     RCSTA           equ	4011	;# 
   159   000FAB                     RCSTA1          equ	4011	;# 
   160   000FAC                     TXSTA           equ	4012	;# 
   161   000FAC                     TXSTA1          equ	4012	;# 
   162   000FAD                     TXREG           equ	4013	;# 
   163   000FAD                     TXREG1          equ	4013	;# 
   164   000FAE                     RCREG           equ	4014	;# 
   165   000FAE                     RCREG1          equ	4014	;# 
   166   000FAF                     SPBRG           equ	4015	;# 
   167   000FAF                     SPBRG1          equ	4015	;# 
   168   000FB0                     SPBRGH          equ	4016	;# 
   169   000FB1                     T3CON           equ	4017	;# 
   170   000FB2                     TMR3            equ	4018	;# 
   171   000FB2                     TMR3L           equ	4018	;# 
   172   000FB3                     TMR3H           equ	4019	;# 
   173   000FB4                     CMCON           equ	4020	;# 
   174   000FB5                     CVRCON          equ	4021	;# 
   175   000FB6                     ECCP1AS         equ	4022	;# 
   176   000FB7                     ECCP1DEL        equ	4023	;# 
   177   000FB7                     PWM1CON         equ	4023	;# 
   178   000FB8                     BAUDCON         equ	4024	;# 
   179   000FB8                     BAUDCTL         equ	4024	;# 
   180   000FBA                     CCP2CON         equ	4026	;# 
   181   000FBB                     CCPR2           equ	4027	;# 
   182   000FBB                     CCPR2L          equ	4027	;# 
   183   000FBC                     CCPR2H          equ	4028	;# 
   184   000FBD                     CCP1CON         equ	4029	;# 
   185   000FBD                     ECCP1CON        equ	4029	;# 
   186   000FBE                     CCPR1           equ	4030	;# 
   187   000FBE                     CCPR1L          equ	4030	;# 
   188   000FBF                     CCPR1H          equ	4031	;# 
   189   000FC0                     ADCON2          equ	4032	;# 
   190   000FC1                     ADCON1          equ	4033	;# 
   191   000FC2                     ADCON0          equ	4034	;# 
   192   000FC3                     ADRES           equ	4035	;# 
   193   000FC3                     ADRESL          equ	4035	;# 
   194   000FC4                     ADRESH          equ	4036	;# 
   195   000FC5                     SSPCON2         equ	4037	;# 
   196   000FC6                     SSPCON1         equ	4038	;# 
   197   000FC7                     SSPSTAT         equ	4039	;# 
   198   000FC8                     SSPADD          equ	4040	;# 
   199   000FC9                     SSPBUF          equ	4041	;# 
   200   000FCA                     T2CON           equ	4042	;# 
   201   000FCB                     PR2             equ	4043	;# 
   202   000FCB                     MEMCON          equ	4043	;# 
   203   000FCC                     TMR2            equ	4044	;# 
   204   000FCD                     T1CON           equ	4045	;# 
   205   000FCE                     TMR1            equ	4046	;# 
   206   000FCE                     TMR1L           equ	4046	;# 
   207   000FCF                     TMR1H           equ	4047	;# 
   208   000FD0                     RCON            equ	4048	;# 
   209   000FD1                     WDTCON          equ	4049	;# 
   210   000FD2                     HLVDCON         equ	4050	;# 
   211   000FD2                     LVDCON          equ	4050	;# 
   212   000FD3                     OSCCON          equ	4051	;# 
   213   000FD5                     T0CON           equ	4053	;# 
   214   000FD6                     TMR0            equ	4054	;# 
   215   000FD6                     TMR0L           equ	4054	;# 
   216   000FD7                     TMR0H           equ	4055	;# 
   217   000FD8                     STATUS          equ	4056	;# 
   218   000FD9                     FSR2            equ	4057	;# 
   219   000FD9                     FSR2L           equ	4057	;# 
   220   000FDA                     FSR2H           equ	4058	;# 
   221   000FDB                     PLUSW2          equ	4059	;# 
   222   000FDC                     PREINC2         equ	4060	;# 
   223   000FDD                     POSTDEC2        equ	4061	;# 
   224   000FDE                     POSTINC2        equ	4062	;# 
   225   000FDF                     INDF2           equ	4063	;# 
   226   000FE0                     BSR             equ	4064	;# 
   227   000FE1                     FSR1            equ	4065	;# 
   228   000FE1                     FSR1L           equ	4065	;# 
   229   000FE2                     FSR1H           equ	4066	;# 
   230   000FE3                     PLUSW1          equ	4067	;# 
   231   000FE4                     PREINC1         equ	4068	;# 
   232   000FE5                     POSTDEC1        equ	4069	;# 
   233   000FE6                     POSTINC1        equ	4070	;# 
   234   000FE7                     INDF1           equ	4071	;# 
   235   000FE8                     WREG            equ	4072	;# 
   236   000FE9                     FSR0            equ	4073	;# 
   237   000FE9                     FSR0L           equ	4073	;# 
   238   000FEA                     FSR0H           equ	4074	;# 
   239   000FEB                     PLUSW0          equ	4075	;# 
   240   000FEC                     PREINC0         equ	4076	;# 
   241   000FED                     POSTDEC0        equ	4077	;# 
   242   000FEE                     POSTINC0        equ	4078	;# 
   243   000FEF                     INDF0           equ	4079	;# 
   244   000FF0                     INTCON3         equ	4080	;# 
   245   000FF1                     INTCON2         equ	4081	;# 
   246   000FF2                     INTCON          equ	4082	;# 
   247   000FF3                     PROD            equ	4083	;# 
   248   000FF3                     PRODL           equ	4083	;# 
   249   000FF4                     PRODH           equ	4084	;# 
   250   000FF5                     TABLAT          equ	4085	;# 
   251   000FF6                     TBLPTR          equ	4086	;# 
   252   000FF6                     TBLPTRL         equ	4086	;# 
   253   000FF7                     TBLPTRH         equ	4087	;# 
   254   000FF8                     TBLPTRU         equ	4088	;# 
   255   000FF9                     PCLAT           equ	4089	;# 
   256   000FF9                     PC              equ	4089	;# 
   257   000FF9                     PCL             equ	4089	;# 
   258   000FFA                     PCLATH          equ	4090	;# 
   259   000FFB                     PCLATU          equ	4091	;# 
   260   000FFC                     STKPTR          equ	4092	;# 
   261   000FFD                     TOS             equ	4093	;# 
   262   000FFD                     TOSL            equ	4093	;# 
   263   000FFE                     TOSH            equ	4094	;# 
   264   000FFF                     TOSU            equ	4095	;# 
   265   000F80                     PORTA           equ	3968	;# 
   266   000F81                     PORTB           equ	3969	;# 
   267   000F82                     PORTC           equ	3970	;# 
   268   000F83                     PORTD           equ	3971	;# 
   269   000F84                     PORTE           equ	3972	;# 
   270   000F89                     LATA            equ	3977	;# 
   271   000F8A                     LATB            equ	3978	;# 
   272   000F8B                     LATC            equ	3979	;# 
   273   000F8C                     LATD            equ	3980	;# 
   274   000F8D                     LATE            equ	3981	;# 
   275   000F92                     TRISA           equ	3986	;# 
   276   000F92                     DDRA            equ	3986	;# 
   277   000F93                     TRISB           equ	3987	;# 
   278   000F93                     DDRB            equ	3987	;# 
   279   000F94                     TRISC           equ	3988	;# 
   280   000F94                     DDRC            equ	3988	;# 
   281   000F95                     TRISD           equ	3989	;# 
   282   000F95                     DDRD            equ	3989	;# 
   283   000F96                     TRISE           equ	3990	;# 
   284   000F96                     DDRE            equ	3990	;# 
   285   000F9B                     OSCTUNE         equ	3995	;# 
   286   000F9D                     PIE1            equ	3997	;# 
   287   000F9E                     PIR1            equ	3998	;# 
   288   000F9F                     IPR1            equ	3999	;# 
   289   000FA0                     PIE2            equ	4000	;# 
   290   000FA1                     PIR2            equ	4001	;# 
   291   000FA2                     IPR2            equ	4002	;# 
   292   000FA6                     EECON1          equ	4006	;# 
   293   000FA7                     EECON2          equ	4007	;# 
   294   000FA8                     EEDATA          equ	4008	;# 
   295   000FA9                     EEADR           equ	4009	;# 
   296   000FAB                     RCSTA           equ	4011	;# 
   297   000FAB                     RCSTA1          equ	4011	;# 
   298   000FAC                     TXSTA           equ	4012	;# 
   299   000FAC                     TXSTA1          equ	4012	;# 
   300   000FAD                     TXREG           equ	4013	;# 
   301   000FAD                     TXREG1          equ	4013	;# 
   302   000FAE                     RCREG           equ	4014	;# 
   303   000FAE                     RCREG1          equ	4014	;# 
   304   000FAF                     SPBRG           equ	4015	;# 
   305   000FAF                     SPBRG1          equ	4015	;# 
   306   000FB0                     SPBRGH          equ	4016	;# 
   307   000FB1                     T3CON           equ	4017	;# 
   308   000FB2                     TMR3            equ	4018	;# 
   309   000FB2                     TMR3L           equ	4018	;# 
   310   000FB3                     TMR3H           equ	4019	;# 
   311   000FB4                     CMCON           equ	4020	;# 
   312   000FB5                     CVRCON          equ	4021	;# 
   313   000FB6                     ECCP1AS         equ	4022	;# 
   314   000FB7                     ECCP1DEL        equ	4023	;# 
   315   000FB7                     PWM1CON         equ	4023	;# 
   316   000FB8                     BAUDCON         equ	4024	;# 
   317   000FB8                     BAUDCTL         equ	4024	;# 
   318   000FBA                     CCP2CON         equ	4026	;# 
   319   000FBB                     CCPR2           equ	4027	;# 
   320   000FBB                     CCPR2L          equ	4027	;# 
   321   000FBC                     CCPR2H          equ	4028	;# 
   322   000FBD                     CCP1CON         equ	4029	;# 
   323   000FBD                     ECCP1CON        equ	4029	;# 
   324   000FBE                     CCPR1           equ	4030	;# 
   325   000FBE                     CCPR1L          equ	4030	;# 
   326   000FBF                     CCPR1H          equ	4031	;# 
   327   000FC0                     ADCON2          equ	4032	;# 
   328   000FC1                     ADCON1          equ	4033	;# 
   329   000FC2                     ADCON0          equ	4034	;# 
   330   000FC3                     ADRES           equ	4035	;# 
   331   000FC3                     ADRESL          equ	4035	;# 
   332   000FC4                     ADRESH          equ	4036	;# 
   333   000FC5                     SSPCON2         equ	4037	;# 
   334   000FC6                     SSPCON1         equ	4038	;# 
   335   000FC7                     SSPSTAT         equ	4039	;# 
   336   000FC8                     SSPADD          equ	4040	;# 
   337   000FC9                     SSPBUF          equ	4041	;# 
   338   000FCA                     T2CON           equ	4042	;# 
   339   000FCB                     PR2             equ	4043	;# 
   340   000FCB                     MEMCON          equ	4043	;# 
   341   000FCC                     TMR2            equ	4044	;# 
   342   000FCD                     T1CON           equ	4045	;# 
   343   000FCE                     TMR1            equ	4046	;# 
   344   000FCE                     TMR1L           equ	4046	;# 
   345   000FCF                     TMR1H           equ	4047	;# 
   346   000FD0                     RCON            equ	4048	;# 
   347   000FD1                     WDTCON          equ	4049	;# 
   348   000FD2                     HLVDCON         equ	4050	;# 
   349   000FD2                     LVDCON          equ	4050	;# 
   350   000FD3                     OSCCON          equ	4051	;# 
   351   000FD5                     T0CON           equ	4053	;# 
   352   000FD6                     TMR0            equ	4054	;# 
   353   000FD6                     TMR0L           equ	4054	;# 
   354   000FD7                     TMR0H           equ	4055	;# 
   355   000FD8                     STATUS          equ	4056	;# 
   356   000FD9                     FSR2            equ	4057	;# 
   357   000FD9                     FSR2L           equ	4057	;# 
   358   000FDA                     FSR2H           equ	4058	;# 
   359   000FDB                     PLUSW2          equ	4059	;# 
   360   000FDC                     PREINC2         equ	4060	;# 
   361   000FDD                     POSTDEC2        equ	4061	;# 
   362   000FDE                     POSTINC2        equ	4062	;# 
   363   000FDF                     INDF2           equ	4063	;# 
   364   000FE0                     BSR             equ	4064	;# 
   365   000FE1                     FSR1            equ	4065	;# 
   366   000FE1                     FSR1L           equ	4065	;# 
   367   000FE2                     FSR1H           equ	4066	;# 
   368   000FE3                     PLUSW1          equ	4067	;# 
   369   000FE4                     PREINC1         equ	4068	;# 
   370   000FE5                     POSTDEC1        equ	4069	;# 
   371   000FE6                     POSTINC1        equ	4070	;# 
   372   000FE7                     INDF1           equ	4071	;# 
   373   000FE8                     WREG            equ	4072	;# 
   374   000FE9                     FSR0            equ	4073	;# 
   375   000FE9                     FSR0L           equ	4073	;# 
   376   000FEA                     FSR0H           equ	4074	;# 
   377   000FEB                     PLUSW0          equ	4075	;# 
   378   000FEC                     PREINC0         equ	4076	;# 
   379   000FED                     POSTDEC0        equ	4077	;# 
   380   000FEE                     POSTINC0        equ	4078	;# 
   381   000FEF                     INDF0           equ	4079	;# 
   382   000FF0                     INTCON3         equ	4080	;# 
   383   000FF1                     INTCON2         equ	4081	;# 
   384   000FF2                     INTCON          equ	4082	;# 
   385   000FF3                     PROD            equ	4083	;# 
   386   000FF3                     PRODL           equ	4083	;# 
   387   000FF4                     PRODH           equ	4084	;# 
   388   000FF5                     TABLAT          equ	4085	;# 
   389   000FF6                     TBLPTR          equ	4086	;# 
   390   000FF6                     TBLPTRL         equ	4086	;# 
   391   000FF7                     TBLPTRH         equ	4087	;# 
   392   000FF8                     TBLPTRU         equ	4088	;# 
   393   000FF9                     PCLAT           equ	4089	;# 
   394   000FF9                     PC              equ	4089	;# 
   395   000FF9                     PCL             equ	4089	;# 
   396   000FFA                     PCLATH          equ	4090	;# 
   397   000FFB                     PCLATU          equ	4091	;# 
   398   000FFC                     STKPTR          equ	4092	;# 
   399   000FFD                     TOS             equ	4093	;# 
   400   000FFD                     TOSL            equ	4093	;# 
   401   000FFE                     TOSH            equ	4094	;# 
   402   000FFF                     TOSU            equ	4095	;# 
   403   000F80                     PORTA           equ	3968	;# 
   404   000F81                     PORTB           equ	3969	;# 
   405   000F82                     PORTC           equ	3970	;# 
   406   000F83                     PORTD           equ	3971	;# 
   407   000F84                     PORTE           equ	3972	;# 
   408   000F89                     LATA            equ	3977	;# 
   409   000F8A                     LATB            equ	3978	;# 
   410   000F8B                     LATC            equ	3979	;# 
   411   000F8C                     LATD            equ	3980	;# 
   412   000F8D                     LATE            equ	3981	;# 
   413   000F92                     TRISA           equ	3986	;# 
   414   000F92                     DDRA            equ	3986	;# 
   415   000F93                     TRISB           equ	3987	;# 
   416   000F93                     DDRB            equ	3987	;# 
   417   000F94                     TRISC           equ	3988	;# 
   418   000F94                     DDRC            equ	3988	;# 
   419   000F95                     TRISD           equ	3989	;# 
   420   000F95                     DDRD            equ	3989	;# 
   421   000F96                     TRISE           equ	3990	;# 
   422   000F96                     DDRE            equ	3990	;# 
   423   000F9B                     OSCTUNE         equ	3995	;# 
   424   000F9D                     PIE1            equ	3997	;# 
   425   000F9E                     PIR1            equ	3998	;# 
   426   000F9F                     IPR1            equ	3999	;# 
   427   000FA0                     PIE2            equ	4000	;# 
   428   000FA1                     PIR2            equ	4001	;# 
   429   000FA2                     IPR2            equ	4002	;# 
   430   000FA6                     EECON1          equ	4006	;# 
   431   000FA7                     EECON2          equ	4007	;# 
   432   000FA8                     EEDATA          equ	4008	;# 
   433   000FA9                     EEADR           equ	4009	;# 
   434   000FAB                     RCSTA           equ	4011	;# 
   435   000FAB                     RCSTA1          equ	4011	;# 
   436   000FAC                     TXSTA           equ	4012	;# 
   437   000FAC                     TXSTA1          equ	4012	;# 
   438   000FAD                     TXREG           equ	4013	;# 
   439   000FAD                     TXREG1          equ	4013	;# 
   440   000FAE                     RCREG           equ	4014	;# 
   441   000FAE                     RCREG1          equ	4014	;# 
   442   000FAF                     SPBRG           equ	4015	;# 
   443   000FAF                     SPBRG1          equ	4015	;# 
   444   000FB0                     SPBRGH          equ	4016	;# 
   445   000FB1                     T3CON           equ	4017	;# 
   446   000FB2                     TMR3            equ	4018	;# 
   447   000FB2                     TMR3L           equ	4018	;# 
   448   000FB3                     TMR3H           equ	4019	;# 
   449   000FB4                     CMCON           equ	4020	;# 
   450   000FB5                     CVRCON          equ	4021	;# 
   451   000FB6                     ECCP1AS         equ	4022	;# 
   452   000FB7                     ECCP1DEL        equ	4023	;# 
   453   000FB7                     PWM1CON         equ	4023	;# 
   454   000FB8                     BAUDCON         equ	4024	;# 
   455   000FB8                     BAUDCTL         equ	4024	;# 
   456   000FBA                     CCP2CON         equ	4026	;# 
   457   000FBB                     CCPR2           equ	4027	;# 
   458   000FBB                     CCPR2L          equ	4027	;# 
   459   000FBC                     CCPR2H          equ	4028	;# 
   460   000FBD                     CCP1CON         equ	4029	;# 
   461   000FBD                     ECCP1CON        equ	4029	;# 
   462   000FBE                     CCPR1           equ	4030	;# 
   463   000FBE                     CCPR1L          equ	4030	;# 
   464   000FBF                     CCPR1H          equ	4031	;# 
   465   000FC0                     ADCON2          equ	4032	;# 
   466   000FC1                     ADCON1          equ	4033	;# 
   467   000FC2                     ADCON0          equ	4034	;# 
   468   000FC3                     ADRES           equ	4035	;# 
   469   000FC3                     ADRESL          equ	4035	;# 
   470   000FC4                     ADRESH          equ	4036	;# 
   471   000FC5                     SSPCON2         equ	4037	;# 
   472   000FC6                     SSPCON1         equ	4038	;# 
   473   000FC7                     SSPSTAT         equ	4039	;# 
   474   000FC8                     SSPADD          equ	4040	;# 
   475   000FC9                     SSPBUF          equ	4041	;# 
   476   000FCA                     T2CON           equ	4042	;# 
   477   000FCB                     PR2             equ	4043	;# 
   478   000FCB                     MEMCON          equ	4043	;# 
   479   000FCC                     TMR2            equ	4044	;# 
   480   000FCD                     T1CON           equ	4045	;# 
   481   000FCE                     TMR1            equ	4046	;# 
   482   000FCE                     TMR1L           equ	4046	;# 
   483   000FCF                     TMR1H           equ	4047	;# 
   484   000FD0                     RCON            equ	4048	;# 
   485   000FD1                     WDTCON          equ	4049	;# 
   486   000FD2                     HLVDCON         equ	4050	;# 
   487   000FD2                     LVDCON          equ	4050	;# 
   488   000FD3                     OSCCON          equ	4051	;# 
   489   000FD5                     T0CON           equ	4053	;# 
   490   000FD6                     TMR0            equ	4054	;# 
   491   000FD6                     TMR0L           equ	4054	;# 
   492   000FD7                     TMR0H           equ	4055	;# 
   493   000FD8                     STATUS          equ	4056	;# 
   494   000FD9                     FSR2            equ	4057	;# 
   495   000FD9                     FSR2L           equ	4057	;# 
   496   000FDA                     FSR2H           equ	4058	;# 
   497   000FDB                     PLUSW2          equ	4059	;# 
   498   000FDC                     PREINC2         equ	4060	;# 
   499   000FDD                     POSTDEC2        equ	4061	;# 
   500   000FDE                     POSTINC2        equ	4062	;# 
   501   000FDF                     INDF2           equ	4063	;# 
   502   000FE0                     BSR             equ	4064	;# 
   503   000FE1                     FSR1            equ	4065	;# 
   504   000FE1                     FSR1L           equ	4065	;# 
   505   000FE2                     FSR1H           equ	4066	;# 
   506   000FE3                     PLUSW1          equ	4067	;# 
   507   000FE4                     PREINC1         equ	4068	;# 
   508   000FE5                     POSTDEC1        equ	4069	;# 
   509   000FE6                     POSTINC1        equ	4070	;# 
   510   000FE7                     INDF1           equ	4071	;# 
   511   000FE8                     WREG            equ	4072	;# 
   512   000FE9                     FSR0            equ	4073	;# 
   513   000FE9                     FSR0L           equ	4073	;# 
   514   000FEA                     FSR0H           equ	4074	;# 
   515   000FEB                     PLUSW0          equ	4075	;# 
   516   000FEC                     PREINC0         equ	4076	;# 
   517   000FED                     POSTDEC0        equ	4077	;# 
   518   000FEE                     POSTINC0        equ	4078	;# 
   519   000FEF                     INDF0           equ	4079	;# 
   520   000FF0                     INTCON3         equ	4080	;# 
   521   000FF1                     INTCON2         equ	4081	;# 
   522   000FF2                     INTCON          equ	4082	;# 
   523   000FF3                     PROD            equ	4083	;# 
   524   000FF3                     PRODL           equ	4083	;# 
   525   000FF4                     PRODH           equ	4084	;# 
   526   000FF5                     TABLAT          equ	4085	;# 
   527   000FF6                     TBLPTR          equ	4086	;# 
   528   000FF6                     TBLPTRL         equ	4086	;# 
   529   000FF7                     TBLPTRH         equ	4087	;# 
   530   000FF8                     TBLPTRU         equ	4088	;# 
   531   000FF9                     PCLAT           equ	4089	;# 
   532   000FF9                     PC              equ	4089	;# 
   533   000FF9                     PCL             equ	4089	;# 
   534   000FFA                     PCLATH          equ	4090	;# 
   535   000FFB                     PCLATU          equ	4091	;# 
   536   000FFC                     STKPTR          equ	4092	;# 
   537   000FFD                     TOS             equ	4093	;# 
   538   000FFD                     TOSL            equ	4093	;# 
   539   000FFE                     TOSH            equ	4094	;# 
   540   000FFF                     TOSU            equ	4095	;# 
   541   000F80                     PORTA           equ	3968	;# 
   542   000F81                     PORTB           equ	3969	;# 
   543   000F82                     PORTC           equ	3970	;# 
   544   000F83                     PORTD           equ	3971	;# 
   545   000F84                     PORTE           equ	3972	;# 
   546   000F89                     LATA            equ	3977	;# 
   547   000F8A                     LATB            equ	3978	;# 
   548   000F8B                     LATC            equ	3979	;# 
   549   000F8C                     LATD            equ	3980	;# 
   550   000F8D                     LATE            equ	3981	;# 
   551   000F92                     TRISA           equ	3986	;# 
   552   000F92                     DDRA            equ	3986	;# 
   553   000F93                     TRISB           equ	3987	;# 
   554   000F93                     DDRB            equ	3987	;# 
   555   000F94                     TRISC           equ	3988	;# 
   556   000F94                     DDRC            equ	3988	;# 
   557   000F95                     TRISD           equ	3989	;# 
   558   000F95                     DDRD            equ	3989	;# 
   559   000F96                     TRISE           equ	3990	;# 
   560   000F96                     DDRE            equ	3990	;# 
   561   000F9B                     OSCTUNE         equ	3995	;# 
   562   000F9D                     PIE1            equ	3997	;# 
   563   000F9E                     PIR1            equ	3998	;# 
   564   000F9F                     IPR1            equ	3999	;# 
   565   000FA0                     PIE2            equ	4000	;# 
   566   000FA1                     PIR2            equ	4001	;# 
   567   000FA2                     IPR2            equ	4002	;# 
   568   000FA6                     EECON1          equ	4006	;# 
   569   000FA7                     EECON2          equ	4007	;# 
   570   000FA8                     EEDATA          equ	4008	;# 
   571   000FA9                     EEADR           equ	4009	;# 
   572   000FAB                     RCSTA           equ	4011	;# 
   573   000FAB                     RCSTA1          equ	4011	;# 
   574   000FAC                     TXSTA           equ	4012	;# 
   575   000FAC                     TXSTA1          equ	4012	;# 
   576   000FAD                     TXREG           equ	4013	;# 
   577   000FAD                     TXREG1          equ	4013	;# 
   578   000FAE                     RCREG           equ	4014	;# 
   579   000FAE                     RCREG1          equ	4014	;# 
   580   000FAF                     SPBRG           equ	4015	;# 
   581   000FAF                     SPBRG1          equ	4015	;# 
   582   000FB0                     SPBRGH          equ	4016	;# 
   583   000FB1                     T3CON           equ	4017	;# 
   584   000FB2                     TMR3            equ	4018	;# 
   585   000FB2                     TMR3L           equ	4018	;# 
   586   000FB3                     TMR3H           equ	4019	;# 
   587   000FB4                     CMCON           equ	4020	;# 
   588   000FB5                     CVRCON          equ	4021	;# 
   589   000FB6                     ECCP1AS         equ	4022	;# 
   590   000FB7                     ECCP1DEL        equ	4023	;# 
   591   000FB7                     PWM1CON         equ	4023	;# 
   592   000FB8                     BAUDCON         equ	4024	;# 
   593   000FB8                     BAUDCTL         equ	4024	;# 
   594   000FBA                     CCP2CON         equ	4026	;# 
   595   000FBB                     CCPR2           equ	4027	;# 
   596   000FBB                     CCPR2L          equ	4027	;# 
   597   000FBC                     CCPR2H          equ	4028	;# 
   598   000FBD                     CCP1CON         equ	4029	;# 
   599   000FBD                     ECCP1CON        equ	4029	;# 
   600   000FBE                     CCPR1           equ	4030	;# 
   601   000FBE                     CCPR1L          equ	4030	;# 
   602   000FBF                     CCPR1H          equ	4031	;# 
   603   000FC0                     ADCON2          equ	4032	;# 
   604   000FC1                     ADCON1          equ	4033	;# 
   605   000FC2                     ADCON0          equ	4034	;# 
   606   000FC3                     ADRES           equ	4035	;# 
   607   000FC3                     ADRESL          equ	4035	;# 
   608   000FC4                     ADRESH          equ	4036	;# 
   609   000FC5                     SSPCON2         equ	4037	;# 
   610   000FC6                     SSPCON1         equ	4038	;# 
   611   000FC7                     SSPSTAT         equ	4039	;# 
   612   000FC8                     SSPADD          equ	4040	;# 
   613   000FC9                     SSPBUF          equ	4041	;# 
   614   000FCA                     T2CON           equ	4042	;# 
   615   000FCB                     PR2             equ	4043	;# 
   616   000FCB                     MEMCON          equ	4043	;# 
   617   000FCC                     TMR2            equ	4044	;# 
   618   000FCD                     T1CON           equ	4045	;# 
   619   000FCE                     TMR1            equ	4046	;# 
   620   000FCE                     TMR1L           equ	4046	;# 
   621   000FCF                     TMR1H           equ	4047	;# 
   622   000FD0                     RCON            equ	4048	;# 
   623   000FD1                     WDTCON          equ	4049	;# 
   624   000FD2                     HLVDCON         equ	4050	;# 
   625   000FD2                     LVDCON          equ	4050	;# 
   626   000FD3                     OSCCON          equ	4051	;# 
   627   000FD5                     T0CON           equ	4053	;# 
   628   000FD6                     TMR0            equ	4054	;# 
   629   000FD6                     TMR0L           equ	4054	;# 
   630   000FD7                     TMR0H           equ	4055	;# 
   631   000FD8                     STATUS          equ	4056	;# 
   632   000FD9                     FSR2            equ	4057	;# 
   633   000FD9                     FSR2L           equ	4057	;# 
   634   000FDA                     FSR2H           equ	4058	;# 
   635   000FDB                     PLUSW2          equ	4059	;# 
   636   000FDC                     PREINC2         equ	4060	;# 
   637   000FDD                     POSTDEC2        equ	4061	;# 
   638   000FDE                     POSTINC2        equ	4062	;# 
   639   000FDF                     INDF2           equ	4063	;# 
   640   000FE0                     BSR             equ	4064	;# 
   641   000FE1                     FSR1            equ	4065	;# 
   642   000FE1                     FSR1L           equ	4065	;# 
   643   000FE2                     FSR1H           equ	4066	;# 
   644   000FE3                     PLUSW1          equ	4067	;# 
   645   000FE4                     PREINC1         equ	4068	;# 
   646   000FE5                     POSTDEC1        equ	4069	;# 
   647   000FE6                     POSTINC1        equ	4070	;# 
   648   000FE7                     INDF1           equ	4071	;# 
   649   000FE8                     WREG            equ	4072	;# 
   650   000FE9                     FSR0            equ	4073	;# 
   651   000FE9                     FSR0L           equ	4073	;# 
   652   000FEA                     FSR0H           equ	4074	;# 
   653   000FEB                     PLUSW0          equ	4075	;# 
   654   000FEC                     PREINC0         equ	4076	;# 
   655   000FED                     POSTDEC0        equ	4077	;# 
   656   000FEE                     POSTINC0        equ	4078	;# 
   657   000FEF                     INDF0           equ	4079	;# 
   658   000FF0                     INTCON3         equ	4080	;# 
   659   000FF1                     INTCON2         equ	4081	;# 
   660   000FF2                     INTCON          equ	4082	;# 
   661   000FF3                     PROD            equ	4083	;# 
   662   000FF3                     PRODL           equ	4083	;# 
   663   000FF4                     PRODH           equ	4084	;# 
   664   000FF5                     TABLAT          equ	4085	;# 
   665   000FF6                     TBLPTR          equ	4086	;# 
   666   000FF6                     TBLPTRL         equ	4086	;# 
   667   000FF7                     TBLPTRH         equ	4087	;# 
   668   000FF8                     TBLPTRU         equ	4088	;# 
   669   000FF9                     PCLAT           equ	4089	;# 
   670   000FF9                     PC              equ	4089	;# 
   671   000FF9                     PCL             equ	4089	;# 
   672   000FFA                     PCLATH          equ	4090	;# 
   673   000FFB                     PCLATU          equ	4091	;# 
   674   000FFC                     STKPTR          equ	4092	;# 
   675   000FFD                     TOS             equ	4093	;# 
   676   000FFD                     TOSL            equ	4093	;# 
   677   000FFE                     TOSH            equ	4094	;# 
   678   000FFF                     TOSU            equ	4095	;# 
   679   000F80                     PORTA           equ	3968	;# 
   680   000F81                     PORTB           equ	3969	;# 
   681   000F82                     PORTC           equ	3970	;# 
   682   000F83                     PORTD           equ	3971	;# 
   683   000F84                     PORTE           equ	3972	;# 
   684   000F89                     LATA            equ	3977	;# 
   685   000F8A                     LATB            equ	3978	;# 
   686   000F8B                     LATC            equ	3979	;# 
   687   000F8C                     LATD            equ	3980	;# 
   688   000F8D                     LATE            equ	3981	;# 
   689   000F92                     TRISA           equ	3986	;# 
   690   000F92                     DDRA            equ	3986	;# 
   691   000F93                     TRISB           equ	3987	;# 
   692   000F93                     DDRB            equ	3987	;# 
   693   000F94                     TRISC           equ	3988	;# 
   694   000F94                     DDRC            equ	3988	;# 
   695   000F95                     TRISD           equ	3989	;# 
   696   000F95                     DDRD            equ	3989	;# 
   697   000F96                     TRISE           equ	3990	;# 
   698   000F96                     DDRE            equ	3990	;# 
   699   000F9B                     OSCTUNE         equ	3995	;# 
   700   000F9D                     PIE1            equ	3997	;# 
   701   000F9E                     PIR1            equ	3998	;# 
   702   000F9F                     IPR1            equ	3999	;# 
   703   000FA0                     PIE2            equ	4000	;# 
   704   000FA1                     PIR2            equ	4001	;# 
   705   000FA2                     IPR2            equ	4002	;# 
   706   000FA6                     EECON1          equ	4006	;# 
   707   000FA7                     EECON2          equ	4007	;# 
   708   000FA8                     EEDATA          equ	4008	;# 
   709   000FA9                     EEADR           equ	4009	;# 
   710   000FAB                     RCSTA           equ	4011	;# 
   711   000FAB                     RCSTA1          equ	4011	;# 
   712   000FAC                     TXSTA           equ	4012	;# 
   713   000FAC                     TXSTA1          equ	4012	;# 
   714   000FAD                     TXREG           equ	4013	;# 
   715   000FAD                     TXREG1          equ	4013	;# 
   716   000FAE                     RCREG           equ	4014	;# 
   717   000FAE                     RCREG1          equ	4014	;# 
   718   000FAF                     SPBRG           equ	4015	;# 
   719   000FAF                     SPBRG1          equ	4015	;# 
   720   000FB0                     SPBRGH          equ	4016	;# 
   721   000FB1                     T3CON           equ	4017	;# 
   722   000FB2                     TMR3            equ	4018	;# 
   723   000FB2                     TMR3L           equ	4018	;# 
   724   000FB3                     TMR3H           equ	4019	;# 
   725   000FB4                     CMCON           equ	4020	;# 
   726   000FB5                     CVRCON          equ	4021	;# 
   727   000FB6                     ECCP1AS         equ	4022	;# 
   728   000FB7                     ECCP1DEL        equ	4023	;# 
   729   000FB7                     PWM1CON         equ	4023	;# 
   730   000FB8                     BAUDCON         equ	4024	;# 
   731   000FB8                     BAUDCTL         equ	4024	;# 
   732   000FBA                     CCP2CON         equ	4026	;# 
   733   000FBB                     CCPR2           equ	4027	;# 
   734   000FBB                     CCPR2L          equ	4027	;# 
   735   000FBC                     CCPR2H          equ	4028	;# 
   736   000FBD                     CCP1CON         equ	4029	;# 
   737   000FBD                     ECCP1CON        equ	4029	;# 
   738   000FBE                     CCPR1           equ	4030	;# 
   739   000FBE                     CCPR1L          equ	4030	;# 
   740   000FBF                     CCPR1H          equ	4031	;# 
   741   000FC0                     ADCON2          equ	4032	;# 
   742   000FC1                     ADCON1          equ	4033	;# 
   743   000FC2                     ADCON0          equ	4034	;# 
   744   000FC3                     ADRES           equ	4035	;# 
   745   000FC3                     ADRESL          equ	4035	;# 
   746   000FC4                     ADRESH          equ	4036	;# 
   747   000FC5                     SSPCON2         equ	4037	;# 
   748   000FC6                     SSPCON1         equ	4038	;# 
   749   000FC7                     SSPSTAT         equ	4039	;# 
   750   000FC8                     SSPADD          equ	4040	;# 
   751   000FC9                     SSPBUF          equ	4041	;# 
   752   000FCA                     T2CON           equ	4042	;# 
   753   000FCB                     PR2             equ	4043	;# 
   754   000FCB                     MEMCON          equ	4043	;# 
   755   000FCC                     TMR2            equ	4044	;# 
   756   000FCD                     T1CON           equ	4045	;# 
   757   000FCE                     TMR1            equ	4046	;# 
   758   000FCE                     TMR1L           equ	4046	;# 
   759   000FCF                     TMR1H           equ	4047	;# 
   760   000FD0                     RCON            equ	4048	;# 
   761   000FD1                     WDTCON          equ	4049	;# 
   762   000FD2                     HLVDCON         equ	4050	;# 
   763   000FD2                     LVDCON          equ	4050	;# 
   764   000FD3                     OSCCON          equ	4051	;# 
   765   000FD5                     T0CON           equ	4053	;# 
   766   000FD6                     TMR0            equ	4054	;# 
   767   000FD6                     TMR0L           equ	4054	;# 
   768   000FD7                     TMR0H           equ	4055	;# 
   769   000FD8                     STATUS          equ	4056	;# 
   770   000FD9                     FSR2            equ	4057	;# 
   771   000FD9                     FSR2L           equ	4057	;# 
   772   000FDA                     FSR2H           equ	4058	;# 
   773   000FDB                     PLUSW2          equ	4059	;# 
   774   000FDC                     PREINC2         equ	4060	;# 
   775   000FDD                     POSTDEC2        equ	4061	;# 
   776   000FDE                     POSTINC2        equ	4062	;# 
   777   000FDF                     INDF2           equ	4063	;# 
   778   000FE0                     BSR             equ	4064	;# 
   779   000FE1                     FSR1            equ	4065	;# 
   780   000FE1                     FSR1L           equ	4065	;# 
   781   000FE2                     FSR1H           equ	4066	;# 
   782   000FE3                     PLUSW1          equ	4067	;# 
   783   000FE4                     PREINC1         equ	4068	;# 
   784   000FE5                     POSTDEC1        equ	4069	;# 
   785   000FE6                     POSTINC1        equ	4070	;# 
   786   000FE7                     INDF1           equ	4071	;# 
   787   000FE8                     WREG            equ	4072	;# 
   788   000FE9                     FSR0            equ	4073	;# 
   789   000FE9                     FSR0L           equ	4073	;# 
   790   000FEA                     FSR0H           equ	4074	;# 
   791   000FEB                     PLUSW0          equ	4075	;# 
   792   000FEC                     PREINC0         equ	4076	;# 
   793   000FED                     POSTDEC0        equ	4077	;# 
   794   000FEE                     POSTINC0        equ	4078	;# 
   795   000FEF                     INDF0           equ	4079	;# 
   796   000FF0                     INTCON3         equ	4080	;# 
   797   000FF1                     INTCON2         equ	4081	;# 
   798   000FF2                     INTCON          equ	4082	;# 
   799   000FF3                     PROD            equ	4083	;# 
   800   000FF3                     PRODL           equ	4083	;# 
   801   000FF4                     PRODH           equ	4084	;# 
   802   000FF5                     TABLAT          equ	4085	;# 
   803   000FF6                     TBLPTR          equ	4086	;# 
   804   000FF6                     TBLPTRL         equ	4086	;# 
   805   000FF7                     TBLPTRH         equ	4087	;# 
   806   000FF8                     TBLPTRU         equ	4088	;# 
   807   000FF9                     PCLAT           equ	4089	;# 
   808   000FF9                     PC              equ	4089	;# 
   809   000FF9                     PCL             equ	4089	;# 
   810   000FFA                     PCLATH          equ	4090	;# 
   811   000FFB                     PCLATU          equ	4091	;# 
   812   000FFC                     STKPTR          equ	4092	;# 
   813   000FFD                     TOS             equ	4093	;# 
   814   000FFD                     TOSL            equ	4093	;# 
   815   000FFE                     TOSH            equ	4094	;# 
   816   000FFF                     TOSU            equ	4095	;# 
   817   000F80                     PORTA           equ	3968	;# 
   818   000F81                     PORTB           equ	3969	;# 
   819   000F82                     PORTC           equ	3970	;# 
   820   000F83                     PORTD           equ	3971	;# 
   821   000F84                     PORTE           equ	3972	;# 
   822   000F89                     LATA            equ	3977	;# 
   823   000F8A                     LATB            equ	3978	;# 
   824   000F8B                     LATC            equ	3979	;# 
   825   000F8C                     LATD            equ	3980	;# 
   826   000F8D                     LATE            equ	3981	;# 
   827   000F92                     TRISA           equ	3986	;# 
   828   000F92                     DDRA            equ	3986	;# 
   829   000F93                     TRISB           equ	3987	;# 
   830   000F93                     DDRB            equ	3987	;# 
   831   000F94                     TRISC           equ	3988	;# 
   832   000F94                     DDRC            equ	3988	;# 
   833   000F95                     TRISD           equ	3989	;# 
   834   000F95                     DDRD            equ	3989	;# 
   835   000F96                     TRISE           equ	3990	;# 
   836   000F96                     DDRE            equ	3990	;# 
   837   000F9B                     OSCTUNE         equ	3995	;# 
   838   000F9D                     PIE1            equ	3997	;# 
   839   000F9E                     PIR1            equ	3998	;# 
   840   000F9F                     IPR1            equ	3999	;# 
   841   000FA0                     PIE2            equ	4000	;# 
   842   000FA1                     PIR2            equ	4001	;# 
   843   000FA2                     IPR2            equ	4002	;# 
   844   000FA6                     EECON1          equ	4006	;# 
   845   000FA7                     EECON2          equ	4007	;# 
   846   000FA8                     EEDATA          equ	4008	;# 
   847   000FA9                     EEADR           equ	4009	;# 
   848   000FAB                     RCSTA           equ	4011	;# 
   849   000FAB                     RCSTA1          equ	4011	;# 
   850   000FAC                     TXSTA           equ	4012	;# 
   851   000FAC                     TXSTA1          equ	4012	;# 
   852   000FAD                     TXREG           equ	4013	;# 
   853   000FAD                     TXREG1          equ	4013	;# 
   854   000FAE                     RCREG           equ	4014	;# 
   855   000FAE                     RCREG1          equ	4014	;# 
   856   000FAF                     SPBRG           equ	4015	;# 
   857   000FAF                     SPBRG1          equ	4015	;# 
   858   000FB0                     SPBRGH          equ	4016	;# 
   859   000FB1                     T3CON           equ	4017	;# 
   860   000FB2                     TMR3            equ	4018	;# 
   861   000FB2                     TMR3L           equ	4018	;# 
   862   000FB3                     TMR3H           equ	4019	;# 
   863   000FB4                     CMCON           equ	4020	;# 
   864   000FB5                     CVRCON          equ	4021	;# 
   865   000FB6                     ECCP1AS         equ	4022	;# 
   866   000FB7                     ECCP1DEL        equ	4023	;# 
   867   000FB7                     PWM1CON         equ	4023	;# 
   868   000FB8                     BAUDCON         equ	4024	;# 
   869   000FB8                     BAUDCTL         equ	4024	;# 
   870   000FBA                     CCP2CON         equ	4026	;# 
   871   000FBB                     CCPR2           equ	4027	;# 
   872   000FBB                     CCPR2L          equ	4027	;# 
   873   000FBC                     CCPR2H          equ	4028	;# 
   874   000FBD                     CCP1CON         equ	4029	;# 
   875   000FBD                     ECCP1CON        equ	4029	;# 
   876   000FBE                     CCPR1           equ	4030	;# 
   877   000FBE                     CCPR1L          equ	4030	;# 
   878   000FBF                     CCPR1H          equ	4031	;# 
   879   000FC0                     ADCON2          equ	4032	;# 
   880   000FC1                     ADCON1          equ	4033	;# 
   881   000FC2                     ADCON0          equ	4034	;# 
   882   000FC3                     ADRES           equ	4035	;# 
   883   000FC3                     ADRESL          equ	4035	;# 
   884   000FC4                     ADRESH          equ	4036	;# 
   885   000FC5                     SSPCON2         equ	4037	;# 
   886   000FC6                     SSPCON1         equ	4038	;# 
   887   000FC7                     SSPSTAT         equ	4039	;# 
   888   000FC8                     SSPADD          equ	4040	;# 
   889   000FC9                     SSPBUF          equ	4041	;# 
   890   000FCA                     T2CON           equ	4042	;# 
   891   000FCB                     PR2             equ	4043	;# 
   892   000FCB                     MEMCON          equ	4043	;# 
   893   000FCC                     TMR2            equ	4044	;# 
   894   000FCD                     T1CON           equ	4045	;# 
   895   000FCE                     TMR1            equ	4046	;# 
   896   000FCE                     TMR1L           equ	4046	;# 
   897   000FCF                     TMR1H           equ	4047	;# 
   898   000FD0                     RCON            equ	4048	;# 
   899   000FD1                     WDTCON          equ	4049	;# 
   900   000FD2                     HLVDCON         equ	4050	;# 
   901   000FD2                     LVDCON          equ	4050	;# 
   902   000FD3                     OSCCON          equ	4051	;# 
   903   000FD5                     T0CON           equ	4053	;# 
   904   000FD6                     TMR0            equ	4054	;# 
   905   000FD6                     TMR0L           equ	4054	;# 
   906   000FD7                     TMR0H           equ	4055	;# 
   907   000FD8                     STATUS          equ	4056	;# 
   908   000FD9                     FSR2            equ	4057	;# 
   909   000FD9                     FSR2L           equ	4057	;# 
   910   000FDA                     FSR2H           equ	4058	;# 
   911   000FDB                     PLUSW2          equ	4059	;# 
   912   000FDC                     PREINC2         equ	4060	;# 
   913   000FDD                     POSTDEC2        equ	4061	;# 
   914   000FDE                     POSTINC2        equ	4062	;# 
   915   000FDF                     INDF2           equ	4063	;# 
   916   000FE0                     BSR             equ	4064	;# 
   917   000FE1                     FSR1            equ	4065	;# 
   918   000FE1                     FSR1L           equ	4065	;# 
   919   000FE2                     FSR1H           equ	4066	;# 
   920   000FE3                     PLUSW1          equ	4067	;# 
   921   000FE4                     PREINC1         equ	4068	;# 
   922   000FE5                     POSTDEC1        equ	4069	;# 
   923   000FE6                     POSTINC1        equ	4070	;# 
   924   000FE7                     INDF1           equ	4071	;# 
   925   000FE8                     WREG            equ	4072	;# 
   926   000FE9                     FSR0            equ	4073	;# 
   927   000FE9                     FSR0L           equ	4073	;# 
   928   000FEA                     FSR0H           equ	4074	;# 
   929   000FEB                     PLUSW0          equ	4075	;# 
   930   000FEC                     PREINC0         equ	4076	;# 
   931   000FED                     POSTDEC0        equ	4077	;# 
   932   000FEE                     POSTINC0        equ	4078	;# 
   933   000FEF                     INDF0           equ	4079	;# 
   934   000FF0                     INTCON3         equ	4080	;# 
   935   000FF1                     INTCON2         equ	4081	;# 
   936   000FF2                     INTCON          equ	4082	;# 
   937   000FF3                     PROD            equ	4083	;# 
   938   000FF3                     PRODL           equ	4083	;# 
   939   000FF4                     PRODH           equ	4084	;# 
   940   000FF5                     TABLAT          equ	4085	;# 
   941   000FF6                     TBLPTR          equ	4086	;# 
   942   000FF6                     TBLPTRL         equ	4086	;# 
   943   000FF7                     TBLPTRH         equ	4087	;# 
   944   000FF8                     TBLPTRU         equ	4088	;# 
   945   000FF9                     PCLAT           equ	4089	;# 
   946   000FF9                     PC              equ	4089	;# 
   947   000FF9                     PCL             equ	4089	;# 
   948   000FFA                     PCLATH          equ	4090	;# 
   949   000FFB                     PCLATU          equ	4091	;# 
   950   000FFC                     STKPTR          equ	4092	;# 
   951   000FFD                     TOS             equ	4093	;# 
   952   000FFD                     TOSL            equ	4093	;# 
   953   000FFE                     TOSH            equ	4094	;# 
   954   000FFF                     TOSU            equ	4095	;# 
   955                           
   956                           	psect	mediumconst
   957   001EEE                     __pmediumconst:
   958                           	callstack 0
   959   001EEE  00                 	db	0
   960   001EEF                     GetTecla@F3223:
   961                           	callstack 0
   962   001EEF  01                 	db	1
   963   001EF0  02                 	db	2
   964   001EF1  03                 	db	3
   965   001EF2  04                 	db	4
   966   001EF3  05                 	db	5
   967   001EF4  06                 	db	6
   968   001EF5  07                 	db	7
   969   001EF6  08                 	db	8
   970   001EF7  09                 	db	9
   971   001EF8  0A                 	db	10
   972   001EF9  00                 	db	0
   973   001EFA  0B                 	db	11
   974   001EFB                     __end_ofGetTecla@F3223:
   975                           	callstack 0
   976   007F92                     _TMR0IF         set	32658
   977   000FD6                     _TMR0           set	4054
   978   000FAE                     _RCREG          set	4014
   979   000FAD                     _TXREG          set	4013
   980   000F9E                     _PIR1bits       set	3998
   981   000FB8                     _BAUDCON        set	4024
   982   000FAF                     _SPBRG          set	4015
   983   000FAB                     _RCSTA          set	4011
   984   000FAC                     _TXSTA          set	4012
   985   000F81                     _PORTBbits      set	3969
   986   000F8A                     _LATBbits       set	3978
   987   000F93                     _TRISBbits      set	3987
   988   000F82                     _PORTCbits      set	3970
   989   000F8B                     _LATCbits       set	3979
   990   000F94                     _TRISCbits      set	3988
   991   000F8C                     _LATD           set	3980
   992   000F95                     _TRISD          set	3989
   993   000F83                     _PORTD          set	3971
   994   000FD5                     _T0CON          set	4053
   995   000F8B                     _LATC           set	3979
   996   000F92                     _TRISA          set	3986
   997   000FC1                     _ADCON1         set	4033
   998   000F89                     _LATA           set	3977
   999   000FF2                     _INTCONbits     set	4082
  1000   001EFB  45                 	db	69	;'E'
  1001   001EFC  52                 	db	82	;'R'
  1002   001EFD  52                 	db	82	;'R'
  1003   001EFE  4F                 	db	79	;'O'
  1004   001EFF  52                 	db	82	;'R'
  1005   001F00  2E                 	db	46
  1006   001F01  20                 	db	32
  1007   001F02  56                 	db	86	;'V'
  1008   001F03  61                 	db	97	;'a'
  1009   001F04  6C                 	db	108	;'l'
  1010   001F05  6F                 	db	111	;'o'
  1011   001F06  72                 	db	114	;'r'
  1012   001F07  20                 	db	32
  1013   001F08  69                 	db	105	;'i'
  1014   001F09  6E                 	db	110	;'n'
  1015   001F0A  74                 	db	116	;'t'
  1016   001F0B  72                 	db	114	;'r'
  1017   001F0C  6F                 	db	111	;'o'
  1018   001F0D  64                 	db	100	;'d'
  1019   001F0E  75                 	db	117	;'u'
  1020   001F0F  69                 	db	105	;'i'
  1021   001F10  74                 	db	116	;'t'
  1022   001F11  20                 	db	32
  1023   001F12  65                 	db	101	;'e'
  1024   001F13  72                 	db	114	;'r'
  1025   001F14  72                 	db	114	;'r'
  1026   001F15  6F                 	db	111	;'o'
  1027   001F16  6E                 	db	110	;'n'
  1028   001F17  69                 	db	105	;'i'
  1029   001F18  2E                 	db	46
  1030   001F19  0D                 	db	13
  1031   001F1A  0A                 	db	10
  1032   001F1B  00                 	db	0
  1033   001F1C  09                 	db	9
  1034   001F1D  33                 	db	51	;'3'
  1035   001F1E  2E                 	db	46
  1036   001F1F  20                 	db	32
  1037   001F20  4D                 	db	77	;'M'
  1038   001F21  6F                 	db	111	;'o'
  1039   001F22  64                 	db	100	;'d'
  1040   001F23  69                 	db	105	;'i'
  1041   001F24  66                 	db	102	;'f'
  1042   001F25  69                 	db	105	;'i'
  1043   001F26  63                 	db	99	;'c'
  1044   001F27  61                 	db	97	;'a'
  1045   001F28  72                 	db	114	;'r'
  1046   001F29  20                 	db	32
  1047   001F2A  68                 	db	104	;'h'
  1048   001F2B  6F                 	db	111	;'o'
  1049   001F2C  72                 	db	114	;'r'
  1050   001F2D  61                 	db	97	;'a'
  1051   001F2E  20                 	db	32
  1052   001F2F  64                 	db	100	;'d'
  1053   001F30  65                 	db	101	;'e'
  1054   001F31  6C                 	db	108	;'l'
  1055   001F32  20                 	db	32
  1056   001F33  73                 	db	115	;'s'
  1057   001F34  69                 	db	105	;'i'
  1058   001F35  73                 	db	115	;'s'
  1059   001F36  74                 	db	116	;'t'
  1060   001F37  65                 	db	101	;'e'
  1061   001F38  6D                 	db	109	;'m'
  1062   001F39  61                 	db	97	;'a'
  1063   001F3A  0D                 	db	13
  1064   001F3B  0A                 	db	10
  1065   001F3C  00                 	db	0
  1066   001F3D  09                 	db	9
  1067   001F3E  32                 	db	50	;'2'
  1068   001F3F  2E                 	db	46
  1069   001F40  20                 	db	32
  1070   001F41  4D                 	db	77	;'M'
  1071   001F42  6F                 	db	111	;'o'
  1072   001F43  73                 	db	115	;'s'
  1073   001F44  74                 	db	116	;'t'
  1074   001F45  72                 	db	114	;'r'
  1075   001F46  61                 	db	97	;'a'
  1076   001F47  72                 	db	114	;'r'
  1077   001F48  20                 	db	32
  1078   001F49  63                 	db	99	;'c'
  1079   001F4A  6F                 	db	111	;'o'
  1080   001F4B  6E                 	db	110	;'n'
  1081   001F4C  66                 	db	102	;'f'
  1082   001F4D  69                 	db	105	;'i'
  1083   001F4E  67                 	db	103	;'g'
  1084   001F4F  75                 	db	117	;'u'
  1085   001F50  72                 	db	114	;'r'
  1086   001F51  61                 	db	97	;'a'
  1087   001F52  63                 	db	99	;'c'
  1088   001F53  69                 	db	105	;'i'
  1089   001F54  6F                 	db	111	;'o'
  1090   001F55  6E                 	db	110	;'n'
  1091   001F56  73                 	db	115	;'s'
  1092   001F57  0D                 	db	13
  1093   001F58  0A                 	db	10
  1094   001F59  00                 	db	0
  1095   001F5A  09                 	db	9
  1096   001F5B  31                 	db	49	;'1'
  1097   001F5C  2E                 	db	46
  1098   001F5D  20                 	db	32
  1099   001F5E  51                 	db	81	;'Q'
  1100   001F5F  75                 	db	117	;'u'
  1101   001F60  69                 	db	105	;'i'
  1102   001F61  20                 	db	32
  1103   001F62  68                 	db	104	;'h'
  1104   001F63  69                 	db	105	;'i'
  1105   001F64  20                 	db	32
  1106   001F65  68                 	db	104	;'h'
  1107   001F66  61                 	db	97	;'a'
  1108   001F67  20                 	db	32
  1109   001F68  61                 	db	97	;'a'
  1110   001F69  20                 	db	32
  1111   001F6A  6C                 	db	108	;'l'
  1112   001F6B  61                 	db	97	;'a'
  1113   001F6C  20                 	db	32
  1114   001F6D  73                 	db	115	;'s'
  1115   001F6E  61                 	db	97	;'a'
  1116   001F6F  6C                 	db	108	;'l'
  1117   001F70  61                 	db	97	;'a'
  1118   001F71  3F                 	db	63	;'?'
  1119   001F72  0D                 	db	13
  1120   001F73  0A                 	db	10
  1121   001F74  00                 	db	0
  1122   001F75                     STR_1:
  1123   001F75  73                 	db	115	;'s'
  1124   001F76  74                 	db	116	;'t'
  1125   001F77  61                 	db	97	;'a'
  1126   001F78  74                 	db	116	;'t'
  1127   001F79  65                 	db	101	;'e'
  1128   001F7A  3A                 	db	58	;':'
  1129   001F7B  20                 	db	32
  1130   001F7C  25                 	db	37
  1131   001F7D  64                 	db	100	;'d'
  1132   001F7E  2C                 	db	44
  1133   001F7F  20                 	db	32
  1134   001F80  73                 	db	115	;'s'
  1135   001F81  75                 	db	117	;'u'
  1136   001F82  62                 	db	98	;'b'
  1137   001F83  73                 	db	115	;'s'
  1138   001F84  74                 	db	116	;'t'
  1139   001F85  61                 	db	97	;'a'
  1140   001F86  74                 	db	116	;'t'
  1141   001F87  65                 	db	101	;'e'
  1142   001F88  3A                 	db	58	;':'
  1143   001F89  20                 	db	32
  1144   001F8A  25                 	db	37
  1145   001F8B  64                 	db	100	;'d'
  1146   001F8C  0D                 	db	13
  1147   001F8D  0A                 	db	10
  1148   001F8E  00                 	db	0
  1149   001F8F  54                 	db	84	;'T'
  1150   001F90  72                 	db	114	;'r'
  1151   001F91  69                 	db	105	;'i'
  1152   001F92  61                 	db	97	;'a'
  1153   001F93  20                 	db	32
  1154   001F94  75                 	db	117	;'u'
  1155   001F95  6E                 	db	110	;'n'
  1156   001F96  61                 	db	97	;'a'
  1157   001F97  20                 	db	32
  1158   001F98  6F                 	db	111	;'o'
  1159   001F99  70                 	db	112	;'p'
  1160   001F9A  63                 	db	99	;'c'
  1161   001F9B  69                 	db	105	;'i'
  1162   001F9C  C3                 	db	-61
  1163   001F9D  B3                 	db	-77
  1164   001F9E  3A                 	db	58	;':'
  1165   001F9F  0D                 	db	13
  1166   001FA0  0A                 	db	10
  1167   001FA1  00                 	db	0
  1168   001FA2                     STR_4:
  1169   001FA2  2D                 	db	45
  1170   001FA3  2D                 	db	45
  1171   001FA4  2D                 	db	45
  1172   001FA5  2D                 	db	45
  1173   001FA6  2D                 	db	45
  1174   001FA7  2D                 	db	45
  1175   001FA8  2D                 	db	45
  1176   001FA9  2D                 	db	45
  1177   001FAA  2D                 	db	45
  1178   001FAB  2D                 	db	45
  1179   001FAC  2D                 	db	45
  1180   001FAD  2D                 	db	45
  1181   001FAE  2D                 	db	45
  1182   001FAF  2D                 	db	45
  1183   001FB0  2D                 	db	45
  1184   001FB1  0D                 	db	13
  1185   001FB2  0A                 	db	10
  1186   001FB3  00                 	db	0
  1187   001FB4  4D                 	db	77	;'M'
  1188   001FB5  65                 	db	101	;'e'
  1189   001FB6  6E                 	db	110	;'n'
  1190   001FB7  C3                 	db	-61
  1191   001FB8  BA                 	db	-70
  1192   001FB9  20                 	db	32
  1193   001FBA  70                 	db	112	;'p'
  1194   001FBB  72                 	db	114	;'r'
  1195   001FBC  69                 	db	105	;'i'
  1196   001FBD  6E                 	db	110	;'n'
  1197   001FBE  63                 	db	99	;'c'
  1198   001FBF  69                 	db	105	;'i'
  1199   001FC0  70                 	db	112	;'p'
  1200   001FC1  61                 	db	97	;'a'
  1201   001FC2  6C                 	db	108	;'l'
  1202   001FC3  0D                 	db	13
  1203   001FC4  0A                 	db	10
  1204   001FC5  00                 	db	0
  1205   001FC6  48                 	db	72	;'H'
  1206   001FC7  61                 	db	97	;'a'
  1207   001FC8  73                 	db	115	;'s'
  1208   001FC9  20                 	db	32
  1209   001FCA  70                 	db	112	;'p'
  1210   001FCB  75                 	db	117	;'u'
  1211   001FCC  6C                 	db	108	;'l'
  1212   001FCD  73                 	db	115	;'s'
  1213   001FCE  61                 	db	97	;'a'
  1214   001FCF  64                 	db	100	;'d'
  1215   001FD0  6F                 	db	111	;'o'
  1216   001FD1  20                 	db	32
  1217   001FD2  31                 	db	49	;'1'
  1218   001FD3  00                 	db	0
  1219   001FD4  48                 	db	72	;'H'
  1220   001FD5  61                 	db	97	;'a'
  1221   001FD6  73                 	db	115	;'s'
  1222   001FD7  20                 	db	32
  1223   001FD8  70                 	db	112	;'p'
  1224   001FD9  75                 	db	117	;'u'
  1225   001FDA  6C                 	db	108	;'l'
  1226   001FDB  73                 	db	115	;'s'
  1227   001FDC  61                 	db	97	;'a'
  1228   001FDD  64                 	db	100	;'d'
  1229   001FDE  6F                 	db	111	;'o'
  1230   001FDF  20                 	db	32
  1231   001FE0  32                 	db	50	;'2'
  1232   001FE1  00                 	db	0
  1233   001FE2  48                 	db	72	;'H'
  1234   001FE3  61                 	db	97	;'a'
  1235   001FE4  73                 	db	115	;'s'
  1236   001FE5  20                 	db	32
  1237   001FE6  70                 	db	112	;'p'
  1238   001FE7  75                 	db	117	;'u'
  1239   001FE8  6C                 	db	108	;'l'
  1240   001FE9  73                 	db	115	;'s'
  1241   001FEA  61                 	db	97	;'a'
  1242   001FEB  64                 	db	100	;'d'
  1243   001FEC  6F                 	db	111	;'o'
  1244   001FED  20                 	db	32
  1245   001FEE  33                 	db	51	;'3'
  1246   001FEF  00                 	db	0
  1247   001FF0  4F                 	db	79	;'O'
  1248   001FF1  70                 	db	112	;'p'
  1249   001FF2  63                 	db	99	;'c'
  1250   001FF3  69                 	db	105	;'i'
  1251   001FF4  C3                 	db	-61
  1252   001FF5  B3                 	db	-77
  1253   001FF6  3A                 	db	58	;':'
  1254   001FF7  20                 	db	32
  1255   001FF8  00                 	db	0
  1256   001FF9                     STR_2:
  1257   001FF9  55                 	db	85	;'U'
  1258   001FFA  49                 	db	73	;'I'
  1259   001FFB  44                 	db	68	;'D'
  1260   001FFC  3A                 	db	58	;':'
  1261   001FFD  20                 	db	32
  1262   001FFE  00                 	db	0
  1263   001FA2                     STR_6           equ	STR_4
  1264   001FB2                     STR_3           equ	STR_4+16
  1265   001FFF  00                 	db	0	; dummy byte at the end
  1266   001EEE                     __smallconst    set	__pmediumconst
  1267   001EEE                     __mediumconst   set	__pmediumconst
  1268   000002                     __activetblptr  equ	2
  1269                           
  1270                           ; #config settings
  1271                           
  1272                           	psect	cinit
  1273   000D2C                     __pcinit:
  1274                           	callstack 0
  1275   000D2C                     start_initialization:
  1276                           	callstack 0
  1277   000D2C                     __initialization:
  1278                           	callstack 0
  1279                           
  1280                           ; Clear objects allocated to BANK1 (100 bytes)
  1281   000D2C  EE01  F000         	lfsr	0,__pbssBANK1
  1282   000D30  0E64               	movlw	100
  1283   000D32                     clear_0:
  1284   000D32  6AEE               	clrf	postinc0,c
  1285   000D34  06E8               	decf	wreg,f,c
  1286   000D36  E1FD               	bnz	clear_0
  1287                           
  1288                           ; Clear objects allocated to BANK0 (32 bytes)
  1289   000D38  EE00  F080         	lfsr	0,__pbssBANK0
  1290   000D3C  0E20               	movlw	32
  1291   000D3E                     clear_1:
  1292   000D3E  6AEE               	clrf	postinc0,c
  1293   000D40  06E8               	decf	wreg,f,c
  1294   000D42  E1FD               	bnz	clear_1
  1295                           
  1296                           ; Clear objects allocated to COMRAM (59 bytes)
  1297   000D44  EE00  F040         	lfsr	0,__pbssCOMRAM
  1298   000D48  0E3B               	movlw	59
  1299   000D4A                     clear_2:
  1300   000D4A  6AEE               	clrf	postinc0,c
  1301   000D4C  06E8               	decf	wreg,f,c
  1302   000D4E  E1FD               	bnz	clear_2
  1303   000D50                     end_of_initialization:
  1304                           	callstack 0
  1305   000D50                     __end_of__initialization:
  1306                           	callstack 0
  1307   000D50  907B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1308   000D52  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1309   000D54  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1310   000D56  6EF8               	movwf	tblptru,c
  1311   000D58  0100               	movlb	0
  1312   000D5A  EFC4  F006         	goto	_main	;jump to C main() function
  1313                           
  1314                           	psect	bssCOMRAM
  1315   000040                     __pbssCOMRAM:
  1316                           	callstack 0
  1317   000040                     _Timers:
  1318                           	callstack 0
  1319   000040                     	ds	20
  1320   000054                     _Tics:
  1321                           	callstack 0
  1322   000054                     	ds	4
  1323   000058                     _nout:
  1324                           	callstack 0
  1325   000058                     	ds	2
  1326   00005A                     _width:
  1327                           	callstack 0
  1328   00005A                     	ds	2
  1329   00005C                     _prec:
  1330                           	callstack 0
  1331   00005C                     	ds	2
  1332   00005E                     	ds	2
  1333   000060                     _flags:
  1334                           	callstack 0
  1335   000060                     	ds	1
  1336   000061                     motorTerminal@state:
  1337                           	callstack 0
  1338   000061                     	ds	1
  1339   000062                     _hashtag_pressed:
  1340                           	callstack 0
  1341   000062                     	ds	1
  1342   000063                     _ColumnAct:
  1343                           	callstack 0
  1344   000063                     	ds	1
  1345   000064                     _RowAct:
  1346                           	callstack 0
  1347   000064                     	ds	1
  1348   000065                     _Columns:
  1349                           	callstack 0
  1350   000065                     	ds	1
  1351   000066                     _Rows:
  1352                           	callstack 0
  1353   000066                     	ds	1
  1354   000067                     motor_RFID@TagType:
  1355                           	callstack 0
  1356   000067                     	ds	1
  1357   000068                     	ds	1
  1358   000069                     motor_RFID@i:
  1359                           	callstack 0
  1360   000069                     	ds	1
  1361   00006A                     motor_RFID@n:
  1362                           	callstack 0
  1363   00006A                     	ds	1
  1364   00006B                     motor_RFID@waitIRq:
  1365                           	callstack 0
  1366   00006B                     	ds	1
  1367   00006C                     motor_RFID@irqEn:
  1368                           	callstack 0
  1369   00006C                     	ds	1
  1370   00006D                     motor_RFID@substate:
  1371                           	callstack 0
  1372   00006D                     	ds	1
  1373   00006E                     motor_RFID@state:
  1374                           	callstack 0
  1375   00006E                     	ds	1
  1376   00006F                     _state:
  1377                           	callstack 0
  1378   00006F                     	ds	1
  1379   000070                     _tecla:
  1380                           	callstack 0
  1381   000070                     	ds	1
  1382   000071                     _Columnas:
  1383                           	callstack 0
  1384   000071                     	ds	1
  1385   000072                     _Filas:
  1386                           	callstack 0
  1387   000072                     	ds	1
  1388   000073                     motor_RFID@UID:
  1389                           	callstack 0
  1390   000073                     	ds	6
  1391   000079                     _Timer:
  1392                           	callstack 0
  1393   000079                     	ds	1
  1394   00007A                     _timer:
  1395                           	callstack 0
  1396   00007A                     	ds	1
  1397                           
  1398                           	psect	bssBANK0
  1399   000080                     __pbssBANK0:
  1400                           	callstack 0
  1401   000080                     _dbuf:
  1402                           	callstack 0
  1403   000080                     	ds	32
  1404                           
  1405                           	psect	bssBANK1
  1406   000100                     __pbssBANK1:
  1407                           	callstack 0
  1408   000100                     motor_RFID@buffer:
  1409                           	callstack 0
  1410   000100                     	ds	100
  1411                           
  1412                           	psect	cstackCOMRAM
  1413   000001                     __pcstackCOMRAM:
  1414                           	callstack 0
  1415   000001                     ??_LowRSI:
  1416                           
  1417                           ; 1 bytes @ 0x0
  1418   000001                     	ds	1
  1419   000002                     ?_Terminal_TXAvailable:
  1420                           	callstack 0
  1421   000002                     ?___awdiv:
  1422                           	callstack 0
  1423   000002                     ?___awmod:
  1424                           	callstack 0
  1425   000002                     TI_Init@counter:
  1426                           	callstack 0
  1427   000002                     TI_NewTimer@TimerHandle:
  1428                           	callstack 0
  1429   000002                     Terminal_SendChar@c:
  1430                           	callstack 0
  1431   000002                     ___awdiv@dividend:
  1432                           	callstack 0
  1433   000002                     ___awmod@dividend:
  1434                           	callstack 0
  1435   000002                     fputc@c:
  1436                           	callstack 0
  1437   000002                     ??_delay_us:
  1438   000002                     
  1439                           ; 1 bytes @ 0x1
  1440   000002                     	ds	1
  1441   000003                     
  1442                           ; 1 bytes @ 0x2
  1443   000003                     	ds	1
  1444   000004                     TI_NewTimer@Comptador:
  1445                           	callstack 0
  1446   000004                     fputc@fp:
  1447                           	callstack 0
  1448   000004                     ___awdiv@divisor:
  1449                           	callstack 0
  1450   000004                     ___awmod@divisor:
  1451                           	callstack 0
  1452   000004                     ??_Terminal_TXAvailable:
  1453                           
  1454                           ; 1 bytes @ 0x3
  1455   000004                     	ds	1
  1456   000005                     delay_us@howMany:
  1457                           	callstack 0
  1458   000005                     Terminal_SendString@str:
  1459                           	callstack 0
  1460   000005                     ??_fputc:
  1461                           
  1462                           ; 1 bytes @ 0x4
  1463   000005                     	ds	1
  1464   000006                     delay_us@x:
  1465                           	callstack 0
  1466   000006                     ___awdiv@counter:
  1467                           	callstack 0
  1468   000006                     ___awmod@counter:
  1469                           	callstack 0
  1470   000006                     
  1471                           ; 1 bytes @ 0x5
  1472   000006                     	ds	1
  1473   000007                     displayUID@uid:
  1474                           	callstack 0
  1475   000007                     ___awdiv@sign:
  1476                           	callstack 0
  1477   000007                     ___awmod@sign:
  1478                           	callstack 0
  1479   000007                     ??_MFRC522_Rd:
  1480                           
  1481                           ; 1 bytes @ 0x6
  1482   000007                     	ds	1
  1483   000008                     ?_abs:
  1484                           	callstack 0
  1485   000008                     MFRC522_Rd@Address:
  1486                           	callstack 0
  1487   000008                     ___awdiv@quotient:
  1488                           	callstack 0
  1489   000008                     abs@a:
  1490                           	callstack 0
  1491   000008                     ??_displayUID:
  1492                           
  1493                           ; 1 bytes @ 0x7
  1494   000008                     	ds	1
  1495   000009                     MFRC522_Rd@ucAddr:
  1496                           	callstack 0
  1497   000009                     displayUID@hexString:
  1498                           	callstack 0
  1499                           
  1500                           ; 11 bytes @ 0x8
  1501   000009                     	ds	1
  1502   00000A                     MFRC522_Rd@ucResult:
  1503                           	callstack 0
  1504   00000A                     ??_abs:
  1505                           
  1506                           ; 1 bytes @ 0x9
  1507   00000A                     	ds	1
  1508   00000B                     MFRC522_Rd@i:
  1509                           	callstack 0
  1510                           
  1511                           ; 1 bytes @ 0xA
  1512   00000B                     	ds	1
  1513   00000C                     ?_vfpfcnvrt:
  1514                           	callstack 0
  1515   00000C                     MFRC522_Wr@value:
  1516                           	callstack 0
  1517   00000C                     vfpfcnvrt@fp:
  1518                           	callstack 0
  1519                           
  1520                           ; 1 bytes @ 0xB
  1521   00000C                     	ds	1
  1522   00000D                     vfpfcnvrt@fmt:
  1523                           	callstack 0
  1524   00000D                     ??_MFRC522_Wr:
  1525                           
  1526                           ; 1 bytes @ 0xC
  1527   00000D                     	ds	1
  1528   00000E                     MFRC522_Wr@Address:
  1529                           	callstack 0
  1530   00000E                     vfpfcnvrt@ap:
  1531                           	callstack 0
  1532                           
  1533                           ; 1 bytes @ 0xD
  1534   00000E                     	ds	1
  1535   00000F                     MFRC522_Wr@ucAddr:
  1536                           	callstack 0
  1537   00000F                     ??_vfpfcnvrt:
  1538                           
  1539                           ; 1 bytes @ 0xE
  1540   00000F                     	ds	1
  1541   000010                     MFRC522_Wr@i:
  1542                           	callstack 0
  1543                           
  1544                           ; 1 bytes @ 0xF
  1545   000010                     	ds	1
  1546   000011                     MFRC522_Clear_Bit@mask:
  1547                           	callstack 0
  1548   000011                     MFRC522_Set_Bit@mask:
  1549                           	callstack 0
  1550   000011                     vfpfcnvrt@done:
  1551                           	callstack 0
  1552   000011                     
  1553                           ; 1 bytes @ 0x10
  1554   000011                     	ds	1
  1555   000012                     MFRC522_Set_Bit@addr:
  1556                           	callstack 0
  1557   000012                     vfpfcnvrt@cnt:
  1558                           	callstack 0
  1559   000012                     ??_MFRC522_Clear_Bit:
  1560   000012                     
  1561                           ; 1 bytes @ 0x11
  1562   000012                     	ds	1
  1563   000013                     MFRC522_Clear_Bit@addr:
  1564                           	callstack 0
  1565   000013                     
  1566                           ; 1 bytes @ 0x12
  1567   000013                     	ds	1
  1568   000014                     _displayUID$823:
  1569                           	callstack 0
  1570   000014                     vfpfcnvrt@cp:
  1571                           	callstack 0
  1572   000014                     
  1573                           ; 1 bytes @ 0x13
  1574   000014                     	ds	2
  1575   000016                     _displayUID$824:
  1576                           	callstack 0
  1577   000016                     vfpfcnvrt@convarg:
  1578                           	callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x15
  1581   000016                     	ds	2
  1582   000018                     displayUID@i:
  1583                           	callstack 0
  1584                           
  1585                           ; 2 bytes @ 0x17
  1586   000018                     	ds	2
  1587   00001A                     displayUID@nibble:
  1588                           	callstack 0
  1589   00001A                     vfpfcnvrt@c:
  1590                           	callstack 0
  1591                           
  1592                           ; 1 bytes @ 0x19
  1593   00001A                     	ds	1
  1594   00001B                     ?_vfprintf:
  1595                           	callstack 0
  1596   00001B                     vfprintf@fp:
  1597                           	callstack 0
  1598                           
  1599                           ; 1 bytes @ 0x1A
  1600   00001B                     	ds	1
  1601   00001C                     vfprintf@fmt:
  1602                           	callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x1B
  1605   00001C                     	ds	2
  1606   00001E                     vfprintf@ap:
  1607                           	callstack 0
  1608                           
  1609                           ; 1 bytes @ 0x1D
  1610   00001E                     	ds	1
  1611   00001F                     vfprintf@cfmt:
  1612                           	callstack 0
  1613   00001F                     
  1614                           ; 1 bytes @ 0x1E
  1615   00001F                     	ds	2
  1616   000021                     ?_sprintf:
  1617                           	callstack 0
  1618   000021                     sprintf@s:
  1619                           	callstack 0
  1620                           
  1621                           ; 2 bytes @ 0x20
  1622   000021                     	ds	2
  1623   000023                     sprintf@fmt:
  1624                           	callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x22
  1627   000023                     	ds	6
  1628   000029                     sprintf@ret:
  1629                           	callstack 0
  1630   000029                     
  1631                           ; 1 bytes @ 0x28
  1632   000029                     	ds	2
  1633   00002B                     sprintf@ap:
  1634                           	callstack 0
  1635                           
  1636                           ; 1 bytes @ 0x2A
  1637   00002B                     	ds	1
  1638   00002C                     sprintf@f:
  1639                           	callstack 0
  1640                           
  1641                           ; 11 bytes @ 0x2B
  1642   00002C                     	ds	11
  1643   000037                     ??_motor_RFID:
  1644                           
  1645                           ; 1 bytes @ 0x36
  1646   000037                     	ds	2
  1647   000039                     motor_RFID@fifoLevel_530:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x38
  1651   000039                     	ds	1
  1652   00003A                     motor_RFID@p:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x39
  1656   00003A                     	ds	2
  1657   00003C                     motor_RFID@backBitsCalc:
  1658                           	callstack 0
  1659                           
  1660                           ; 2 bytes @ 0x3B
  1661   00003C                     	ds	2
  1662   00003E                     motor_RFID@fifoLevel:
  1663                           	callstack 0
  1664                           
  1665                           ; 1 bytes @ 0x3D
  1666   00003E                     	ds	1
  1667   00003F                     motor_RFID@lastBitsVal:
  1668                           	callstack 0
  1669                           
  1670                           ; 1 bytes @ 0x3E
  1671   00003F                     	ds	1
  1672   000040                     
  1673                           ; 1 bytes @ 0x3F
  1674 ;;
  1675 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1676 ;;
  1677 ;; *************** function _main *****************
  1678 ;; Defined at:
  1679 ;;		line 36 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1
  1693 ;;      Params:         0       0       0
  1694 ;;      Locals:         0       0       0
  1695 ;;      Temps:          0       0       0
  1696 ;;      Totals:         0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels required when called: 9
  1699 ;; This function calls:
  1700 ;;		_TI_Init
  1701 ;;		_Terminal_Init
  1702 ;;		_initPorts
  1703 ;;		_initRFID
  1704 ;;		_initTeclado
  1705 ;;		_motor_RFID
  1706 ;; This function is called by:
  1707 ;;		Startup code after reset
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text0
  1712   000D88                     __ptext0:
  1713                           	callstack 0
  1714   000D88                     _main:
  1715                           	callstack 22
  1716   000D88                     
  1717                           ;main.c: 37:  ADCON1 = 0xFF;
  1718   000D88  EC7C  F006         	call	_TI_Init	;wreg free
  1719                           
  1720                           ;main.c: 38:  TRISA = 0x00;
  1721   000D8C  ECFF  F006         	call	_initTeclado	;wreg free
  1722   000D90                     
  1723                           ;main.c: 39: }
  1724   000D90  EC3A  F007         	call	_initRFID	;wreg free
  1725   000D94                     
  1726                           ;main.c: 40: 
  1727   000D94  EC1F  F007         	call	_Terminal_Init	;wreg free
  1728   000D98                     
  1729                           ;main.c: 41: 
  1730   000D98  EC47  F007         	call	_initPorts	;wreg free
  1731   000D9C                     
  1732                           ;main.c: 44: 
  1733   000D9C  8EF2               	bsf	242,7,c	;volatile
  1734   000D9E                     
  1735                           ;main.c: 45: 
  1736   000D9E  8CF2               	bsf	242,6,c	;volatile
  1737   000DA0                     l3358:
  1738   000DA0  6A89               	clrf	137,c	;volatile
  1739   000DA2  EC15  F000         	call	_motor_RFID	;wreg free
  1740   000DA6  6889               	setf	137,c	;volatile
  1741   000DA8  EFD0  F006         	goto	l3358
  1742   000DAC  EF13  F000         	goto	start
  1743   000DB0                     __end_of_main:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _motor_RFID *****************
  1747 ;; Defined at:
  1748 ;;		line 315 in file "TAD_RFID.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  fifoLevel       1   56[COMRAM] unsigned char 
  1753 ;;  backBitsCalc    2   59[COMRAM] unsigned int 
  1754 ;;  lastBitsVal     1   62[COMRAM] unsigned char 
  1755 ;;  fifoLevel       1   61[COMRAM] unsigned char 
  1756 ;;  p               2   57[COMRAM] PTR unsigned char 
  1757 ;;		 -> motor_RFID@buffer(100), 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1
  1767 ;;      Params:         0       0       0
  1768 ;;      Locals:         7       0       0
  1769 ;;      Temps:          2       0       0
  1770 ;;      Totals:         9       0       0
  1771 ;;Total ram usage:        9 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 8
  1774 ;; This function calls:
  1775 ;;		_MFRC522_Clear_Bit
  1776 ;;		_MFRC522_Rd
  1777 ;;		_MFRC522_Set_Bit
  1778 ;;		_MFRC522_Wr
  1779 ;;		_displayUID
  1780 ;;		_sprintf
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text1
  1787   00002A                     __ptext1:
  1788                           	callstack 0
  1789   00002A                     _motor_RFID:
  1790                           	callstack 22
  1791   00002A                     
  1792                           ;TAD_RFID.c: 316:     static char state = 0;;TAD_RFID.c: 317:     static char substate =
      +                           0;;TAD_RFID.c: 318:     static char irqEn, waitIRq, n;;TAD_RFID.c: 319:     static unsi
      +                          gned char i;;TAD_RFID.c: 320:     static char _status;;TAD_RFID.c: 321:     static unsig
      +                          ned unLen;;TAD_RFID.c: 322:     static char TagType;;TAD_RFID.c: 323:     static unsigne
      +                          d char UID[6];;TAD_RFID.c: 324:     static char buffer[100];;TAD_RFID.c: 325:     char *
      +                          p = buffer;
  1793   00002A  0E00               	movlw	low motor_RFID@buffer
  1794   00002C  6E3A               	movwf	motor_RFID@p^0,c
  1795   00002E  0E01               	movlw	high motor_RFID@buffer
  1796   000030  6E3B               	movwf	(motor_RFID@p+1)^0,c
  1797   000032                     
  1798                           ;TAD_RFID.c: 326:     p += sprintf(p, "state: %d, substate: %d\r\n", state, substate);
  1799   000032  C03A  F021         	movff	motor_RFID@p,sprintf@s
  1800   000036  C03B  F022         	movff	motor_RFID@p+1,sprintf@s+1
  1801   00003A  0E75               	movlw	low STR_1
  1802   00003C  6E23               	movwf	sprintf@fmt^0,c
  1803   00003E  0E1F               	movlw	high STR_1
  1804   000040  6E24               	movwf	(sprintf@fmt+1)^0,c
  1805   000042  C06E  F025         	movff	motor_RFID@state,?_sprintf+4
  1806   000046  6A26               	clrf	(?_sprintf+5)^0,c
  1807   000048  C06D  F027         	movff	motor_RFID@substate,?_sprintf+6
  1808   00004C  6A28               	clrf	(?_sprintf+7)^0,c
  1809   00004E  ECF8  F005         	call	_sprintf	;wreg free
  1810   000052  5021               	movf	?_sprintf^0,w,c
  1811   000054  263A               	addwf	motor_RFID@p^0,f,c
  1812   000056  5022               	movf	(?_sprintf+1)^0,w,c
  1813   000058  223B               	addwfc	(motor_RFID@p+1)^0,f,c
  1814                           
  1815                           ;TAD_RFID.c: 328:     switch(state) {
  1816   00005A  EF26  F002         	goto	l3318
  1817   00005E                     l3140:
  1818                           
  1819                           ;TAD_RFID.c: 334:                     MFRC522_Wr(0x0D, 0x07);
  1820   00005E  0E07               	movlw	7
  1821   000060  6E0C               	movwf	MFRC522_Wr@value^0,c
  1822   000062  0E0D               	movlw	13
  1823   000064  ECC5  F004         	call	_MFRC522_Wr
  1824   000068                     
  1825                           ;TAD_RFID.c: 335:                     TagType = 0x26;
  1826   000068  0E26               	movlw	38
  1827   00006A  6E67               	movwf	motor_RFID@TagType^0,c
  1828   00006C                     l3144:
  1829                           
  1830                           ;TAD_RFID.c: 336:                     substate = 1;
  1831   00006C  0E01               	movlw	1
  1832   00006E  6E6D               	movwf	motor_RFID@substate^0,c
  1833                           
  1834                           ;TAD_RFID.c: 337:                     break;
  1835   000070  EF35  F002         	goto	l389
  1836   000074                     l3146:
  1837                           
  1838                           ;TAD_RFID.c: 340:                     irqEn = 0x77;
  1839   000074  0E77               	movlw	119
  1840   000076  6E6C               	movwf	motor_RFID@irqEn^0,c
  1841                           
  1842                           ;TAD_RFID.c: 341:                     waitIRq = 0x30;
  1843   000078  0E30               	movlw	48
  1844   00007A  6E6B               	movwf	motor_RFID@waitIRq^0,c
  1845   00007C                     
  1846                           ;TAD_RFID.c: 342:                     MFRC522_Wr(0x02, irqEn | 0x80);
  1847   00007C  0EF7               	movlw	247
  1848   00007E  6E0C               	movwf	MFRC522_Wr@value^0,c
  1849   000080  0E02               	movlw	2
  1850   000082  ECC5  F004         	call	_MFRC522_Wr
  1851   000086                     l3150:
  1852                           
  1853                           ;TAD_RFID.c: 343:                     substate = 2;
  1854   000086  0E02               	movlw	2
  1855   000088  6E6D               	movwf	motor_RFID@substate^0,c
  1856                           
  1857                           ;TAD_RFID.c: 344:                     break;
  1858   00008A  EF35  F002         	goto	l389
  1859   00008E                     l3152:
  1860                           
  1861                           ;TAD_RFID.c: 347:                     MFRC522_Clear_Bit(0x04, 0x80);
  1862   00008E  0E80               	movlw	128
  1863   000090  6E11               	movwf	MFRC522_Clear_Bit@mask^0,c
  1864   000092  0E04               	movlw	4
  1865   000094  ECE6  F006         	call	_MFRC522_Clear_Bit
  1866   000098                     l3154:
  1867                           
  1868                           ;TAD_RFID.c: 348:                     substate = 3;
  1869   000098  0E03               	movlw	3
  1870   00009A  6E6D               	movwf	motor_RFID@substate^0,c
  1871                           
  1872                           ;TAD_RFID.c: 349:                     break;
  1873   00009C  EF35  F002         	goto	l389
  1874   0000A0                     l3156:
  1875                           
  1876                           ;TAD_RFID.c: 352:                     MFRC522_Set_Bit(0x0A, 0x80);
  1877   0000A0  0E80               	movlw	128
  1878   0000A2  6E11               	movwf	MFRC522_Set_Bit@mask^0,c
  1879   0000A4  0E0A               	movlw	10
  1880   0000A6  EC15  F007         	call	_MFRC522_Set_Bit
  1881   0000AA                     l3158:
  1882                           
  1883                           ;TAD_RFID.c: 353:                     substate = 4;
  1884   0000AA  0E04               	movlw	4
  1885   0000AC  6E6D               	movwf	motor_RFID@substate^0,c
  1886                           
  1887                           ;TAD_RFID.c: 354:                     break;
  1888   0000AE  EF35  F002         	goto	l389
  1889   0000B2                     l3160:
  1890                           
  1891                           ;TAD_RFID.c: 357:                     MFRC522_Wr(0x01, 0x00);
  1892   0000B2  0E00               	movlw	0
  1893   0000B4  6E0C               	movwf	MFRC522_Wr@value^0,c
  1894   0000B6  0E01               	movlw	1
  1895   0000B8  ECC5  F004         	call	_MFRC522_Wr
  1896   0000BC                     l3162:
  1897                           
  1898                           ;TAD_RFID.c: 358:                     substate = 5;
  1899   0000BC  0E05               	movlw	5
  1900   0000BE  6E6D               	movwf	motor_RFID@substate^0,c
  1901                           
  1902                           ;TAD_RFID.c: 359:                     break;
  1903   0000C0  EF35  F002         	goto	l389
  1904   0000C4                     l3164:
  1905                           
  1906                           ;TAD_RFID.c: 362:                     MFRC522_Wr(0x09, TagType);
  1907   0000C4  C067  F00C         	movff	motor_RFID@TagType,MFRC522_Wr@value
  1908   0000C8  0E09               	movlw	9
  1909   0000CA  ECC5  F004         	call	_MFRC522_Wr
  1910   0000CE                     l3166:
  1911                           
  1912                           ;TAD_RFID.c: 363:                     substate = 6;
  1913   0000CE  0E06               	movlw	6
  1914   0000D0  6E6D               	movwf	motor_RFID@substate^0,c
  1915                           
  1916                           ;TAD_RFID.c: 364:                     break;
  1917   0000D2  EF35  F002         	goto	l389
  1918   0000D6                     l3168:
  1919                           
  1920                           ;TAD_RFID.c: 367:                     MFRC522_Wr(0x01, 0x0C);
  1921   0000D6  0E0C               	movlw	12
  1922   0000D8  6E0C               	movwf	MFRC522_Wr@value^0,c
  1923   0000DA  0E01               	movlw	1
  1924   0000DC  ECC5  F004         	call	_MFRC522_Wr
  1925   0000E0                     l3170:
  1926                           
  1927                           ;TAD_RFID.c: 368:                     substate = 7;
  1928   0000E0  0E07               	movlw	7
  1929   0000E2  6E6D               	movwf	motor_RFID@substate^0,c
  1930                           
  1931                           ;TAD_RFID.c: 369:                     break;
  1932   0000E4  EF35  F002         	goto	l389
  1933   0000E8                     l3172:
  1934                           
  1935                           ;TAD_RFID.c: 372:                     MFRC522_Set_Bit(0x0D, 0x80);
  1936   0000E8  0E80               	movlw	128
  1937   0000EA  6E11               	movwf	MFRC522_Set_Bit@mask^0,c
  1938   0000EC  0E0D               	movlw	13
  1939   0000EE  EC15  F007         	call	_MFRC522_Set_Bit
  1940   0000F2                     
  1941                           ;TAD_RFID.c: 373:                     i = 0xFF;
  1942   0000F2  6869               	setf	motor_RFID@i^0,c
  1943   0000F4                     l3176:
  1944                           
  1945                           ;TAD_RFID.c: 374:                     substate = 8;
  1946   0000F4  0E08               	movlw	8
  1947   0000F6  6E6D               	movwf	motor_RFID@substate^0,c
  1948                           
  1949                           ;TAD_RFID.c: 375:                     break;
  1950   0000F8  EF35  F002         	goto	l389
  1951   0000FC                     l3178:
  1952                           
  1953                           ;TAD_RFID.c: 378:                     n = MFRC522_Rd(0x04);
  1954   0000FC  0E04               	movlw	4
  1955   0000FE  EC19  F005         	call	_MFRC522_Rd
  1956   000102  6E6A               	movwf	motor_RFID@n^0,c
  1957   000104                     
  1958                           ;TAD_RFID.c: 379:                     if ((n & 0x01) || (n & waitIRq) || (--i == 0)) {
  1959   000104  B06A               	btfsc	motor_RFID@n^0,0,c
  1960   000106  EF87  F000         	goto	u2341
  1961   00010A  EF89  F000         	goto	u2340
  1962   00010E                     u2341:
  1963   00010E  EF96  F000         	goto	l3186
  1964   000112                     u2340:
  1965   000112  506A               	movf	motor_RFID@n^0,w,c
  1966   000114  146B               	andwf	motor_RFID@waitIRq^0,w,c
  1967   000116  0900               	iorlw	0
  1968   000118  A4D8               	btfss	status,2,c
  1969   00011A  EF91  F000         	goto	u2351
  1970   00011E  EF93  F000         	goto	u2350
  1971   000122                     u2351:
  1972   000122  EF96  F000         	goto	l3186
  1973   000126                     u2350:
  1974   000126  2E69               	decfsz	motor_RFID@i^0,f,c
  1975   000128  EF35  F002         	goto	l389
  1976   00012C                     l3186:
  1977                           
  1978                           ;TAD_RFID.c: 380:                         substate = 9;
  1979   00012C  0E09               	movlw	9
  1980   00012E  6E6D               	movwf	motor_RFID@substate^0,c
  1981   000130  EF35  F002         	goto	l389
  1982   000134                     l3188:
  1983                           
  1984                           ;TAD_RFID.c: 385:                     MFRC522_Clear_Bit(0x0D, 0x80);
  1985   000134  0E80               	movlw	128
  1986   000136  6E11               	movwf	MFRC522_Clear_Bit@mask^0,c
  1987   000138  0E0D               	movlw	13
  1988   00013A  ECE6  F006         	call	_MFRC522_Clear_Bit
  1989   00013E                     l3190:
  1990                           
  1991                           ;TAD_RFID.c: 386:                     substate = 10;
  1992   00013E  0E0A               	movlw	10
  1993   000140  6E6D               	movwf	motor_RFID@substate^0,c
  1994                           
  1995                           ;TAD_RFID.c: 387:                     break;
  1996   000142  EF35  F002         	goto	l389
  1997   000146                     l3192:
  1998                           
  1999                           ;TAD_RFID.c: 390:                     if (i != 0 && !(MFRC522_Rd(0x06) & 0x1B)) {
  2000   000146  5069               	movf	motor_RFID@i^0,w,c
  2001   000148  B4D8               	btfsc	status,2,c
  2002   00014A  EFA9  F000         	goto	u2361
  2003   00014E  EFAB  F000         	goto	u2360
  2004   000152                     u2361:
  2005   000152  EFF5  F000         	goto	l3208
  2006   000156                     u2360:
  2007   000156  0E06               	movlw	6
  2008   000158  EC19  F005         	call	_MFRC522_Rd
  2009   00015C  6E37               	movwf	??_motor_RFID^0,c
  2010   00015E  0E1B               	movlw	27
  2011   000160  1637               	andwf	??_motor_RFID^0,f,c
  2012   000162  A4D8               	btfss	status,2,c
  2013   000164  EFB6  F000         	goto	u2371
  2014   000168  EFB8  F000         	goto	u2370
  2015   00016C                     u2371:
  2016   00016C  EFF5  F000         	goto	l3208
  2017   000170                     u2370:
  2018   000170                     
  2019                           ;TAD_RFID.c: 391:                         unsigned char fifoLevel = MFRC522_Rd(0x0A);
  2020   000170  0E0A               	movlw	10
  2021   000172  EC19  F005         	call	_MFRC522_Rd
  2022   000176  6E3E               	movwf	motor_RFID@fifoLevel^0,c
  2023                           
  2024                           ;TAD_RFID.c: 392:                         unsigned char lastBitsVal = MFRC522_Rd(0x0C) &
      +                           0x07;
  2025   000178  0E0C               	movlw	12
  2026   00017A  EC19  F005         	call	_MFRC522_Rd
  2027   00017E  0B07               	andlw	7
  2028   000180  6E3F               	movwf	motor_RFID@lastBitsVal^0,c
  2029   000182                     
  2030                           ;TAD_RFID.c: 393:                         unsigned backBitsCalc;;TAD_RFID.c: 394:       
      +                                            if (lastBitsVal)
  2031   000182  503F               	movf	motor_RFID@lastBitsVal^0,w,c
  2032   000184  B4D8               	btfsc	status,2,c
  2033   000186  EFC7  F000         	goto	u2381
  2034   00018A  EFC9  F000         	goto	u2380
  2035   00018E                     u2381:
  2036   00018E  EFE1  F000         	goto	l3202
  2037   000192                     u2380:
  2038   000192                     
  2039                           ;TAD_RFID.c: 395:                             backBitsCalc = (fifoLevel - 1) * 8 + lastB
      +                          itsVal;
  2040   000192  503F               	movf	motor_RFID@lastBitsVal^0,w,c
  2041   000194  C03E  F037         	movff	motor_RFID@fifoLevel,??_motor_RFID
  2042   000198  6A38               	clrf	(??_motor_RFID+1)^0,c
  2043   00019A  90D8               	bcf	status,0,c
  2044   00019C  3637               	rlcf	??_motor_RFID^0,f,c
  2045   00019E  3638               	rlcf	(??_motor_RFID+1)^0,f,c
  2046   0001A0  90D8               	bcf	status,0,c
  2047   0001A2  3637               	rlcf	??_motor_RFID^0,f,c
  2048   0001A4  3638               	rlcf	(??_motor_RFID+1)^0,f,c
  2049   0001A6  90D8               	bcf	status,0,c
  2050   0001A8  3637               	rlcf	??_motor_RFID^0,f,c
  2051   0001AA  3638               	rlcf	(??_motor_RFID+1)^0,f,c
  2052   0001AC  2637               	addwf	??_motor_RFID^0,f,c
  2053   0001AE  0E00               	movlw	0
  2054   0001B0  2238               	addwfc	(??_motor_RFID+1)^0,f,c
  2055   0001B2  0EF8               	movlw	248
  2056   0001B4  2437               	addwf	??_motor_RFID^0,w,c
  2057   0001B6  6E3C               	movwf	motor_RFID@backBitsCalc^0,c
  2058   0001B8  0EFF               	movlw	255
  2059   0001BA  2038               	addwfc	(??_motor_RFID+1)^0,w,c
  2060   0001BC  6E3D               	movwf	(motor_RFID@backBitsCalc+1)^0,c
  2061   0001BE  EFE7  F000         	goto	l3204
  2062   0001C2                     l3202:
  2063                           
  2064                           ;TAD_RFID.c: 397:                             backBitsCalc = fifoLevel * 8;
  2065   0001C2  503E               	movf	motor_RFID@fifoLevel^0,w,c
  2066   0001C4  0D08               	mullw	8
  2067   0001C6  CFF3 F03C          	movff	prodl,motor_RFID@backBitsCalc
  2068   0001CA  CFF4 F03D          	movff	prodh,motor_RFID@backBitsCalc+1
  2069   0001CE                     l3204:
  2070                           
  2071                           ;TAD_RFID.c: 399:                         if (backBitsCalc == 0x10) {
  2072   0001CE  0E10               	movlw	16
  2073   0001D0  183C               	xorwf	motor_RFID@backBitsCalc^0,w,c
  2074   0001D2  103D               	iorwf	(motor_RFID@backBitsCalc+1)^0,w,c
  2075   0001D4  A4D8               	btfss	status,2,c
  2076   0001D6  EFEF  F000         	goto	u2391
  2077   0001DA  EFF1  F000         	goto	u2390
  2078   0001DE                     u2391:
  2079   0001DE  EFF5  F000         	goto	l3208
  2080   0001E2                     u2390:
  2081   0001E2                     l3206:
  2082                           
  2083                           ;TAD_RFID.c: 400:                             substate = 11;
  2084   0001E2  0E0B               	movlw	11
  2085   0001E4  6E6D               	movwf	motor_RFID@substate^0,c
  2086                           
  2087                           ;TAD_RFID.c: 401:                         } else {
  2088   0001E6  EF35  F002         	goto	l389
  2089   0001EA                     l3208:
  2090                           
  2091                           ;TAD_RFID.c: 402:                             substate = 12;
  2092   0001EA  0E0C               	movlw	12
  2093   0001EC  6E6D               	movwf	motor_RFID@substate^0,c
  2094   0001EE  EF35  F002         	goto	l389
  2095   0001F2                     l3212:
  2096                           
  2097                           ;TAD_RFID.c: 410:                     state = 1;
  2098   0001F2  0E01               	movlw	1
  2099   0001F4  6E6E               	movwf	motor_RFID@state^0,c
  2100   0001F6                     l3214:
  2101                           
  2102                           ;TAD_RFID.c: 411:                     substate = 0;
  2103   0001F6  6A6D               	clrf	motor_RFID@substate^0,c
  2104                           
  2105                           ;TAD_RFID.c: 412:                     break;
  2106   0001F8  EF35  F002         	goto	l389
  2107   0001FC                     l360:
  2108                           
  2109                           ;TAD_RFID.c: 415:                     state = 0;
  2110   0001FC  6A6E               	clrf	motor_RFID@state^0,c
  2111                           
  2112                           ;TAD_RFID.c: 416:                     substate = 0;
  2113   0001FE  6A6D               	clrf	motor_RFID@substate^0,c
  2114                           
  2115                           ;TAD_RFID.c: 417:                     break;
  2116   000200  EF35  F002         	goto	l389
  2117   000204                     l3218:
  2118   000204  506D               	movf	motor_RFID@substate^0,w,c
  2119                           
  2120                           ; Switch size 1, requested type "simple"
  2121                           ; Number of cases is 13, Range of values is 0 to 12
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte           40    21 (average)
  2125                           ;	Chosen strategy is simple_byte
  2126   000206  0A00               	xorlw	0	; case 0
  2127   000208  B4D8               	btfsc	status,2,c
  2128   00020A  EF2F  F000         	goto	l3140
  2129   00020E  0A01               	xorlw	1	; case 1
  2130   000210  B4D8               	btfsc	status,2,c
  2131   000212  EF3A  F000         	goto	l3146
  2132   000216  0A03               	xorlw	3	; case 2
  2133   000218  B4D8               	btfsc	status,2,c
  2134   00021A  EF47  F000         	goto	l3152
  2135   00021E  0A01               	xorlw	1	; case 3
  2136   000220  B4D8               	btfsc	status,2,c
  2137   000222  EF50  F000         	goto	l3156
  2138   000226  0A07               	xorlw	7	; case 4
  2139   000228  B4D8               	btfsc	status,2,c
  2140   00022A  EF59  F000         	goto	l3160
  2141   00022E  0A01               	xorlw	1	; case 5
  2142   000230  B4D8               	btfsc	status,2,c
  2143   000232  EF62  F000         	goto	l3164
  2144   000236  0A03               	xorlw	3	; case 6
  2145   000238  B4D8               	btfsc	status,2,c
  2146   00023A  EF6B  F000         	goto	l3168
  2147   00023E  0A01               	xorlw	1	; case 7
  2148   000240  B4D8               	btfsc	status,2,c
  2149   000242  EF74  F000         	goto	l3172
  2150   000246  0A0F               	xorlw	15	; case 8
  2151   000248  B4D8               	btfsc	status,2,c
  2152   00024A  EF7E  F000         	goto	l3178
  2153   00024E  0A01               	xorlw	1	; case 9
  2154   000250  B4D8               	btfsc	status,2,c
  2155   000252  EF9A  F000         	goto	l3188
  2156   000256  0A03               	xorlw	3	; case 10
  2157   000258  B4D8               	btfsc	status,2,c
  2158   00025A  EFA3  F000         	goto	l3192
  2159   00025E  0A01               	xorlw	1	; case 11
  2160   000260  B4D8               	btfsc	status,2,c
  2161   000262  EFF9  F000         	goto	l3212
  2162   000266  0A07               	xorlw	7	; case 12
  2163   000268  B4D8               	btfsc	status,2,c
  2164   00026A  EFFE  F000         	goto	l360
  2165   00026E  EF35  F002         	goto	l389
  2166   000272                     l3220:
  2167                           
  2168                           ;TAD_RFID.c: 425:                     MFRC522_Wr(0x0D, 0x00);
  2169   000272  0E00               	movlw	0
  2170   000274  6E0C               	movwf	MFRC522_Wr@value^0,c
  2171   000276  0E0D               	movlw	13
  2172   000278  ECC5  F004         	call	_MFRC522_Wr
  2173   00027C                     
  2174                           ;TAD_RFID.c: 426:                     UID[0] = 0x93;
  2175   00027C  0E93               	movlw	147
  2176   00027E  6E73               	movwf	motor_RFID@UID^0,c
  2177   000280                     
  2178                           ;TAD_RFID.c: 427:                     UID[1] = 0x20;
  2179   000280  0E20               	movlw	32
  2180   000282  6E74               	movwf	(motor_RFID@UID+1)^0,c
  2181   000284  EF36  F000         	goto	l3144
  2182   000288                     l3228:
  2183                           
  2184                           ;TAD_RFID.c: 432:                     MFRC522_Clear_Bit(0x08, 0x08);
  2185   000288  0E08               	movlw	8
  2186   00028A  6E11               	movwf	MFRC522_Clear_Bit@mask^0,c
  2187   00028C  0E08               	movlw	8
  2188   00028E  ECE6  F006         	call	_MFRC522_Clear_Bit
  2189   000292  EF43  F000         	goto	l3150
  2190   000296                     l3232:
  2191                           
  2192                           ;TAD_RFID.c: 437:                     irqEn = 0x77;
  2193   000296  0E77               	movlw	119
  2194   000298  6E6C               	movwf	motor_RFID@irqEn^0,c
  2195                           
  2196                           ;TAD_RFID.c: 438:                     waitIRq = 0x30;
  2197   00029A  0E30               	movlw	48
  2198   00029C  6E6B               	movwf	motor_RFID@waitIRq^0,c
  2199   00029E                     
  2200                           ;TAD_RFID.c: 439:                     MFRC522_Wr(0x02, irqEn | 0x80);
  2201   00029E  0EF7               	movlw	247
  2202   0002A0  6E0C               	movwf	MFRC522_Wr@value^0,c
  2203   0002A2  0E02               	movlw	2
  2204   0002A4  ECC5  F004         	call	_MFRC522_Wr
  2205   0002A8  EF4C  F000         	goto	l3154
  2206   0002AC                     l3238:
  2207                           
  2208                           ;TAD_RFID.c: 444:                     MFRC522_Clear_Bit(0x04, 0x80);
  2209   0002AC  0E80               	movlw	128
  2210   0002AE  6E11               	movwf	MFRC522_Clear_Bit@mask^0,c
  2211   0002B0  0E04               	movlw	4
  2212   0002B2  ECE6  F006         	call	_MFRC522_Clear_Bit
  2213   0002B6  EF55  F000         	goto	l3158
  2214   0002BA                     l3242:
  2215                           
  2216                           ;TAD_RFID.c: 449:                     MFRC522_Set_Bit(0x0A, 0x80);
  2217   0002BA  0E80               	movlw	128
  2218   0002BC  6E11               	movwf	MFRC522_Set_Bit@mask^0,c
  2219   0002BE  0E0A               	movlw	10
  2220   0002C0  EC15  F007         	call	_MFRC522_Set_Bit
  2221   0002C4  EF5E  F000         	goto	l3162
  2222   0002C8                     l3246:
  2223                           
  2224                           ;TAD_RFID.c: 454:                     MFRC522_Wr(0x01, 0x00);
  2225   0002C8  0E00               	movlw	0
  2226   0002CA  6E0C               	movwf	MFRC522_Wr@value^0,c
  2227   0002CC  0E01               	movlw	1
  2228   0002CE  ECC5  F004         	call	_MFRC522_Wr
  2229   0002D2  EF67  F000         	goto	l3166
  2230   0002D6                     l3250:
  2231                           
  2232                           ;TAD_RFID.c: 459:                     MFRC522_Wr(0x09, UID[0]);
  2233   0002D6  C073  F00C         	movff	motor_RFID@UID,MFRC522_Wr@value
  2234   0002DA  0E09               	movlw	9
  2235   0002DC  ECC5  F004         	call	_MFRC522_Wr
  2236                           
  2237                           ;TAD_RFID.c: 460:                     MFRC522_Wr(0x09, UID[1]);
  2238   0002E0  C074  F00C         	movff	motor_RFID@UID+1,MFRC522_Wr@value
  2239   0002E4  0E09               	movlw	9
  2240   0002E6  ECC5  F004         	call	_MFRC522_Wr
  2241   0002EA  EF70  F000         	goto	l3170
  2242   0002EE                     l3254:
  2243                           
  2244                           ;TAD_RFID.c: 465:                     MFRC522_Wr(0x01, 0x0C);
  2245   0002EE  0E0C               	movlw	12
  2246   0002F0  6E0C               	movwf	MFRC522_Wr@value^0,c
  2247   0002F2  0E01               	movlw	1
  2248   0002F4  ECC5  F004         	call	_MFRC522_Wr
  2249   0002F8  EF7A  F000         	goto	l3176
  2250   0002FC                     l3258:
  2251                           
  2252                           ;TAD_RFID.c: 470:                     MFRC522_Set_Bit(0x0D, 0x80);
  2253   0002FC  0E80               	movlw	128
  2254   0002FE  6E11               	movwf	MFRC522_Set_Bit@mask^0,c
  2255   000300  0E0D               	movlw	13
  2256   000302  EC15  F007         	call	_MFRC522_Set_Bit
  2257   000306                     
  2258                           ;TAD_RFID.c: 471:                     i = 0xFF;
  2259   000306  6869               	setf	motor_RFID@i^0,c
  2260   000308  EF96  F000         	goto	l3186
  2261   00030C                     l3264:
  2262                           
  2263                           ;TAD_RFID.c: 476:                     n = MFRC522_Rd(0x04);
  2264   00030C  0E04               	movlw	4
  2265   00030E  EC19  F005         	call	_MFRC522_Rd
  2266   000312  6E6A               	movwf	motor_RFID@n^0,c
  2267   000314                     
  2268                           ;TAD_RFID.c: 477:                     if ((n & 0x01) || (n & waitIRq) || (--i == 0)) {
  2269   000314  B06A               	btfsc	motor_RFID@n^0,0,c
  2270   000316  EF8F  F001         	goto	u2401
  2271   00031A  EF91  F001         	goto	u2400
  2272   00031E                     u2401:
  2273   00031E  EF9F  F000         	goto	l3190
  2274   000322                     u2400:
  2275   000322  506A               	movf	motor_RFID@n^0,w,c
  2276   000324  146B               	andwf	motor_RFID@waitIRq^0,w,c
  2277   000326  0900               	iorlw	0
  2278   000328  A4D8               	btfss	status,2,c
  2279   00032A  EF99  F001         	goto	u2411
  2280   00032E  EF9B  F001         	goto	u2410
  2281   000332                     u2411:
  2282   000332  EF9F  F000         	goto	l3190
  2283   000336                     u2410:
  2284   000336  2E69               	decfsz	motor_RFID@i^0,f,c
  2285   000338  EF35  F002         	goto	l389
  2286   00033C  EF9F  F000         	goto	l3190
  2287   000340                     l3274:
  2288                           
  2289                           ;TAD_RFID.c: 483:                     MFRC522_Clear_Bit(0x0D, 0x80);
  2290   000340  0E80               	movlw	128
  2291   000342  6E11               	movwf	MFRC522_Clear_Bit@mask^0,c
  2292   000344  0E0D               	movlw	13
  2293   000346  ECE6  F006         	call	_MFRC522_Clear_Bit
  2294   00034A  EFF1  F000         	goto	l3206
  2295   00034E                     l3278:
  2296                           
  2297                           ;TAD_RFID.c: 488:                     if (i != 0 && !(MFRC522_Rd(0x06) & 0x1B)) {
  2298   00034E  5069               	movf	motor_RFID@i^0,w,c
  2299   000350  B4D8               	btfsc	status,2,c
  2300   000352  EFAD  F001         	goto	u2421
  2301   000356  EFAF  F001         	goto	u2420
  2302   00035A                     u2421:
  2303   00035A  EFF5  F000         	goto	l3208
  2304   00035E                     u2420:
  2305   00035E  0E06               	movlw	6
  2306   000360  EC19  F005         	call	_MFRC522_Rd
  2307   000364  6E37               	movwf	??_motor_RFID^0,c
  2308   000366  0E1B               	movlw	27
  2309   000368  1637               	andwf	??_motor_RFID^0,f,c
  2310   00036A  A4D8               	btfss	status,2,c
  2311   00036C  EFBA  F001         	goto	u2431
  2312   000370  EFBC  F001         	goto	u2430
  2313   000374                     u2431:
  2314   000374  EFF5  F000         	goto	l3208
  2315   000378                     u2430:
  2316   000378                     
  2317                           ;TAD_RFID.c: 489:                         unsigned char fifoLevel = MFRC522_Rd(0x0A);
  2318   000378  0E0A               	movlw	10
  2319   00037A  EC19  F005         	call	_MFRC522_Rd
  2320   00037E  6E39               	movwf	motor_RFID@fifoLevel_530^0,c
  2321   000380                     
  2322                           ;TAD_RFID.c: 490:                         for (i = 0; i < 4; i++) {
  2323   000380  6A69               	clrf	motor_RFID@i^0,c
  2324   000382                     l3290:
  2325                           
  2326                           ;TAD_RFID.c: 491:                             UID[i] = MFRC522_Rd(0x09);
  2327   000382  5069               	movf	motor_RFID@i^0,w,c
  2328   000384  0F73               	addlw	low motor_RFID@UID
  2329   000386  6ED9               	movwf	fsr2l,c
  2330   000388  6ADA               	clrf	fsr2h,c
  2331   00038A  0E09               	movlw	9
  2332   00038C  EC19  F005         	call	_MFRC522_Rd
  2333   000390  6EDF               	movwf	indf2,c
  2334   000392                     
  2335                           ;TAD_RFID.c: 492:                         }
  2336   000392  2A69               	incf	motor_RFID@i^0,f,c
  2337   000394  0E03               	movlw	3
  2338   000396  6469               	cpfsgt	motor_RFID@i^0,c
  2339   000398  EFD0  F001         	goto	u2441
  2340   00039C  EFD2  F001         	goto	u2440
  2341   0003A0                     u2441:
  2342   0003A0  EFC1  F001         	goto	l3290
  2343   0003A4                     u2440:
  2344   0003A4                     
  2345                           ;TAD_RFID.c: 493:                         UID[4] = 0;
  2346   0003A4  6A77               	clrf	(motor_RFID@UID+4)^0,c
  2347   0003A6  EFF5  F000         	goto	l3208
  2348   0003AA                     l3298:
  2349                           
  2350                           ;TAD_RFID.c: 499:                     displayUID(UID);
  2351   0003AA  0E73               	movlw	low motor_RFID@UID
  2352   0003AC  6E07               	movwf	displayUID@uid^0,c
  2353   0003AE  EC38  F003         	call	_displayUID	;wreg free
  2354   0003B2                     
  2355                           ;TAD_RFID.c: 500:                     state = 2;
  2356   0003B2  0E02               	movlw	2
  2357   0003B4  6E6E               	movwf	motor_RFID@state^0,c
  2358   0003B6  EFFB  F000         	goto	l3214
  2359   0003BA                     l3306:
  2360   0003BA  506D               	movf	motor_RFID@substate^0,w,c
  2361                           
  2362                           ; Switch size 1, requested type "simple"
  2363                           ; Number of cases is 13, Range of values is 0 to 12
  2364                           ; switch strategies available:
  2365                           ; Name         Instructions Cycles
  2366                           ; simple_byte           40    21 (average)
  2367                           ;	Chosen strategy is simple_byte
  2368   0003BC  0A00               	xorlw	0	; case 0
  2369   0003BE  B4D8               	btfsc	status,2,c
  2370   0003C0  EF39  F001         	goto	l3220
  2371   0003C4  0A01               	xorlw	1	; case 1
  2372   0003C6  B4D8               	btfsc	status,2,c
  2373   0003C8  EF44  F001         	goto	l3228
  2374   0003CC  0A03               	xorlw	3	; case 2
  2375   0003CE  B4D8               	btfsc	status,2,c
  2376   0003D0  EF4B  F001         	goto	l3232
  2377   0003D4  0A01               	xorlw	1	; case 3
  2378   0003D6  B4D8               	btfsc	status,2,c
  2379   0003D8  EF56  F001         	goto	l3238
  2380   0003DC  0A07               	xorlw	7	; case 4
  2381   0003DE  B4D8               	btfsc	status,2,c
  2382   0003E0  EF5D  F001         	goto	l3242
  2383   0003E4  0A01               	xorlw	1	; case 5
  2384   0003E6  B4D8               	btfsc	status,2,c
  2385   0003E8  EF64  F001         	goto	l3246
  2386   0003EC  0A03               	xorlw	3	; case 6
  2387   0003EE  B4D8               	btfsc	status,2,c
  2388   0003F0  EF6B  F001         	goto	l3250
  2389   0003F4  0A01               	xorlw	1	; case 7
  2390   0003F6  B4D8               	btfsc	status,2,c
  2391   0003F8  EF77  F001         	goto	l3254
  2392   0003FC  0A0F               	xorlw	15	; case 8
  2393   0003FE  B4D8               	btfsc	status,2,c
  2394   000400  EF7E  F001         	goto	l3258
  2395   000404  0A01               	xorlw	1	; case 9
  2396   000406  B4D8               	btfsc	status,2,c
  2397   000408  EF86  F001         	goto	l3264
  2398   00040C  0A03               	xorlw	3	; case 10
  2399   00040E  B4D8               	btfsc	status,2,c
  2400   000410  EFA0  F001         	goto	l3274
  2401   000414  0A01               	xorlw	1	; case 11
  2402   000416  B4D8               	btfsc	status,2,c
  2403   000418  EFA7  F001         	goto	l3278
  2404   00041C  0A07               	xorlw	7	; case 12
  2405   00041E  B4D8               	btfsc	status,2,c
  2406   000420  EFD5  F001         	goto	l3298
  2407   000424  EF35  F002         	goto	l389
  2408   000428                     l3308:
  2409                           
  2410                           ;TAD_RFID.c: 509:                     MFRC522_Wr(0x01, 0x50);
  2411   000428  0E50               	movlw	80
  2412   00042A  6E0C               	movwf	MFRC522_Wr@value^0,c
  2413   00042C  0E01               	movlw	1
  2414   00042E  ECC5  F004         	call	_MFRC522_Wr
  2415   000432  EF36  F000         	goto	l3144
  2416   000436                     l3314:
  2417   000436  506D               	movf	motor_RFID@substate^0,w,c
  2418                           
  2419                           ; Switch size 1, requested type "simple"
  2420                           ; Number of cases is 2, Range of values is 0 to 1
  2421                           ; switch strategies available:
  2422                           ; Name         Instructions Cycles
  2423                           ; simple_byte            7     4 (average)
  2424                           ;	Chosen strategy is simple_byte
  2425   000438  0A00               	xorlw	0	; case 0
  2426   00043A  B4D8               	btfsc	status,2,c
  2427   00043C  EF14  F002         	goto	l3308
  2428   000440  0A01               	xorlw	1	; case 1
  2429   000442  B4D8               	btfsc	status,2,c
  2430   000444  EFFE  F000         	goto	l360
  2431   000448  EF35  F002         	goto	l389
  2432   00044C                     l3318:
  2433   00044C  506E               	movf	motor_RFID@state^0,w,c
  2434                           
  2435                           ; Switch size 1, requested type "simple"
  2436                           ; Number of cases is 3, Range of values is 0 to 2
  2437                           ; switch strategies available:
  2438                           ; Name         Instructions Cycles
  2439                           ; simple_byte           10     6 (average)
  2440                           ;	Chosen strategy is simple_byte
  2441   00044E  0A00               	xorlw	0	; case 0
  2442   000450  B4D8               	btfsc	status,2,c
  2443   000452  EF02  F001         	goto	l3218
  2444   000456  0A01               	xorlw	1	; case 1
  2445   000458  B4D8               	btfsc	status,2,c
  2446   00045A  EFDD  F001         	goto	l3306
  2447   00045E  0A03               	xorlw	3	; case 2
  2448   000460  B4D8               	btfsc	status,2,c
  2449   000462  EF1B  F002         	goto	l3314
  2450   000466  EF35  F002         	goto	l389
  2451   00046A                     l389:
  2452   00046A  0012               	return		;funcret
  2453   00046C                     __end_of_motor_RFID:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _sprintf *****************
  2457 ;; Defined at:
  2458 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  s               2   32[COMRAM] PTR unsigned char 
  2461 ;;		 -> motor_RFID@buffer(100), 
  2462 ;;  fmt             2   34[COMRAM] PTR const unsigned char 
  2463 ;;		 -> STR_1(26), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  f              11   43[COMRAM] struct _IO_FILE
  2466 ;;  ret             2   40[COMRAM] int 
  2467 ;;  ap              1   42[COMRAM] PTR void [1]
  2468 ;;		 -> ?_sprintf(2), 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  2   32[COMRAM] int 
  2471 ;; Registers used:
  2472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1
  2478 ;;      Params:         8       0       0
  2479 ;;      Locals:        14       0       0
  2480 ;;      Temps:          0       0       0
  2481 ;;      Totals:        22       0       0
  2482 ;;Total ram usage:       22 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 7
  2485 ;; This function calls:
  2486 ;;		_vfprintf
  2487 ;; This function is called by:
  2488 ;;		_motor_RFID
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text2
  2493   000BF0                     __ptext2:
  2494                           	callstack 0
  2495   000BF0                     _sprintf:
  2496                           	callstack 22
  2497   000BF0  0E25               	movlw	low (?_sprintf+4)
  2498   000BF2  6E2B               	movwf	sprintf@ap^0,c
  2499   000BF4  C021  F02C         	movff	sprintf@s,sprintf@f
  2500   000BF8  C022  F02D         	movff	sprintf@s+1,sprintf@f+1
  2501   000BFC  0E00               	movlw	0
  2502   000BFE  6E2F               	movwf	(sprintf@f+3)^0,c
  2503   000C00  0E00               	movlw	0
  2504   000C02  6E2E               	movwf	(sprintf@f+2)^0,c
  2505   000C04  0E00               	movlw	0
  2506   000C06  6E36               	movwf	(sprintf@f+10)^0,c
  2507   000C08  0E00               	movlw	0
  2508   000C0A  6E35               	movwf	(sprintf@f+9)^0,c
  2509   000C0C  0E2C               	movlw	low sprintf@f
  2510   000C0E  6E1B               	movwf	vfprintf@fp^0,c
  2511   000C10  C023  F01C         	movff	sprintf@fmt,vfprintf@fmt
  2512   000C14  C024  F01D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2513   000C18  0E2B               	movlw	low sprintf@ap
  2514   000C1A  6E1E               	movwf	vfprintf@ap^0,c
  2515   000C1C  ECCF  F005         	call	_vfprintf	;wreg free
  2516   000C20  C01B  F029         	movff	?_vfprintf,sprintf@ret
  2517   000C24  C01C  F02A         	movff	?_vfprintf+1,sprintf@ret+1
  2518   000C28  502E               	movf	(sprintf@f+2)^0,w,c
  2519   000C2A  2421               	addwf	sprintf@s^0,w,c
  2520   000C2C  6ED9               	movwf	fsr2l,c
  2521   000C2E  502F               	movf	(sprintf@f+3)^0,w,c
  2522   000C30  2022               	addwfc	(sprintf@s+1)^0,w,c
  2523   000C32  6EDA               	movwf	fsr2h,c
  2524   000C34  6ADF               	clrf	indf2,c
  2525   000C36  C029  F021         	movff	sprintf@ret,?_sprintf
  2526   000C3A  C02A  F022         	movff	sprintf@ret+1,?_sprintf+1
  2527   000C3E  0012               	return		;funcret
  2528   000C40                     __end_of_sprintf:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _vfprintf *****************
  2532 ;; Defined at:
  2533 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  fp              1   26[COMRAM] PTR struct _IO_FILE
  2536 ;;		 -> sprintf@f(11), 
  2537 ;;  fmt             2   27[COMRAM] PTR const unsigned char 
  2538 ;;		 -> STR_1(26), 
  2539 ;;  ap              1   29[COMRAM] PTR PTR void 
  2540 ;;		 -> sprintf@ap(1), 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  cfmt            2   30[COMRAM] PTR unsigned char 
  2543 ;;		 -> STR_1(26), 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2   26[COMRAM] int 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1
  2553 ;;      Params:         4       0       0
  2554 ;;      Locals:         2       0       0
  2555 ;;      Temps:          0       0       0
  2556 ;;      Totals:         6       0       0
  2557 ;;Total ram usage:        6 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 6
  2560 ;; This function calls:
  2561 ;;		_vfpfcnvrt
  2562 ;; This function is called by:
  2563 ;;		_sprintf
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text3
  2568   000B9E                     __ptext3:
  2569                           	callstack 0
  2570   000B9E                     _vfprintf:
  2571                           	callstack 22
  2572   000B9E                     
  2573                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2574   000B9E  C01C  F01F         	movff	vfprintf@fmt,vfprintf@cfmt
  2575   000BA2  C01D  F020         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2576   000BA6                     
  2577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  2578   000BA6  0E00               	movlw	0
  2579   000BA8  6E59               	movwf	(_nout+1)^0,c
  2580   000BAA  0E00               	movlw	0
  2581   000BAC  6E58               	movwf	_nout^0,c
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2584   000BAE  EFE5  F005         	goto	l2986
  2585   000BB2                     l2984:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  2588   000BB2  C01B  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2589   000BB6  0E1F               	movlw	low vfprintf@cfmt
  2590   000BB8  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  2591   000BBA  C01E  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2592   000BBE  EC36  F002         	call	_vfpfcnvrt	;wreg free
  2593   000BC2  500C               	movf	?_vfpfcnvrt^0,w,c
  2594   000BC4  2658               	addwf	_nout^0,f,c
  2595   000BC6  500D               	movf	(?_vfpfcnvrt+1)^0,w,c
  2596   000BC8  2259               	addwfc	(_nout+1)^0,f,c
  2597   000BCA                     l2986:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2600   000BCA  C01F  FFF6         	movff	vfprintf@cfmt,tblptrl
  2601   000BCE  C020  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2602   000BD2                     	if	0	;tblptru may be non-zero
  2603   000BD2                     	endif
  2604   000BD2                     	if	0	;tblptru may be non-zero
  2605   000BD2                     	endif
  2606   000BD2  0008               	tblrd		*
  2607   000BD4  50F5               	movf	tablat,w,c
  2608   000BD6  0900               	iorlw	0
  2609   000BD8  A4D8               	btfss	status,2,c
  2610   000BDA  EFF1  F005         	goto	u2201
  2611   000BDE  EFF3  F005         	goto	u2200
  2612   000BE2                     u2201:
  2613   000BE2  EFD9  F005         	goto	l2984
  2614   000BE6                     u2200:
  2615   000BE6                     
  2616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  2617   000BE6  C058  F01B         	movff	_nout,?_vfprintf
  2618   000BEA  C059  F01C         	movff	_nout+1,?_vfprintf+1
  2619   000BEE  0012               	return		;funcret
  2620   000BF0                     __end_of_vfprintf:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _vfpfcnvrt *****************
  2624 ;; Defined at:
  2625 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  2628 ;;		 -> sprintf@f(11), 
  2629 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  2630 ;;		 -> vfprintf@cfmt(2), 
  2631 ;;  ap              1   13[COMRAM] PTR PTR void 
  2632 ;;		 -> sprintf@ap(1), 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  convarg         4   21[COMRAM] struct .
  2635 ;;  cp              2   19[COMRAM] PTR unsigned char 
  2636 ;;		 -> STR_1(26), 
  2637 ;;  cnt             2   17[COMRAM] int 
  2638 ;;  c               1   25[COMRAM] unsigned char 
  2639 ;;  done            1   16[COMRAM] _Bool 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2   11[COMRAM] int 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1
  2649 ;;      Params:         3       0       0
  2650 ;;      Locals:        10       0       0
  2651 ;;      Temps:          2       0       0
  2652 ;;      Totals:        15       0       0
  2653 ;;Total ram usage:       15 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 5
  2656 ;; This function calls:
  2657 ;;		___awdiv
  2658 ;;		___awmod
  2659 ;;		_abs
  2660 ;;		_fputc
  2661 ;; This function is called by:
  2662 ;;		_vfprintf
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text4
  2667   00046C                     __ptext4:
  2668                           	callstack 0
  2669   00046C                     _vfpfcnvrt:
  2670                           	callstack 22
  2671   00046C                     
  2672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  2673   00046C  0E00               	movlw	0
  2674   00046E  6E13               	movwf	(vfpfcnvrt@cnt+1)^0,c
  2675   000470  0E00               	movlw	0
  2676   000472  6E12               	movwf	vfpfcnvrt@cnt^0,c
  2677   000474                     
  2678                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  2679   000474  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2680   000476  6ED9               	movwf	fsr2l,c
  2681   000478  6ADA               	clrf	fsr2h,c
  2682   00047A  CFDE FFF6          	movff	postinc2,tblptrl
  2683   00047E  CFDD FFF7          	movff	postdec2,tblptrh
  2684   000482                     	if	0	;tblptru may be non-zero
  2685   000482                     	endif
  2686   000482                     	if	0	;tblptru may be non-zero
  2687   000482                     	endif
  2688   000482  0008               	tblrd		*
  2689   000484  50F5               	movf	tablat,w,c
  2690   000486  0A25               	xorlw	37
  2691   000488  A4D8               	btfss	status,2,c
  2692   00048A  EF49  F002         	goto	u1931
  2693   00048E  EF4B  F002         	goto	u1930
  2694   000492                     u1931:
  2695   000492  EF1E  F003         	goto	l2866
  2696   000496                     u1930:
  2697   000496                     
  2698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2699   000496  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2700   000498  6ED9               	movwf	fsr2l,c
  2701   00049A  6ADA               	clrf	fsr2h,c
  2702   00049C  2ADE               	incf	postinc2,f,c
  2703   00049E  0E00               	movlw	0
  2704   0004A0  22DD               	addwfc	postdec2,f,c
  2705   0004A2                     
  2706                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2707   0004A2  0E00               	movlw	0
  2708   0004A4  6E5B               	movwf	(_width+1)^0,c
  2709   0004A6  0E00               	movlw	0
  2710   0004A8  6E5A               	movwf	_width^0,c
  2711   0004AA  C05A  F060         	movff	_width,_flags
  2712   0004AE                     
  2713                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2714   0004AE  685C               	setf	_prec^0,c
  2715   0004B0  685D               	setf	(_prec+1)^0,c
  2716   0004B2                     
  2717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2718   0004B2  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2719   0004B4  6ED9               	movwf	fsr2l,c
  2720   0004B6  6ADA               	clrf	fsr2h,c
  2721   0004B8  CFDE F014          	movff	postinc2,vfpfcnvrt@cp
  2722   0004BC  CFDD F015          	movff	postdec2,vfpfcnvrt@cp+1
  2723   0004C0                     
  2724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2725   0004C0  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2726   0004C4  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2727   0004C8                     	if	0	;tblptru may be non-zero
  2728   0004C8                     	endif
  2729   0004C8                     	if	0	;tblptru may be non-zero
  2730   0004C8                     	endif
  2731   0004C8  0008               	tblrd		*
  2732   0004CA  50F5               	movf	tablat,w,c
  2733   0004CC  0A64               	xorlw	100
  2734   0004CE  B4D8               	btfsc	status,2,c
  2735   0004D0  EF6C  F002         	goto	u1941
  2736   0004D4  EF6E  F002         	goto	u1940
  2737   0004D8                     u1941:
  2738   0004D8  EF7C  F002         	goto	l2830
  2739   0004DC                     u1940:
  2740   0004DC  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2741   0004E0  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2742   0004E4                     	if	0	;tblptru may be non-zero
  2743   0004E4                     	endif
  2744   0004E4                     	if	0	;tblptru may be non-zero
  2745   0004E4                     	endif
  2746   0004E4  0008               	tblrd		*
  2747   0004E6  50F5               	movf	tablat,w,c
  2748   0004E8  0A69               	xorlw	105
  2749   0004EA  A4D8               	btfss	status,2,c
  2750   0004EC  EF7A  F002         	goto	u1951
  2751   0004F0  EF7C  F002         	goto	u1950
  2752   0004F4                     u1951:
  2753   0004F4  EF12  F003         	goto	l2860
  2754   0004F8                     u1950:
  2755   0004F8                     l2830:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2758   0004F8  500E               	movf	vfpfcnvrt@ap^0,w,c
  2759   0004FA  6ED9               	movwf	fsr2l,c
  2760   0004FC  6ADA               	clrf	fsr2h,c
  2761   0004FE  0E02               	movlw	2
  2762   000500  26DF               	addwf	indf2,f,c
  2763   000502  5CDF               	subwf	indf2,w,c
  2764   000504  6ED9               	movwf	fsr2l,c
  2765   000506  6ADA               	clrf	fsr2h,c
  2766   000508  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg
  2767   00050C  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg+1
  2768   000510                     
  2769                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2770   000510  0E01               	movlw	1
  2771   000512  2414               	addwf	vfpfcnvrt@cp^0,w,c
  2772   000514  6E0F               	movwf	??_vfpfcnvrt^0,c
  2773   000516  0E00               	movlw	0
  2774   000518  2015               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2775   00051A  6E10               	movwf	(??_vfpfcnvrt+1)^0,c
  2776   00051C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2777   00051E  6ED9               	movwf	fsr2l,c
  2778   000520  6ADA               	clrf	fsr2h,c
  2779   000522  C00F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2780   000526  C010  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2781   00052A                     
  2782                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2783   00052A  0E20               	movlw	32
  2784   00052C  6E1A               	movwf	vfpfcnvrt@c^0,c
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2787   00052E  BE17               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2788   000530  EF9C  F002         	goto	u1961
  2789   000534  EF9F  F002         	goto	u1960
  2790   000538                     u1961:
  2791   000538  0E01               	movlw	1
  2792   00053A  EFA0  F002         	goto	u1970
  2793   00053E                     u1960:
  2794   00053E  0E00               	movlw	0
  2795   000540                     u1970:
  2796   000540  6E11               	movwf	vfpfcnvrt@done^0,c
  2797   000542                     l2836:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2800   000542  061A               	decf	vfpfcnvrt@c^0,f,c
  2801   000544  501A               	movf	vfpfcnvrt@c^0,w,c
  2802   000546  0F80               	addlw	low _dbuf
  2803   000548  6ED9               	movwf	fsr2l,c
  2804   00054A  6ADA               	clrf	fsr2h,c
  2805   00054C  C016  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2806   000550  C017  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2807   000554  0E00               	movlw	0
  2808   000556  6E05               	movwf	(___awmod@divisor+1)^0,c
  2809   000558  0E0A               	movlw	10
  2810   00055A  6E04               	movwf	___awmod@divisor^0,c
  2811   00055C  EC6E  F004         	call	___awmod	;wreg free
  2812   000560  C002  F008         	movff	?___awmod,abs@a
  2813   000564  C003  F009         	movff	?___awmod+1,abs@a+1
  2814   000568  EC62  F006         	call	_abs	;wreg free
  2815   00056C  5008               	movf	?_abs^0,w,c
  2816   00056E  0F30               	addlw	48
  2817   000570  6EDF               	movwf	indf2,c
  2818   000572                     
  2819                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2820   000572  C016  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2821   000576  C017  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2822   00057A  0E00               	movlw	0
  2823   00057C  6E05               	movwf	(___awdiv@divisor+1)^0,c
  2824   00057E  0E0A               	movlw	10
  2825   000580  6E04               	movwf	___awdiv@divisor^0,c
  2826   000582  ECB0  F003         	call	___awdiv	;wreg free
  2827   000586  C002  F016         	movff	?___awdiv,vfpfcnvrt@convarg
  2828   00058A  C003  F017         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2829   00058E                     
  2830                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  2831   00058E  4A12               	infsnz	vfpfcnvrt@cnt^0,f,c
  2832   000590  2A13               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2833   000592                     
  2834                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2835   000592  5016               	movf	vfpfcnvrt@convarg^0,w,c
  2836   000594  1017               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2837   000596  B4D8               	btfsc	status,2,c
  2838   000598  EFD0  F002         	goto	u1981
  2839   00059C  EFD2  F002         	goto	u1980
  2840   0005A0                     u1981:
  2841   0005A0  EFDA  F002         	goto	l2846
  2842   0005A4                     u1980:
  2843   0005A4  501A               	movf	vfpfcnvrt@c^0,w,c
  2844   0005A6  A4D8               	btfss	status,2,c
  2845   0005A8  EFD8  F002         	goto	u1991
  2846   0005AC  EFDA  F002         	goto	u1990
  2847   0005B0                     u1991:
  2848   0005B0  EFA1  F002         	goto	l2836
  2849   0005B4                     u1990:
  2850   0005B4                     l2846:
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2853   0005B4  501A               	movf	vfpfcnvrt@c^0,w,c
  2854   0005B6  B4D8               	btfsc	status,2,c
  2855   0005B8  EFE0  F002         	goto	u2001
  2856   0005BC  EFE2  F002         	goto	u2000
  2857   0005C0                     u2001:
  2858   0005C0  EF03  F003         	goto	l2858
  2859   0005C4                     u2000:
  2860   0005C4  5011               	movf	vfpfcnvrt@done^0,w,c
  2861   0005C6  B4D8               	btfsc	status,2,c
  2862   0005C8  EFE8  F002         	goto	u2011
  2863   0005CC  EFEA  F002         	goto	u2010
  2864   0005D0                     u2011:
  2865   0005D0  EF03  F003         	goto	l2858
  2866   0005D4                     u2010:
  2867   0005D4                     
  2868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2869   0005D4  061A               	decf	vfpfcnvrt@c^0,f,c
  2870   0005D6  501A               	movf	vfpfcnvrt@c^0,w,c
  2871   0005D8  0F80               	addlw	low _dbuf
  2872   0005DA  6ED9               	movwf	fsr2l,c
  2873   0005DC  6ADA               	clrf	fsr2h,c
  2874   0005DE  0E2D               	movlw	45
  2875   0005E0  6EDF               	movwf	indf2,c
  2876   0005E2                     
  2877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  2878   0005E2  4A12               	infsnz	vfpfcnvrt@cnt^0,f,c
  2879   0005E4  2A13               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  2880   0005E6  EF03  F003         	goto	l2858
  2881   0005EA                     l2854:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2884   0005EA  501A               	movf	vfpfcnvrt@c^0,w,c
  2885   0005EC  0F80               	addlw	low _dbuf
  2886   0005EE  6ED9               	movwf	fsr2l,c
  2887   0005F0  6ADA               	clrf	fsr2h,c
  2888   0005F2  50DF               	movf	indf2,w,c
  2889   0005F4  6E0F               	movwf	??_vfpfcnvrt^0,c
  2890   0005F6  500F               	movf	??_vfpfcnvrt^0,w,c
  2891   0005F8  6E02               	movwf	fputc@c^0,c
  2892   0005FA  6A03               	clrf	(fputc@c+1)^0,c
  2893   0005FC  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2894   000600  EC11  F004         	call	_fputc	;wreg free
  2895   000604  2A1A               	incf	vfpfcnvrt@c^0,f,c
  2896   000606                     l2858:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2899   000606  0E20               	movlw	32
  2900   000608  181A               	xorwf	vfpfcnvrt@c^0,w,c
  2901   00060A  A4D8               	btfss	status,2,c
  2902   00060C  EF0A  F003         	goto	u2021
  2903   000610  EF0C  F003         	goto	u2020
  2904   000614                     u2021:
  2905   000614  EFF5  F002         	goto	l2854
  2906   000618                     u2020:
  2907   000618                     
  2908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  2909   000618  C012  F00C         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  2910   00061C  C013  F00D         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  2911   000620  EF37  F003         	goto	l1306
  2912   000624                     l2860:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2915   000624  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2916   000626  6ED9               	movwf	fsr2l,c
  2917   000628  6ADA               	clrf	fsr2h,c
  2918   00062A  2ADE               	incf	postinc2,f,c
  2919   00062C  0E00               	movlw	0
  2920   00062E  22DD               	addwfc	postdec2,f,c
  2921   000630                     
  2922                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  2923   000630  0E00               	movlw	0
  2924   000632  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  2925   000634  0E00               	movlw	0
  2926   000636  6E0C               	movwf	?_vfpfcnvrt^0,c
  2927   000638  EF37  F003         	goto	l1306
  2928   00063C                     l2866:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2931   00063C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2932   00063E  6ED9               	movwf	fsr2l,c
  2933   000640  6ADA               	clrf	fsr2h,c
  2934   000642  CFDE FFF6          	movff	postinc2,tblptrl
  2935   000646  CFDD FFF7          	movff	postdec2,tblptrh
  2936   00064A                     	if	0	;tblptru may be non-zero
  2937   00064A                     	endif
  2938   00064A                     	if	0	;tblptru may be non-zero
  2939   00064A                     	endif
  2940   00064A  0008               	tblrd		*
  2941   00064C  50F5               	movf	tablat,w,c
  2942   00064E  6E02               	movwf	fputc@c^0,c
  2943   000650  6A03               	clrf	(fputc@c+1)^0,c
  2944   000652  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2945   000656  EC11  F004         	call	_fputc	;wreg free
  2946   00065A                     
  2947                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2948   00065A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2949   00065C  6ED9               	movwf	fsr2l,c
  2950   00065E  6ADA               	clrf	fsr2h,c
  2951   000660  2ADE               	incf	postinc2,f,c
  2952   000662  0E00               	movlw	0
  2953   000664  22DD               	addwfc	postdec2,f,c
  2954   000666                     
  2955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  2956   000666  0E00               	movlw	0
  2957   000668  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  2958   00066A  0E01               	movlw	1
  2959   00066C  6E0C               	movwf	?_vfpfcnvrt^0,c
  2960   00066E                     l1306:
  2961   00066E  0012               	return		;funcret
  2962   000670                     __end_of_vfpfcnvrt:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function _fputc *****************
  2966 ;; Defined at:
  2967 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  c               2    1[COMRAM] int 
  2970 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  2971 ;;		 -> sprintf@f(11), 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2    1[COMRAM] int 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1
  2983 ;;      Params:         3       0       0
  2984 ;;      Locals:         0       0       0
  2985 ;;      Temps:          5       0       0
  2986 ;;      Totals:         8       0       0
  2987 ;;Total ram usage:        8 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 4
  2990 ;; This function calls:
  2991 ;;		_putch
  2992 ;; This function is called by:
  2993 ;;		_vfpfcnvrt
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text5
  2998   000822                     __ptext5:
  2999                           	callstack 0
  3000   000822                     _fputc:
  3001                           	callstack 22
  3002   000822  5004               	movf	fputc@fp^0,w,c
  3003   000824  B4D8               	btfsc	status,2,c
  3004   000826  EF17  F004         	goto	u1871
  3005   00082A  EF19  F004         	goto	u1870
  3006   00082E                     u1871:
  3007   00082E  EF21  F004         	goto	l2790
  3008   000832                     u1870:
  3009   000832  5004               	movf	fputc@fp^0,w,c
  3010   000834  A4D8               	btfss	status,2,c
  3011   000836  EF1F  F004         	goto	u1881
  3012   00083A  EF21  F004         	goto	u1880
  3013   00083E                     u1881:
  3014   00083E  EF26  F004         	goto	l2792
  3015   000842                     u1880:
  3016   000842                     l2790:
  3017   000842  5002               	movf	fputc@c^0,w,c
  3018   000844  EC4A  F007         	call	_putch
  3019   000848  EF6D  F004         	goto	l1331
  3020   00084C                     l2792:
  3021   00084C  5004               	movf	fputc@fp^0,w,c
  3022   00084E  6ED9               	movwf	fsr2l,c
  3023   000850  6ADA               	clrf	fsr2h,c
  3024   000852  0E09               	movlw	9
  3025   000854  26D9               	addwf	fsr2l,f,c
  3026   000856  50DE               	movf	postinc2,w,c
  3027   000858  10DE               	iorwf	postinc2,w,c
  3028   00085A  B4D8               	btfsc	status,2,c
  3029   00085C  EF32  F004         	goto	u1891
  3030   000860  EF34  F004         	goto	u1890
  3031   000864                     u1891:
  3032   000864  EF4D  F004         	goto	l2796
  3033   000868                     u1890:
  3034   000868  5004               	movf	fputc@fp^0,w,c
  3035   00086A  6ED9               	movwf	fsr2l,c
  3036   00086C  6ADA               	clrf	fsr2h,c
  3037   00086E  0E09               	movlw	9
  3038   000870  26D9               	addwf	fsr2l,f,c
  3039   000872  5004               	movf	fputc@fp^0,w,c
  3040   000874  6EE1               	movwf	fsr1l,c
  3041   000876  6AE2               	clrf	fsr1h,c
  3042   000878  0E02               	movlw	2
  3043   00087A  26E1               	addwf	fsr1l,f,c
  3044   00087C  50DE               	movf	postinc2,w,c
  3045   00087E  5CE6               	subwf	postinc1,w,c
  3046   000880  50E6               	movf	postinc1,w,c
  3047   000882  0A80               	xorlw	128
  3048   000884  6E09               	movwf	(??_fputc+4)^0,c
  3049   000886  50DE               	movf	postinc2,w,c
  3050   000888  0A80               	xorlw	128
  3051   00088A  5809               	subwfb	(??_fputc+4)^0,w,c
  3052   00088C  B0D8               	btfsc	status,0,c
  3053   00088E  EF4B  F004         	goto	u1901
  3054   000892  EF4D  F004         	goto	u1900
  3055   000896                     u1901:
  3056   000896  EF6D  F004         	goto	l1331
  3057   00089A                     u1900:
  3058   00089A                     l2796:
  3059   00089A  5004               	movf	fputc@fp^0,w,c
  3060   00089C  6ED9               	movwf	fsr2l,c
  3061   00089E  6ADA               	clrf	fsr2h,c
  3062   0008A0  0E02               	movlw	2
  3063   0008A2  26D9               	addwf	fsr2l,f,c
  3064   0008A4  CFDE F005          	movff	postinc2,??_fputc
  3065   0008A8  CFDD F006          	movff	postdec2,??_fputc+1
  3066   0008AC  5004               	movf	fputc@fp^0,w,c
  3067   0008AE  6ED9               	movwf	fsr2l,c
  3068   0008B0  6ADA               	clrf	fsr2h,c
  3069   0008B2  CFDE F007          	movff	postinc2,??_fputc+2
  3070   0008B6  CFDD F008          	movff	postdec2,??_fputc+3
  3071   0008BA  5005               	movf	??_fputc^0,w,c
  3072   0008BC  2407               	addwf	(??_fputc+2)^0,w,c
  3073   0008BE  6ED9               	movwf	fsr2l,c
  3074   0008C0  5006               	movf	(??_fputc+1)^0,w,c
  3075   0008C2  2008               	addwfc	(??_fputc+3)^0,w,c
  3076   0008C4  6EDA               	movwf	fsr2h,c
  3077   0008C6  C002  FFDF         	movff	fputc@c,indf2
  3078   0008CA  5004               	movf	fputc@fp^0,w,c
  3079   0008CC  6ED9               	movwf	fsr2l,c
  3080   0008CE  6ADA               	clrf	fsr2h,c
  3081   0008D0  0E02               	movlw	2
  3082   0008D2  26D9               	addwf	fsr2l,f,c
  3083   0008D4  2ADE               	incf	postinc2,f,c
  3084   0008D6  0E00               	movlw	0
  3085   0008D8  22DD               	addwfc	postdec2,f,c
  3086   0008DA                     l1331:
  3087   0008DA  0012               	return		;funcret
  3088   0008DC                     __end_of_fputc:
  3089                           	callstack 0
  3090                           
  3091 ;; *************** function _putch *****************
  3092 ;; Defined at:
  3093 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  c               1    wreg     unsigned char 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  c               1    0[COMRAM] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1
  3107 ;;      Params:         0       0       0
  3108 ;;      Locals:         0       0       0
  3109 ;;      Temps:          0       0       0
  3110 ;;      Totals:         0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 3
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_fputc
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text6
  3122   000E94                     __ptext6:
  3123                           	callstack 0
  3124   000E94                     _putch:
  3125                           	callstack 22
  3126   000E94  0012               	return		;funcret
  3127   000E96                     __end_of_putch:
  3128                           	callstack 0
  3129                           
  3130 ;; *************** function _abs *****************
  3131 ;; Defined at:
  3132 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  a               2    7[COMRAM] int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    7[COMRAM] int 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1
  3146 ;;      Params:         2       0       0
  3147 ;;      Locals:         0       0       0
  3148 ;;      Temps:          2       0       0
  3149 ;;      Totals:         4       0       0
  3150 ;;Total ram usage:        4 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 3
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_vfpfcnvrt
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text7
  3161   000CC4                     __ptext7:
  3162                           	callstack 0
  3163   000CC4                     _abs:
  3164                           	callstack 23
  3165   000CC4  BE09               	btfsc	(abs@a+1)^0,7,c
  3166   000CC6  EF67  F006         	goto	u1911
  3167   000CCA  EF69  F006         	goto	u1910
  3168   000CCE                     u1911:
  3169   000CCE  EF6F  F006         	goto	l1316
  3170   000CD2                     u1910:
  3171   000CD2  C008  F008         	movff	abs@a,?_abs
  3172   000CD6  C009  F009         	movff	abs@a+1,?_abs+1
  3173   000CDA  EF7B  F006         	goto	l1319
  3174   000CDE                     l1316:
  3175   000CDE  C008  F00A         	movff	abs@a,??_abs
  3176   000CE2  C009  F00B         	movff	abs@a+1,??_abs+1
  3177   000CE6  1E0A               	comf	??_abs^0,f,c
  3178   000CE8  1E0B               	comf	(??_abs+1)^0,f,c
  3179   000CEA  4A0A               	infsnz	??_abs^0,f,c
  3180   000CEC  2A0B               	incf	(??_abs+1)^0,f,c
  3181   000CEE  C00A  F008         	movff	??_abs,?_abs
  3182   000CF2  C00B  F009         	movff	??_abs+1,?_abs+1
  3183   000CF6                     l1319:
  3184   000CF6  0012               	return		;funcret
  3185   000CF8                     __end_of_abs:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function ___awmod *****************
  3189 ;; Defined at:
  3190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  dividend        2    1[COMRAM] int 
  3193 ;;  divisor         2    3[COMRAM] int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  sign            1    6[COMRAM] unsigned char 
  3196 ;;  counter         1    5[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2    1[COMRAM] int 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1
  3206 ;;      Params:         4       0       0
  3207 ;;      Locals:         2       0       0
  3208 ;;      Temps:          0       0       0
  3209 ;;      Totals:         6       0       0
  3210 ;;Total ram usage:        6 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 3
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_vfpfcnvrt
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text8
  3221   0008DC                     __ptext8:
  3222                           	callstack 0
  3223   0008DC                     ___awmod:
  3224                           	callstack 23
  3225   0008DC  6A07               	clrf	___awmod@sign^0,c
  3226   0008DE  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3227   0008E0  EF76  F004         	goto	u1810
  3228   0008E4  EF74  F004         	goto	u1811
  3229   0008E8                     u1811:
  3230   0008E8  EF7C  F004         	goto	l2758
  3231   0008EC                     u1810:
  3232   0008EC  6C02               	negf	___awmod@dividend^0,c
  3233   0008EE  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3234   0008F0  B0D8               	btfsc	status,0,c
  3235   0008F2  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3236   0008F4  0E01               	movlw	1
  3237   0008F6  6E07               	movwf	___awmod@sign^0,c
  3238   0008F8                     l2758:
  3239   0008F8  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3240   0008FA  EF83  F004         	goto	u1820
  3241   0008FE  EF81  F004         	goto	u1821
  3242   000902                     u1821:
  3243   000902  EF87  F004         	goto	l2762
  3244   000906                     u1820:
  3245   000906  6C04               	negf	___awmod@divisor^0,c
  3246   000908  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3247   00090A  B0D8               	btfsc	status,0,c
  3248   00090C  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3249   00090E                     l2762:
  3250   00090E  5004               	movf	___awmod@divisor^0,w,c
  3251   000910  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3252   000912  B4D8               	btfsc	status,2,c
  3253   000914  EF8E  F004         	goto	u1831
  3254   000918  EF90  F004         	goto	u1830
  3255   00091C                     u1831:
  3256   00091C  EFB4  F004         	goto	l2778
  3257   000920                     u1830:
  3258   000920  0E01               	movlw	1
  3259   000922  6E06               	movwf	___awmod@counter^0,c
  3260   000924  EF98  F004         	goto	l2768
  3261   000928                     l2766:
  3262   000928  90D8               	bcf	status,0,c
  3263   00092A  3604               	rlcf	___awmod@divisor^0,f,c
  3264   00092C  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  3265   00092E  2A06               	incf	___awmod@counter^0,f,c
  3266   000930                     l2768:
  3267   000930  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  3268   000932  EF9D  F004         	goto	u1841
  3269   000936  EF9F  F004         	goto	u1840
  3270   00093A                     u1841:
  3271   00093A  EF94  F004         	goto	l2766
  3272   00093E                     u1840:
  3273   00093E                     l2770:
  3274   00093E  5004               	movf	___awmod@divisor^0,w,c
  3275   000940  5C02               	subwf	___awmod@dividend^0,w,c
  3276   000942  5005               	movf	(___awmod@divisor+1)^0,w,c
  3277   000944  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  3278   000946  A0D8               	btfss	status,0,c
  3279   000948  EFA8  F004         	goto	u1851
  3280   00094C  EFAA  F004         	goto	u1850
  3281   000950                     u1851:
  3282   000950  EFAE  F004         	goto	l2774
  3283   000954                     u1850:
  3284   000954  5004               	movf	___awmod@divisor^0,w,c
  3285   000956  5E02               	subwf	___awmod@dividend^0,f,c
  3286   000958  5005               	movf	(___awmod@divisor+1)^0,w,c
  3287   00095A  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  3288   00095C                     l2774:
  3289   00095C  90D8               	bcf	status,0,c
  3290   00095E  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  3291   000960  3204               	rrcf	___awmod@divisor^0,f,c
  3292   000962  2E06               	decfsz	___awmod@counter^0,f,c
  3293   000964  EF9F  F004         	goto	l2770
  3294   000968                     l2778:
  3295   000968  5007               	movf	___awmod@sign^0,w,c
  3296   00096A  B4D8               	btfsc	status,2,c
  3297   00096C  EFBA  F004         	goto	u1861
  3298   000970  EFBC  F004         	goto	u1860
  3299   000974                     u1861:
  3300   000974  EFC0  F004         	goto	l2782
  3301   000978                     u1860:
  3302   000978  6C02               	negf	___awmod@dividend^0,c
  3303   00097A  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3304   00097C  B0D8               	btfsc	status,0,c
  3305   00097E  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3306   000980                     l2782:
  3307   000980  C002  F002         	movff	___awmod@dividend,?___awmod
  3308   000984  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  3309   000988  0012               	return		;funcret
  3310   00098A                     __end_of___awmod:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function ___awdiv *****************
  3314 ;; Defined at:
  3315 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  dividend        2    1[COMRAM] int 
  3318 ;;  divisor         2    3[COMRAM] int 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  quotient        2    7[COMRAM] int 
  3321 ;;  sign            1    6[COMRAM] unsigned char 
  3322 ;;  counter         1    5[COMRAM] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  2    1[COMRAM] int 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1
  3332 ;;      Params:         4       0       0
  3333 ;;      Locals:         4       0       0
  3334 ;;      Temps:          0       0       0
  3335 ;;      Totals:         8       0       0
  3336 ;;Total ram usage:        8 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 3
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_vfpfcnvrt
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text9
  3347   000760                     __ptext9:
  3348                           	callstack 0
  3349   000760                     ___awdiv:
  3350                           	callstack 23
  3351   000760  6A07               	clrf	___awdiv@sign^0,c
  3352   000762  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  3353   000764  EFB8  F003         	goto	u1750
  3354   000768  EFB6  F003         	goto	u1751
  3355   00076C                     u1751:
  3356   00076C  EFBE  F003         	goto	l2714
  3357   000770                     u1750:
  3358   000770  6C04               	negf	___awdiv@divisor^0,c
  3359   000772  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  3360   000774  B0D8               	btfsc	status,0,c
  3361   000776  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  3362   000778  0E01               	movlw	1
  3363   00077A  6E07               	movwf	___awdiv@sign^0,c
  3364   00077C                     l2714:
  3365   00077C  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  3366   00077E  EFC5  F003         	goto	u1760
  3367   000782  EFC3  F003         	goto	u1761
  3368   000786                     u1761:
  3369   000786  EFCB  F003         	goto	l2720
  3370   00078A                     u1760:
  3371   00078A  6C02               	negf	___awdiv@dividend^0,c
  3372   00078C  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  3373   00078E  B0D8               	btfsc	status,0,c
  3374   000790  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  3375   000792  0E01               	movlw	1
  3376   000794  1A07               	xorwf	___awdiv@sign^0,f,c
  3377   000796                     l2720:
  3378   000796  0E00               	movlw	0
  3379   000798  6E09               	movwf	(___awdiv@quotient+1)^0,c
  3380   00079A  0E00               	movlw	0
  3381   00079C  6E08               	movwf	___awdiv@quotient^0,c
  3382   00079E  5004               	movf	___awdiv@divisor^0,w,c
  3383   0007A0  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  3384   0007A2  B4D8               	btfsc	status,2,c
  3385   0007A4  EFD6  F003         	goto	u1771
  3386   0007A8  EFD8  F003         	goto	u1770
  3387   0007AC                     u1771:
  3388   0007AC  EF00  F004         	goto	l2742
  3389   0007B0                     u1770:
  3390   0007B0  0E01               	movlw	1
  3391   0007B2  6E06               	movwf	___awdiv@counter^0,c
  3392   0007B4  EFE0  F003         	goto	l2728
  3393   0007B8                     l2726:
  3394   0007B8  90D8               	bcf	status,0,c
  3395   0007BA  3604               	rlcf	___awdiv@divisor^0,f,c
  3396   0007BC  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  3397   0007BE  2A06               	incf	___awdiv@counter^0,f,c
  3398   0007C0                     l2728:
  3399   0007C0  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  3400   0007C2  EFE5  F003         	goto	u1781
  3401   0007C6  EFE7  F003         	goto	u1780
  3402   0007CA                     u1781:
  3403   0007CA  EFDC  F003         	goto	l2726
  3404   0007CE                     u1780:
  3405   0007CE                     l2730:
  3406   0007CE  90D8               	bcf	status,0,c
  3407   0007D0  3608               	rlcf	___awdiv@quotient^0,f,c
  3408   0007D2  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  3409   0007D4  5004               	movf	___awdiv@divisor^0,w,c
  3410   0007D6  5C02               	subwf	___awdiv@dividend^0,w,c
  3411   0007D8  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3412   0007DA  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  3413   0007DC  A0D8               	btfss	status,0,c
  3414   0007DE  EFF3  F003         	goto	u1791
  3415   0007E2  EFF5  F003         	goto	u1790
  3416   0007E6                     u1791:
  3417   0007E6  EFFA  F003         	goto	l2738
  3418   0007EA                     u1790:
  3419   0007EA  5004               	movf	___awdiv@divisor^0,w,c
  3420   0007EC  5E02               	subwf	___awdiv@dividend^0,f,c
  3421   0007EE  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3422   0007F0  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  3423   0007F2  8008               	bsf	___awdiv@quotient^0,0,c
  3424   0007F4                     l2738:
  3425   0007F4  90D8               	bcf	status,0,c
  3426   0007F6  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  3427   0007F8  3204               	rrcf	___awdiv@divisor^0,f,c
  3428   0007FA  2E06               	decfsz	___awdiv@counter^0,f,c
  3429   0007FC  EFE7  F003         	goto	l2730
  3430   000800                     l2742:
  3431   000800  5007               	movf	___awdiv@sign^0,w,c
  3432   000802  B4D8               	btfsc	status,2,c
  3433   000804  EF06  F004         	goto	u1801
  3434   000808  EF08  F004         	goto	u1800
  3435   00080C                     u1801:
  3436   00080C  EF0C  F004         	goto	l2746
  3437   000810                     u1800:
  3438   000810  6C08               	negf	___awdiv@quotient^0,c
  3439   000812  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  3440   000814  B0D8               	btfsc	status,0,c
  3441   000816  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  3442   000818                     l2746:
  3443   000818  C008  F002         	movff	___awdiv@quotient,?___awdiv
  3444   00081C  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  3445   000820  0012               	return		;funcret
  3446   000822                     __end_of___awdiv:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _displayUID *****************
  3450 ;; Defined at:
  3451 ;;		line 10 in file "TAD_TERMINAL.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  uid             1    6[COMRAM] PTR unsigned char 
  3454 ;;		 -> motor_RFID@UID(6), ReadRFID_NoCooperatiu@UID(6), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  nibble          1   25[COMRAM] unsigned char 
  3457 ;;  i               2   23[COMRAM] int 
  3458 ;;  hexString      11    8[COMRAM] unsigned char [11]
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1
  3468 ;;      Params:         1       0       0
  3469 ;;      Locals:        18       0       0
  3470 ;;      Temps:          1       0       0
  3471 ;;      Totals:        20       0       0
  3472 ;;Total ram usage:       20 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; Hardware stack levels required when called: 5
  3475 ;; This function calls:
  3476 ;;		_Terminal_SendString
  3477 ;; This function is called by:
  3478 ;;		_motor_RFID
  3479 ;;		_ReadRFID_NoCooperatiu
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text10
  3484   000670                     __ptext10:
  3485                           	callstack 0
  3486   000670                     _displayUID:
  3487                           	callstack 24
  3488   000670                     
  3489                           ;TAD_TERMINAL.c: 11:     char hexString[11];;TAD_TERMINAL.c: 12:     for (int i = 0; i <
      +                           5; i++) {
  3490   000670  0E00               	movlw	0
  3491   000672  6E19               	movwf	(displayUID@i+1)^0,c
  3492   000674  0E00               	movlw	0
  3493   000676  6E18               	movwf	displayUID@i^0,c
  3494   000678                     l3080:
  3495                           
  3496                           ;TAD_TERMINAL.c: 13:         unsigned char nibble = (uid[i] >> 4) & 0x0F;
  3497   000678  5007               	movf	displayUID@uid^0,w,c
  3498   00067A  2418               	addwf	displayUID@i^0,w,c
  3499   00067C  6ED9               	movwf	fsr2l,c
  3500   00067E  6ADA               	clrf	fsr2h,c
  3501   000680  50DF               	movf	indf2,w,c
  3502   000682  6E08               	movwf	??_displayUID^0,c
  3503   000684  3808               	swapf	??_displayUID^0,w,c
  3504   000686  0B0F               	andlw	15
  3505   000688  0B0F               	andlw	15
  3506   00068A  6E1A               	movwf	displayUID@nibble^0,c
  3507   00068C                     
  3508                           ;TAD_TERMINAL.c: 14:         hexString[i*2] = (nibble < 10) ? nibble + '0' : nibble - 10
      +                           + 'A';
  3509   00068C  0E09               	movlw	9
  3510   00068E  641A               	cpfsgt	displayUID@nibble^0,c
  3511   000690  EF4C  F003         	goto	u2311
  3512   000694  EF4E  F003         	goto	u2310
  3513   000698                     u2311:
  3514   000698  EF56  F003         	goto	l3086
  3515   00069C                     u2310:
  3516   00069C  0E37               	movlw	55
  3517   00069E  241A               	addwf	displayUID@nibble^0,w,c
  3518   0006A0  6E14               	movwf	_displayUID$823^0,c
  3519   0006A2  6A15               	clrf	(_displayUID$823+1)^0,c
  3520   0006A4  0E00               	movlw	0
  3521   0006A6  2215               	addwfc	(_displayUID$823+1)^0,f,c
  3522   0006A8  EF5C  F003         	goto	l3088
  3523   0006AC                     l3086:
  3524   0006AC  0E30               	movlw	48
  3525   0006AE  241A               	addwf	displayUID@nibble^0,w,c
  3526   0006B0  6E14               	movwf	_displayUID$823^0,c
  3527   0006B2  6A15               	clrf	(_displayUID$823+1)^0,c
  3528   0006B4  0E00               	movlw	0
  3529   0006B6  2215               	addwfc	(_displayUID$823+1)^0,f,c
  3530   0006B8                     l3088:
  3531   0006B8  5018               	movf	displayUID@i^0,w,c
  3532   0006BA  0D02               	mullw	2
  3533   0006BC  50F3               	movf	243,w,c
  3534   0006BE  0F09               	addlw	low displayUID@hexString
  3535   0006C0  6ED9               	movwf	fsr2l,c
  3536   0006C2  6ADA               	clrf	fsr2h,c
  3537   0006C4  C014  FFDF         	movff	_displayUID$823,indf2
  3538   0006C8                     
  3539                           ;TAD_TERMINAL.c: 15:         nibble = uid[i] & 0x0F;
  3540   0006C8  5007               	movf	displayUID@uid^0,w,c
  3541   0006CA  2418               	addwf	displayUID@i^0,w,c
  3542   0006CC  6ED9               	movwf	fsr2l,c
  3543   0006CE  6ADA               	clrf	fsr2h,c
  3544   0006D0  50DF               	movf	indf2,w,c
  3545   0006D2  0B0F               	andlw	15
  3546   0006D4  6E1A               	movwf	displayUID@nibble^0,c
  3547   0006D6                     
  3548                           ;TAD_TERMINAL.c: 16:         hexString[i*2 + 1] = (nibble < 10) ? nibble + '0' : nibble 
      +                          - 10 + 'A';
  3549   0006D6  0E09               	movlw	9
  3550   0006D8  641A               	cpfsgt	displayUID@nibble^0,c
  3551   0006DA  EF71  F003         	goto	u2321
  3552   0006DE  EF73  F003         	goto	u2320
  3553   0006E2                     u2321:
  3554   0006E2  EF7B  F003         	goto	l3096
  3555   0006E6                     u2320:
  3556   0006E6  0E37               	movlw	55
  3557   0006E8  241A               	addwf	displayUID@nibble^0,w,c
  3558   0006EA  6E16               	movwf	_displayUID$824^0,c
  3559   0006EC  6A17               	clrf	(_displayUID$824+1)^0,c
  3560   0006EE  0E00               	movlw	0
  3561   0006F0  2217               	addwfc	(_displayUID$824+1)^0,f,c
  3562   0006F2  EF81  F003         	goto	l3098
  3563   0006F6                     l3096:
  3564   0006F6  0E30               	movlw	48
  3565   0006F8  241A               	addwf	displayUID@nibble^0,w,c
  3566   0006FA  6E16               	movwf	_displayUID$824^0,c
  3567   0006FC  6A17               	clrf	(_displayUID$824+1)^0,c
  3568   0006FE  0E00               	movlw	0
  3569   000700  2217               	addwfc	(_displayUID$824+1)^0,f,c
  3570   000702                     l3098:
  3571   000702  5018               	movf	displayUID@i^0,w,c
  3572   000704  0D02               	mullw	2
  3573   000706  CFF3 F008          	movff	prodl,??_displayUID
  3574   00070A  0E01               	movlw	1
  3575   00070C  2608               	addwf	??_displayUID^0,f,c
  3576   00070E  5008               	movf	??_displayUID^0,w,c
  3577   000710  0F09               	addlw	low displayUID@hexString
  3578   000712  6ED9               	movwf	fsr2l,c
  3579   000714  6ADA               	clrf	fsr2h,c
  3580   000716  C016  FFDF         	movff	_displayUID$824,indf2
  3581   00071A                     
  3582                           ;TAD_TERMINAL.c: 17:     }
  3583   00071A  4A18               	infsnz	displayUID@i^0,f,c
  3584   00071C  2A19               	incf	(displayUID@i+1)^0,f,c
  3585   00071E  BE19               	btfsc	(displayUID@i+1)^0,7,c
  3586   000720  EF9B  F003         	goto	u2331
  3587   000724  5019               	movf	(displayUID@i+1)^0,w,c
  3588   000726  E109               	bnz	u2330
  3589   000728  0E05               	movlw	5
  3590   00072A  5C18               	subwf	displayUID@i^0,w,c
  3591   00072C  A0D8               	btfss	status,0,c
  3592   00072E  EF9B  F003         	goto	u2331
  3593   000732  EF9D  F003         	goto	u2330
  3594   000736                     u2331:
  3595   000736  EF3C  F003         	goto	l3080
  3596   00073A                     u2330:
  3597   00073A                     
  3598                           ;TAD_TERMINAL.c: 18:     hexString[10] = '\0';
  3599   00073A  6A13               	clrf	(displayUID@hexString+10)^0,c
  3600   00073C                     
  3601                           ;TAD_TERMINAL.c: 20:     Terminal_SendString("UID: ");
  3602   00073C  0EF9               	movlw	low STR_2
  3603   00073E  6E05               	movwf	Terminal_SendString@str^0,c
  3604   000740  0E1F               	movlw	high STR_2
  3605   000742  6E06               	movwf	(Terminal_SendString@str+1)^0,c
  3606   000744  EC6A  F005         	call	_Terminal_SendString	;wreg free
  3607                           
  3608                           ;TAD_TERMINAL.c: 21:     Terminal_SendString(hexString);
  3609   000748  0E09               	movlw	low displayUID@hexString
  3610   00074A  6E05               	movwf	Terminal_SendString@str^0,c
  3611   00074C  6A06               	clrf	(Terminal_SendString@str+1)^0,c
  3612   00074E  EC6A  F005         	call	_Terminal_SendString	;wreg free
  3613                           
  3614                           ;TAD_TERMINAL.c: 22:     Terminal_SendString("\n");
  3615   000752  0EB2               	movlw	low (STR_4+16)
  3616   000754  6E05               	movwf	Terminal_SendString@str^0,c
  3617   000756  0E1F               	movlw	high (STR_4+16)
  3618   000758  6E06               	movwf	(Terminal_SendString@str+1)^0,c
  3619   00075A  EC6A  F005         	call	_Terminal_SendString	;wreg free
  3620   00075E  0012               	return		;funcret
  3621   000760                     __end_of_displayUID:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _Terminal_SendString *****************
  3625 ;; Defined at:
  3626 ;;		line 55 in file "TAD_TERMINAL.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  str             2    4[COMRAM] PTR const unsigned char 
  3629 ;;		 -> STR_15(33), STR_14(14), STR_13(14), STR_12(14), 
  3630 ;;		 -> STR_11(9), STR_10(33), STR_9(29), STR_8(27), 
  3631 ;;		 -> STR_7(19), STR_6(18), STR_5(18), STR_4(18), 
  3632 ;;		 -> STR_3(2), STR_2(6), displayUID@hexString(11), 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1
  3644 ;;      Params:         2       0       0
  3645 ;;      Locals:         0       0       0
  3646 ;;      Temps:          0       0       0
  3647 ;;      Totals:         2       0       0
  3648 ;;Total ram usage:        2 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 4
  3651 ;; This function calls:
  3652 ;;		_Terminal_SendChar
  3653 ;;		_Terminal_TXAvailable
  3654 ;; This function is called by:
  3655 ;;		_displayUID
  3656 ;;		_showMenu
  3657 ;;		_motorTerminal
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text11
  3662   000AD4                     __ptext11:
  3663                           	callstack 0
  3664   000AD4                     _Terminal_SendString:
  3665                           	callstack 24
  3666   000AD4                     
  3667                           ;TAD_TERMINAL.c: 56:  while (*str) {
  3668   000AD4  EF8B  F005         	goto	l2978
  3669   000AD8                     l2972:
  3670   000AD8  ECD8  F006         	call	_Terminal_TXAvailable	;wreg free
  3671   000ADC  5002               	movf	?_Terminal_TXAvailable^0,w,c
  3672   000ADE  1003               	iorwf	(?_Terminal_TXAvailable+1)^0,w,c
  3673   000AE0  B4D8               	btfsc	status,2,c
  3674   000AE2  EF75  F005         	goto	u2161
  3675   000AE6  EF77  F005         	goto	u2160
  3676   000AEA                     u2161:
  3677   000AEA  EF6C  F005         	goto	l2972
  3678   000AEE                     u2160:
  3679   000AEE                     
  3680                           ;TAD_TERMINAL.c: 58:   Terminal_SendChar(*str++);
  3681   000AEE  C005  FFF6         	movff	Terminal_SendString@str,tblptrl
  3682   000AF2  C006  FFF7         	movff	Terminal_SendString@str+1,tblptrh
  3683   000AF6  6AF8               	clrf	tblptru,c
  3684   000AF8  0E01               	movlw	(high __ramtop+-1)
  3685   000AFA  64F7               	cpfsgt	tblptrh,c
  3686   000AFC  D003               	bra	u2177
  3687   000AFE  0008               	tblrd		*
  3688   000B00  50F5               	movf	tablat,w,c
  3689   000B02  D005               	bra	u2170
  3690   000B04                     u2177:
  3691   000B04  CFF6 FFE9          	movff	tblptrl,fsr0l
  3692   000B08  CFF7 FFEA          	movff	tblptrh,fsr0h
  3693   000B0C  50EF               	movf	indf0,w,c
  3694   000B0E                     u2170:
  3695   000B0E  EC3F  F007         	call	_Terminal_SendChar
  3696   000B12  4A05               	infsnz	Terminal_SendString@str^0,f,c
  3697   000B14  2A06               	incf	(Terminal_SendString@str+1)^0,f,c
  3698   000B16                     l2978:
  3699                           
  3700                           ;TAD_TERMINAL.c: 56:  while (*str) {
  3701   000B16  C005  FFF6         	movff	Terminal_SendString@str,tblptrl
  3702   000B1A  C006  FFF7         	movff	Terminal_SendString@str+1,tblptrh
  3703   000B1E  6AF8               	clrf	tblptru,c
  3704   000B20  0E01               	movlw	(high __ramtop+-1)
  3705   000B22  64F7               	cpfsgt	tblptrh,c
  3706   000B24  D003               	bra	u2187
  3707   000B26  0008               	tblrd		*
  3708   000B28  50F5               	movf	tablat,w,c
  3709   000B2A  D005               	bra	u2180
  3710   000B2C                     u2187:
  3711   000B2C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3712   000B30  CFF7 FFEA          	movff	tblptrh,fsr0h
  3713   000B34  50EF               	movf	indf0,w,c
  3714   000B36                     u2180:
  3715   000B36  0900               	iorlw	0
  3716   000B38  A4D8               	btfss	status,2,c
  3717   000B3A  EFA1  F005         	goto	u2191
  3718   000B3E  EFA3  F005         	goto	u2190
  3719   000B42                     u2191:
  3720   000B42  EF6C  F005         	goto	l2972
  3721   000B46                     u2190:
  3722   000B46  0012               	return		;funcret
  3723   000B48                     __end_of_Terminal_SendString:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _Terminal_TXAvailable *****************
  3727 ;; Defined at:
  3728 ;;		line 35 in file "TAD_TERMINAL.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2    1[COMRAM] int 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1
  3742 ;;      Params:         2       0       0
  3743 ;;      Locals:         0       0       0
  3744 ;;      Temps:          1       0       0
  3745 ;;      Totals:         3       0       0
  3746 ;;Total ram usage:        3 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 3
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_Terminal_SendString
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text12
  3757   000DB0                     __ptext12:
  3758                           	callstack 0
  3759   000DB0                     _Terminal_TXAvailable:
  3760                           	callstack 24
  3761   000DB0                     
  3762                           ;TAD_TERMINAL.c: 36:  return (PIR1bits.TXIF == 1) ? 1 : 0;
  3763   000DB0  B89E               	btfsc	158,4,c	;volatile
  3764   000DB2  EFDD  F006         	goto	u1921
  3765   000DB6  EFE1  F006         	goto	u1920
  3766   000DBA                     u1921:
  3767   000DBA  6A04               	clrf	??_Terminal_TXAvailable^0,c
  3768   000DBC  2A04               	incf	??_Terminal_TXAvailable^0,f,c
  3769   000DBE  EFE2  F006         	goto	u1928
  3770   000DC2                     u1920:
  3771   000DC2  6A04               	clrf	??_Terminal_TXAvailable^0,c
  3772   000DC4                     u1928:
  3773   000DC4  5004               	movf	??_Terminal_TXAvailable^0,w,c
  3774   000DC6  6E02               	movwf	?_Terminal_TXAvailable^0,c
  3775   000DC8  6A03               	clrf	(?_Terminal_TXAvailable+1)^0,c
  3776   000DCA  0012               	return		;funcret
  3777   000DCC                     __end_of_Terminal_TXAvailable:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function _Terminal_SendChar *****************
  3781 ;; Defined at:
  3782 ;;		line 45 in file "TAD_TERMINAL.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  c               1    wreg     unsigned char 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  c               1    1[COMRAM] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1
  3796 ;;      Params:         0       0       0
  3797 ;;      Locals:         1       0       0
  3798 ;;      Temps:          0       0       0
  3799 ;;      Totals:         1       0       0
  3800 ;;Total ram usage:        1 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 3
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_Terminal_SendString
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text13
  3811   000E7E                     __ptext13:
  3812                           	callstack 0
  3813   000E7E                     _Terminal_SendChar:
  3814                           	callstack 24
  3815                           
  3816                           ;incstack = 0
  3817                           ;Terminal_SendChar@c stored from wreg
  3818   000E7E  6E02               	movwf	Terminal_SendChar@c^0,c
  3819   000E80                     
  3820                           ;TAD_TERMINAL.c: 46:  TXREG = c;
  3821   000E80  C002  FFAD         	movff	Terminal_SendChar@c,4013	;volatile
  3822   000E84  0012               	return		;funcret
  3823   000E86                     __end_of_Terminal_SendChar:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _initTeclado *****************
  3827 ;; Defined at:
  3828 ;;		line 14 in file "TAD_TECLADO.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1
  3842 ;;      Params:         0       0       0
  3843 ;;      Locals:         0       0       0
  3844 ;;      Temps:          0       0       0
  3845 ;;      Totals:         0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 4
  3849 ;; This function calls:
  3850 ;;		_TI_NewTimer
  3851 ;;		_initPortsTeclado
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;;		_motorTerminal
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text14
  3859   000DFE                     __ptext14:
  3860                           	callstack 0
  3861   000DFE                     _initTeclado:
  3862                           	callstack 26
  3863   000DFE                     
  3864                           ;TAD_TECLADO.c: 15:  initPortsTeclado();
  3865   000DFE  EC43  F007         	call	_initPortsTeclado	;wreg free
  3866   000E02                     
  3867                           ;TAD_TECLADO.c: 16:     Filas = 0x00;
  3868   000E02  6A72               	clrf	_Filas^0,c
  3869   000E04                     
  3870                           ;TAD_TECLADO.c: 17:     Columnas = 0x00;
  3871   000E04  6A71               	clrf	_Columnas^0,c
  3872   000E06                     
  3873                           ;TAD_TECLADO.c: 18:     tecla = 0;
  3874   000E06  6A70               	clrf	_tecla^0,c
  3875   000E08                     
  3876                           ;TAD_TECLADO.c: 19:  state = 0;
  3877   000E08  6A6F               	clrf	_state^0,c
  3878   000E0A                     
  3879                           ;TAD_TECLADO.c: 20:     TI_NewTimer(&timer);
  3880   000E0A  0E7A               	movlw	low _timer
  3881   000E0C  6E02               	movwf	TI_NewTimer@TimerHandle^0,c
  3882   000E0E  ECA4  F005         	call	_TI_NewTimer	;wreg free
  3883   000E12  0012               	return		;funcret
  3884   000E14                     __end_of_initTeclado:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _initPortsTeclado *****************
  3888 ;; Defined at:
  3889 ;;		line 23 in file "TAD_TECLADO.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1
  3903 ;;      Params:         0       0       0
  3904 ;;      Locals:         0       0       0
  3905 ;;      Temps:          0       0       0
  3906 ;;      Totals:         0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 3
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_initTeclado
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text15
  3918   000E86                     __ptext15:
  3919                           	callstack 0
  3920   000E86                     _initPortsTeclado:
  3921                           	callstack 26
  3922   000E86                     
  3923                           ;TAD_TECLADO.c: 26:  TRISD = 0x0F;
  3924   000E86  0E0F               	movlw	15
  3925   000E88  6E95               	movwf	149,c	;volatile
  3926   000E8A                     
  3927                           ;TAD_TECLADO.c: 27:  LATD = 0x00;
  3928   000E8A  6A8C               	clrf	140,c	;volatile
  3929   000E8C  0012               	return		;funcret
  3930   000E8E                     __end_of_initPortsTeclado:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function _TI_NewTimer *****************
  3934 ;; Defined at:
  3935 ;;		line 43 in file "TAD_TIMER.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  TimerHandle     1    1[COMRAM] PTR unsigned char 
  3938 ;;		 -> Timer(1), timer(1), 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  Comptador       1    3[COMRAM] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      unsigned char 
  3943 ;; Registers used:
  3944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1
  3950 ;;      Params:         1       0       0
  3951 ;;      Locals:         1       0       0
  3952 ;;      Temps:          1       0       0
  3953 ;;      Totals:         3       0       0
  3954 ;;Total ram usage:        3 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; Hardware stack levels required when called: 3
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_initTeclado
  3961 ;;		_LcInit
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text16
  3966   000B48                     __ptext16:
  3967                           	callstack 0
  3968   000B48                     _TI_NewTimer:
  3969                           	callstack 26
  3970   000B48                     
  3971                           ;TAD_TIMER.c: 44:  unsigned char Comptador=0;
  3972   000B48  6A04               	clrf	TI_NewTimer@Comptador^0,c
  3973                           
  3974                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  3975   000B4A  EFB3  F005         	goto	l2994
  3976   000B4E                     l2990:
  3977                           
  3978                           ;TAD_TIMER.c: 46:   if (++Comptador == 4) return (0);
  3979   000B4E  2A04               	incf	TI_NewTimer@Comptador^0,f,c
  3980   000B50  0E04               	movlw	4
  3981   000B52  1804               	xorwf	TI_NewTimer@Comptador^0,w,c
  3982   000B54  A4D8               	btfss	status,2,c
  3983   000B56  EFAF  F005         	goto	u2211
  3984   000B5A  EFB1  F005         	goto	u2210
  3985   000B5E                     u2211:
  3986   000B5E  EFB3  F005         	goto	l2994
  3987   000B62                     u2210:
  3988   000B62  EFCE  F005         	goto	l75
  3989   000B66                     l2994:
  3990                           
  3991                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  3992   000B66  5004               	movf	TI_NewTimer@Comptador^0,w,c
  3993   000B68  0D05               	mullw	5
  3994   000B6A  50F3               	movf	243,w,c
  3995   000B6C  0F44               	addlw	low (_Timers+4)
  3996   000B6E  6ED9               	movwf	fsr2l,c
  3997   000B70  6ADA               	clrf	fsr2h,c
  3998   000B72  04DE               	decf	postinc2,w,c
  3999   000B74  B4D8               	btfsc	status,2,c
  4000   000B76  EFBF  F005         	goto	u2221
  4001   000B7A  EFC1  F005         	goto	u2220
  4002   000B7E                     u2221:
  4003   000B7E  EFA7  F005         	goto	l2990
  4004   000B82                     u2220:
  4005   000B82                     
  4006                           ;TAD_TIMER.c: 48:  Timers[Comptador].Busy=1;
  4007   000B82  5004               	movf	TI_NewTimer@Comptador^0,w,c
  4008   000B84  0D05               	mullw	5
  4009   000B86  50F3               	movf	243,w,c
  4010   000B88  0F44               	addlw	low (_Timers+4)
  4011   000B8A  6ED9               	movwf	fsr2l,c
  4012   000B8C  6ADA               	clrf	fsr2h,c
  4013   000B8E  0E01               	movlw	1
  4014   000B90  6EDF               	movwf	indf2,c
  4015   000B92                     
  4016                           ;TAD_TIMER.c: 49:  *TimerHandle=Comptador;
  4017   000B92  5002               	movf	TI_NewTimer@TimerHandle^0,w,c
  4018   000B94  6ED9               	movwf	fsr2l,c
  4019   000B96  6ADA               	clrf	fsr2h,c
  4020   000B98  C004  FFDF         	movff	TI_NewTimer@Comptador,indf2
  4021   000B9C                     l75:
  4022   000B9C  0012               	return		;funcret
  4023   000B9E                     __end_of_TI_NewTimer:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _initRFID *****************
  4027 ;; Defined at:
  4028 ;;		line 296 in file "TAD_RFID.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1
  4042 ;;      Params:         0       0       0
  4043 ;;      Locals:         0       0       0
  4044 ;;      Temps:          0       0       0
  4045 ;;      Totals:         0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 8
  4049 ;; This function calls:
  4050 ;;		_InitPortDirections
  4051 ;;		_MFRC522_Init
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text17
  4058   000E74                     __ptext17:
  4059                           	callstack 0
  4060   000E74                     _initRFID:
  4061                           	callstack 22
  4062   000E74                     
  4063                           ;TAD_RFID.c: 297:     InitPortDirections();
  4064   000E74  EC34  F007         	call	_InitPortDirections	;wreg free
  4065   000E78                     
  4066                           ;TAD_RFID.c: 298:     MFRC522_Init();
  4067   000E78  EC20  F006         	call	_MFRC522_Init	;wreg free
  4068   000E7C  0012               	return		;funcret
  4069   000E7E                     __end_of_initRFID:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _MFRC522_Init *****************
  4073 ;; Defined at:
  4074 ;;		line 117 in file "TAD_RFID.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1
  4088 ;;      Params:         0       0       0
  4089 ;;      Locals:         0       0       0
  4090 ;;      Temps:          0       0       0
  4091 ;;      Totals:         0       0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; Hardware stack levels required when called: 7
  4095 ;; This function calls:
  4096 ;;		_MFRC522_AntennaOff
  4097 ;;		_MFRC522_AntennaOn
  4098 ;;		_MFRC522_Reset
  4099 ;;		_MFRC522_Wr
  4100 ;; This function is called by:
  4101 ;;		_initRFID
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text18
  4106   000C40                     __ptext18:
  4107                           	callstack 0
  4108   000C40                     _MFRC522_Init:
  4109                           	callstack 22
  4110   000C40                     
  4111                           ;TAD_RFID.c: 118:     LATCbits.LATC3 = 1;
  4112   000C40  868B               	bsf	139,3,c	;volatile
  4113                           
  4114                           ;TAD_RFID.c: 119:     LATCbits.LATC4 = 1;
  4115   000C42  888B               	bsf	139,4,c	;volatile
  4116   000C44                     
  4117                           ;TAD_RFID.c: 121:     MFRC522_Reset();
  4118   000C44  ECAF  F006         	call	_MFRC522_Reset	;wreg free
  4119                           
  4120                           ;TAD_RFID.c: 122:     MFRC522_Wr(0x2A, 0x8D);
  4121   000C48  0E8D               	movlw	141
  4122   000C4A  6E0C               	movwf	MFRC522_Wr@value^0,c
  4123   000C4C  0E2A               	movlw	42
  4124   000C4E  ECC5  F004         	call	_MFRC522_Wr
  4125                           
  4126                           ;TAD_RFID.c: 123:     MFRC522_Wr(0x2B, 0x3E);
  4127   000C52  0E3E               	movlw	62
  4128   000C54  6E0C               	movwf	MFRC522_Wr@value^0,c
  4129   000C56  0E2B               	movlw	43
  4130   000C58  ECC5  F004         	call	_MFRC522_Wr
  4131                           
  4132                           ;TAD_RFID.c: 124:     MFRC522_Wr(0x2D, 30);
  4133   000C5C  0E1E               	movlw	30
  4134   000C5E  6E0C               	movwf	MFRC522_Wr@value^0,c
  4135   000C60  0E2D               	movlw	45
  4136   000C62  ECC5  F004         	call	_MFRC522_Wr
  4137                           
  4138                           ;TAD_RFID.c: 125:     MFRC522_Wr(0x2C, 0);
  4139   000C66  0E00               	movlw	0
  4140   000C68  6E0C               	movwf	MFRC522_Wr@value^0,c
  4141   000C6A  0E2C               	movlw	44
  4142   000C6C  ECC5  F004         	call	_MFRC522_Wr
  4143                           
  4144                           ;TAD_RFID.c: 126:     MFRC522_Wr(0x15, 0x40);
  4145   000C70  0E40               	movlw	64
  4146   000C72  6E0C               	movwf	MFRC522_Wr@value^0,c
  4147   000C74  0E15               	movlw	21
  4148   000C76  ECC5  F004         	call	_MFRC522_Wr
  4149                           
  4150                           ;TAD_RFID.c: 127:     MFRC522_Wr(0x11, 0x3D);
  4151   000C7A  0E3D               	movlw	61
  4152   000C7C  6E0C               	movwf	MFRC522_Wr@value^0,c
  4153   000C7E  0E11               	movlw	17
  4154   000C80  ECC5  F004         	call	_MFRC522_Wr
  4155                           
  4156                           ;TAD_RFID.c: 129:     MFRC522_AntennaOff();
  4157   000C84  EC2E  F007         	call	_MFRC522_AntennaOff	;wreg free
  4158                           
  4159                           ;TAD_RFID.c: 130:     MFRC522_AntennaOn();
  4160   000C88  EC28  F007         	call	_MFRC522_AntennaOn	;wreg free
  4161   000C8C  0012               	return		;funcret
  4162   000C8E                     __end_of_MFRC522_Init:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _MFRC522_Reset *****************
  4166 ;; Defined at:
  4167 ;;		line 98 in file "TAD_RFID.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1
  4181 ;;      Params:         0       0       0
  4182 ;;      Locals:         0       0       0
  4183 ;;      Temps:          0       0       0
  4184 ;;      Totals:         0       0       0
  4185 ;;Total ram usage:        0 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; Hardware stack levels required when called: 5
  4188 ;; This function calls:
  4189 ;;		_MFRC522_Wr
  4190 ;;		_delay_us
  4191 ;; This function is called by:
  4192 ;;		_MFRC522_Init
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text19
  4197   000D5E                     __ptext19:
  4198                           	callstack 0
  4199   000D5E                     _MFRC522_Reset:
  4200                           	callstack 23
  4201   000D5E                     
  4202                           ;TAD_RFID.c: 99:     LATCbits.LATC4 = 1;
  4203   000D5E  888B               	bsf	139,4,c	;volatile
  4204   000D60                     
  4205                           ;TAD_RFID.c: 100:     delay_us (1);
  4206   000D60  0E01               	movlw	1
  4207   000D62  EC47  F006         	call	_delay_us
  4208   000D66                     
  4209                           ;TAD_RFID.c: 101:     LATCbits.LATC4 = 0;
  4210   000D66  988B               	bcf	139,4,c	;volatile
  4211                           
  4212                           ;TAD_RFID.c: 102:     delay_us (1);
  4213   000D68  0E01               	movlw	1
  4214   000D6A  EC47  F006         	call	_delay_us
  4215   000D6E                     
  4216                           ;TAD_RFID.c: 103:     LATCbits.LATC4 = 1;
  4217   000D6E  888B               	bsf	139,4,c	;volatile
  4218                           
  4219                           ;TAD_RFID.c: 104:     delay_us (1);
  4220   000D70  0E01               	movlw	1
  4221   000D72  EC47  F006         	call	_delay_us
  4222                           
  4223                           ;TAD_RFID.c: 105:     MFRC522_Wr(0x01, 0x0F);
  4224   000D76  0E0F               	movlw	15
  4225   000D78  6E0C               	movwf	MFRC522_Wr@value^0,c
  4226   000D7A  0E01               	movlw	1
  4227   000D7C  ECC5  F004         	call	_MFRC522_Wr
  4228                           
  4229                           ;TAD_RFID.c: 106:     delay_us (1);
  4230   000D80  0E01               	movlw	1
  4231   000D82  EC47  F006         	call	_delay_us
  4232   000D86  0012               	return		;funcret
  4233   000D88                     __end_of_MFRC522_Reset:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _MFRC522_AntennaOn *****************
  4237 ;; Defined at:
  4238 ;;		line 109 in file "TAD_RFID.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1
  4252 ;;      Params:         0       0       0
  4253 ;;      Locals:         0       0       0
  4254 ;;      Temps:          0       0       0
  4255 ;;      Totals:         0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; Hardware stack levels required when called: 6
  4259 ;; This function calls:
  4260 ;;		_MFRC522_Set_Bit
  4261 ;; This function is called by:
  4262 ;;		_MFRC522_Init
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text20
  4267   000E50                     __ptext20:
  4268                           	callstack 0
  4269   000E50                     _MFRC522_AntennaOn:
  4270                           	callstack 22
  4271   000E50                     
  4272                           ;TAD_RFID.c: 110:     MFRC522_Set_Bit(0x14, 0x03);
  4273   000E50  0E03               	movlw	3
  4274   000E52  6E11               	movwf	MFRC522_Set_Bit@mask^0,c
  4275   000E54  0E14               	movlw	20
  4276   000E56  EC15  F007         	call	_MFRC522_Set_Bit
  4277   000E5A  0012               	return		;funcret
  4278   000E5C                     __end_of_MFRC522_AntennaOn:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _MFRC522_Set_Bit *****************
  4282 ;; Defined at:
  4283 ;;		line 94 in file "TAD_RFID.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  addr            1    wreg     unsigned char 
  4286 ;;  mask            1   16[COMRAM] unsigned char 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  addr            1   17[COMRAM] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1
  4298 ;;      Params:         1       0       0
  4299 ;;      Locals:         1       0       0
  4300 ;;      Temps:          0       0       0
  4301 ;;      Totals:         2       0       0
  4302 ;;Total ram usage:        2 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 5
  4305 ;; This function calls:
  4306 ;;		_MFRC522_Rd
  4307 ;;		_MFRC522_Wr
  4308 ;; This function is called by:
  4309 ;;		_MFRC522_AntennaOn
  4310 ;;		_motor_RFID
  4311 ;;		_MFRC522_ToCard
  4312 ;;		_MFRC522_CRC
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text21
  4317   000E2A                     __ptext21:
  4318                           	callstack 0
  4319   000E2A                     _MFRC522_Set_Bit:
  4320                           	callstack 24
  4321                           
  4322                           ;incstack = 0
  4323                           ;MFRC522_Set_Bit@addr stored from wreg
  4324   000E2A  6E12               	movwf	MFRC522_Set_Bit@addr^0,c
  4325   000E2C                     
  4326                           ;TAD_RFID.c: 95:     MFRC522_Wr(addr, MFRC522_Rd(addr) | mask);
  4327   000E2C  5012               	movf	MFRC522_Set_Bit@addr^0,w,c
  4328   000E2E  EC19  F005         	call	_MFRC522_Rd
  4329   000E32  1011               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  4330   000E34  6E0C               	movwf	MFRC522_Wr@value^0,c
  4331   000E36  5012               	movf	MFRC522_Set_Bit@addr^0,w,c
  4332   000E38  ECC5  F004         	call	_MFRC522_Wr
  4333   000E3C  0012               	return		;funcret
  4334   000E3E                     __end_of_MFRC522_Set_Bit:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _MFRC522_AntennaOff *****************
  4338 ;; Defined at:
  4339 ;;		line 113 in file "TAD_RFID.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1
  4353 ;;      Params:         0       0       0
  4354 ;;      Locals:         0       0       0
  4355 ;;      Temps:          0       0       0
  4356 ;;      Totals:         0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 6
  4360 ;; This function calls:
  4361 ;;		_MFRC522_Clear_Bit
  4362 ;; This function is called by:
  4363 ;;		_MFRC522_Init
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text22
  4368   000E5C                     __ptext22:
  4369                           	callstack 0
  4370   000E5C                     _MFRC522_AntennaOff:
  4371                           	callstack 22
  4372   000E5C                     
  4373                           ;TAD_RFID.c: 114:     MFRC522_Clear_Bit(0x14, 0x03);
  4374   000E5C  0E03               	movlw	3
  4375   000E5E  6E11               	movwf	MFRC522_Clear_Bit@mask^0,c
  4376   000E60  0E14               	movlw	20
  4377   000E62  ECE6  F006         	call	_MFRC522_Clear_Bit
  4378   000E66  0012               	return		;funcret
  4379   000E68                     __end_of_MFRC522_AntennaOff:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _MFRC522_Clear_Bit *****************
  4383 ;; Defined at:
  4384 ;;		line 90 in file "TAD_RFID.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  addr            1    wreg     unsigned char 
  4387 ;;  mask            1   16[COMRAM] unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  addr            1   18[COMRAM] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1
  4399 ;;      Params:         1       0       0
  4400 ;;      Locals:         1       0       0
  4401 ;;      Temps:          1       0       0
  4402 ;;      Totals:         3       0       0
  4403 ;;Total ram usage:        3 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 5
  4406 ;; This function calls:
  4407 ;;		_MFRC522_Rd
  4408 ;;		_MFRC522_Wr
  4409 ;; This function is called by:
  4410 ;;		_MFRC522_AntennaOff
  4411 ;;		_motor_RFID
  4412 ;;		_MFRC522_ToCard
  4413 ;;		_MFRC522_CRC
  4414 ;;		_MFRC522_Halt
  4415 ;;		_MFRC522_AntiColl
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text23
  4420   000DCC                     __ptext23:
  4421                           	callstack 0
  4422   000DCC                     _MFRC522_Clear_Bit:
  4423                           	callstack 24
  4424                           
  4425                           ;incstack = 0
  4426                           ;MFRC522_Clear_Bit@addr stored from wreg
  4427   000DCC  6E13               	movwf	MFRC522_Clear_Bit@addr^0,c
  4428   000DCE                     
  4429                           ;TAD_RFID.c: 91:     MFRC522_Wr(addr, MFRC522_Rd(addr) & ~mask);
  4430   000DCE  5011               	movf	MFRC522_Clear_Bit@mask^0,w,c
  4431   000DD0  0AFF               	xorlw	255
  4432   000DD2  6E12               	movwf	??_MFRC522_Clear_Bit^0,c
  4433   000DD4  5013               	movf	MFRC522_Clear_Bit@addr^0,w,c
  4434   000DD6  EC19  F005         	call	_MFRC522_Rd
  4435   000DDA  1412               	andwf	??_MFRC522_Clear_Bit^0,w,c
  4436   000DDC  6E0C               	movwf	MFRC522_Wr@value^0,c
  4437   000DDE  5013               	movf	MFRC522_Clear_Bit@addr^0,w,c
  4438   000DE0  ECC5  F004         	call	_MFRC522_Wr
  4439   000DE4  0012               	return		;funcret
  4440   000DE6                     __end_of_MFRC522_Clear_Bit:
  4441                           	callstack 0
  4442                           
  4443 ;; *************** function _MFRC522_Wr *****************
  4444 ;; Defined at:
  4445 ;;		line 62 in file "TAD_RFID.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  Address         1    wreg     unsigned char 
  4448 ;;  value           1   11[COMRAM] unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  Address         1   13[COMRAM] unsigned char 
  4451 ;;  i               1   15[COMRAM] unsigned char 
  4452 ;;  ucAddr          1   14[COMRAM] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1
  4462 ;;      Params:         1       0       0
  4463 ;;      Locals:         3       0       0
  4464 ;;      Temps:          1       0       0
  4465 ;;      Totals:         5       0       0
  4466 ;;Total ram usage:        5 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; Hardware stack levels required when called: 4
  4469 ;; This function calls:
  4470 ;;		_delay_us
  4471 ;; This function is called by:
  4472 ;;		_MFRC522_Clear_Bit
  4473 ;;		_MFRC522_Set_Bit
  4474 ;;		_MFRC522_Reset
  4475 ;;		_MFRC522_Init
  4476 ;;		_motor_RFID
  4477 ;;		_MFRC522_ToCard
  4478 ;;		_MFRC522_Request
  4479 ;;		_MFRC522_CRC
  4480 ;;		_MFRC522_AntiColl
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text24
  4485   00098A                     __ptext24:
  4486                           	callstack 0
  4487   00098A                     _MFRC522_Wr:
  4488                           	callstack 25
  4489                           
  4490                           ;incstack = 0
  4491                           ;MFRC522_Wr@Address stored from wreg
  4492   00098A  6E0E               	movwf	MFRC522_Wr@Address^0,c
  4493   00098C                     
  4494                           ;TAD_RFID.c: 63:     unsigned char i, ucAddr = ((Address << 1) & 0x7E);
  4495   00098C  500E               	movf	MFRC522_Wr@Address^0,w,c
  4496   00098E  240E               	addwf	MFRC522_Wr@Address^0,w,c
  4497   000990  0B7E               	andlw	126
  4498   000992  6E0F               	movwf	MFRC522_Wr@ucAddr^0,c
  4499   000994                     
  4500                           ;TAD_RFID.c: 64:     LATCbits.LATC2 = 0;
  4501   000994  948B               	bcf	139,2,c	;volatile
  4502   000996                     
  4503                           ;TAD_RFID.c: 65:     LATCbits.LATC3 = 0;
  4504   000996  968B               	bcf	139,3,c	;volatile
  4505   000998                     
  4506                           ;TAD_RFID.c: 66:     for (i = 8; i > 0; i--) {
  4507   000998  0E08               	movlw	8
  4508   00099A  6E10               	movwf	MFRC522_Wr@i^0,c
  4509   00099C                     l2674:
  4510                           
  4511                           ;TAD_RFID.c: 67:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
  4512   00099C  BE0F               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  4513   00099E  EFD3  F004         	goto	u1691
  4514   0009A2  EFD7  F004         	goto	u1690
  4515   0009A6                     u1691:
  4516   0009A6  6A0D               	clrf	??_MFRC522_Wr^0,c
  4517   0009A8  2A0D               	incf	??_MFRC522_Wr^0,f,c
  4518   0009AA  EFD8  F004         	goto	u1708
  4519   0009AE                     u1690:
  4520   0009AE  6A0D               	clrf	??_MFRC522_Wr^0,c
  4521   0009B0                     u1708:
  4522   0009B0  460D               	rlncf	??_MFRC522_Wr^0,f,c
  4523   0009B2  508B               	movf	139,w,c	;volatile
  4524   0009B4  180D               	xorwf	??_MFRC522_Wr^0,w,c
  4525   0009B6  0BFD               	andlw	-3
  4526   0009B8  180D               	xorwf	??_MFRC522_Wr^0,w,c
  4527   0009BA  6E8B               	movwf	139,c	;volatile
  4528   0009BC                     
  4529                           ;TAD_RFID.c: 68:         LATCbits.LATC2 = 1;
  4530   0009BC  848B               	bsf	139,2,c	;volatile
  4531                           
  4532                           ;TAD_RFID.c: 69:         ucAddr <<= 1;
  4533   0009BE  90D8               	bcf	status,0,c
  4534   0009C0  360F               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  4535   0009C2                     
  4536                           ;TAD_RFID.c: 70:         delay_us(5);
  4537   0009C2  0E05               	movlw	5
  4538   0009C4  EC47  F006         	call	_delay_us
  4539   0009C8                     
  4540                           ;TAD_RFID.c: 71:         LATCbits.LATC2 = 0;
  4541   0009C8  948B               	bcf	139,2,c	;volatile
  4542   0009CA                     
  4543                           ;TAD_RFID.c: 72:         delay_us(5);
  4544   0009CA  0E05               	movlw	5
  4545   0009CC  EC47  F006         	call	_delay_us
  4546   0009D0                     
  4547                           ;TAD_RFID.c: 73:     }
  4548   0009D0  0610               	decf	MFRC522_Wr@i^0,f,c
  4549   0009D2  5010               	movf	MFRC522_Wr@i^0,w,c
  4550   0009D4  A4D8               	btfss	status,2,c
  4551   0009D6  EFEF  F004         	goto	u1711
  4552   0009DA  EFF1  F004         	goto	u1710
  4553   0009DE                     u1711:
  4554   0009DE  EFCE  F004         	goto	l2674
  4555   0009E2                     u1710:
  4556   0009E2                     
  4557                           ;TAD_RFID.c: 75:     for (i = 8; i > 0; i--) {
  4558   0009E2  0E08               	movlw	8
  4559   0009E4  6E10               	movwf	MFRC522_Wr@i^0,c
  4560   0009E6                     l2692:
  4561                           
  4562                           ;TAD_RFID.c: 76:         LATCbits.LATC1 = ((value & 0x80) == 0x80);
  4563   0009E6  BE0C               	btfsc	MFRC522_Wr@value^0,7,c
  4564   0009E8  EFF8  F004         	goto	u1721
  4565   0009EC  EFFC  F004         	goto	u1720
  4566   0009F0                     u1721:
  4567   0009F0  6A0D               	clrf	??_MFRC522_Wr^0,c
  4568   0009F2  2A0D               	incf	??_MFRC522_Wr^0,f,c
  4569   0009F4  EFFD  F004         	goto	u1738
  4570   0009F8                     u1720:
  4571   0009F8  6A0D               	clrf	??_MFRC522_Wr^0,c
  4572   0009FA                     u1738:
  4573   0009FA  460D               	rlncf	??_MFRC522_Wr^0,f,c
  4574   0009FC  508B               	movf	139,w,c	;volatile
  4575   0009FE  180D               	xorwf	??_MFRC522_Wr^0,w,c
  4576   000A00  0BFD               	andlw	-3
  4577   000A02  180D               	xorwf	??_MFRC522_Wr^0,w,c
  4578   000A04  6E8B               	movwf	139,c	;volatile
  4579   000A06                     
  4580                           ;TAD_RFID.c: 77:         LATCbits.LATC2 = 1;
  4581   000A06  848B               	bsf	139,2,c	;volatile
  4582                           
  4583                           ;TAD_RFID.c: 78:         value <<= 1;
  4584   000A08  90D8               	bcf	status,0,c
  4585   000A0A  360C               	rlcf	MFRC522_Wr@value^0,f,c
  4586   000A0C                     
  4587                           ;TAD_RFID.c: 79:         delay_us(5);
  4588   000A0C  0E05               	movlw	5
  4589   000A0E  EC47  F006         	call	_delay_us
  4590   000A12                     
  4591                           ;TAD_RFID.c: 80:         LATCbits.LATC2 = 0;
  4592   000A12  948B               	bcf	139,2,c	;volatile
  4593   000A14                     
  4594                           ;TAD_RFID.c: 81:         delay_us(5);
  4595   000A14  0E05               	movlw	5
  4596   000A16  EC47  F006         	call	_delay_us
  4597   000A1A                     
  4598                           ;TAD_RFID.c: 82:     }
  4599   000A1A  0610               	decf	MFRC522_Wr@i^0,f,c
  4600   000A1C  5010               	movf	MFRC522_Wr@i^0,w,c
  4601   000A1E  A4D8               	btfss	status,2,c
  4602   000A20  EF14  F005         	goto	u1741
  4603   000A24  EF16  F005         	goto	u1740
  4604   000A28                     u1741:
  4605   000A28  EFF3  F004         	goto	l2692
  4606   000A2C                     u1740:
  4607   000A2C                     
  4608                           ;TAD_RFID.c: 84:     LATCbits.LATC3 = 1;
  4609   000A2C  868B               	bsf	139,3,c	;volatile
  4610                           
  4611                           ;TAD_RFID.c: 85:     LATCbits.LATC2 = 1;
  4612   000A2E  848B               	bsf	139,2,c	;volatile
  4613   000A30  0012               	return		;funcret
  4614   000A32                     __end_of_MFRC522_Wr:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function _MFRC522_Rd *****************
  4618 ;; Defined at:
  4619 ;;		line 31 in file "TAD_RFID.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  Address         1    wreg     unsigned char 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  Address         1    7[COMRAM] unsigned char 
  4624 ;;  i               1   10[COMRAM] unsigned char 
  4625 ;;  ucResult        1    9[COMRAM] unsigned char 
  4626 ;;  ucAddr          1    8[COMRAM] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      unsigned char 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1
  4636 ;;      Params:         0       0       0
  4637 ;;      Locals:         4       0       0
  4638 ;;      Temps:          1       0       0
  4639 ;;      Totals:         5       0       0
  4640 ;;Total ram usage:        5 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 4
  4643 ;; This function calls:
  4644 ;;		_delay_us
  4645 ;; This function is called by:
  4646 ;;		_MFRC522_Clear_Bit
  4647 ;;		_MFRC522_Set_Bit
  4648 ;;		_motor_RFID
  4649 ;;		_MFRC522_ToCard
  4650 ;;		_MFRC522_CRC
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text25
  4655   000A32                     __ptext25:
  4656                           	callstack 0
  4657   000A32                     _MFRC522_Rd:
  4658                           	callstack 24
  4659                           
  4660                           ;incstack = 0
  4661                           ;MFRC522_Rd@Address stored from wreg
  4662   000A32  6E08               	movwf	MFRC522_Rd@Address^0,c
  4663   000A34                     
  4664                           ;TAD_RFID.c: 32:     unsigned char i, ucAddr = ((Address<<1) & 0x7E) | 0x80;
  4665   000A34  5008               	movf	MFRC522_Rd@Address^0,w,c
  4666   000A36  2408               	addwf	MFRC522_Rd@Address^0,w,c
  4667   000A38  0B7E               	andlw	126
  4668   000A3A  0980               	iorlw	128
  4669   000A3C  6E09               	movwf	MFRC522_Rd@ucAddr^0,c
  4670   000A3E                     
  4671                           ;TAD_RFID.c: 33:     unsigned char ucResult = 0;
  4672   000A3E  6A0A               	clrf	MFRC522_Rd@ucResult^0,c
  4673   000A40                     
  4674                           ;TAD_RFID.c: 35:     LATCbits.LATC2 = 0;
  4675   000A40  948B               	bcf	139,2,c	;volatile
  4676   000A42                     
  4677                           ;TAD_RFID.c: 36:     LATCbits.LATC3 = 0;
  4678   000A42  968B               	bcf	139,3,c	;volatile
  4679   000A44                     
  4680                           ;TAD_RFID.c: 38:     for (i = 8; i > 0; i--) {
  4681   000A44  0E08               	movlw	8
  4682   000A46  6E0B               	movwf	MFRC522_Rd@i^0,c
  4683   000A48                     l2628:
  4684                           
  4685                           ;TAD_RFID.c: 39:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
  4686   000A48  BE09               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  4687   000A4A  EF29  F005         	goto	u1641
  4688   000A4E  EF2D  F005         	goto	u1640
  4689   000A52                     u1641:
  4690   000A52  6A07               	clrf	??_MFRC522_Rd^0,c
  4691   000A54  2A07               	incf	??_MFRC522_Rd^0,f,c
  4692   000A56  EF2E  F005         	goto	u1658
  4693   000A5A                     u1640:
  4694   000A5A  6A07               	clrf	??_MFRC522_Rd^0,c
  4695   000A5C                     u1658:
  4696   000A5C  4607               	rlncf	??_MFRC522_Rd^0,f,c
  4697   000A5E  508B               	movf	139,w,c	;volatile
  4698   000A60  1807               	xorwf	??_MFRC522_Rd^0,w,c
  4699   000A62  0BFD               	andlw	-3
  4700   000A64  1807               	xorwf	??_MFRC522_Rd^0,w,c
  4701   000A66  6E8B               	movwf	139,c	;volatile
  4702   000A68                     
  4703                           ;TAD_RFID.c: 40:         LATCbits.LATC2 = 1;
  4704   000A68  848B               	bsf	139,2,c	;volatile
  4705   000A6A                     
  4706                           ;TAD_RFID.c: 41:         delay_us(5);
  4707   000A6A  0E05               	movlw	5
  4708   000A6C  EC47  F006         	call	_delay_us
  4709   000A70                     
  4710                           ;TAD_RFID.c: 42:         ucAddr <<= 1;
  4711   000A70  90D8               	bcf	status,0,c
  4712   000A72  3609               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  4713   000A74                     
  4714                           ;TAD_RFID.c: 43:         LATCbits.LATC2 = 0;
  4715   000A74  948B               	bcf	139,2,c	;volatile
  4716                           
  4717                           ;TAD_RFID.c: 44:         delay_us(5);
  4718   000A76  0E05               	movlw	5
  4719   000A78  EC47  F006         	call	_delay_us
  4720   000A7C                     
  4721                           ;TAD_RFID.c: 45:     }
  4722   000A7C  060B               	decf	MFRC522_Rd@i^0,f,c
  4723   000A7E  500B               	movf	MFRC522_Rd@i^0,w,c
  4724   000A80  A4D8               	btfss	status,2,c
  4725   000A82  EF45  F005         	goto	u1661
  4726   000A86  EF47  F005         	goto	u1660
  4727   000A8A                     u1661:
  4728   000A8A  EF24  F005         	goto	l2628
  4729   000A8E                     u1660:
  4730   000A8E                     
  4731                           ;TAD_RFID.c: 47:     for (i = 8; i > 0; i--) {
  4732   000A8E  0E08               	movlw	8
  4733   000A90  6E0B               	movwf	MFRC522_Rd@i^0,c
  4734   000A92                     l208:
  4735                           
  4736                           ;TAD_RFID.c: 48:         LATCbits.LATC2 = 1;
  4737   000A92  848B               	bsf	139,2,c	;volatile
  4738   000A94                     
  4739                           ;TAD_RFID.c: 49:         delay_us(5);
  4740   000A94  0E05               	movlw	5
  4741   000A96  EC47  F006         	call	_delay_us
  4742   000A9A                     
  4743                           ;TAD_RFID.c: 50:         ucResult <<= 1;
  4744   000A9A  90D8               	bcf	status,0,c
  4745   000A9C  360A               	rlcf	MFRC522_Rd@ucResult^0,f,c
  4746   000A9E                     
  4747                           ;TAD_RFID.c: 51:         ucResult|= PORTCbits.RC0;
  4748   000A9E  B082               	btfsc	130,0,c	;volatile
  4749   000AA0  EF54  F005         	goto	u1671
  4750   000AA4  EF57  F005         	goto	u1670
  4751   000AA8                     u1671:
  4752   000AA8  0E01               	movlw	1
  4753   000AAA  EF58  F005         	goto	u1676
  4754   000AAE                     u1670:
  4755   000AAE  0E00               	movlw	0
  4756   000AB0                     u1676:
  4757   000AB0  120A               	iorwf	MFRC522_Rd@ucResult^0,f,c
  4758   000AB2                     
  4759                           ;TAD_RFID.c: 52:         LATCbits.LATC2 = 0;
  4760   000AB2  948B               	bcf	139,2,c	;volatile
  4761                           
  4762                           ;TAD_RFID.c: 53:         delay_us(5);
  4763   000AB4  0E05               	movlw	5
  4764   000AB6  EC47  F006         	call	_delay_us
  4765   000ABA                     
  4766                           ;TAD_RFID.c: 54:     }
  4767   000ABA  060B               	decf	MFRC522_Rd@i^0,f,c
  4768   000ABC  500B               	movf	MFRC522_Rd@i^0,w,c
  4769   000ABE  A4D8               	btfss	status,2,c
  4770   000AC0  EF64  F005         	goto	u1681
  4771   000AC4  EF66  F005         	goto	u1680
  4772   000AC8                     u1681:
  4773   000AC8  EF49  F005         	goto	l208
  4774   000ACC                     u1680:
  4775   000ACC                     
  4776                           ;TAD_RFID.c: 56:     LATCbits.LATC3 = 1;
  4777   000ACC  868B               	bsf	139,3,c	;volatile
  4778                           
  4779                           ;TAD_RFID.c: 57:     LATCbits.LATC2 = 1;
  4780   000ACE  848B               	bsf	139,2,c	;volatile
  4781   000AD0                     
  4782                           ;TAD_RFID.c: 58:     return ucResult;
  4783   000AD0  500A               	movf	MFRC522_Rd@ucResult^0,w,c
  4784   000AD2  0012               	return		;funcret
  4785   000AD4                     __end_of_MFRC522_Rd:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _delay_us *****************
  4789 ;; Defined at:
  4790 ;;		line 25 in file "TAD_RFID.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  howMany         1    wreg     unsigned char 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  howMany         1    4[COMRAM] unsigned char 
  4795 ;;  x               1    5[COMRAM] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, prodl, prodh
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1
  4805 ;;      Params:         0       0       0
  4806 ;;      Locals:         2       0       0
  4807 ;;      Temps:          3       0       0
  4808 ;;      Totals:         5       0       0
  4809 ;;Total ram usage:        5 bytes
  4810 ;; Hardware stack levels used: 1
  4811 ;; Hardware stack levels required when called: 3
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_MFRC522_Rd
  4816 ;;		_MFRC522_Wr
  4817 ;;		_MFRC522_Reset
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text26
  4822   000C8E                     __ptext26:
  4823                           	callstack 0
  4824   000C8E                     _delay_us:
  4825                           	callstack 25
  4826                           
  4827                           ;incstack = 0
  4828                           ;delay_us@howMany stored from wreg
  4829   000C8E  6E05               	movwf	delay_us@howMany^0,c
  4830   000C90                     
  4831                           ;TAD_RFID.c: 27:     char x;;TAD_RFID.c: 28:     for (x = 0; x < howMany * 3; x++) __nop
      +                          ();
  4832   000C90  6A06               	clrf	delay_us@x^0,c
  4833   000C92  EF4D  F006         	goto	l2612
  4834   000C96                     l201:
  4835   000C96  0000               	nop	
  4836   000C98  2A06               	incf	delay_us@x^0,f,c
  4837   000C9A                     l2612:
  4838   000C9A  5005               	movf	delay_us@howMany^0,w,c
  4839   000C9C  0D03               	mullw	3
  4840   000C9E  5006               	movf	delay_us@x^0,w,c
  4841   000CA0  6E02               	movwf	??_delay_us^0,c
  4842   000CA2  6A03               	clrf	(??_delay_us+1)^0,c
  4843   000CA4  50F3               	movf	243,w,c
  4844   000CA6  5C02               	subwf	??_delay_us^0,w,c
  4845   000CA8  5003               	movf	(??_delay_us+1)^0,w,c
  4846   000CAA  0A80               	xorlw	128
  4847   000CAC  6E04               	movwf	(??_delay_us+2)^0,c
  4848   000CAE  50F4               	movf	244,w,c
  4849   000CB0  0A80               	xorlw	128
  4850   000CB2  5804               	subwfb	(??_delay_us+2)^0,w,c
  4851   000CB4  A0D8               	btfss	status,0,c
  4852   000CB6  EF5F  F006         	goto	u1631
  4853   000CBA  EF61  F006         	goto	u1630
  4854   000CBE                     u1631:
  4855   000CBE  EF4B  F006         	goto	l201
  4856   000CC2                     u1630:
  4857   000CC2  0012               	return		;funcret
  4858   000CC4                     __end_of_delay_us:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function _InitPortDirections *****************
  4862 ;; Defined at:
  4863 ;;		line 17 in file "TAD_RFID.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		None
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1
  4877 ;;      Params:         0       0       0
  4878 ;;      Locals:         0       0       0
  4879 ;;      Temps:          0       0       0
  4880 ;;      Totals:         0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 3
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_initRFID
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text27
  4892   000E68                     __ptext27:
  4893                           	callstack 0
  4894   000E68                     _InitPortDirections:
  4895                           	callstack 26
  4896   000E68                     
  4897                           ;TAD_RFID.c: 18:     TRISCbits.TRISC0 = 1;
  4898   000E68  8094               	bsf	148,0,c	;volatile
  4899                           
  4900                           ;TAD_RFID.c: 19:     TRISCbits.TRISC1 = 0;
  4901   000E6A  9294               	bcf	148,1,c	;volatile
  4902                           
  4903                           ;TAD_RFID.c: 20:     TRISCbits.TRISC2 = 0;
  4904   000E6C  9494               	bcf	148,2,c	;volatile
  4905                           
  4906                           ;TAD_RFID.c: 21:     TRISCbits.TRISC3 = 0;
  4907   000E6E  9694               	bcf	148,3,c	;volatile
  4908                           
  4909                           ;TAD_RFID.c: 22:     TRISCbits.TRISC4 = 0;
  4910   000E70  9894               	bcf	148,4,c	;volatile
  4911   000E72  0012               	return		;funcret
  4912   000E74                     __end_of_InitPortDirections:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _initPorts *****************
  4916 ;; Defined at:
  4917 ;;		line 57 in file "main.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		None
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1
  4931 ;;      Params:         0       0       0
  4932 ;;      Locals:         0       0       0
  4933 ;;      Temps:          0       0       0
  4934 ;;      Totals:         0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 3
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text28
  4946   000E8E                     __ptext28:
  4947                           	callstack 0
  4948   000E8E                     _initPorts:
  4949                           	callstack 27
  4950   000E8E  68C1               	setf	193,c	;volatile
  4951   000E90  6A92               	clrf	146,c	;volatile
  4952   000E92  0012               	return		;funcret
  4953   000E94                     __end_of_initPorts:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function _Terminal_Init *****************
  4957 ;; Defined at:
  4958 ;;		line 26 in file "TAD_TERMINAL.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1
  4972 ;;      Params:         0       0       0
  4973 ;;      Locals:         0       0       0
  4974 ;;      Temps:          0       0       0
  4975 ;;      Totals:         0       0       0
  4976 ;;Total ram usage:        0 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 3
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_main
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text29
  4987   000E3E                     __ptext29:
  4988                           	callstack 0
  4989   000E3E                     _Terminal_Init:
  4990                           	callstack 27
  4991   000E3E                     
  4992                           ;TAD_TERMINAL.c: 27:  TXSTA = 0x24;
  4993   000E3E  0E24               	movlw	36
  4994   000E40  6EAC               	movwf	172,c	;volatile
  4995                           
  4996                           ;TAD_TERMINAL.c: 28:  RCSTA = 0x90;
  4997   000E42  0E90               	movlw	144
  4998   000E44  6EAB               	movwf	171,c	;volatile
  4999                           
  5000                           ;TAD_TERMINAL.c: 29:  SPBRG = 64;
  5001   000E46  0E40               	movlw	64
  5002   000E48  6EAF               	movwf	175,c	;volatile
  5003   000E4A                     
  5004                           ;TAD_TERMINAL.c: 30:  BAUDCON = 0x00;
  5005   000E4A  6AB8               	clrf	184,c	;volatile
  5006   000E4C                     
  5007                           ;TAD_TERMINAL.c: 31:  hashtag_pressed = 0;
  5008   000E4C  6A62               	clrf	_hashtag_pressed^0,c
  5009   000E4E  0012               	return		;funcret
  5010   000E50                     __end_of_Terminal_Init:
  5011                           	callstack 0
  5012                           
  5013 ;; *************** function _TI_Init *****************
  5014 ;; Defined at:
  5015 ;;		line 32 in file "TAD_TIMER.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  counter         1    1[COMRAM] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1
  5029 ;;      Params:         0       0       0
  5030 ;;      Locals:         1       0       0
  5031 ;;      Temps:          0       0       0
  5032 ;;      Totals:         1       0       0
  5033 ;;Total ram usage:        1 bytes
  5034 ;; Hardware stack levels used: 1
  5035 ;; Hardware stack levels required when called: 3
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_main
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text30
  5044   000CF8                     __ptext30:
  5045                           	callstack 0
  5046   000CF8                     _TI_Init:
  5047                           	callstack 27
  5048   000CF8                     
  5049                           ;TAD_TIMER.c: 33:  for (unsigned char counter=0; counter<4; counter++) {
  5050   000CF8  6A02               	clrf	TI_Init@counter^0,c
  5051   000CFA                     l1910:
  5052                           
  5053                           ;TAD_TIMER.c: 34:   Timers[counter].Busy=0;
  5054   000CFA  5002               	movf	TI_Init@counter^0,w,c
  5055   000CFC  0D05               	mullw	5
  5056   000CFE  50F3               	movf	243,w,c
  5057   000D00  0F44               	addlw	low (_Timers+4)
  5058   000D02  6ED9               	movwf	fsr2l,c
  5059   000D04  6ADA               	clrf	fsr2h,c
  5060   000D06  6ADF               	clrf	indf2,c
  5061   000D08                     
  5062                           ;TAD_TIMER.c: 35:  }
  5063   000D08  2A02               	incf	TI_Init@counter^0,f,c
  5064   000D0A  0E03               	movlw	3
  5065   000D0C  6402               	cpfsgt	TI_Init@counter^0,c
  5066   000D0E  EF8B  F006         	goto	u761
  5067   000D12  EF8D  F006         	goto	u760
  5068   000D16                     u761:
  5069   000D16  EF7D  F006         	goto	l1910
  5070   000D1A                     u760:
  5071   000D1A                     
  5072                           ;TAD_TIMER.c: 36:  T0CON=0x82;
  5073   000D1A  0E82               	movlw	130
  5074   000D1C  6ED5               	movwf	213,c	;volatile
  5075                           
  5076                           ;TAD_TIMER.c: 37:     TMR0=64911;
  5077   000D1E  0EFD               	movlw	253
  5078   000D20  6ED7               	movwf	215,c	;volatile
  5079   000D22  0E8F               	movlw	143
  5080   000D24  6ED6               	movwf	214,c	;volatile
  5081   000D26                     
  5082                           ;TAD_TIMER.c: 38:  INTCONbits.TMR0IF = 0;
  5083   000D26  94F2               	bcf	242,2,c	;volatile
  5084   000D28                     
  5085                           ;TAD_TIMER.c: 39:  INTCONbits.TMR0IE = 1;
  5086   000D28  8AF2               	bsf	242,5,c	;volatile
  5087   000D2A  0012               	return		;funcret
  5088   000D2C                     __end_of_TI_Init:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _LowRSI *****************
  5092 ;; Defined at:
  5093 ;;		line 31 in file "main.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		None
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1
  5107 ;;      Params:         0       0       0
  5108 ;;      Locals:         0       0       0
  5109 ;;      Temps:          1       0       0
  5110 ;;      Totals:         1       0       0
  5111 ;;Total ram usage:        1 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; Hardware stack levels required when called: 2
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		Interrupt level 1
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	intcodelo
  5122   000018                     __pintcodelo:
  5123                           	callstack 0
  5124   000018                     _LowRSI:
  5125                           	callstack 22
  5126                           
  5127                           ;incstack = 0
  5128   000018  807B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5129   00001A  CFE0 F001          	movff	bsr,??_LowRSI
  5130   00001E  C001  FFE0         	movff	??_LowRSI,bsr
  5131   000022  907B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5132   000024  0010               	retfie	
  5133   000026                     __end_of_LowRSI:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function _HighRSI *****************
  5137 ;; Defined at:
  5138 ;;		line 27 in file "main.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1
  5152 ;;      Params:         0       0       0
  5153 ;;      Locals:         0       0       0
  5154 ;;      Temps:          0       0       0
  5155 ;;      Totals:         0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; Hardware stack levels required when called: 1
  5159 ;; This function calls:
  5160 ;;		_RSI_Timer0
  5161 ;; This function is called by:
  5162 ;;		Interrupt level 2
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	intcode
  5167   000008                     __pintcode:
  5168                           	callstack 0
  5169   000008                     _HighRSI:
  5170                           	callstack 22
  5171                           
  5172                           ;incstack = 0
  5173   000008  827B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5174   00000A  EF0A  F007         	goto	int_func
  5175                           
  5176                           	psect	intcode_body
  5177   000E14                     __pintcode_body:
  5178                           	callstack 22
  5179   000E14                     int_func:
  5180                           	callstack 22
  5181   000E14                     
  5182                           ;main.c: 29: 
  5183   000E14  A4F2               	btfss	242,2,c	;volatile
  5184   000E16  EF0F  F007         	goto	i2u117_41
  5185   000E1A  EF11  F007         	goto	i2u117_40
  5186   000E1E                     i2u117_41:
  5187   000E1E  EF13  F007         	goto	i2l30
  5188   000E22                     i2u117_40:
  5189   000E22  ECF3  F006         	call	_RSI_Timer0	;wreg free
  5190   000E26                     i2l30:
  5191   000E26  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5192   000E28  0011               	retfie		f
  5193   000E2A                     __end_of_HighRSI:
  5194                           	callstack 0
  5195                           
  5196 ;; *************** function _RSI_Timer0 *****************
  5197 ;; Defined at:
  5198 ;;		line 25 in file "TAD_TIMER.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      void 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1
  5212 ;;      Params:         0       0       0
  5213 ;;      Locals:         0       0       0
  5214 ;;      Temps:          0       0       0
  5215 ;;      Totals:         0       0       0
  5216 ;;Total ram usage:        0 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; This function calls:
  5219 ;;		Nothing
  5220 ;; This function is called by:
  5221 ;;		_HighRSI
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text33
  5226   000DE6                     __ptext33:
  5227                           	callstack 0
  5228   000DE6                     _RSI_Timer0:
  5229                           	callstack 22
  5230   000DE6                     
  5231                           ;TAD_TIMER.c: 27:     TMR0=64911;
  5232   000DE6  0EFD               	movlw	253
  5233   000DE8  6ED7               	movwf	215,c	;volatile
  5234   000DEA  0E8F               	movlw	143
  5235   000DEC  6ED6               	movwf	214,c	;volatile
  5236   000DEE                     
  5237                           ;TAD_TIMER.c: 28:     TMR0IF=0;
  5238   000DEE  94F2               	bcf	4082,2,c	;volatile
  5239   000DF0                     
  5240                           ;TAD_TIMER.c: 29:     Tics++;
  5241   000DF0  0E01               	movlw	1
  5242   000DF2  2654               	addwf	_Tics^0,f,c	;volatile
  5243   000DF4  0E00               	movlw	0
  5244   000DF6  2255               	addwfc	(_Tics+1)^0,f,c	;volatile
  5245   000DF8  2256               	addwfc	(_Tics+2)^0,f,c	;volatile
  5246   000DFA  2257               	addwfc	(_Tics+3)^0,f,c	;volatile
  5247   000DFC  0012               	return		;funcret
  5248   000DFE                     __end_of_RSI_Timer0:
  5249                           	callstack 0
  5250                           
  5251                           	psect	rparam
  5252   000001                     ___rparam_used  equ	1
  5253   000000                     ___param_bank   equ	0
  5254   000000                     __Lparam        equ	__Lrparam
  5255   000000                     __Hparam        equ	__Hrparam
  5256                           
  5257                           	psect	temp
  5258   00007B                     btemp:
  5259                           	callstack 0
  5260   00007B                     	ds	1
  5261   00007B                     int$flags       set	btemp
  5262   00007C                     wtemp8          set	btemp+1
  5263   00007C                     ttemp5          set	btemp+1
  5264   00007F                     ttemp6          set	btemp+4
  5265   000083                     ttemp7          set	btemp+8
  5266                           
  5267                           	psect	idloc
  5268                           
  5269                           ;Config register IDLOC0 @ 0x200000
  5270                           ;	unspecified, using default values
  5271   200000                     	org	2097152
  5272   200000  FF                 	db	255
  5273                           
  5274                           ;Config register IDLOC1 @ 0x200001
  5275                           ;	unspecified, using default values
  5276   200001                     	org	2097153
  5277   200001  FF                 	db	255
  5278                           
  5279                           ;Config register IDLOC2 @ 0x200002
  5280                           ;	unspecified, using default values
  5281   200002                     	org	2097154
  5282   200002  FF                 	db	255
  5283                           
  5284                           ;Config register IDLOC3 @ 0x200003
  5285                           ;	unspecified, using default values
  5286   200003                     	org	2097155
  5287   200003  FF                 	db	255
  5288                           
  5289                           ;Config register IDLOC4 @ 0x200004
  5290                           ;	unspecified, using default values
  5291   200004                     	org	2097156
  5292   200004  FF                 	db	255
  5293                           
  5294                           ;Config register IDLOC5 @ 0x200005
  5295                           ;	unspecified, using default values
  5296   200005                     	org	2097157
  5297   200005  FF                 	db	255
  5298                           
  5299                           ;Config register IDLOC6 @ 0x200006
  5300                           ;	unspecified, using default values
  5301   200006                     	org	2097158
  5302   200006  FF                 	db	255
  5303                           
  5304                           ;Config register IDLOC7 @ 0x200007
  5305                           ;	unspecified, using default values
  5306   200007                     	org	2097159
  5307   200007  FF                 	db	255
  5308                           
  5309                           	psect	config
  5310                           
  5311                           ; Padding undefined space
  5312   300000                     	org	3145728
  5313   300000  FF                 	db	255
  5314                           
  5315                           ;Config register CONFIG1H @ 0x300001
  5316                           ;	Oscillator
  5317                           ;	OSC = HS, HS Oscillator
  5318                           ;	Fail-Safe Clock Monitor Enable bit
  5319                           ;	FCMEN = 0x0, unprogrammed default
  5320                           ;	Internal/External Oscillator Switchover bit
  5321                           ;	IESO = 0x0, unprogrammed default
  5322   300001                     	org	3145729
  5323   300001  02                 	db	2
  5324                           
  5325                           ;Config register CONFIG2L @ 0x300002
  5326                           ;	Power-up Timer Enable bit
  5327                           ;	PWRT = OFF, PWRT disabled
  5328                           ;	Brown-out Reset Enable bits
  5329                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5330                           ;	Brown-out Reset Voltage bits
  5331                           ;	BORV = 0x3, unprogrammed default
  5332   300002                     	org	3145730
  5333   300002  19                 	db	25
  5334                           
  5335                           ;Config register CONFIG2H @ 0x300003
  5336                           ;	Watchdog Timer Enable bit
  5337                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5338                           ;	Watchdog Timer Postscale Select bits
  5339                           ;	WDTPS = 0xF, unprogrammed default
  5340   300003                     	org	3145731
  5341   300003  1E                 	db	30
  5342                           
  5343                           ; Padding undefined space
  5344   300004                     	org	3145732
  5345   300004  FF                 	db	255
  5346                           
  5347                           ;Config register CONFIG3H @ 0x300005
  5348                           ;	CCP2 MUX bit
  5349                           ;	CCP2MX = 0x1, unprogrammed default
  5350                           ;	PORTB A/D Enable bit
  5351                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5352                           ;	Low-Power Timer1 Oscillator Enable bit
  5353                           ;	LPT1OSC = 0x0, unprogrammed default
  5354                           ;	MCLR Pin Enable bit
  5355                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5356   300005                     	org	3145733
  5357   300005  01                 	db	1
  5358                           
  5359                           ;Config register CONFIG4L @ 0x300006
  5360                           ;	Stack Full/Underflow Reset Enable bit
  5361                           ;	STVREN = 0x1, unprogrammed default
  5362                           ;	Single-Supply ICSP Enable bit
  5363                           ;	LVP = OFF, Single-Supply ICSP disabled
  5364                           ;	Boot Block Size Select bits
  5365                           ;	BBSIZ = 0x0, unprogrammed default
  5366                           ;	Extended Instruction Set Enable bit
  5367                           ;	XINST = 0x0, unprogrammed default
  5368                           ;	Background Debugger Enable bit
  5369                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5370   300006                     	org	3145734
  5371   300006  81                 	db	129
  5372                           
  5373                           ; Padding undefined space
  5374   300007                     	org	3145735
  5375   300007  FF                 	db	255
  5376                           
  5377                           ;Config register CONFIG5L @ 0x300008
  5378                           ;	unspecified, using default values
  5379                           ;	Code Protection bit
  5380                           ;	CP0 = 0x1, unprogrammed default
  5381                           ;	Code Protection bit
  5382                           ;	CP1 = 0x1, unprogrammed default
  5383   300008                     	org	3145736
  5384   300008  03                 	db	3
  5385                           
  5386                           ;Config register CONFIG5H @ 0x300009
  5387                           ;	unspecified, using default values
  5388                           ;	Boot Block Code Protection bitProtect Boot
  5389                           ;	CPB = 0x1, unprogrammed default
  5390                           ;	Data EEPROM Code Protection bit
  5391                           ;	CPD = 0x1, unprogrammed default
  5392   300009                     	org	3145737
  5393   300009  C0                 	db	192
  5394                           
  5395                           ;Config register CONFIG6L @ 0x30000A
  5396                           ;	unspecified, using default values
  5397                           ;	Write Protection bit
  5398                           ;	WRT0 = 0x1, unprogrammed default
  5399                           ;	Write Protection bit
  5400                           ;	WRT1 = 0x1, unprogrammed default
  5401   30000A                     	org	3145738
  5402   30000A  03                 	db	3
  5403                           
  5404                           ;Config register CONFIG6H @ 0x30000B
  5405                           ;	unspecified, using default values
  5406                           ;	Configuration Register Write Protection bit
  5407                           ;	WRTC = 0x1, unprogrammed default
  5408                           ;	Boot Block Write Protection bit
  5409                           ;	WRTB = 0x1, unprogrammed default
  5410                           ;	Data EEPROM Write Protection bit
  5411                           ;	WRTD = 0x1, unprogrammed default
  5412   30000B                     	org	3145739
  5413   30000B  E0                 	db	224
  5414                           
  5415                           ;Config register CONFIG7L @ 0x30000C
  5416                           ;	unspecified, using default values
  5417                           ;	Table Read Protection bit
  5418                           ;	EBTR0 = 0x1, unprogrammed default
  5419                           ;	Table Read Protection bit
  5420                           ;	EBTR1 = 0x1, unprogrammed default
  5421   30000C                     	org	3145740
  5422   30000C  03                 	db	3
  5423                           
  5424                           ;Config register CONFIG7H @ 0x30000D
  5425                           ;	unspecified, using default values
  5426                           ;	Boot Block Table Read Protection bit
  5427                           ;	EBTRB = 0x1, unprogrammed default
  5428   30000D                     	org	3145741
  5429   30000D  40                 	db	64
  5430                           tosu	equ	0xFFF
  5431                           tosh	equ	0xFFE
  5432                           tosl	equ	0xFFD
  5433                           stkptr	equ	0xFFC
  5434                           pclatu	equ	0xFFB
  5435                           pclath	equ	0xFFA
  5436                           pcl	equ	0xFF9
  5437                           tblptru	equ	0xFF8
  5438                           tblptrh	equ	0xFF7
  5439                           tblptrl	equ	0xFF6
  5440                           tablat	equ	0xFF5
  5441                           prodh	equ	0xFF4
  5442                           prodl	equ	0xFF3
  5443                           indf0	equ	0xFEF
  5444                           postinc0	equ	0xFEE
  5445                           postdec0	equ	0xFED
  5446                           preinc0	equ	0xFEC
  5447                           plusw0	equ	0xFEB
  5448                           fsr0h	equ	0xFEA
  5449                           fsr0l	equ	0xFE9
  5450                           wreg	equ	0xFE8
  5451                           indf1	equ	0xFE7
  5452                           postinc1	equ	0xFE6
  5453                           postdec1	equ	0xFE5
  5454                           preinc1	equ	0xFE4
  5455                           plusw1	equ	0xFE3
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           bsr	equ	0xFE0
  5459                           indf2	equ	0xFDF
  5460                           postinc2	equ	0xFDE
  5461                           postdec2	equ	0xFDD
  5462                           preinc2	equ	0xFDC
  5463                           plusw2	equ	0xFDB
  5464                           fsr2h	equ	0xFDA
  5465                           fsr2l	equ	0xFD9
  5466                           status	equ	0xFD8

Data Sizes:
    Strings     260
    Constant    12
    Data        0
    BSS         191
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     63     122
    BANK0           128      0      32
    BANK1           256      0     100

Pointer List with Targets:

    displayUID@uid	PTR unsigned char  size(1) Largest target is 6
		 -> motor_RFID@UID(COMRAM[6]), ReadRFID_NoCooperatiu@UID(COMRAM[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> motor_RFID@buffer(BANK1[100]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> motor_RFID@buffer(BANK1[100]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    motor_RFID@p	PTR unsigned char  size(2) Largest target is 100
		 -> motor_RFID@buffer(BANK1[100]), 

    S1301$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> motor_RFID@buffer(BANK1[100]), 

    S1301$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> motor_RFID@buffer(BANK1[100]), 

    Terminal_SendString@str	PTR const unsigned char  size(2) Largest target is 33
		 -> displayUID@hexString(COMRAM[11]), STR_10(CODE[33]), STR_11(CODE[9]), STR_12(CODE[14]), 
		 -> STR_13(CODE[14]), STR_14(CODE[14]), STR_15(CODE[33]), STR_2(CODE[6]), 
		 -> STR_3(CODE[2]), STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[18]), 
		 -> STR_7(CODE[19]), STR_8(CODE[27]), STR_9(CODE[29]), 

    TI_NewTimer@TimerHandle	PTR unsigned char  size(1) Largest target is 1
		 -> timer(COMRAM[1]), Timer(COMRAM[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_motor_RFID
    _motor_RFID->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _displayUID->_Terminal_SendString
    _Terminal_SendString->_Terminal_TXAvailable
    _initTeclado->_TI_NewTimer
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Wr->_MFRC522_Rd
    _MFRC522_Rd->_delay_us

Critical Paths under _LowRSI in COMRAM

    None.

Critical Paths under _HighRSI in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowRSI in BANK0

    None.

Critical Paths under _HighRSI in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowRSI in BANK1

    None.

Critical Paths under _HighRSI in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5923
                            _TI_Init
                      _Terminal_Init
                          _initPorts
                           _initRFID
                        _initTeclado
                         _motor_RFID
 ---------------------------------------------------------------------------------
 (1) _motor_RFID                                           9     9      0    4086
                                             54 COMRAM     9     9      0
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
                         _displayUID
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    14      8    1801
                                             32 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    1584
                                             26 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    12      3    1459
                                             11 COMRAM    15    12      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     230
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _displayUID                                          20    19      1     547
                                              6 COMRAM    20    19      1
                _Terminal_SendString
 ---------------------------------------------------------------------------------
 (3) _Terminal_SendString                                  2     0      2      89
                                              4 COMRAM     2     0      2
                  _Terminal_SendChar
               _Terminal_TXAvailable
 ---------------------------------------------------------------------------------
 (4) _Terminal_TXAvailable                                 3     1      2       0
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _Terminal_SendChar                                    1     1      0      29
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0     113
                        _TI_NewTimer
                   _initPortsTeclado
 ---------------------------------------------------------------------------------
 (2) _initPortsTeclado                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TI_NewTimer                                          3     2      1     113
                                              1 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initRFID                                             0     0      0    1679
                 _InitPortDirections
                       _MFRC522_Init
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Init                                         0     0      0    1679
                 _MFRC522_AntennaOff
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Reset                                        0     0      0     303
                         _MFRC522_Wr
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntennaOn                                    0     0      0     561
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Set_Bit                                      2     1      1     561
                                             16 COMRAM     2     1      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntennaOff                                   0     0      0     565
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Clear_Bit                                    3     2      1     565
                                             16 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Wr                                           5     4      1     250
                                             11 COMRAM     5     4      1
                         _MFRC522_Rd (ARG)
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Rd                                           5     5      0     223
                                              6 COMRAM     5     5      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             5     5      0      53
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _InitPortDirections                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Terminal_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TI_Init                                              1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowRSI                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighRSI                                              0     0      0       0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (9) _RSI_Timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TI_Init
   _Terminal_Init
   _initPorts
   _initRFID
     _InitPortDirections
     _MFRC522_Init
       _MFRC522_AntennaOff
         _MFRC522_Clear_Bit
           _MFRC522_Rd
             _delay_us
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
             _delay_us (ARG)
       _MFRC522_AntennaOn
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
       _MFRC522_Reset
         _MFRC522_Wr
         _delay_us
       _MFRC522_Wr
   _initTeclado
     _TI_NewTimer
     _initPortsTeclado
   _motor_RFID
     _MFRC522_Clear_Bit
     _MFRC522_Rd
     _MFRC522_Set_Bit
     _MFRC522_Wr
     _displayUID
       _Terminal_SendString
         _Terminal_SendChar
         _Terminal_TXAvailable
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch

 _LowRSI (ROOT)

 _HighRSI (ROOT)
   _RSI_Timer0

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     100     39.1%
BITBANK0           128      0       0      0.0%
BANK0              128      0      32     25.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     63     122     96.8%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll          1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     252      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 05 19:13:04 2025

       __end_ofGetTecla@F3223 1EFB                    _RSI_Timer0 0DE6                   MFRC522_Rd@i 000B  
                 MFRC522_Wr@i 0010                            l46 0E92                            l75 0B9C  
                          l69 0D2A                  ___awdiv@sign 0007                            bsr 0FE0  
        ??_InitPortDirections 0002                           l201 0C96                           l210 0AD2  
                         l203 0CC2                           l220 0DE4                           l124 0E12  
                         l223 0E3C                           l127 0E8C                           l208 0A92  
                         l216 0A2C                           l232 0E66                           l209 0ACC  
                         l217 0A30                           l305 0E7C                           l226 0D86  
                         l235 0C8C                           l229 0E5A                           l360 01FC  
                         l197 0E72                           l541 0DCA                           l526 073A  
                         l382 03A4                           l535 075E                           l538 0E4E  
                         l547 0E84                           l389 046A                           l830 0988  
                         l559 0B46                           l817 0820                           u760 0D1A  
                         u761 0D16                           _abs 0CC4                  ___awmod@sign 0007  
                         wreg 0FE8                ??_MFRC522_Init 0014                          ?_abs 0008  
                        l1311 0BE6                          l1312 0BEE                          l1305 0618  
                        l3002 0C40                          l1306 066E                          l1331 08DA  
                        l3004 0C44                          l3100 071A                          l1316 0CDE  
                        l3102 071E                          l1342 0E94                          l3110 0C04  
                        l1319 0CF6                          l3120 0DFE                          l3104 073C  
                        l1264 0C3E                          l3112 0C0C                          l3200 0192  
                        l3130 0E0A                          l3122 0E02                          l3114 0C28  
                        l3106 0BF0                          l3202 01C2                          l3132 0E74  
                        l3124 0E04                          l3116 0C36                          l3108 0BFC  
                        l3300 03B2                          l3220 0272                          l3212 01F2  
                        l3204 01CE                          l3140 005E                          l3134 0E78  
                        l3126 0E06                          l3222 027C                          l3214 01F6  
                        l3206 01E2                          l3150 0086                          l3142 0068  
                        l3128 0E08                          l3080 0678                          l3232 0296  
                        l3224 0280                          l3208 01EA                          l3160 00B2  
                        l3152 008E                          l3144 006C                          l3136 002A  
                        l2610 0C98                          l3090 06C8                          l3082 068C  
                        l3074 0670                          l3314 0436                          l3306 03BA  
                        l3250 02D6                          l3242 02BA                          l3234 029E  
                        l3218 0204                          l3170 00E0                          l3162 00BC  
                        l3154 0098                          l3146 0074                          l3138 0032  
                        l2612 0C9A                          l2620 0A42                          l2700 0A14  
                        l3092 06D6                          l3084 069C                          l3308 0428  
                        l3260 0306                          l3228 0288                          l3180 0104  
                        l3172 00E8                          l3164 00C4                          l3156 00A0  
                        l3148 007C                          l1910 0CFA                          l2630 0A68  
                        l2622 0A44                          l2614 0A34                          l2702 0A1A  
                        l3094 06E6                          l3086 06AC                          l2710 0770  
                        l3270 0336                          l3254 02EE                          l3246 02C8  
                        l3238 02AC                          l3190 013E                          l3182 0112  
                        l3174 00F2                          l3166 00CE                          l3158 00AA  
                        l3318 044C                          l3350 0D94                          l1920 0D28  
                        l1912 0D08                          l1904 0CF8                          l2608 0C90  
                        l2640 0A7E                          l2632 0A6A                          l2616 0A3E  
                        l2704 0A1C                          l1744 0E86                          l3096 06F6  
                        l3088 06B8                          l2720 0796                          l2712 0778  
                        l2800 0CC4                          l3280 035E                          l3264 030C  
                        l3192 0146                          l3184 0126                          l3176 00F4  
                        l3168 00D6                          l3360 0DA2                          l3352 0D98  
                        l1914 0D0A                          l2650 0A9E                          l2642 0A8E  
                        l2634 0A70                          l2618 0A40                          l1746 0E8A  
                        l3098 0702                          l2730 07CE                          l2722 079E  
                        l2714 077C                          l2706 0760                          l2802 0CD2  
                        l3290 0382                          l3282 0378                          l3274 0340  
                        l3266 0314                          l3258 02FC                          l3194 0156  
                        l3186 012C                          l3178 00FC                          l3362 0DA6  
                        l3354 0D9C                          l3346 0D88                          l1916 0D1A  
                        l1940 0E4A                          l1748 0E68                          l2652 0AB2  
                        l2636 0A74                          l2628 0A48                          l2804 0DCE  
                        l2812 0E80                          l2740 07FA                          l2732 07D4  
                        l2724 07B0                          l2716 078A                          l2708 0762  
                        l2820 04A2                          l3292 0392                          l3284 0380  
                        l3268 0322                          l3196 0170                          l3188 0134  
                        l3356 0D9E                          l3348 0D90                          l1918 0D26  
                        l1942 0E4C                          l2654 0ABA                          l2646 0A94  
                        l2638 0A7C                          l2662 098C                          l2806 0E2C  
                        l2734 07EA                          l2726 07B8                          l2742 0800  
                        l2718 0792                          l2750 08DC                          l2830 04F8  
                        l2822 04AE                          l2814 046C                          l3294 0394  
                        l3278 034E                          l3198 0182                          l3358 0DA0  
                        l1944 0E8E                          l2656 0ABC                          l2648 0A9A  
                        l2680 09C8                          l2664 0994                          l2808 0DB0  
                        l2744 0810                          l2736 07F2                          l2728 07C0  
                        l2760 0906                          l2752 08DE                          l2840 058E  
                        l2832 0510                          l2824 04B2                          l2816 0474  
                        l1938 0E3E                          l2658 0AD0                          l2682 09CA  
                        l2674 099C                          l2666 0996                          l2746 0818  
                        l2738 07F4                          l2770 093E                          l2762 090E  
                        l2754 08EC                          l2850 05D4                          l2842 0592  
                        l2834 052A                          l2826 04C0                          l2818 0496  
                        l3298 03AA                   _TI_NewTimer 0B48                          l2692 09E6  
                        l2684 09D0                          l2676 09BC                          l2668 0998  
                        l2780 0978                          l2772 0954                          l2764 0920  
                        l2756 08F4                          l2852 05E2                          l2844 05A4  
                        l2836 0542                          l2860 0624                          l2828 04DC  
                        l2694 0A06                          l2686 09D2                          l2678 09C2  
                        l2782 0980                          l2774 095C                          l2766 0928  
                        l2758 08F8                          l2790 0842                          l2870 0666  
                        l2862 0630                          l2854 05EA                          l2846 05B4  
                        l2838 0572                          l2696 0A0C                          l2688 09E2  
                        l2880 0D6E                          l2776 0962                          l2768 0930  
                        l2792 084C                          l2856 0604                          l2848 05C4  
                        l2698 0A12                          l2882 0E50                          l2874 0D5E  
                        l2970 0AD4                          l2778 0968                          l2794 0868  
                        l2786 0822                          l2858 0606                          l2866 063C  
                        l2884 0E5C                          l2876 0D60                          l2972 0AD8  
                        l2796 089A                          l2788 0832                          l2868 065A  
                        l2980 0B9E                          l2878 0D66                          l2990 0B4E  
                        l2974 0AEE                          l2982 0BA6                          l2976 0B12  
                        l2984 0BB2                          l2994 0B66                          l2978 0B16  
                        l2986 0BCA                          l2996 0B82                          l2988 0B48  
                        l2998 0B92                          STR_1 1F75                          STR_2 1FF9  
                        STR_3 1FB2                          STR_4 1FA2                          STR_5 1FB4  
                        STR_7 1F8F                          STR_8 1F5A                          STR_9 1F3D  
                        u2000 05C4                          u2001 05C0                          u2010 05D4  
                        u2011 05D0                          u2020 0618                          u2021 0614  
                        u2200 0BE6                          u2201 0BE2                          u2210 0B62  
                        u2211 0B5E                          u2220 0B82                          u2221 0B7E  
                        _LATA 0F89                          u2310 069C                          u2311 0698  
                        _LATC 0F8B                          u2160 0AEE                          u2320 06E6  
                        u2400 0322                          _LATD 0F8C                          u2161 0AEA  
                        u2321 06E2                          u2401 031E                          u2170 0B0E  
                        u2330 073A                          u2410 0336                          u2331 0736  
                        u2411 0332                          u2180 0B36                          u2420 035E  
                        u2340 0112                          u2421 035A                          u2341 010E  
                        u1630 0CC2                          u1710 09E2                          u2190 0B46  
                        u2430 0378                          u2350 0126                          u1631 0CBE  
                        u1711 09DE                          u2191 0B42                          u2431 0374  
                        u2351 0122                          u1640 0A5A                          u1720 09F8  
                        u1800 0810                          u2440 03A4                          u2360 0156  
                        u1641 0A52                          u1721 09F0                          u2177 0B04  
                        u1801 080C                          u2441 03A0                          u2361 0152  
                        u1810 08EC                          u2370 0170                          u2187 0B2C  
                        u1811 08E8                          u2371 016C                          u1660 0A8E  
                        u1740 0A2C                          u1708 09B0                          u1820 0906  
                        u1900 089A                          u2380 0192                          u1661 0A8A  
                        u1741 0A28                          u1821 0902                          u1901 0896  
                        u2381 018E                          u1670 0AAE                          u1750 0770  
                        u1830 0920                          u1910 0CD2                          u2390 01E2  
                        u1671 0AA8                          u1751 076C                          u1831 091C  
                        u1911 0CCE                          u2391 01DE                          u1680 0ACC  
                        u1920 0DC2                          u1760 078A                          u1840 093E  
                        u1681 0AC8                          u1921 0DBA                          u1761 0786  
                        u1841 093A                          u1658 0A5C                          u1738 09FA  
                        u1690 09AE                          u1770 07B0                          u1850 0954  
                        u1930 0496                          u1691 09A6                          u1771 07AC  
                        u1851 0950                          u1931 0492                          u1676 0AB0  
                        u1780 07CE                          u1860 0978                          u1940 04DC  
                        u1781 07CA                          u1861 0974                          u1941 04D8  
                        u1790 07EA                          u1870 0832                          u1950 04F8  
                        u1791 07E6                          u1871 082E                          u1951 04F4  
                        u1928 0DC4                          u1880 0842                          u1960 053E  
                        u1881 083E                          u1961 0538                          u1890 0868  
                        u1970 0540                          u1891 0864                          u1980 05A4  
                        u1981 05A0                          u1990 05B4                          u1991 05B0  
                        i1l35 001E                          i2l30 0E26                          i2l64 0DFC  
                        _TMR0 0FD6                   displayUID@i 0018                          _Tics 0054  
                        _Rows 0066                          abs@a 0008                          _dbuf 0080  
                        _main 0D88                          _prec 005C                          _nout 0058  
                        fsr0h 0FEA                          fsr1h 0FE2                          indf0 0FEF  
                        fsr2h 0FDA                          fsr0l 0FE9                          indf2 0FDF  
                        fsr1l 0FE1                          fsr2l 0FD9                          btemp 007B  
             __end_of_TI_Init 0D2C                          prodh 0FF4                          prodl 0FF3  
                        start 0026               __end_of_HighRSI 0E2A                  ___param_bank 0000  
             ??_MFRC522_Reset 0011                         ??_abs 000A                  ?_initTeclado 0001  
                       ?_main 0001               __end_of___awdiv 0822                         STR_10 1F1C  
                       STR_11 1FF0                         STR_12 1FC6                         STR_13 1FD4  
                       STR_14 1FE2                         STR_15 1EFB               __end_of___awmod 098A  
                       _T0CON 0FD5               ___awdiv@divisor 0004               ___awdiv@counter 0006  
                       _RCREG 0FAE                         _RCSTA 0FAB                  vfpfcnvrt@cnt 0012  
                vfpfcnvrt@fmt 000D                         _SPBRG 0FAF                         _PORTD 0F83  
                       _TRISA 0F92                         _TRISD 0F95                         _TXREG 0FAD  
                       _TXSTA 0FAC                         _Filas 0072                         _Timer 0079  
                       _flags 0060               motor_RFID@irqEn 006C               motor_RFID@unLen 005E  
                       _fputc 0822                         _tecla 0070               motor_RFID@state 006E  
                       _timer 007A                         _width 005A                         _state 006F  
                       _putch 0E94                         tablat 0FF5             _MFRC522_Clear_Bit 0DCC  
                       ttemp5 007C                         ttemp6 007F                         ttemp7 0083  
                       status 0FD8                         wtemp8 007C               __end_of_sprintf 0C40  
          Terminal_SendChar@c 0002            ?_MFRC522_Clear_Bit 0011             _MFRC522_AntennaOn 0E50  
             __initialization 0D2C                  __end_of_main 0DB0            ?_MFRC522_AntennaOn 0001  
         ??_MFRC522_Clear_Bit 0012                   ?_RSI_Timer0 0001                TI_Init@counter 0002  
            _initPortsTeclado 0E86                        ??_main 0040           ??_MFRC522_AntennaOn 0013  
               __activetblptr 0002            MFRC522_Rd@ucResult 000A                        _ADCON1 0FC1  
             MFRC522_Wr@value 000C     __end_of_MFRC522_Clear_Bit 0DE6                        ?_fputc 0002  
            ___awdiv@dividend 0002                        ?_putch 0001                     ??_TI_Init 0002  
         displayUID@hexString 0009        Terminal_SendString@str 0005                        i2l2220 0E14  
                      i2l2222 0E22                        i2l1900 0DEE                        i2l1902 0DF0  
                      i2l1898 0DE6                 vfpfcnvrt@done 0011                        _TMR0IF 7F92  
                   ??_HighRSI 0001     __end_of_MFRC522_AntennaOn 0E5C                 displayUID@uid 0007  
            __end_of_delay_us 0CC4                        _LowRSI 0018                        _RowAct 0064  
                      _Timers 0040                  vfprintf@cfmt 001F                     ??___awdiv 0006  
        __end_of_MFRC522_Init 0C8E                     ??___awmod 0006              __end_of_initRFID 0E7E  
            motor_RFID@buffer 0100            motorTerminal@state 0061                        clear_0 0D32  
                      clear_1 0D3E                        clear_2 0D4A              ___awdiv@quotient 0008  
             ___awmod@divisor 0004                        isa$std 0001               ___awmod@counter 0006  
                      fputc@c 0002                  __mediumconst 1EEE                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                        putch@c 0001  
            __end_of_vfprintf 0BF0         __end_of_Terminal_Init 0E50                     ??_sprintf 0029  
                  __accesstop 0080       __end_of__initialization 0D50               delay_us@howMany 0005  
               ___rparam_used 0001                  ??_MFRC522_Rd 0007                  ??_MFRC522_Wr 000D  
          _MFRC522_AntennaOff 0E5C                __pcstackCOMRAM 0001           ?_MFRC522_AntennaOff 0001  
               __end_of_fputc 08DC                 __end_of_putch 0E96          TI_NewTimer@Comptador 0004  
            MFRC522_Rd@ucAddr 0009             ??_MFRC522_Set_Bit 0012            __end_of_MFRC522_Rd 0AD4  
          __end_of_MFRC522_Wr 0A32                       ??_fputc 0005          ??_MFRC522_AntennaOff 0014  
                ?_TI_NewTimer 0002                       ??_putch 0002                    __pbssBANK0 0080  
                  __pbssBANK1 0100        TI_NewTimer@TimerHandle 0002                       ?_LowRSI 0001  
            MFRC522_Wr@ucAddr 000F                       _BAUDCON 0FB8                     ?_delay_us 0001  
           _Terminal_SendChar 0E7E                    _displayUID 0670                       _TI_Init 0CF8  
          ?_Terminal_SendChar 0001      __end_of_initPortsTeclado 0E8E                     ?_initRFID 0001  
                     _HighRSI 0008                       _Columns 0065             motor_RFID@TagType 0067  
         ??_Terminal_SendChar 0002                       __Hparam 0000                       __Lparam 0000  
                ??_RSI_Timer0 0001                       ___awdiv 0760                       ___awmod 08DC  
                   ?_vfprintf 001B                       __pcinit 0D2C         __end_of_MFRC522_Reset 0D88  
                     __ramtop 0200             motor_RFID@_status 0068                       __ptext0 0D88  
                     __ptext1 002A                       __ptext2 0BF0                       __ptext3 0B9E  
                     __ptext4 046C                       __ptext5 0822                       __ptext6 0E94  
                     __ptext7 0CC4                       __ptext8 08DC                       __ptext9 0760  
           __end_of_initPorts 0E94     __end_of_Terminal_SendChar 0E86              ___awmod@dividend 0002  
           motor_RFID@waitIRq 006B                    ??_delay_us 0002                       _sprintf 0BF0  
                _MFRC522_Init 0C40                __pintcode_body 0E14          end_of_initialization 0D50  
                 motor_RFID@i 0069                   motor_RFID@n 006A                   motor_RFID@p 003A  
                  ??_initRFID 0014            __end_of_RSI_Timer0 0DFE                       fputc@fp 0004  
               __Lmediumconst 1EEE                       int_func 0E14             __end_of_vfpfcnvrt 0670  
                  _motor_RFID 002A                       postdec2 0FDD                       postinc0 0FEE  
                     postinc1 0FE6                       postinc2 0FDE              vfpfcnvrt@convarg 0016  
               GetTecla@F3223 1EEF                    ??_vfprintf 001F                     _PORTBbits 0F81  
                   _PORTCbits 0F82           _Terminal_SendString 0AD4                     _TRISBbits 0F93  
                   _TRISCbits 0F94                   ?_displayUID 0007              displayUID@nibble 001A  
        ?_Terminal_SendString 0005             MFRC522_Rd@Address 0008                __end_of_LowRSI 0026  
             _MFRC522_Set_Bit 0E2A                   vfpfcnvrt@ap 000E                   vfpfcnvrt@cp 0014  
                 vfpfcnvrt@fp 000C                     _ColumnAct 0063           start_initialization 0D2C  
                 __end_of_abs 0CF8       motor_RFID@fifoLevel_530 0039  __end_of_Terminal_TXAvailable 0DCC  
       ??_Terminal_SendString 0007                      ??_LowRSI 0001                   vfprintf@fmt 001C  
                 ?_motor_RFID 0001                 ??_initTeclado 0005                   __pbssCOMRAM 0040  
           MFRC522_Wr@Address 000E                      ?_TI_Init 0001             ?_initPortsTeclado 0001  
                    ?_HighRSI 0001            ??_initPortsTeclado 0002       __end_of_MFRC522_Set_Bit 0E3E  
         motor_RFID@fifoLevel 003E           MFRC522_Set_Bit@addr 0012           MFRC522_Set_Bit@mask 0011  
                   __pintcode 0008                 __pmediumconst 1EEE                      ?___awdiv 0002  
  __end_of_InitPortDirections 0E74                      ?___awmod 0002                   __pintcodelo 0018  
                 __smallconst 1EEE           __end_of_initTeclado 0E14                     _initPorts 0E8E  
                    ?_sprintf 0021                 _Terminal_Init 0E3E                      _LATBbits 0F8A  
                    _LATCbits 0F8B                     delay_us@x 0006               _hashtag_pressed 0062  
                    i2u117_40 0E22                      i2u117_41 0E1E                      _PIR1bits 0F9E  
       motor_RFID@lastBitsVal 003F                     _vfpfcnvrt 046C          _Terminal_TXAvailable 0DB0  
                ??_displayUID 0008                    ?_initPorts 0001                    vfpfcnvrt@c 001A  
               motor_RFID@UID 0073                ?_Terminal_Init 0001                      _Columnas 0071  
            ?_MFRC522_Set_Bit 0011                      __Hrparam 0000         MFRC522_Clear_Bit@addr 0013  
       MFRC522_Clear_Bit@mask 0011                    vfprintf@ap 001E                      __Lrparam 0000  
                  vfprintf@fp 001B                   _initTeclado 0DFE            __end_of_displayUID 0760  
       ?_Terminal_TXAvailable 0002                    ?_vfpfcnvrt 000C                    sprintf@fmt 0023  
                  sprintf@ret 0029                      _delay_us 0C8E                      __ptext10 0670  
                    __ptext11 0AD4                      __ptext20 0E50                      __ptext12 0DB0  
                    __ptext21 0E2A                      __ptext13 0E7E                      __ptext30 0CF8  
                    __ptext22 0E5C                      __ptext14 0DFE                      __ptext23 0DCC  
                    __ptext15 0E86                      __ptext24 098A                      __ptext16 0B48  
                    __ptext33 0DE6                      __ptext25 0A32                      __ptext17 0E74  
                    __ptext26 0C8E                      __ptext18 0C40                      __ptext27 0E68  
                    __ptext19 0D5E                      __ptext28 0E8E                      __ptext29 0E3E  
               ??_TI_NewTimer 0003                      _initRFID 0E74                    _MFRC522_Rd 0A32  
                  _MFRC522_Wr 098A                  ??_motor_RFID 0037                      isa$xinst 0000  
                    int$flags 007B            motor_RFID@substate 006D                      _vfprintf 0B9E  
               _MFRC522_Reset 0D5E                    _INTCONbits 0FF2               ??_Terminal_Init 0002  
                 ??_initPorts 0002   __end_of_Terminal_SendString 0B48            __end_of_motor_RFID 046C  
              _displayUID$823 0014                _displayUID$824 0016                      intlevel1 0000  
                    intlevel2 0000                     sprintf@ap 002B           __end_of_TI_NewTimer 0B9E  
      ??_Terminal_TXAvailable 0004                   ??_vfpfcnvrt 000F                ?_MFRC522_Reset 0001  
                    sprintf@f 002C        motor_RFID@backBitsCalc 003C                      sprintf@s 0021  
          _InitPortDirections 0E68    __end_of_MFRC522_AntennaOff 0E68                 ?_MFRC522_Init 0001  
         ?_InitPortDirections 0001                   ?_MFRC522_Rd 0001                   ?_MFRC522_Wr 000C  
