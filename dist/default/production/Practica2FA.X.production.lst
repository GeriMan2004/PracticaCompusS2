

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Feb 28 17:03:47 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 05/12/2024 GMT
    55                           ; 
    56                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4321 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000FE0                     bsr             equ	4064
    89   000FE9                     fsr0            equ	4073
    90   000FEA                     fsr0h           equ	4074
    91   000FE9                     fsr0l           equ	4073
    92   000FE1                     fsr1            equ	4065
    93   000FE2                     fsr1h           equ	4066
    94   000FE1                     fsr1l           equ	4065
    95   000FD9                     fsr2            equ	4057
    96   000FDA                     fsr2h           equ	4058
    97   000FD9                     fsr2l           equ	4057
    98   000FEF                     indf0           equ	4079
    99   000FE7                     indf1           equ	4071
   100   000FDF                     indf2           equ	4063
   101   000FF2                     intcon          equ	4082
   102   000000                     nvmcon          equ	0
   103   000FF9                     pcl             equ	4089
   104   000FFA                     pclath          equ	4090
   105   000FFB                     pclatu          equ	4091
   106   000FEB                     plusw0          equ	4075
   107   000FE3                     plusw1          equ	4067
   108   000FDB                     plusw2          equ	4059
   109   000FED                     postdec0        equ	4077
   110   000FE5                     postdec1        equ	4069
   111   000FDD                     postdec2        equ	4061
   112   000FEE                     postinc0        equ	4078
   113   000FE6                     postinc1        equ	4070
   114   000FDE                     postinc2        equ	4062
   115   000FEC                     preinc0         equ	4076
   116   000FE4                     preinc1         equ	4068
   117   000FDC                     preinc2         equ	4060
   118   000FF3                     prod            equ	4083
   119   000FF4                     prodh           equ	4084
   120   000FF3                     prodl           equ	4083
   121   000FD8                     status          equ	4056
   122   000FF5                     tablat          equ	4085
   123   000FF6                     tblptr          equ	4086
   124   000FF7                     tblptrh         equ	4087
   125   000FF6                     tblptrl         equ	4086
   126   000FF8                     tblptru         equ	4088
   127   000FFD                     tosl            equ	4093
   128   000FE8                     wreg            equ	4072
   129   000F80                     PORTA           equ	3968	;# 
   130   000F81                     PORTB           equ	3969	;# 
   131   000F82                     PORTC           equ	3970	;# 
   132   000F83                     PORTD           equ	3971	;# 
   133   000F84                     PORTE           equ	3972	;# 
   134   000F89                     LATA            equ	3977	;# 
   135   000F8A                     LATB            equ	3978	;# 
   136   000F8B                     LATC            equ	3979	;# 
   137   000F8C                     LATD            equ	3980	;# 
   138   000F8D                     LATE            equ	3981	;# 
   139   000F92                     TRISA           equ	3986	;# 
   140   000F92                     DDRA            equ	3986	;# 
   141   000F93                     TRISB           equ	3987	;# 
   142   000F93                     DDRB            equ	3987	;# 
   143   000F94                     TRISC           equ	3988	;# 
   144   000F94                     DDRC            equ	3988	;# 
   145   000F95                     TRISD           equ	3989	;# 
   146   000F95                     DDRD            equ	3989	;# 
   147   000F96                     TRISE           equ	3990	;# 
   148   000F96                     DDRE            equ	3990	;# 
   149   000F9B                     OSCTUNE         equ	3995	;# 
   150   000F9D                     PIE1            equ	3997	;# 
   151   000F9E                     PIR1            equ	3998	;# 
   152   000F9F                     IPR1            equ	3999	;# 
   153   000FA0                     PIE2            equ	4000	;# 
   154   000FA1                     PIR2            equ	4001	;# 
   155   000FA2                     IPR2            equ	4002	;# 
   156   000FA6                     EECON1          equ	4006	;# 
   157   000FA7                     EECON2          equ	4007	;# 
   158   000FA8                     EEDATA          equ	4008	;# 
   159   000FA9                     EEADR           equ	4009	;# 
   160   000FAB                     RCSTA           equ	4011	;# 
   161   000FAB                     RCSTA1          equ	4011	;# 
   162   000FAC                     TXSTA           equ	4012	;# 
   163   000FAC                     TXSTA1          equ	4012	;# 
   164   000FAD                     TXREG           equ	4013	;# 
   165   000FAD                     TXREG1          equ	4013	;# 
   166   000FAE                     RCREG           equ	4014	;# 
   167   000FAE                     RCREG1          equ	4014	;# 
   168   000FAF                     SPBRG           equ	4015	;# 
   169   000FAF                     SPBRG1          equ	4015	;# 
   170   000FB0                     SPBRGH          equ	4016	;# 
   171   000FB1                     T3CON           equ	4017	;# 
   172   000FB2                     TMR3            equ	4018	;# 
   173   000FB2                     TMR3L           equ	4018	;# 
   174   000FB3                     TMR3H           equ	4019	;# 
   175   000FB4                     CMCON           equ	4020	;# 
   176   000FB5                     CVRCON          equ	4021	;# 
   177   000FB6                     ECCP1AS         equ	4022	;# 
   178   000FB7                     ECCP1DEL        equ	4023	;# 
   179   000FB7                     PWM1CON         equ	4023	;# 
   180   000FB8                     BAUDCON         equ	4024	;# 
   181   000FB8                     BAUDCTL         equ	4024	;# 
   182   000FBA                     CCP2CON         equ	4026	;# 
   183   000FBB                     CCPR2           equ	4027	;# 
   184   000FBB                     CCPR2L          equ	4027	;# 
   185   000FBC                     CCPR2H          equ	4028	;# 
   186   000FBD                     CCP1CON         equ	4029	;# 
   187   000FBD                     ECCP1CON        equ	4029	;# 
   188   000FBE                     CCPR1           equ	4030	;# 
   189   000FBE                     CCPR1L          equ	4030	;# 
   190   000FBF                     CCPR1H          equ	4031	;# 
   191   000FC0                     ADCON2          equ	4032	;# 
   192   000FC1                     ADCON1          equ	4033	;# 
   193   000FC2                     ADCON0          equ	4034	;# 
   194   000FC3                     ADRES           equ	4035	;# 
   195   000FC3                     ADRESL          equ	4035	;# 
   196   000FC4                     ADRESH          equ	4036	;# 
   197   000FC5                     SSPCON2         equ	4037	;# 
   198   000FC6                     SSPCON1         equ	4038	;# 
   199   000FC7                     SSPSTAT         equ	4039	;# 
   200   000FC8                     SSPADD          equ	4040	;# 
   201   000FC9                     SSPBUF          equ	4041	;# 
   202   000FCA                     T2CON           equ	4042	;# 
   203   000FCB                     PR2             equ	4043	;# 
   204   000FCB                     MEMCON          equ	4043	;# 
   205   000FCC                     TMR2            equ	4044	;# 
   206   000FCD                     T1CON           equ	4045	;# 
   207   000FCE                     TMR1            equ	4046	;# 
   208   000FCE                     TMR1L           equ	4046	;# 
   209   000FCF                     TMR1H           equ	4047	;# 
   210   000FD0                     RCON            equ	4048	;# 
   211   000FD1                     WDTCON          equ	4049	;# 
   212   000FD2                     HLVDCON         equ	4050	;# 
   213   000FD2                     LVDCON          equ	4050	;# 
   214   000FD3                     OSCCON          equ	4051	;# 
   215   000FD5                     T0CON           equ	4053	;# 
   216   000FD6                     TMR0            equ	4054	;# 
   217   000FD6                     TMR0L           equ	4054	;# 
   218   000FD7                     TMR0H           equ	4055	;# 
   219   000FD8                     STATUS          equ	4056	;# 
   220   000FD9                     FSR2            equ	4057	;# 
   221   000FD9                     FSR2L           equ	4057	;# 
   222   000FDA                     FSR2H           equ	4058	;# 
   223   000FDB                     PLUSW2          equ	4059	;# 
   224   000FDC                     PREINC2         equ	4060	;# 
   225   000FDD                     POSTDEC2        equ	4061	;# 
   226   000FDE                     POSTINC2        equ	4062	;# 
   227   000FDF                     INDF2           equ	4063	;# 
   228   000FE0                     BSR             equ	4064	;# 
   229   000FE1                     FSR1            equ	4065	;# 
   230   000FE1                     FSR1L           equ	4065	;# 
   231   000FE2                     FSR1H           equ	4066	;# 
   232   000FE3                     PLUSW1          equ	4067	;# 
   233   000FE4                     PREINC1         equ	4068	;# 
   234   000FE5                     POSTDEC1        equ	4069	;# 
   235   000FE6                     POSTINC1        equ	4070	;# 
   236   000FE7                     INDF1           equ	4071	;# 
   237   000FE8                     WREG            equ	4072	;# 
   238   000FE9                     FSR0            equ	4073	;# 
   239   000FE9                     FSR0L           equ	4073	;# 
   240   000FEA                     FSR0H           equ	4074	;# 
   241   000FEB                     PLUSW0          equ	4075	;# 
   242   000FEC                     PREINC0         equ	4076	;# 
   243   000FED                     POSTDEC0        equ	4077	;# 
   244   000FEE                     POSTINC0        equ	4078	;# 
   245   000FEF                     INDF0           equ	4079	;# 
   246   000FF0                     INTCON3         equ	4080	;# 
   247   000FF1                     INTCON2         equ	4081	;# 
   248   000FF2                     INTCON          equ	4082	;# 
   249   000FF3                     PROD            equ	4083	;# 
   250   000FF3                     PRODL           equ	4083	;# 
   251   000FF4                     PRODH           equ	4084	;# 
   252   000FF5                     TABLAT          equ	4085	;# 
   253   000FF6                     TBLPTR          equ	4086	;# 
   254   000FF6                     TBLPTRL         equ	4086	;# 
   255   000FF7                     TBLPTRH         equ	4087	;# 
   256   000FF8                     TBLPTRU         equ	4088	;# 
   257   000FF9                     PCLAT           equ	4089	;# 
   258   000FF9                     PC              equ	4089	;# 
   259   000FF9                     PCL             equ	4089	;# 
   260   000FFA                     PCLATH          equ	4090	;# 
   261   000FFB                     PCLATU          equ	4091	;# 
   262   000FFC                     STKPTR          equ	4092	;# 
   263   000FFD                     TOS             equ	4093	;# 
   264   000FFD                     TOSL            equ	4093	;# 
   265   000FFE                     TOSH            equ	4094	;# 
   266   000FFF                     TOSU            equ	4095	;# 
   267   000F80                     PORTA           equ	3968	;# 
   268   000F81                     PORTB           equ	3969	;# 
   269   000F82                     PORTC           equ	3970	;# 
   270   000F83                     PORTD           equ	3971	;# 
   271   000F84                     PORTE           equ	3972	;# 
   272   000F89                     LATA            equ	3977	;# 
   273   000F8A                     LATB            equ	3978	;# 
   274   000F8B                     LATC            equ	3979	;# 
   275   000F8C                     LATD            equ	3980	;# 
   276   000F8D                     LATE            equ	3981	;# 
   277   000F92                     TRISA           equ	3986	;# 
   278   000F92                     DDRA            equ	3986	;# 
   279   000F93                     TRISB           equ	3987	;# 
   280   000F93                     DDRB            equ	3987	;# 
   281   000F94                     TRISC           equ	3988	;# 
   282   000F94                     DDRC            equ	3988	;# 
   283   000F95                     TRISD           equ	3989	;# 
   284   000F95                     DDRD            equ	3989	;# 
   285   000F96                     TRISE           equ	3990	;# 
   286   000F96                     DDRE            equ	3990	;# 
   287   000F9B                     OSCTUNE         equ	3995	;# 
   288   000F9D                     PIE1            equ	3997	;# 
   289   000F9E                     PIR1            equ	3998	;# 
   290   000F9F                     IPR1            equ	3999	;# 
   291   000FA0                     PIE2            equ	4000	;# 
   292   000FA1                     PIR2            equ	4001	;# 
   293   000FA2                     IPR2            equ	4002	;# 
   294   000FA6                     EECON1          equ	4006	;# 
   295   000FA7                     EECON2          equ	4007	;# 
   296   000FA8                     EEDATA          equ	4008	;# 
   297   000FA9                     EEADR           equ	4009	;# 
   298   000FAB                     RCSTA           equ	4011	;# 
   299   000FAB                     RCSTA1          equ	4011	;# 
   300   000FAC                     TXSTA           equ	4012	;# 
   301   000FAC                     TXSTA1          equ	4012	;# 
   302   000FAD                     TXREG           equ	4013	;# 
   303   000FAD                     TXREG1          equ	4013	;# 
   304   000FAE                     RCREG           equ	4014	;# 
   305   000FAE                     RCREG1          equ	4014	;# 
   306   000FAF                     SPBRG           equ	4015	;# 
   307   000FAF                     SPBRG1          equ	4015	;# 
   308   000FB0                     SPBRGH          equ	4016	;# 
   309   000FB1                     T3CON           equ	4017	;# 
   310   000FB2                     TMR3            equ	4018	;# 
   311   000FB2                     TMR3L           equ	4018	;# 
   312   000FB3                     TMR3H           equ	4019	;# 
   313   000FB4                     CMCON           equ	4020	;# 
   314   000FB5                     CVRCON          equ	4021	;# 
   315   000FB6                     ECCP1AS         equ	4022	;# 
   316   000FB7                     ECCP1DEL        equ	4023	;# 
   317   000FB7                     PWM1CON         equ	4023	;# 
   318   000FB8                     BAUDCON         equ	4024	;# 
   319   000FB8                     BAUDCTL         equ	4024	;# 
   320   000FBA                     CCP2CON         equ	4026	;# 
   321   000FBB                     CCPR2           equ	4027	;# 
   322   000FBB                     CCPR2L          equ	4027	;# 
   323   000FBC                     CCPR2H          equ	4028	;# 
   324   000FBD                     CCP1CON         equ	4029	;# 
   325   000FBD                     ECCP1CON        equ	4029	;# 
   326   000FBE                     CCPR1           equ	4030	;# 
   327   000FBE                     CCPR1L          equ	4030	;# 
   328   000FBF                     CCPR1H          equ	4031	;# 
   329   000FC0                     ADCON2          equ	4032	;# 
   330   000FC1                     ADCON1          equ	4033	;# 
   331   000FC2                     ADCON0          equ	4034	;# 
   332   000FC3                     ADRES           equ	4035	;# 
   333   000FC3                     ADRESL          equ	4035	;# 
   334   000FC4                     ADRESH          equ	4036	;# 
   335   000FC5                     SSPCON2         equ	4037	;# 
   336   000FC6                     SSPCON1         equ	4038	;# 
   337   000FC7                     SSPSTAT         equ	4039	;# 
   338   000FC8                     SSPADD          equ	4040	;# 
   339   000FC9                     SSPBUF          equ	4041	;# 
   340   000FCA                     T2CON           equ	4042	;# 
   341   000FCB                     PR2             equ	4043	;# 
   342   000FCB                     MEMCON          equ	4043	;# 
   343   000FCC                     TMR2            equ	4044	;# 
   344   000FCD                     T1CON           equ	4045	;# 
   345   000FCE                     TMR1            equ	4046	;# 
   346   000FCE                     TMR1L           equ	4046	;# 
   347   000FCF                     TMR1H           equ	4047	;# 
   348   000FD0                     RCON            equ	4048	;# 
   349   000FD1                     WDTCON          equ	4049	;# 
   350   000FD2                     HLVDCON         equ	4050	;# 
   351   000FD2                     LVDCON          equ	4050	;# 
   352   000FD3                     OSCCON          equ	4051	;# 
   353   000FD5                     T0CON           equ	4053	;# 
   354   000FD6                     TMR0            equ	4054	;# 
   355   000FD6                     TMR0L           equ	4054	;# 
   356   000FD7                     TMR0H           equ	4055	;# 
   357   000FD8                     STATUS          equ	4056	;# 
   358   000FD9                     FSR2            equ	4057	;# 
   359   000FD9                     FSR2L           equ	4057	;# 
   360   000FDA                     FSR2H           equ	4058	;# 
   361   000FDB                     PLUSW2          equ	4059	;# 
   362   000FDC                     PREINC2         equ	4060	;# 
   363   000FDD                     POSTDEC2        equ	4061	;# 
   364   000FDE                     POSTINC2        equ	4062	;# 
   365   000FDF                     INDF2           equ	4063	;# 
   366   000FE0                     BSR             equ	4064	;# 
   367   000FE1                     FSR1            equ	4065	;# 
   368   000FE1                     FSR1L           equ	4065	;# 
   369   000FE2                     FSR1H           equ	4066	;# 
   370   000FE3                     PLUSW1          equ	4067	;# 
   371   000FE4                     PREINC1         equ	4068	;# 
   372   000FE5                     POSTDEC1        equ	4069	;# 
   373   000FE6                     POSTINC1        equ	4070	;# 
   374   000FE7                     INDF1           equ	4071	;# 
   375   000FE8                     WREG            equ	4072	;# 
   376   000FE9                     FSR0            equ	4073	;# 
   377   000FE9                     FSR0L           equ	4073	;# 
   378   000FEA                     FSR0H           equ	4074	;# 
   379   000FEB                     PLUSW0          equ	4075	;# 
   380   000FEC                     PREINC0         equ	4076	;# 
   381   000FED                     POSTDEC0        equ	4077	;# 
   382   000FEE                     POSTINC0        equ	4078	;# 
   383   000FEF                     INDF0           equ	4079	;# 
   384   000FF0                     INTCON3         equ	4080	;# 
   385   000FF1                     INTCON2         equ	4081	;# 
   386   000FF2                     INTCON          equ	4082	;# 
   387   000FF3                     PROD            equ	4083	;# 
   388   000FF3                     PRODL           equ	4083	;# 
   389   000FF4                     PRODH           equ	4084	;# 
   390   000FF5                     TABLAT          equ	4085	;# 
   391   000FF6                     TBLPTR          equ	4086	;# 
   392   000FF6                     TBLPTRL         equ	4086	;# 
   393   000FF7                     TBLPTRH         equ	4087	;# 
   394   000FF8                     TBLPTRU         equ	4088	;# 
   395   000FF9                     PCLAT           equ	4089	;# 
   396   000FF9                     PC              equ	4089	;# 
   397   000FF9                     PCL             equ	4089	;# 
   398   000FFA                     PCLATH          equ	4090	;# 
   399   000FFB                     PCLATU          equ	4091	;# 
   400   000FFC                     STKPTR          equ	4092	;# 
   401   000FFD                     TOS             equ	4093	;# 
   402   000FFD                     TOSL            equ	4093	;# 
   403   000FFE                     TOSH            equ	4094	;# 
   404   000FFF                     TOSU            equ	4095	;# 
   405   000F80                     PORTA           equ	3968	;# 
   406   000F81                     PORTB           equ	3969	;# 
   407   000F82                     PORTC           equ	3970	;# 
   408   000F83                     PORTD           equ	3971	;# 
   409   000F84                     PORTE           equ	3972	;# 
   410   000F89                     LATA            equ	3977	;# 
   411   000F8A                     LATB            equ	3978	;# 
   412   000F8B                     LATC            equ	3979	;# 
   413   000F8C                     LATD            equ	3980	;# 
   414   000F8D                     LATE            equ	3981	;# 
   415   000F92                     TRISA           equ	3986	;# 
   416   000F92                     DDRA            equ	3986	;# 
   417   000F93                     TRISB           equ	3987	;# 
   418   000F93                     DDRB            equ	3987	;# 
   419   000F94                     TRISC           equ	3988	;# 
   420   000F94                     DDRC            equ	3988	;# 
   421   000F95                     TRISD           equ	3989	;# 
   422   000F95                     DDRD            equ	3989	;# 
   423   000F96                     TRISE           equ	3990	;# 
   424   000F96                     DDRE            equ	3990	;# 
   425   000F9B                     OSCTUNE         equ	3995	;# 
   426   000F9D                     PIE1            equ	3997	;# 
   427   000F9E                     PIR1            equ	3998	;# 
   428   000F9F                     IPR1            equ	3999	;# 
   429   000FA0                     PIE2            equ	4000	;# 
   430   000FA1                     PIR2            equ	4001	;# 
   431   000FA2                     IPR2            equ	4002	;# 
   432   000FA6                     EECON1          equ	4006	;# 
   433   000FA7                     EECON2          equ	4007	;# 
   434   000FA8                     EEDATA          equ	4008	;# 
   435   000FA9                     EEADR           equ	4009	;# 
   436   000FAB                     RCSTA           equ	4011	;# 
   437   000FAB                     RCSTA1          equ	4011	;# 
   438   000FAC                     TXSTA           equ	4012	;# 
   439   000FAC                     TXSTA1          equ	4012	;# 
   440   000FAD                     TXREG           equ	4013	;# 
   441   000FAD                     TXREG1          equ	4013	;# 
   442   000FAE                     RCREG           equ	4014	;# 
   443   000FAE                     RCREG1          equ	4014	;# 
   444   000FAF                     SPBRG           equ	4015	;# 
   445   000FAF                     SPBRG1          equ	4015	;# 
   446   000FB0                     SPBRGH          equ	4016	;# 
   447   000FB1                     T3CON           equ	4017	;# 
   448   000FB2                     TMR3            equ	4018	;# 
   449   000FB2                     TMR3L           equ	4018	;# 
   450   000FB3                     TMR3H           equ	4019	;# 
   451   000FB4                     CMCON           equ	4020	;# 
   452   000FB5                     CVRCON          equ	4021	;# 
   453   000FB6                     ECCP1AS         equ	4022	;# 
   454   000FB7                     ECCP1DEL        equ	4023	;# 
   455   000FB7                     PWM1CON         equ	4023	;# 
   456   000FB8                     BAUDCON         equ	4024	;# 
   457   000FB8                     BAUDCTL         equ	4024	;# 
   458   000FBA                     CCP2CON         equ	4026	;# 
   459   000FBB                     CCPR2           equ	4027	;# 
   460   000FBB                     CCPR2L          equ	4027	;# 
   461   000FBC                     CCPR2H          equ	4028	;# 
   462   000FBD                     CCP1CON         equ	4029	;# 
   463   000FBD                     ECCP1CON        equ	4029	;# 
   464   000FBE                     CCPR1           equ	4030	;# 
   465   000FBE                     CCPR1L          equ	4030	;# 
   466   000FBF                     CCPR1H          equ	4031	;# 
   467   000FC0                     ADCON2          equ	4032	;# 
   468   000FC1                     ADCON1          equ	4033	;# 
   469   000FC2                     ADCON0          equ	4034	;# 
   470   000FC3                     ADRES           equ	4035	;# 
   471   000FC3                     ADRESL          equ	4035	;# 
   472   000FC4                     ADRESH          equ	4036	;# 
   473   000FC5                     SSPCON2         equ	4037	;# 
   474   000FC6                     SSPCON1         equ	4038	;# 
   475   000FC7                     SSPSTAT         equ	4039	;# 
   476   000FC8                     SSPADD          equ	4040	;# 
   477   000FC9                     SSPBUF          equ	4041	;# 
   478   000FCA                     T2CON           equ	4042	;# 
   479   000FCB                     PR2             equ	4043	;# 
   480   000FCB                     MEMCON          equ	4043	;# 
   481   000FCC                     TMR2            equ	4044	;# 
   482   000FCD                     T1CON           equ	4045	;# 
   483   000FCE                     TMR1            equ	4046	;# 
   484   000FCE                     TMR1L           equ	4046	;# 
   485   000FCF                     TMR1H           equ	4047	;# 
   486   000FD0                     RCON            equ	4048	;# 
   487   000FD1                     WDTCON          equ	4049	;# 
   488   000FD2                     HLVDCON         equ	4050	;# 
   489   000FD2                     LVDCON          equ	4050	;# 
   490   000FD3                     OSCCON          equ	4051	;# 
   491   000FD5                     T0CON           equ	4053	;# 
   492   000FD6                     TMR0            equ	4054	;# 
   493   000FD6                     TMR0L           equ	4054	;# 
   494   000FD7                     TMR0H           equ	4055	;# 
   495   000FD8                     STATUS          equ	4056	;# 
   496   000FD9                     FSR2            equ	4057	;# 
   497   000FD9                     FSR2L           equ	4057	;# 
   498   000FDA                     FSR2H           equ	4058	;# 
   499   000FDB                     PLUSW2          equ	4059	;# 
   500   000FDC                     PREINC2         equ	4060	;# 
   501   000FDD                     POSTDEC2        equ	4061	;# 
   502   000FDE                     POSTINC2        equ	4062	;# 
   503   000FDF                     INDF2           equ	4063	;# 
   504   000FE0                     BSR             equ	4064	;# 
   505   000FE1                     FSR1            equ	4065	;# 
   506   000FE1                     FSR1L           equ	4065	;# 
   507   000FE2                     FSR1H           equ	4066	;# 
   508   000FE3                     PLUSW1          equ	4067	;# 
   509   000FE4                     PREINC1         equ	4068	;# 
   510   000FE5                     POSTDEC1        equ	4069	;# 
   511   000FE6                     POSTINC1        equ	4070	;# 
   512   000FE7                     INDF1           equ	4071	;# 
   513   000FE8                     WREG            equ	4072	;# 
   514   000FE9                     FSR0            equ	4073	;# 
   515   000FE9                     FSR0L           equ	4073	;# 
   516   000FEA                     FSR0H           equ	4074	;# 
   517   000FEB                     PLUSW0          equ	4075	;# 
   518   000FEC                     PREINC0         equ	4076	;# 
   519   000FED                     POSTDEC0        equ	4077	;# 
   520   000FEE                     POSTINC0        equ	4078	;# 
   521   000FEF                     INDF0           equ	4079	;# 
   522   000FF0                     INTCON3         equ	4080	;# 
   523   000FF1                     INTCON2         equ	4081	;# 
   524   000FF2                     INTCON          equ	4082	;# 
   525   000FF3                     PROD            equ	4083	;# 
   526   000FF3                     PRODL           equ	4083	;# 
   527   000FF4                     PRODH           equ	4084	;# 
   528   000FF5                     TABLAT          equ	4085	;# 
   529   000FF6                     TBLPTR          equ	4086	;# 
   530   000FF6                     TBLPTRL         equ	4086	;# 
   531   000FF7                     TBLPTRH         equ	4087	;# 
   532   000FF8                     TBLPTRU         equ	4088	;# 
   533   000FF9                     PCLAT           equ	4089	;# 
   534   000FF9                     PC              equ	4089	;# 
   535   000FF9                     PCL             equ	4089	;# 
   536   000FFA                     PCLATH          equ	4090	;# 
   537   000FFB                     PCLATU          equ	4091	;# 
   538   000FFC                     STKPTR          equ	4092	;# 
   539   000FFD                     TOS             equ	4093	;# 
   540   000FFD                     TOSL            equ	4093	;# 
   541   000FFE                     TOSH            equ	4094	;# 
   542   000FFF                     TOSU            equ	4095	;# 
   543   000F80                     PORTA           equ	3968	;# 
   544   000F81                     PORTB           equ	3969	;# 
   545   000F82                     PORTC           equ	3970	;# 
   546   000F83                     PORTD           equ	3971	;# 
   547   000F84                     PORTE           equ	3972	;# 
   548   000F89                     LATA            equ	3977	;# 
   549   000F8A                     LATB            equ	3978	;# 
   550   000F8B                     LATC            equ	3979	;# 
   551   000F8C                     LATD            equ	3980	;# 
   552   000F8D                     LATE            equ	3981	;# 
   553   000F92                     TRISA           equ	3986	;# 
   554   000F92                     DDRA            equ	3986	;# 
   555   000F93                     TRISB           equ	3987	;# 
   556   000F93                     DDRB            equ	3987	;# 
   557   000F94                     TRISC           equ	3988	;# 
   558   000F94                     DDRC            equ	3988	;# 
   559   000F95                     TRISD           equ	3989	;# 
   560   000F95                     DDRD            equ	3989	;# 
   561   000F96                     TRISE           equ	3990	;# 
   562   000F96                     DDRE            equ	3990	;# 
   563   000F9B                     OSCTUNE         equ	3995	;# 
   564   000F9D                     PIE1            equ	3997	;# 
   565   000F9E                     PIR1            equ	3998	;# 
   566   000F9F                     IPR1            equ	3999	;# 
   567   000FA0                     PIE2            equ	4000	;# 
   568   000FA1                     PIR2            equ	4001	;# 
   569   000FA2                     IPR2            equ	4002	;# 
   570   000FA6                     EECON1          equ	4006	;# 
   571   000FA7                     EECON2          equ	4007	;# 
   572   000FA8                     EEDATA          equ	4008	;# 
   573   000FA9                     EEADR           equ	4009	;# 
   574   000FAB                     RCSTA           equ	4011	;# 
   575   000FAB                     RCSTA1          equ	4011	;# 
   576   000FAC                     TXSTA           equ	4012	;# 
   577   000FAC                     TXSTA1          equ	4012	;# 
   578   000FAD                     TXREG           equ	4013	;# 
   579   000FAD                     TXREG1          equ	4013	;# 
   580   000FAE                     RCREG           equ	4014	;# 
   581   000FAE                     RCREG1          equ	4014	;# 
   582   000FAF                     SPBRG           equ	4015	;# 
   583   000FAF                     SPBRG1          equ	4015	;# 
   584   000FB0                     SPBRGH          equ	4016	;# 
   585   000FB1                     T3CON           equ	4017	;# 
   586   000FB2                     TMR3            equ	4018	;# 
   587   000FB2                     TMR3L           equ	4018	;# 
   588   000FB3                     TMR3H           equ	4019	;# 
   589   000FB4                     CMCON           equ	4020	;# 
   590   000FB5                     CVRCON          equ	4021	;# 
   591   000FB6                     ECCP1AS         equ	4022	;# 
   592   000FB7                     ECCP1DEL        equ	4023	;# 
   593   000FB7                     PWM1CON         equ	4023	;# 
   594   000FB8                     BAUDCON         equ	4024	;# 
   595   000FB8                     BAUDCTL         equ	4024	;# 
   596   000FBA                     CCP2CON         equ	4026	;# 
   597   000FBB                     CCPR2           equ	4027	;# 
   598   000FBB                     CCPR2L          equ	4027	;# 
   599   000FBC                     CCPR2H          equ	4028	;# 
   600   000FBD                     CCP1CON         equ	4029	;# 
   601   000FBD                     ECCP1CON        equ	4029	;# 
   602   000FBE                     CCPR1           equ	4030	;# 
   603   000FBE                     CCPR1L          equ	4030	;# 
   604   000FBF                     CCPR1H          equ	4031	;# 
   605   000FC0                     ADCON2          equ	4032	;# 
   606   000FC1                     ADCON1          equ	4033	;# 
   607   000FC2                     ADCON0          equ	4034	;# 
   608   000FC3                     ADRES           equ	4035	;# 
   609   000FC3                     ADRESL          equ	4035	;# 
   610   000FC4                     ADRESH          equ	4036	;# 
   611   000FC5                     SSPCON2         equ	4037	;# 
   612   000FC6                     SSPCON1         equ	4038	;# 
   613   000FC7                     SSPSTAT         equ	4039	;# 
   614   000FC8                     SSPADD          equ	4040	;# 
   615   000FC9                     SSPBUF          equ	4041	;# 
   616   000FCA                     T2CON           equ	4042	;# 
   617   000FCB                     PR2             equ	4043	;# 
   618   000FCB                     MEMCON          equ	4043	;# 
   619   000FCC                     TMR2            equ	4044	;# 
   620   000FCD                     T1CON           equ	4045	;# 
   621   000FCE                     TMR1            equ	4046	;# 
   622   000FCE                     TMR1L           equ	4046	;# 
   623   000FCF                     TMR1H           equ	4047	;# 
   624   000FD0                     RCON            equ	4048	;# 
   625   000FD1                     WDTCON          equ	4049	;# 
   626   000FD2                     HLVDCON         equ	4050	;# 
   627   000FD2                     LVDCON          equ	4050	;# 
   628   000FD3                     OSCCON          equ	4051	;# 
   629   000FD5                     T0CON           equ	4053	;# 
   630   000FD6                     TMR0            equ	4054	;# 
   631   000FD6                     TMR0L           equ	4054	;# 
   632   000FD7                     TMR0H           equ	4055	;# 
   633   000FD8                     STATUS          equ	4056	;# 
   634   000FD9                     FSR2            equ	4057	;# 
   635   000FD9                     FSR2L           equ	4057	;# 
   636   000FDA                     FSR2H           equ	4058	;# 
   637   000FDB                     PLUSW2          equ	4059	;# 
   638   000FDC                     PREINC2         equ	4060	;# 
   639   000FDD                     POSTDEC2        equ	4061	;# 
   640   000FDE                     POSTINC2        equ	4062	;# 
   641   000FDF                     INDF2           equ	4063	;# 
   642   000FE0                     BSR             equ	4064	;# 
   643   000FE1                     FSR1            equ	4065	;# 
   644   000FE1                     FSR1L           equ	4065	;# 
   645   000FE2                     FSR1H           equ	4066	;# 
   646   000FE3                     PLUSW1          equ	4067	;# 
   647   000FE4                     PREINC1         equ	4068	;# 
   648   000FE5                     POSTDEC1        equ	4069	;# 
   649   000FE6                     POSTINC1        equ	4070	;# 
   650   000FE7                     INDF1           equ	4071	;# 
   651   000FE8                     WREG            equ	4072	;# 
   652   000FE9                     FSR0            equ	4073	;# 
   653   000FE9                     FSR0L           equ	4073	;# 
   654   000FEA                     FSR0H           equ	4074	;# 
   655   000FEB                     PLUSW0          equ	4075	;# 
   656   000FEC                     PREINC0         equ	4076	;# 
   657   000FED                     POSTDEC0        equ	4077	;# 
   658   000FEE                     POSTINC0        equ	4078	;# 
   659   000FEF                     INDF0           equ	4079	;# 
   660   000FF0                     INTCON3         equ	4080	;# 
   661   000FF1                     INTCON2         equ	4081	;# 
   662   000FF2                     INTCON          equ	4082	;# 
   663   000FF3                     PROD            equ	4083	;# 
   664   000FF3                     PRODL           equ	4083	;# 
   665   000FF4                     PRODH           equ	4084	;# 
   666   000FF5                     TABLAT          equ	4085	;# 
   667   000FF6                     TBLPTR          equ	4086	;# 
   668   000FF6                     TBLPTRL         equ	4086	;# 
   669   000FF7                     TBLPTRH         equ	4087	;# 
   670   000FF8                     TBLPTRU         equ	4088	;# 
   671   000FF9                     PCLAT           equ	4089	;# 
   672   000FF9                     PC              equ	4089	;# 
   673   000FF9                     PCL             equ	4089	;# 
   674   000FFA                     PCLATH          equ	4090	;# 
   675   000FFB                     PCLATU          equ	4091	;# 
   676   000FFC                     STKPTR          equ	4092	;# 
   677   000FFD                     TOS             equ	4093	;# 
   678   000FFD                     TOSL            equ	4093	;# 
   679   000FFE                     TOSH            equ	4094	;# 
   680   000FFF                     TOSU            equ	4095	;# 
   681   000F80                     PORTA           equ	3968	;# 
   682   000F81                     PORTB           equ	3969	;# 
   683   000F82                     PORTC           equ	3970	;# 
   684   000F83                     PORTD           equ	3971	;# 
   685   000F84                     PORTE           equ	3972	;# 
   686   000F89                     LATA            equ	3977	;# 
   687   000F8A                     LATB            equ	3978	;# 
   688   000F8B                     LATC            equ	3979	;# 
   689   000F8C                     LATD            equ	3980	;# 
   690   000F8D                     LATE            equ	3981	;# 
   691   000F92                     TRISA           equ	3986	;# 
   692   000F92                     DDRA            equ	3986	;# 
   693   000F93                     TRISB           equ	3987	;# 
   694   000F93                     DDRB            equ	3987	;# 
   695   000F94                     TRISC           equ	3988	;# 
   696   000F94                     DDRC            equ	3988	;# 
   697   000F95                     TRISD           equ	3989	;# 
   698   000F95                     DDRD            equ	3989	;# 
   699   000F96                     TRISE           equ	3990	;# 
   700   000F96                     DDRE            equ	3990	;# 
   701   000F9B                     OSCTUNE         equ	3995	;# 
   702   000F9D                     PIE1            equ	3997	;# 
   703   000F9E                     PIR1            equ	3998	;# 
   704   000F9F                     IPR1            equ	3999	;# 
   705   000FA0                     PIE2            equ	4000	;# 
   706   000FA1                     PIR2            equ	4001	;# 
   707   000FA2                     IPR2            equ	4002	;# 
   708   000FA6                     EECON1          equ	4006	;# 
   709   000FA7                     EECON2          equ	4007	;# 
   710   000FA8                     EEDATA          equ	4008	;# 
   711   000FA9                     EEADR           equ	4009	;# 
   712   000FAB                     RCSTA           equ	4011	;# 
   713   000FAB                     RCSTA1          equ	4011	;# 
   714   000FAC                     TXSTA           equ	4012	;# 
   715   000FAC                     TXSTA1          equ	4012	;# 
   716   000FAD                     TXREG           equ	4013	;# 
   717   000FAD                     TXREG1          equ	4013	;# 
   718   000FAE                     RCREG           equ	4014	;# 
   719   000FAE                     RCREG1          equ	4014	;# 
   720   000FAF                     SPBRG           equ	4015	;# 
   721   000FAF                     SPBRG1          equ	4015	;# 
   722   000FB0                     SPBRGH          equ	4016	;# 
   723   000FB1                     T3CON           equ	4017	;# 
   724   000FB2                     TMR3            equ	4018	;# 
   725   000FB2                     TMR3L           equ	4018	;# 
   726   000FB3                     TMR3H           equ	4019	;# 
   727   000FB4                     CMCON           equ	4020	;# 
   728   000FB5                     CVRCON          equ	4021	;# 
   729   000FB6                     ECCP1AS         equ	4022	;# 
   730   000FB7                     ECCP1DEL        equ	4023	;# 
   731   000FB7                     PWM1CON         equ	4023	;# 
   732   000FB8                     BAUDCON         equ	4024	;# 
   733   000FB8                     BAUDCTL         equ	4024	;# 
   734   000FBA                     CCP2CON         equ	4026	;# 
   735   000FBB                     CCPR2           equ	4027	;# 
   736   000FBB                     CCPR2L          equ	4027	;# 
   737   000FBC                     CCPR2H          equ	4028	;# 
   738   000FBD                     CCP1CON         equ	4029	;# 
   739   000FBD                     ECCP1CON        equ	4029	;# 
   740   000FBE                     CCPR1           equ	4030	;# 
   741   000FBE                     CCPR1L          equ	4030	;# 
   742   000FBF                     CCPR1H          equ	4031	;# 
   743   000FC0                     ADCON2          equ	4032	;# 
   744   000FC1                     ADCON1          equ	4033	;# 
   745   000FC2                     ADCON0          equ	4034	;# 
   746   000FC3                     ADRES           equ	4035	;# 
   747   000FC3                     ADRESL          equ	4035	;# 
   748   000FC4                     ADRESH          equ	4036	;# 
   749   000FC5                     SSPCON2         equ	4037	;# 
   750   000FC6                     SSPCON1         equ	4038	;# 
   751   000FC7                     SSPSTAT         equ	4039	;# 
   752   000FC8                     SSPADD          equ	4040	;# 
   753   000FC9                     SSPBUF          equ	4041	;# 
   754   000FCA                     T2CON           equ	4042	;# 
   755   000FCB                     PR2             equ	4043	;# 
   756   000FCB                     MEMCON          equ	4043	;# 
   757   000FCC                     TMR2            equ	4044	;# 
   758   000FCD                     T1CON           equ	4045	;# 
   759   000FCE                     TMR1            equ	4046	;# 
   760   000FCE                     TMR1L           equ	4046	;# 
   761   000FCF                     TMR1H           equ	4047	;# 
   762   000FD0                     RCON            equ	4048	;# 
   763   000FD1                     WDTCON          equ	4049	;# 
   764   000FD2                     HLVDCON         equ	4050	;# 
   765   000FD2                     LVDCON          equ	4050	;# 
   766   000FD3                     OSCCON          equ	4051	;# 
   767   000FD5                     T0CON           equ	4053	;# 
   768   000FD6                     TMR0            equ	4054	;# 
   769   000FD6                     TMR0L           equ	4054	;# 
   770   000FD7                     TMR0H           equ	4055	;# 
   771   000FD8                     STATUS          equ	4056	;# 
   772   000FD9                     FSR2            equ	4057	;# 
   773   000FD9                     FSR2L           equ	4057	;# 
   774   000FDA                     FSR2H           equ	4058	;# 
   775   000FDB                     PLUSW2          equ	4059	;# 
   776   000FDC                     PREINC2         equ	4060	;# 
   777   000FDD                     POSTDEC2        equ	4061	;# 
   778   000FDE                     POSTINC2        equ	4062	;# 
   779   000FDF                     INDF2           equ	4063	;# 
   780   000FE0                     BSR             equ	4064	;# 
   781   000FE1                     FSR1            equ	4065	;# 
   782   000FE1                     FSR1L           equ	4065	;# 
   783   000FE2                     FSR1H           equ	4066	;# 
   784   000FE3                     PLUSW1          equ	4067	;# 
   785   000FE4                     PREINC1         equ	4068	;# 
   786   000FE5                     POSTDEC1        equ	4069	;# 
   787   000FE6                     POSTINC1        equ	4070	;# 
   788   000FE7                     INDF1           equ	4071	;# 
   789   000FE8                     WREG            equ	4072	;# 
   790   000FE9                     FSR0            equ	4073	;# 
   791   000FE9                     FSR0L           equ	4073	;# 
   792   000FEA                     FSR0H           equ	4074	;# 
   793   000FEB                     PLUSW0          equ	4075	;# 
   794   000FEC                     PREINC0         equ	4076	;# 
   795   000FED                     POSTDEC0        equ	4077	;# 
   796   000FEE                     POSTINC0        equ	4078	;# 
   797   000FEF                     INDF0           equ	4079	;# 
   798   000FF0                     INTCON3         equ	4080	;# 
   799   000FF1                     INTCON2         equ	4081	;# 
   800   000FF2                     INTCON          equ	4082	;# 
   801   000FF3                     PROD            equ	4083	;# 
   802   000FF3                     PRODL           equ	4083	;# 
   803   000FF4                     PRODH           equ	4084	;# 
   804   000FF5                     TABLAT          equ	4085	;# 
   805   000FF6                     TBLPTR          equ	4086	;# 
   806   000FF6                     TBLPTRL         equ	4086	;# 
   807   000FF7                     TBLPTRH         equ	4087	;# 
   808   000FF8                     TBLPTRU         equ	4088	;# 
   809   000FF9                     PCLAT           equ	4089	;# 
   810   000FF9                     PC              equ	4089	;# 
   811   000FF9                     PCL             equ	4089	;# 
   812   000FFA                     PCLATH          equ	4090	;# 
   813   000FFB                     PCLATU          equ	4091	;# 
   814   000FFC                     STKPTR          equ	4092	;# 
   815   000FFD                     TOS             equ	4093	;# 
   816   000FFD                     TOSL            equ	4093	;# 
   817   000FFE                     TOSH            equ	4094	;# 
   818   000FFF                     TOSU            equ	4095	;# 
   819   000F80                     PORTA           equ	3968	;# 
   820   000F81                     PORTB           equ	3969	;# 
   821   000F82                     PORTC           equ	3970	;# 
   822   000F83                     PORTD           equ	3971	;# 
   823   000F84                     PORTE           equ	3972	;# 
   824   000F89                     LATA            equ	3977	;# 
   825   000F8A                     LATB            equ	3978	;# 
   826   000F8B                     LATC            equ	3979	;# 
   827   000F8C                     LATD            equ	3980	;# 
   828   000F8D                     LATE            equ	3981	;# 
   829   000F92                     TRISA           equ	3986	;# 
   830   000F92                     DDRA            equ	3986	;# 
   831   000F93                     TRISB           equ	3987	;# 
   832   000F93                     DDRB            equ	3987	;# 
   833   000F94                     TRISC           equ	3988	;# 
   834   000F94                     DDRC            equ	3988	;# 
   835   000F95                     TRISD           equ	3989	;# 
   836   000F95                     DDRD            equ	3989	;# 
   837   000F96                     TRISE           equ	3990	;# 
   838   000F96                     DDRE            equ	3990	;# 
   839   000F9B                     OSCTUNE         equ	3995	;# 
   840   000F9D                     PIE1            equ	3997	;# 
   841   000F9E                     PIR1            equ	3998	;# 
   842   000F9F                     IPR1            equ	3999	;# 
   843   000FA0                     PIE2            equ	4000	;# 
   844   000FA1                     PIR2            equ	4001	;# 
   845   000FA2                     IPR2            equ	4002	;# 
   846   000FA6                     EECON1          equ	4006	;# 
   847   000FA7                     EECON2          equ	4007	;# 
   848   000FA8                     EEDATA          equ	4008	;# 
   849   000FA9                     EEADR           equ	4009	;# 
   850   000FAB                     RCSTA           equ	4011	;# 
   851   000FAB                     RCSTA1          equ	4011	;# 
   852   000FAC                     TXSTA           equ	4012	;# 
   853   000FAC                     TXSTA1          equ	4012	;# 
   854   000FAD                     TXREG           equ	4013	;# 
   855   000FAD                     TXREG1          equ	4013	;# 
   856   000FAE                     RCREG           equ	4014	;# 
   857   000FAE                     RCREG1          equ	4014	;# 
   858   000FAF                     SPBRG           equ	4015	;# 
   859   000FAF                     SPBRG1          equ	4015	;# 
   860   000FB0                     SPBRGH          equ	4016	;# 
   861   000FB1                     T3CON           equ	4017	;# 
   862   000FB2                     TMR3            equ	4018	;# 
   863   000FB2                     TMR3L           equ	4018	;# 
   864   000FB3                     TMR3H           equ	4019	;# 
   865   000FB4                     CMCON           equ	4020	;# 
   866   000FB5                     CVRCON          equ	4021	;# 
   867   000FB6                     ECCP1AS         equ	4022	;# 
   868   000FB7                     ECCP1DEL        equ	4023	;# 
   869   000FB7                     PWM1CON         equ	4023	;# 
   870   000FB8                     BAUDCON         equ	4024	;# 
   871   000FB8                     BAUDCTL         equ	4024	;# 
   872   000FBA                     CCP2CON         equ	4026	;# 
   873   000FBB                     CCPR2           equ	4027	;# 
   874   000FBB                     CCPR2L          equ	4027	;# 
   875   000FBC                     CCPR2H          equ	4028	;# 
   876   000FBD                     CCP1CON         equ	4029	;# 
   877   000FBD                     ECCP1CON        equ	4029	;# 
   878   000FBE                     CCPR1           equ	4030	;# 
   879   000FBE                     CCPR1L          equ	4030	;# 
   880   000FBF                     CCPR1H          equ	4031	;# 
   881   000FC0                     ADCON2          equ	4032	;# 
   882   000FC1                     ADCON1          equ	4033	;# 
   883   000FC2                     ADCON0          equ	4034	;# 
   884   000FC3                     ADRES           equ	4035	;# 
   885   000FC3                     ADRESL          equ	4035	;# 
   886   000FC4                     ADRESH          equ	4036	;# 
   887   000FC5                     SSPCON2         equ	4037	;# 
   888   000FC6                     SSPCON1         equ	4038	;# 
   889   000FC7                     SSPSTAT         equ	4039	;# 
   890   000FC8                     SSPADD          equ	4040	;# 
   891   000FC9                     SSPBUF          equ	4041	;# 
   892   000FCA                     T2CON           equ	4042	;# 
   893   000FCB                     PR2             equ	4043	;# 
   894   000FCB                     MEMCON          equ	4043	;# 
   895   000FCC                     TMR2            equ	4044	;# 
   896   000FCD                     T1CON           equ	4045	;# 
   897   000FCE                     TMR1            equ	4046	;# 
   898   000FCE                     TMR1L           equ	4046	;# 
   899   000FCF                     TMR1H           equ	4047	;# 
   900   000FD0                     RCON            equ	4048	;# 
   901   000FD1                     WDTCON          equ	4049	;# 
   902   000FD2                     HLVDCON         equ	4050	;# 
   903   000FD2                     LVDCON          equ	4050	;# 
   904   000FD3                     OSCCON          equ	4051	;# 
   905   000FD5                     T0CON           equ	4053	;# 
   906   000FD6                     TMR0            equ	4054	;# 
   907   000FD6                     TMR0L           equ	4054	;# 
   908   000FD7                     TMR0H           equ	4055	;# 
   909   000FD8                     STATUS          equ	4056	;# 
   910   000FD9                     FSR2            equ	4057	;# 
   911   000FD9                     FSR2L           equ	4057	;# 
   912   000FDA                     FSR2H           equ	4058	;# 
   913   000FDB                     PLUSW2          equ	4059	;# 
   914   000FDC                     PREINC2         equ	4060	;# 
   915   000FDD                     POSTDEC2        equ	4061	;# 
   916   000FDE                     POSTINC2        equ	4062	;# 
   917   000FDF                     INDF2           equ	4063	;# 
   918   000FE0                     BSR             equ	4064	;# 
   919   000FE1                     FSR1            equ	4065	;# 
   920   000FE1                     FSR1L           equ	4065	;# 
   921   000FE2                     FSR1H           equ	4066	;# 
   922   000FE3                     PLUSW1          equ	4067	;# 
   923   000FE4                     PREINC1         equ	4068	;# 
   924   000FE5                     POSTDEC1        equ	4069	;# 
   925   000FE6                     POSTINC1        equ	4070	;# 
   926   000FE7                     INDF1           equ	4071	;# 
   927   000FE8                     WREG            equ	4072	;# 
   928   000FE9                     FSR0            equ	4073	;# 
   929   000FE9                     FSR0L           equ	4073	;# 
   930   000FEA                     FSR0H           equ	4074	;# 
   931   000FEB                     PLUSW0          equ	4075	;# 
   932   000FEC                     PREINC0         equ	4076	;# 
   933   000FED                     POSTDEC0        equ	4077	;# 
   934   000FEE                     POSTINC0        equ	4078	;# 
   935   000FEF                     INDF0           equ	4079	;# 
   936   000FF0                     INTCON3         equ	4080	;# 
   937   000FF1                     INTCON2         equ	4081	;# 
   938   000FF2                     INTCON          equ	4082	;# 
   939   000FF3                     PROD            equ	4083	;# 
   940   000FF3                     PRODL           equ	4083	;# 
   941   000FF4                     PRODH           equ	4084	;# 
   942   000FF5                     TABLAT          equ	4085	;# 
   943   000FF6                     TBLPTR          equ	4086	;# 
   944   000FF6                     TBLPTRL         equ	4086	;# 
   945   000FF7                     TBLPTRH         equ	4087	;# 
   946   000FF8                     TBLPTRU         equ	4088	;# 
   947   000FF9                     PCLAT           equ	4089	;# 
   948   000FF9                     PC              equ	4089	;# 
   949   000FF9                     PCL             equ	4089	;# 
   950   000FFA                     PCLATH          equ	4090	;# 
   951   000FFB                     PCLATU          equ	4091	;# 
   952   000FFC                     STKPTR          equ	4092	;# 
   953   000FFD                     TOS             equ	4093	;# 
   954   000FFD                     TOSL            equ	4093	;# 
   955   000FFE                     TOSH            equ	4094	;# 
   956   000FFF                     TOSU            equ	4095	;# 
   957                           
   958                           	psect	smallconst
   959   000200                     __psmallconst:
   960                           	callstack 0
   961   000200  00                 	db	0
   962   000201                     GetTecla@F2717:
   963                           	callstack 0
   964   000201  01                 	db	1
   965   000202  02                 	db	2
   966   000203  03                 	db	3
   967   000204  04                 	db	4
   968   000205  05                 	db	5
   969   000206  06                 	db	6
   970   000207  07                 	db	7
   971   000208  08                 	db	8
   972   000209  09                 	db	9
   973   00020A  0A                 	db	10
   974   00020B  00                 	db	0
   975   00020C  0B                 	db	11
   976   00020D                     __end_ofGetTecla@F2717:
   977                           	callstack 0
   978   007F92                     _TMR0IF         set	32658
   979   000FD6                     _TMR0           set	4054
   980   000FAE                     _RCREG          set	4014
   981   000FAD                     _TXREG          set	4013
   982   000F9E                     _PIR1bits       set	3998
   983   000FB8                     _BAUDCON        set	4024
   984   000FAF                     _SPBRG          set	4015
   985   000FAB                     _RCSTA          set	4011
   986   000FAC                     _TXSTA          set	4012
   987   000F81                     _PORTBbits      set	3969
   988   000F8A                     _LATBbits       set	3978
   989   000F93                     _TRISBbits      set	3987
   990   000F82                     _PORTCbits      set	3970
   991   000F8B                     _LATCbits       set	3979
   992   000F94                     _TRISCbits      set	3988
   993   000F80                     _PORTA          set	3968
   994   000FD5                     _T0CON          set	4053
   995   000F8B                     _LATC           set	3979
   996   000F8C                     _LATD           set	3980
   997   000F95                     _TRISD          set	3989
   998   000F8A                     _LATB           set	3978
   999   000F93                     _TRISB          set	3987
  1000   000FF1                     _INTCON2bits    set	4081
  1001   000F92                     _TRISA          set	3986
  1002   000FC1                     _ADCON1         set	4033
  1003   000FF2                     _INTCONbits     set	4082
  1004   00020D  09                 	db	9
  1005   00020E  33                 	db	51	;'3'
  1006   00020F  2E                 	db	46
  1007   000210  20                 	db	32
  1008   000211  4D                 	db	77	;'M'
  1009   000212  6F                 	db	111	;'o'
  1010   000213  64                 	db	100	;'d'
  1011   000214  69                 	db	105	;'i'
  1012   000215  66                 	db	102	;'f'
  1013   000216  69                 	db	105	;'i'
  1014   000217  63                 	db	99	;'c'
  1015   000218  61                 	db	97	;'a'
  1016   000219  72                 	db	114	;'r'
  1017   00021A  20                 	db	32
  1018   00021B  68                 	db	104	;'h'
  1019   00021C  6F                 	db	111	;'o'
  1020   00021D  72                 	db	114	;'r'
  1021   00021E  61                 	db	97	;'a'
  1022   00021F  20                 	db	32
  1023   000220  64                 	db	100	;'d'
  1024   000221  65                 	db	101	;'e'
  1025   000222  6C                 	db	108	;'l'
  1026   000223  20                 	db	32
  1027   000224  73                 	db	115	;'s'
  1028   000225  69                 	db	105	;'i'
  1029   000226  73                 	db	115	;'s'
  1030   000227  74                 	db	116	;'t'
  1031   000228  65                 	db	101	;'e'
  1032   000229  6D                 	db	109	;'m'
  1033   00022A  61                 	db	97	;'a'
  1034   00022B  0A                 	db	10
  1035   00022C  00                 	db	0
  1036   00022D  45                 	db	69	;'E'
  1037   00022E  52                 	db	82	;'R'
  1038   00022F  52                 	db	82	;'R'
  1039   000230  4F                 	db	79	;'O'
  1040   000231  52                 	db	82	;'R'
  1041   000232  2E                 	db	46
  1042   000233  20                 	db	32
  1043   000234  56                 	db	86	;'V'
  1044   000235  61                 	db	97	;'a'
  1045   000236  6C                 	db	108	;'l'
  1046   000237  6F                 	db	111	;'o'
  1047   000238  72                 	db	114	;'r'
  1048   000239  20                 	db	32
  1049   00023A  69                 	db	105	;'i'
  1050   00023B  6E                 	db	110	;'n'
  1051   00023C  74                 	db	116	;'t'
  1052   00023D  72                 	db	114	;'r'
  1053   00023E  6F                 	db	111	;'o'
  1054   00023F  64                 	db	100	;'d'
  1055   000240  75                 	db	117	;'u'
  1056   000241  69                 	db	105	;'i'
  1057   000242  74                 	db	116	;'t'
  1058   000243  20                 	db	32
  1059   000244  65                 	db	101	;'e'
  1060   000245  72                 	db	114	;'r'
  1061   000246  72                 	db	114	;'r'
  1062   000247  6F                 	db	111	;'o'
  1063   000248  6E                 	db	110	;'n'
  1064   000249  69                 	db	105	;'i'
  1065   00024A  2E                 	db	46
  1066   00024B  00                 	db	0
  1067   00024C  09                 	db	9
  1068   00024D  32                 	db	50	;'2'
  1069   00024E  2E                 	db	46
  1070   00024F  20                 	db	32
  1071   000250  4D                 	db	77	;'M'
  1072   000251  6F                 	db	111	;'o'
  1073   000252  73                 	db	115	;'s'
  1074   000253  74                 	db	116	;'t'
  1075   000254  72                 	db	114	;'r'
  1076   000255  61                 	db	97	;'a'
  1077   000256  72                 	db	114	;'r'
  1078   000257  20                 	db	32
  1079   000258  63                 	db	99	;'c'
  1080   000259  6F                 	db	111	;'o'
  1081   00025A  6E                 	db	110	;'n'
  1082   00025B  66                 	db	102	;'f'
  1083   00025C  69                 	db	105	;'i'
  1084   00025D  67                 	db	103	;'g'
  1085   00025E  75                 	db	117	;'u'
  1086   00025F  72                 	db	114	;'r'
  1087   000260  61                 	db	97	;'a'
  1088   000261  63                 	db	99	;'c'
  1089   000262  69                 	db	105	;'i'
  1090   000263  6F                 	db	111	;'o'
  1091   000264  6E                 	db	110	;'n'
  1092   000265  73                 	db	115	;'s'
  1093   000266  00                 	db	0
  1094   000267  09                 	db	9
  1095   000268  31                 	db	49	;'1'
  1096   000269  2E                 	db	46
  1097   00026A  20                 	db	32
  1098   00026B  51                 	db	81	;'Q'
  1099   00026C  75                 	db	117	;'u'
  1100   00026D  69                 	db	105	;'i'
  1101   00026E  20                 	db	32
  1102   00026F  68                 	db	104	;'h'
  1103   000270  69                 	db	105	;'i'
  1104   000271  20                 	db	32
  1105   000272  68                 	db	104	;'h'
  1106   000273  61                 	db	97	;'a'
  1107   000274  20                 	db	32
  1108   000275  61                 	db	97	;'a'
  1109   000276  20                 	db	32
  1110   000277  6C                 	db	108	;'l'
  1111   000278  61                 	db	97	;'a'
  1112   000279  20                 	db	32
  1113   00027A  73                 	db	115	;'s'
  1114   00027B  61                 	db	97	;'a'
  1115   00027C  6C                 	db	108	;'l'
  1116   00027D  61                 	db	97	;'a'
  1117   00027E  3F                 	db	63	;'?'
  1118   00027F  00                 	db	0
  1119   000280                     STR_6:
  1120   000280  54                 	db	84	;'T'
  1121   000281  72                 	db	114	;'r'
  1122   000282  69                 	db	105	;'i'
  1123   000283  61                 	db	97	;'a'
  1124   000284  20                 	db	32
  1125   000285  75                 	db	117	;'u'
  1126   000286  6E                 	db	110	;'n'
  1127   000287  61                 	db	97	;'a'
  1128   000288  20                 	db	32
  1129   000289  6F                 	db	111	;'o'
  1130   00028A  70                 	db	112	;'p'
  1131   00028B  63                 	db	99	;'c'
  1132   00028C  69                 	db	105	;'i'
  1133   00028D  C3                 	db	-61
  1134   00028E  B3                 	db	-77
  1135   00028F  3A                 	db	58	;':'
  1136   000290  0A                 	db	10
  1137   000291  00                 	db	0
  1138   000292                     STR_3:
  1139   000292  2D                 	db	45
  1140   000293  2D                 	db	45
  1141   000294  2D                 	db	45
  1142   000295  2D                 	db	45
  1143   000296  2D                 	db	45
  1144   000297  2D                 	db	45
  1145   000298  2D                 	db	45
  1146   000299  2D                 	db	45
  1147   00029A  2D                 	db	45
  1148   00029B  2D                 	db	45
  1149   00029C  2D                 	db	45
  1150   00029D  2D                 	db	45
  1151   00029E  2D                 	db	45
  1152   00029F  2D                 	db	45
  1153   0002A0  2D                 	db	45
  1154   0002A1  00                 	db	0
  1155   0002A2  4D                 	db	77	;'M'
  1156   0002A3  65                 	db	101	;'e'
  1157   0002A4  6E                 	db	110	;'n'
  1158   0002A5  C3                 	db	-61
  1159   0002A6  BA                 	db	-70
  1160   0002A7  20                 	db	32
  1161   0002A8  70                 	db	112	;'p'
  1162   0002A9  72                 	db	114	;'r'
  1163   0002AA  69                 	db	105	;'i'
  1164   0002AB  6E                 	db	110	;'n'
  1165   0002AC  63                 	db	99	;'c'
  1166   0002AD  69                 	db	105	;'i'
  1167   0002AE  70                 	db	112	;'p'
  1168   0002AF  61                 	db	97	;'a'
  1169   0002B0  6C                 	db	108	;'l'
  1170   0002B1  00                 	db	0
  1171   0002B2  4F                 	db	79	;'O'
  1172   0002B3  70                 	db	112	;'p'
  1173   0002B4  63                 	db	99	;'c'
  1174   0002B5  69                 	db	105	;'i'
  1175   0002B6  C3                 	db	-61
  1176   0002B7  B3                 	db	-77
  1177   0002B8  3A                 	db	58	;':'
  1178   0002B9  20                 	db	32
  1179   0002BA  00                 	db	0
  1180   0002BB                     STR_1:
  1181   0002BB  55                 	db	85	;'U'
  1182   0002BC  49                 	db	73	;'I'
  1183   0002BD  44                 	db	68	;'D'
  1184   0002BE  3A                 	db	58	;':'
  1185   0002BF  20                 	db	32
  1186   0002C0  00                 	db	0
  1187   000292                     STR_5           equ	STR_3
  1188   000290                     STR_2           equ	STR_6+16
  1189   0002C1  00                 	db	0	; dummy byte at the end
  1190   000200                     __smallconst    set	__psmallconst
  1191   000200                     __mediumconst   set	__psmallconst
  1192   000002                     __activetblptr  equ	2
  1193                           
  1194                           ; #config settings
  1195                           
  1196                           	psect	cinit
  1197   000EC2                     __pcinit:
  1198                           	callstack 0
  1199   000EC2                     start_initialization:
  1200                           	callstack 0
  1201   000EC2                     __initialization:
  1202                           	callstack 0
  1203                           
  1204                           ; Clear objects allocated to COMRAM (36 bytes)
  1205   000EC2  EE00  F02E         	lfsr	0,__pbssCOMRAM
  1206   000EC6  0E24               	movlw	36
  1207   000EC8                     clear_0:
  1208   000EC8  6AEE               	clrf	postinc0,c
  1209   000ECA  06E8               	decf	wreg,f,c
  1210   000ECC  E1FD               	bnz	clear_0
  1211   000ECE                     end_of_initialization:
  1212                           	callstack 0
  1213   000ECE                     __end_of__initialization:
  1214                           	callstack 0
  1215   000ECE  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1216   000ED0  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1217   000ED2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1218   000ED4  6EF8               	movwf	tblptru,c
  1219   000ED6  0100               	movlb	0
  1220   000ED8  EF1D  F007         	goto	_main	;jump to C main() function
  1221                           
  1222                           	psect	bssCOMRAM
  1223   00002E                     __pbssCOMRAM:
  1224                           	callstack 0
  1225   00002E                     _Timers:
  1226                           	callstack 0
  1227   00002E                     	ds	20
  1228   000042                     _Tics:
  1229                           	callstack 0
  1230   000042                     	ds	4
  1231   000046                     motorTerminal@state:
  1232                           	callstack 0
  1233   000046                     	ds	1
  1234   000047                     _hashtag_pressed:
  1235                           	callstack 0
  1236   000047                     	ds	1
  1237   000048                     _ColumnAct:
  1238                           	callstack 0
  1239   000048                     	ds	1
  1240   000049                     _RowAct:
  1241                           	callstack 0
  1242   000049                     	ds	1
  1243   00004A                     _Columns:
  1244                           	callstack 0
  1245   00004A                     	ds	1
  1246   00004B                     _Rows:
  1247                           	callstack 0
  1248   00004B                     	ds	1
  1249   00004C                     motorTeclado@state:
  1250                           	callstack 0
  1251   00004C                     	ds	1
  1252   00004D                     _tecla:
  1253                           	callstack 0
  1254   00004D                     	ds	1
  1255   00004E                     _Columnas:
  1256                           	callstack 0
  1257   00004E                     	ds	1
  1258   00004F                     _Filas:
  1259                           	callstack 0
  1260   00004F                     	ds	1
  1261   000050                     _Timer:
  1262                           	callstack 0
  1263   000050                     	ds	1
  1264   000051                     _timer:
  1265                           	callstack 0
  1266   000051                     	ds	1
  1267                           
  1268                           	psect	cstackCOMRAM
  1269   000001                     __pcstackCOMRAM:
  1270                           	callstack 0
  1271   000001                     ??_LowRSI:
  1272                           
  1273                           ; 1 bytes @ 0x0
  1274   000001                     	ds	1
  1275   000002                     ?_Terminal_TXAvailable:
  1276                           	callstack 0
  1277   000002                     ?_TI_GetTics:
  1278                           	callstack 0
  1279   000002                     TI_Init@counter:
  1280                           	callstack 0
  1281   000002                     TI_NewTimer@TimerHandle:
  1282                           	callstack 0
  1283   000002                     TI_ResetTics@TimerHandle:
  1284                           	callstack 0
  1285   000002                     Terminal_SendChar@c:
  1286                           	callstack 0
  1287   000002                     ??_GetTecla:
  1288   000002                     ??_delay_us:
  1289   000002                     ??_MFRC522_Rd:
  1290   000002                     
  1291                           ; 1 bytes @ 0x1
  1292   000002                     	ds	1
  1293   000003                     MFRC522_Rd@Address:
  1294                           	callstack 0
  1295   000003                     
  1296                           ; 1 bytes @ 0x2
  1297   000003                     	ds	1
  1298   000004                     TI_NewTimer@Comptador:
  1299                           	callstack 0
  1300   000004                     MFRC522_Rd@ucAddr:
  1301                           	callstack 0
  1302   000004                     GetTecla@keymap:
  1303                           	callstack 0
  1304   000004                     ??_Terminal_TXAvailable:
  1305                           
  1306                           ; 1 bytes @ 0x3
  1307   000004                     	ds	1
  1308   000005                     delay_us@howMany:
  1309                           	callstack 0
  1310   000005                     MFRC522_Rd@ucResult:
  1311                           	callstack 0
  1312   000005                     Terminal_SendString@str:
  1313                           	callstack 0
  1314   000005                     
  1315                           ; 1 bytes @ 0x4
  1316   000005                     	ds	1
  1317   000006                     delay_us@x:
  1318                           	callstack 0
  1319   000006                     MFRC522_Rd@i:
  1320                           	callstack 0
  1321   000006                     ??_TI_GetTics:
  1322                           
  1323                           ; 1 bytes @ 0x5
  1324   000006                     	ds	1
  1325   000007                     MFRC522_Wr@value:
  1326                           	callstack 0
  1327   000007                     displayUID@uid:
  1328                           	callstack 0
  1329   000007                     
  1330                           ; 1 bytes @ 0x6
  1331   000007                     	ds	1
  1332   000008                     ??_displayUID:
  1333   000008                     ??_MFRC522_Wr:
  1334                           
  1335                           ; 1 bytes @ 0x7
  1336   000008                     	ds	1
  1337   000009                     MFRC522_Wr@Address:
  1338                           	callstack 0
  1339   000009                     displayUID@hexString:
  1340                           	callstack 0
  1341                           
  1342                           ; 11 bytes @ 0x8
  1343   000009                     	ds	1
  1344   00000A                     MFRC522_Wr@ucAddr:
  1345                           	callstack 0
  1346   00000A                     TI_GetTics@CopiaTicsActual:
  1347                           	callstack 0
  1348                           
  1349                           ; 4 bytes @ 0x9
  1350   00000A                     	ds	1
  1351   00000B                     MFRC522_Wr@i:
  1352                           	callstack 0
  1353                           
  1354                           ; 1 bytes @ 0xA
  1355   00000B                     	ds	1
  1356   00000C                     MFRC522_Clear_Bit@mask:
  1357                           	callstack 0
  1358   00000C                     MFRC522_Set_Bit@mask:
  1359                           	callstack 0
  1360   00000C                     
  1361                           ; 1 bytes @ 0xB
  1362   00000C                     	ds	1
  1363   00000D                     MFRC522_Set_Bit@addr:
  1364                           	callstack 0
  1365   00000D                     ??_MFRC522_Clear_Bit:
  1366   00000D                     
  1367                           ; 1 bytes @ 0xC
  1368   00000D                     	ds	1
  1369   00000E                     TI_GetTics@TimerHandle:
  1370                           	callstack 0
  1371   00000E                     MFRC522_Clear_Bit@addr:
  1372                           	callstack 0
  1373   00000E                     
  1374                           ; 1 bytes @ 0xD
  1375   00000E                     	ds	1
  1376   00000F                     MFRC522_ToCard@sendData:
  1377                           	callstack 0
  1378   00000F                     MFRC522_CRC@dataIn:
  1379                           	callstack 0
  1380   00000F                     
  1381                           ; 1 bytes @ 0xE
  1382   00000F                     	ds	1
  1383   000010                     GetTecla@columna:
  1384                           	callstack 0
  1385   000010                     MFRC522_ToCard@sendLen:
  1386                           	callstack 0
  1387   000010                     MFRC522_CRC@length:
  1388                           	callstack 0
  1389                           
  1390                           ; 1 bytes @ 0xF
  1391   000010                     	ds	1
  1392   000011                     GetTecla@fila:
  1393                           	callstack 0
  1394   000011                     MFRC522_ToCard@backData:
  1395                           	callstack 0
  1396   000011                     MFRC522_CRC@dataOut:
  1397                           	callstack 0
  1398                           
  1399                           ; 1 bytes @ 0x10
  1400   000011                     	ds	1
  1401   000012                     MFRC522_ToCard@backLen:
  1402                           	callstack 0
  1403   000012                     MFRC522_CRC@n:
  1404                           	callstack 0
  1405   000012                     ??_motorTeclado:
  1406   000012                     
  1407                           ; 1 bytes @ 0x11
  1408   000012                     	ds	1
  1409   000013                     MFRC522_CRC@i:
  1410                           	callstack 0
  1411   000013                     ??_MFRC522_ToCard:
  1412                           
  1413                           ; 1 bytes @ 0x12
  1414   000013                     	ds	1
  1415   000014                     _displayUID$841:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x13
  1419   000014                     	ds	2
  1420   000016                     _displayUID$842:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x15
  1424   000016                     	ds	1
  1425   000017                     MFRC522_ToCard@waitIRq:
  1426                           	callstack 0
  1427                           
  1428                           ; 1 bytes @ 0x16
  1429   000017                     	ds	1
  1430   000018                     MFRC522_ToCard@_status:
  1431                           	callstack 0
  1432   000018                     displayUID@i:
  1433                           	callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x17
  1436   000018                     	ds	1
  1437   000019                     MFRC522_ToCard@lastBits:
  1438                           	callstack 0
  1439                           
  1440                           ; 1 bytes @ 0x18
  1441   000019                     	ds	1
  1442   00001A                     MFRC522_ToCard@irqEn:
  1443                           	callstack 0
  1444   00001A                     displayUID@nibble:
  1445                           	callstack 0
  1446                           
  1447                           ; 1 bytes @ 0x19
  1448   00001A                     	ds	1
  1449   00001B                     MFRC522_ToCard@command:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x1A
  1453   00001B                     	ds	1
  1454   00001C                     MFRC522_ToCard@i:
  1455                           	callstack 0
  1456                           
  1457                           ; 1 bytes @ 0x1B
  1458   00001C                     	ds	1
  1459   00001D                     MFRC522_ToCard@n:
  1460                           	callstack 0
  1461                           
  1462                           ; 1 bytes @ 0x1C
  1463   00001D                     	ds	1
  1464   00001E                     MFRC522_Request@TagType:
  1465                           	callstack 0
  1466   00001E                     MFRC522_AntiColl@serNum:
  1467                           	callstack 0
  1468   00001E                     MFRC522_Halt@buff:
  1469                           	callstack 0
  1470   00001E                     
  1471                           ; 1 bytes @ 0x1D
  1472   00001E                     	ds	1
  1473   00001F                     MFRC522_Request@reqMode:
  1474                           	callstack 0
  1475   00001F                     
  1476                           ; 1 bytes @ 0x1E
  1477   00001F                     	ds	1
  1478   000020                     MFRC522_Request@_status:
  1479                           	callstack 0
  1480   000020                     MFRC522_AntiColl@serNumCheck:
  1481                           	callstack 0
  1482                           
  1483                           ; 1 bytes @ 0x1F
  1484   000020                     	ds	1
  1485   000021                     MFRC522_Request@backBits:
  1486                           	callstack 0
  1487   000021                     MFRC522_AntiColl@unLen:
  1488                           	callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x20
  1491   000021                     	ds	1
  1492   000022                     MFRC522_Halt@unLen:
  1493                           	callstack 0
  1494                           
  1495                           ; 2 bytes @ 0x21
  1496   000022                     	ds	1
  1497   000023                     MFRC522_AntiColl@_status:
  1498                           	callstack 0
  1499   000023                     MFRC522_isCard@TagType:
  1500                           	callstack 0
  1501                           
  1502                           ; 1 bytes @ 0x22
  1503   000023                     	ds	1
  1504   000024                     MFRC522_AntiColl@i:
  1505                           	callstack 0
  1506   000024                     
  1507                           ; 1 bytes @ 0x23
  1508   000024                     	ds	1
  1509   000025                     MFRC522_ReadCardSerial@str:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0x24
  1513   000025                     	ds	1
  1514   000026                     MFRC522_ReadCardSerial@_status:
  1515                           	callstack 0
  1516   000026                     
  1517                           ; 1 bytes @ 0x25
  1518   000026                     	ds	1
  1519   000027                     ReadRFID_NoCooperatiu@UID:
  1520                           	callstack 0
  1521   000027                     
  1522                           ; 1 bytes @ 0x26
  1523   000027                     	ds	6
  1524   00002D                     ReadRFID_NoCooperatiu@TagType:
  1525                           	callstack 0
  1526                           
  1527                           ; 1 bytes @ 0x2C
  1528   00002D                     	ds	1
  1529   00002E                     
  1530                           ; 1 bytes @ 0x2D
  1531 ;;
  1532 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1533 ;;
  1534 ;; *************** function _main *****************
  1535 ;; Defined at:
  1536 ;;		line 36 in file "main.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1
  1550 ;;      Params:         0       0       0
  1551 ;;      Locals:         0       0       0
  1552 ;;      Temps:          0       0       0
  1553 ;;      Totals:         0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels required when called: 10
  1556 ;; This function calls:
  1557 ;;		_InitPorts
  1558 ;;		_ReadRFID_NoCooperatiu
  1559 ;;		_TI_Init
  1560 ;;		_Terminal_Init
  1561 ;;		_initRFID
  1562 ;;		_initTeclado
  1563 ;;		_motorTeclado
  1564 ;; This function is called by:
  1565 ;;		Startup code after reset
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text0
  1570   000E3A                     __ptext0:
  1571                           	callstack 0
  1572   000E3A                     _main:
  1573                           	callstack 21
  1574   000E3A                     
  1575                           ;main.c: 37: 
  1576   000E3A  EC87  F007         	call	_InitPorts	;wreg free
  1577   000E3E                     
  1578                           ;main.c: 38:  TRISA |= 0x0F;
  1579   000E3E  ECD8  F006         	call	_TI_Init	;wreg free
  1580   000E42                     
  1581                           ;main.c: 39: 
  1582   000E42  ECB0  F007         	call	_initTeclado	;wreg free
  1583   000E46                     
  1584                           ;main.c: 40:  INTCON2bits.RBPU = 0;
  1585   000E46  ECCA  F007         	call	_initRFID	;wreg free
  1586   000E4A                     
  1587                           ;main.c: 41: 
  1588   000E4A  ECA7  F007         	call	_Terminal_Init	;wreg free
  1589   000E4E                     
  1590                           ;main.c: 44:  LATB |= 0x00;
  1591   000E4E  8EF2               	bsf	242,7,c	;volatile
  1592   000E50                     
  1593                           ;main.c: 45: 
  1594   000E50  8CF2               	bsf	242,6,c	;volatile
  1595   000E52                     l2552:
  1596                           
  1597                           ;main.c: 48:  LATD = 0x00;
  1598   000E52  EC7B  F002         	call	_motorTeclado	;wreg free
  1599   000E56                     
  1600                           ;main.c: 49: }
  1601   000E56  EC9E  F006         	call	_ReadRFID_NoCooperatiu	;wreg free
  1602   000E5A  EF29  F007         	goto	l2552
  1603   000E5E  EF13  F000         	goto	start
  1604   000E62                     __end_of_main:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _motorTeclado *****************
  1608 ;; Defined at:
  1609 ;;		line 22 in file "TAD_TECLADO.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1
  1623 ;;      Params:         0       0       0
  1624 ;;      Locals:         0       0       0
  1625 ;;      Temps:          1       0       0
  1626 ;;      Totals:         1       0       0
  1627 ;;Total ram usage:        1 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 4
  1630 ;; This function calls:
  1631 ;;		_GetTecla
  1632 ;;		_ReadFilas
  1633 ;;		_TI_GetTics
  1634 ;;		_TI_ResetTics
  1635 ;;		_showTecla
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text1
  1642   0004F6                     __ptext1:
  1643                           	callstack 0
  1644   0004F6                     _motorTeclado:
  1645                           	callstack 26
  1646   0004F6                     
  1647                           ;TAD_TECLADO.c: 23:  static char state = 0;;TAD_TECLADO.c: 24:  Filas = ReadFilas();
  1648   0004F6  ECD6  F007         	call	_ReadFilas	;wreg free
  1649   0004FA  6E4F               	movwf	_Filas^0,c
  1650                           
  1651                           ;TAD_TECLADO.c: 25:  switch(state) {
  1652   0004FC  EF6A  F003         	goto	l2486
  1653   000500                     l2396:
  1654                           
  1655                           ;TAD_TECLADO.c: 27:    if (Filas == 0x0) {
  1656   000500  504F               	movf	_Filas^0,w,c
  1657   000502  A4D8               	btfss	status,2,c
  1658   000504  EF86  F002         	goto	u1661
  1659   000508  EF88  F002         	goto	u1660
  1660   00050C                     u1661:
  1661   00050C  EF90  F002         	goto	l2402
  1662   000510                     u1660:
  1663   000510                     
  1664                           ;TAD_TECLADO.c: 28:     Columnas = (0x01);
  1665   000510  0E01               	movlw	1
  1666   000512  6E4E               	movwf	_Columnas^0,c
  1667   000514                     
  1668                           ;TAD_TECLADO.c: 29:     LATB = Columnas;
  1669   000514  C04E  FF8A         	movff	_Columnas,3978	;volatile
  1670                           
  1671                           ;TAD_TECLADO.c: 30:     state = 1;
  1672   000518  0E01               	movlw	1
  1673   00051A  6E4C               	movwf	motorTeclado@state^0,c
  1674                           
  1675                           ;TAD_TECLADO.c: 31:    }
  1676   00051C  EF85  F003         	goto	l2488
  1677   000520                     l2402:
  1678   000520  504F               	movf	_Filas^0,w,c
  1679   000522  B4D8               	btfsc	status,2,c
  1680   000524  EF96  F002         	goto	u1671
  1681   000528  EF98  F002         	goto	u1670
  1682   00052C                     u1671:
  1683   00052C  EF85  F003         	goto	l2488
  1684   000530                     u1670:
  1685   000530                     
  1686                           ;TAD_TECLADO.c: 33:     TI_ResetTics(timer);
  1687   000530  5051               	movf	_timer^0,w,c
  1688   000532  EC31  F007         	call	_TI_ResetTics
  1689   000536                     l2406:
  1690                           
  1691                           ;TAD_TECLADO.c: 34:     state = 3;
  1692   000536  0E03               	movlw	3
  1693   000538  6E4C               	movwf	motorTeclado@state^0,c
  1694   00053A  EF85  F003         	goto	l2488
  1695   00053E                     l2408:
  1696                           
  1697                           ;TAD_TECLADO.c: 38:    if (Filas == 0x0) {
  1698   00053E  504F               	movf	_Filas^0,w,c
  1699   000540  A4D8               	btfss	status,2,c
  1700   000542  EFA5  F002         	goto	u1681
  1701   000546  EFA7  F002         	goto	u1680
  1702   00054A                     u1681:
  1703   00054A  EFAF  F002         	goto	l2414
  1704   00054E                     u1680:
  1705   00054E                     
  1706                           ;TAD_TECLADO.c: 39:     Columnas = (0x02);
  1707   00054E  0E02               	movlw	2
  1708   000550  6E4E               	movwf	_Columnas^0,c
  1709   000552                     
  1710                           ;TAD_TECLADO.c: 40:     LATB = Columnas;
  1711   000552  C04E  FF8A         	movff	_Columnas,3978	;volatile
  1712                           
  1713                           ;TAD_TECLADO.c: 41:     state = 2;
  1714   000556  0E02               	movlw	2
  1715   000558  6E4C               	movwf	motorTeclado@state^0,c
  1716                           
  1717                           ;TAD_TECLADO.c: 42:    }
  1718   00055A  EF85  F003         	goto	l2488
  1719   00055E                     l2414:
  1720   00055E  504F               	movf	_Filas^0,w,c
  1721   000560  B4D8               	btfsc	status,2,c
  1722   000562  EFB5  F002         	goto	u1691
  1723   000566  EFB7  F002         	goto	u1690
  1724   00056A                     u1691:
  1725   00056A  EF85  F003         	goto	l2488
  1726   00056E                     u1690:
  1727   00056E                     
  1728                           ;TAD_TECLADO.c: 44:     TI_ResetTics(timer);
  1729   00056E  5051               	movf	_timer^0,w,c
  1730   000570  EC31  F007         	call	_TI_ResetTics
  1731   000574  EF9B  F002         	goto	l2406
  1732   000578                     l2420:
  1733                           
  1734                           ;TAD_TECLADO.c: 49:    if (Filas != 0x0) {
  1735   000578  504F               	movf	_Filas^0,w,c
  1736   00057A  B4D8               	btfsc	status,2,c
  1737   00057C  EFC2  F002         	goto	u1701
  1738   000580  EFC4  F002         	goto	u1700
  1739   000584                     u1701:
  1740   000584  EFC9  F002         	goto	l2426
  1741   000588                     u1700:
  1742   000588                     
  1743                           ;TAD_TECLADO.c: 50:     TI_ResetTics(timer);
  1744   000588  5051               	movf	_timer^0,w,c
  1745   00058A  EC31  F007         	call	_TI_ResetTics
  1746   00058E  EF9B  F002         	goto	l2406
  1747   000592                     l2426:
  1748   000592  504F               	movf	_Filas^0,w,c
  1749   000594  A4D8               	btfss	status,2,c
  1750   000596  EFCF  F002         	goto	u1711
  1751   00059A  EFD1  F002         	goto	u1710
  1752   00059E                     u1711:
  1753   00059E  EF85  F003         	goto	l2488
  1754   0005A2                     u1710:
  1755   0005A2                     l2428:
  1756                           
  1757                           ;TAD_TECLADO.c: 54:     Columnas = (0x04);
  1758   0005A2  0E04               	movlw	4
  1759   0005A4  6E4E               	movwf	_Columnas^0,c
  1760   0005A6                     
  1761                           ;TAD_TECLADO.c: 55:     LATB = Columnas;
  1762   0005A6  C04E  FF8A         	movff	_Columnas,3978	;volatile
  1763   0005AA                     l2432:
  1764                           
  1765                           ;TAD_TECLADO.c: 56:     state = 0;
  1766   0005AA  6A4C               	clrf	motorTeclado@state^0,c
  1767   0005AC  EF85  F003         	goto	l2488
  1768   0005B0                     l2434:
  1769                           
  1770                           ;TAD_TECLADO.c: 60:    tecla = GetTecla ();
  1771   0005B0  EC0B  F004         	call	_GetTecla	;wreg free
  1772   0005B4  6E4D               	movwf	_tecla^0,c
  1773   0005B6                     
  1774                           ;TAD_TECLADO.c: 61:    if (Filas == 0x0) {
  1775   0005B6  504F               	movf	_Filas^0,w,c
  1776   0005B8  A4D8               	btfss	status,2,c
  1777   0005BA  EFE1  F002         	goto	u1721
  1778   0005BE  EFE3  F002         	goto	u1720
  1779   0005C2                     u1721:
  1780   0005C2  EFE5  F002         	goto	l2444
  1781   0005C6                     u1720:
  1782   0005C6  EFD1  F002         	goto	l2428
  1783   0005CA                     l2444:
  1784   0005CA  504F               	movf	_Filas^0,w,c
  1785   0005CC  B4D8               	btfsc	status,2,c
  1786   0005CE  EFEB  F002         	goto	u1731
  1787   0005D2  EFED  F002         	goto	u1730
  1788   0005D6                     u1731:
  1789   0005D6  EF0E  F003         	goto	l2456
  1790   0005DA                     u1730:
  1791   0005DA  5051               	movf	_timer^0,w,c
  1792   0005DC  EC57  F006         	call	_TI_GetTics
  1793   0005E0  5005               	movf	(?_TI_GetTics+3)^0,w,c
  1794   0005E2  1004               	iorwf	(?_TI_GetTics+2)^0,w,c
  1795   0005E4  1003               	iorwf	(?_TI_GetTics+1)^0,w,c
  1796   0005E6  E109               	bnz	u1740
  1797   0005E8  0E09               	movlw	9
  1798   0005EA  5C02               	subwf	?_TI_GetTics^0,w,c
  1799   0005EC  A0D8               	btfss	status,0,c
  1800   0005EE  EFFB  F002         	goto	u1741
  1801   0005F2  EFFD  F002         	goto	u1740
  1802   0005F6                     u1741:
  1803   0005F6  EF0E  F003         	goto	l2456
  1804   0005FA                     u1740:
  1805   0005FA  0E0B               	movlw	11
  1806   0005FC  184D               	xorwf	_tecla^0,w,c
  1807   0005FE  B4D8               	btfsc	status,2,c
  1808   000600  EF04  F003         	goto	u1751
  1809   000604  EF06  F003         	goto	u1750
  1810   000608                     u1751:
  1811   000608  EF0E  F003         	goto	l2456
  1812   00060C                     u1750:
  1813   00060C                     
  1814                           ;TAD_TECLADO.c: 67:     LATD = tecla;
  1815   00060C  C04D  FF8C         	movff	_tecla,3980	;volatile
  1816   000610                     
  1817                           ;TAD_TECLADO.c: 68:     showTecla();
  1818   000610  ECD3  F007         	call	_showTecla	;wreg free
  1819   000614                     l2454:
  1820                           
  1821                           ;TAD_TECLADO.c: 69:     state = 5;
  1822   000614  0E05               	movlw	5
  1823   000616  6E4C               	movwf	motorTeclado@state^0,c
  1824                           
  1825                           ;TAD_TECLADO.c: 70:    }
  1826   000618  EF85  F003         	goto	l2488
  1827   00061C                     l2456:
  1828   00061C  504F               	movf	_Filas^0,w,c
  1829   00061E  B4D8               	btfsc	status,2,c
  1830   000620  EF14  F003         	goto	u1761
  1831   000624  EF16  F003         	goto	u1760
  1832   000628                     u1761:
  1833   000628  EF85  F003         	goto	l2488
  1834   00062C                     u1760:
  1835   00062C  5051               	movf	_timer^0,w,c
  1836   00062E  EC57  F006         	call	_TI_GetTics
  1837   000632  5005               	movf	(?_TI_GetTics+3)^0,w,c
  1838   000634  1004               	iorwf	(?_TI_GetTics+2)^0,w,c
  1839   000636  1003               	iorwf	(?_TI_GetTics+1)^0,w,c
  1840   000638  E109               	bnz	u1770
  1841   00063A  0E09               	movlw	9
  1842   00063C  5C02               	subwf	?_TI_GetTics^0,w,c
  1843   00063E  A0D8               	btfss	status,0,c
  1844   000640  EF24  F003         	goto	u1771
  1845   000644  EF26  F003         	goto	u1770
  1846   000648                     u1771:
  1847   000648  EF85  F003         	goto	l2488
  1848   00064C                     u1770:
  1849   00064C  0E0B               	movlw	11
  1850   00064E  184D               	xorwf	_tecla^0,w,c
  1851   000650  A4D8               	btfss	status,2,c
  1852   000652  EF2D  F003         	goto	u1781
  1853   000656  EF2F  F003         	goto	u1780
  1854   00065A                     u1781:
  1855   00065A  EF85  F003         	goto	l2488
  1856   00065E                     u1780:
  1857   00065E                     
  1858                           ;TAD_TECLADO.c: 72:     TI_ResetTics(timer);
  1859   00065E  5051               	movf	_timer^0,w,c
  1860   000660  EC31  F007         	call	_TI_ResetTics
  1861   000664                     
  1862                           ;TAD_TECLADO.c: 73:     state = 4;
  1863   000664  0E04               	movlw	4
  1864   000666  6E4C               	movwf	motorTeclado@state^0,c
  1865   000668  EF85  F003         	goto	l2488
  1866   00066C                     l2466:
  1867                           
  1868                           ;TAD_TECLADO.c: 77:    if (Filas == 0x0) {
  1869   00066C  504F               	movf	_Filas^0,w,c
  1870   00066E  A4D8               	btfss	status,2,c
  1871   000670  EF3C  F003         	goto	u1791
  1872   000674  EF3E  F003         	goto	u1790
  1873   000678                     u1791:
  1874   000678  EF40  F003         	goto	l2470
  1875   00067C                     u1790:
  1876   00067C  EFD5  F002         	goto	l2432
  1877   000680                     l2470:
  1878   000680  504F               	movf	_Filas^0,w,c
  1879   000682  B4D8               	btfsc	status,2,c
  1880   000684  EF46  F003         	goto	u1801
  1881   000688  EF48  F003         	goto	u1800
  1882   00068C                     u1801:
  1883   00068C  EF85  F003         	goto	l2488
  1884   000690                     u1800:
  1885   000690  5051               	movf	_timer^0,w,c
  1886   000692  EC57  F006         	call	_TI_GetTics
  1887   000696  5005               	movf	(?_TI_GetTics+3)^0,w,c
  1888   000698  1004               	iorwf	(?_TI_GetTics+2)^0,w,c
  1889   00069A  E10B               	bnz	u1810
  1890   00069C  0EDD               	movlw	221
  1891   00069E  5C02               	subwf	?_TI_GetTics^0,w,c
  1892   0006A0  0E05               	movlw	5
  1893   0006A2  5803               	subwfb	(?_TI_GetTics+1)^0,w,c
  1894   0006A4  A0D8               	btfss	status,0,c
  1895   0006A6  EF57  F003         	goto	u1811
  1896   0006AA  EF59  F003         	goto	u1810
  1897   0006AE                     u1811:
  1898   0006AE  EF85  F003         	goto	l2488
  1899   0006B2                     u1810:
  1900   0006B2  EF0A  F003         	goto	l2454
  1901   0006B6                     l2476:
  1902                           
  1903                           ;TAD_TECLADO.c: 86:    if (Filas == 0x0) {
  1904   0006B6  504F               	movf	_Filas^0,w,c
  1905   0006B8  A4D8               	btfss	status,2,c
  1906   0006BA  EF61  F003         	goto	u1821
  1907   0006BE  EF63  F003         	goto	u1820
  1908   0006C2                     u1821:
  1909   0006C2  EF85  F003         	goto	l2488
  1910   0006C6                     u1820:
  1911   0006C6                     
  1912                           ;TAD_TECLADO.c: 87:     state = 0;
  1913   0006C6  6A4C               	clrf	motorTeclado@state^0,c
  1914   0006C8                     
  1915                           ;TAD_TECLADO.c: 88:     Columnas = (0x04);
  1916   0006C8  0E04               	movlw	4
  1917   0006CA  6E4E               	movwf	_Columnas^0,c
  1918   0006CC                     
  1919                           ;TAD_TECLADO.c: 89:     LATB = Columnas;
  1920   0006CC  C04E  FF8A         	movff	_Columnas,3978	;volatile
  1921   0006D0  EF85  F003         	goto	l2488
  1922   0006D4                     l2486:
  1923   0006D4  504C               	movf	motorTeclado@state^0,w,c
  1924                           
  1925                           ; Switch size 1, requested type "simple"
  1926                           ; Number of cases is 6, Range of values is 0 to 5
  1927                           ; switch strategies available:
  1928                           ; Name         Instructions Cycles
  1929                           ; simple_byte           19    10 (average)
  1930                           ;	Chosen strategy is simple_byte
  1931   0006D6  0A00               	xorlw	0	; case 0
  1932   0006D8  B4D8               	btfsc	status,2,c
  1933   0006DA  EF80  F002         	goto	l2396
  1934   0006DE  0A01               	xorlw	1	; case 1
  1935   0006E0  B4D8               	btfsc	status,2,c
  1936   0006E2  EF9F  F002         	goto	l2408
  1937   0006E6  0A03               	xorlw	3	; case 2
  1938   0006E8  B4D8               	btfsc	status,2,c
  1939   0006EA  EFBC  F002         	goto	l2420
  1940   0006EE  0A01               	xorlw	1	; case 3
  1941   0006F0  B4D8               	btfsc	status,2,c
  1942   0006F2  EFD8  F002         	goto	l2434
  1943   0006F6  0A07               	xorlw	7	; case 4
  1944   0006F8  B4D8               	btfsc	status,2,c
  1945   0006FA  EF36  F003         	goto	l2466
  1946   0006FE  0A01               	xorlw	1	; case 5
  1947   000700  B4D8               	btfsc	status,2,c
  1948   000702  EF5B  F003         	goto	l2476
  1949   000706  EF85  F003         	goto	l2488
  1950   00070A                     l2488:
  1951                           
  1952                           ;TAD_TECLADO.c: 93:  LATD = (LATD & 0x0F) | ((unsigned char)(state << 4));
  1953   00070A  C04C  F012         	movff	motorTeclado@state,??_motorTeclado
  1954   00070E  3A12               	swapf	??_motorTeclado^0,f,c
  1955   000710  0EF0               	movlw	240
  1956   000712  1612               	andwf	??_motorTeclado^0,f,c
  1957   000714  508C               	movf	140,w,c	;volatile
  1958   000716  0B0F               	andlw	15
  1959   000718  1012               	iorwf	??_motorTeclado^0,w,c
  1960   00071A  6E8C               	movwf	140,c	;volatile
  1961   00071C  0012               	return		;funcret
  1962   00071E                     __end_of_motorTeclado:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _showTecla *****************
  1966 ;; Defined at:
  1967 ;;		line 126 in file "TAD_TECLADO.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		None
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1
  1981 ;;      Params:         0       0       0
  1982 ;;      Locals:         0       0       0
  1983 ;;      Temps:          0       0       0
  1984 ;;      Totals:         0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 3
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_motorTeclado
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text2
  1996   000FA6                     __ptext2:
  1997                           	callstack 0
  1998   000FA6                     _showTecla:
  1999                           	callstack 26
  2000   000FA6                     
  2001                           ;TAD_TECLADO.c: 128:     LATD = tecla;
  2002   000FA6  C04D  FF8C         	movff	_tecla,3980	;volatile
  2003   000FAA  0012               	return		;funcret
  2004   000FAC                     __end_of_showTecla:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _TI_ResetTics *****************
  2008 ;; Defined at:
  2009 ;;		line 53 in file "TAD_TIMER.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  TimerHandle     1    wreg     unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  TimerHandle     1    1[COMRAM] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1
  2023 ;;      Params:         0       0       0
  2024 ;;      Locals:         1       0       0
  2025 ;;      Temps:          0       0       0
  2026 ;;      Totals:         1       0       0
  2027 ;;Total ram usage:        1 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 3
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_motorTeclado
  2034 ;;		_Espera
  2035 ;;		_WaitForBusy
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text3
  2040   000E62                     __ptext3:
  2041                           	callstack 0
  2042   000E62                     _TI_ResetTics:
  2043                           	callstack 26
  2044                           
  2045                           ;incstack = 0
  2046                           ;TI_ResetTics@TimerHandle stored from wreg
  2047   000E62  6E02               	movwf	TI_ResetTics@TimerHandle^0,c
  2048   000E64                     
  2049                           ;TAD_TIMER.c: 57:  (INTCONbits.GIE = 0); Timers[TimerHandle].TicsInicials=Tics; (INTCONb
      +                          its.GIE = 1);
  2050   000E64  9EF2               	bcf	242,7,c	;volatile
  2051   000E66  5002               	movf	TI_ResetTics@TimerHandle^0,w,c
  2052   000E68  0D05               	mullw	5
  2053   000E6A  50F3               	movf	243,w,c
  2054   000E6C  0F2E               	addlw	low _Timers
  2055   000E6E  6ED9               	movwf	fsr2l,c
  2056   000E70  6ADA               	clrf	fsr2h,c
  2057   000E72  C042  FFDE         	movff	_Tics,postinc2	;volatile
  2058   000E76  C043  FFDE         	movff	_Tics+1,postinc2	;volatile
  2059   000E7A  C044  FFDE         	movff	_Tics+2,postinc2	;volatile
  2060   000E7E  C045  FFDE         	movff	_Tics+3,postinc2	;volatile
  2061   000E82  8EF2               	bsf	242,7,c	;volatile
  2062   000E84  0012               	return		;funcret
  2063   000E86                     __end_of_TI_ResetTics:
  2064                           	callstack 0
  2065                           
  2066 ;; *************** function _TI_GetTics *****************
  2067 ;; Defined at:
  2068 ;;		line 61 in file "TAD_TIMER.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  TimerHandle     1    wreg     unsigned char 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  TimerHandle     1   13[COMRAM] unsigned char 
  2073 ;;  CopiaTicsAct    4    9[COMRAM] unsigned long 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  4    1[COMRAM] unsigned long 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1
  2083 ;;      Params:         4       0       0
  2084 ;;      Locals:         5       0       0
  2085 ;;      Temps:          4       0       0
  2086 ;;      Totals:        13       0       0
  2087 ;;Total ram usage:       13 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 3
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_motorTeclado
  2094 ;;		_Espera
  2095 ;;		_WaitForBusy
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text4
  2100   000CAE                     __ptext4:
  2101                           	callstack 0
  2102   000CAE                     _TI_GetTics:
  2103                           	callstack 26
  2104                           
  2105                           ;incstack = 0
  2106                           ;TI_GetTics@TimerHandle stored from wreg
  2107   000CAE  6E0E               	movwf	TI_GetTics@TimerHandle^0,c
  2108   000CB0                     
  2109                           ;TAD_TIMER.c: 62:     (INTCONbits.GIE = 0); unsigned long CopiaTicsActual=Tics; (INTCONb
      +                          its.GIE = 1);
  2110   000CB0  9EF2               	bcf	242,7,c	;volatile
  2111   000CB2  C042  F00A         	movff	_Tics,TI_GetTics@CopiaTicsActual	;volatile
  2112   000CB6  C043  F00B         	movff	_Tics+1,TI_GetTics@CopiaTicsActual+1	;volatile
  2113   000CBA  C044  F00C         	movff	_Tics+2,TI_GetTics@CopiaTicsActual+2	;volatile
  2114   000CBE  C045  F00D         	movff	_Tics+3,TI_GetTics@CopiaTicsActual+3	;volatile
  2115   000CC2  8EF2               	bsf	242,7,c	;volatile
  2116   000CC4                     
  2117                           ;TAD_TIMER.c: 63:  return (CopiaTicsActual-(Timers[TimerHandle].TicsInicials));
  2118   000CC4  500E               	movf	TI_GetTics@TimerHandle^0,w,c
  2119   000CC6  0D05               	mullw	5
  2120   000CC8  50F3               	movf	243,w,c
  2121   000CCA  0F2E               	addlw	low _Timers
  2122   000CCC  6ED9               	movwf	fsr2l,c
  2123   000CCE  6ADA               	clrf	fsr2h,c
  2124   000CD0  CFDE F006          	movff	postinc2,??_TI_GetTics
  2125   000CD4  CFDE F007          	movff	postinc2,??_TI_GetTics+1
  2126   000CD8  CFDE F008          	movff	postinc2,??_TI_GetTics+2
  2127   000CDC  CFDE F009          	movff	postinc2,??_TI_GetTics+3
  2128   000CE0  5006               	movf	??_TI_GetTics^0,w,c
  2129   000CE2  5C0A               	subwf	TI_GetTics@CopiaTicsActual^0,w,c
  2130   000CE4  6E02               	movwf	?_TI_GetTics^0,c
  2131   000CE6  5007               	movf	(??_TI_GetTics+1)^0,w,c
  2132   000CE8  580B               	subwfb	(TI_GetTics@CopiaTicsActual+1)^0,w,c
  2133   000CEA  6E03               	movwf	(?_TI_GetTics+1)^0,c
  2134   000CEC  5008               	movf	(??_TI_GetTics+2)^0,w,c
  2135   000CEE  580C               	subwfb	(TI_GetTics@CopiaTicsActual+2)^0,w,c
  2136   000CF0  6E04               	movwf	(?_TI_GetTics+2)^0,c
  2137   000CF2  5009               	movf	(??_TI_GetTics+3)^0,w,c
  2138   000CF4  580D               	subwfb	(TI_GetTics@CopiaTicsActual+3)^0,w,c
  2139   000CF6  6E05               	movwf	(?_TI_GetTics+3)^0,c
  2140   000CF8  0012               	return		;funcret
  2141   000CFA                     __end_of_TI_GetTics:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _ReadFilas *****************
  2145 ;; Defined at:
  2146 ;;		line 7 in file "TAD_TECLADO.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      unsigned char 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1
  2160 ;;      Params:         0       0       0
  2161 ;;      Locals:         0       0       0
  2162 ;;      Temps:          0       0       0
  2163 ;;      Totals:         0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 3
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_motorTeclado
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text5
  2175   000FAC                     __ptext5:
  2176                           	callstack 0
  2177   000FAC                     _ReadFilas:
  2178                           	callstack 26
  2179   000FAC                     
  2180                           ;TAD_TECLADO.c: 8:     return (PORTA & 0x0F);
  2181   000FAC  5080               	movf	128,w,c	;volatile
  2182   000FAE  0B0F               	andlw	15
  2183   000FB0  0012               	return		;funcret
  2184   000FB2                     __end_of_ReadFilas:
  2185                           	callstack 0
  2186                           
  2187 ;; *************** function _GetTecla *****************
  2188 ;; Defined at:
  2189 ;;		line 96 in file "TAD_TECLADO.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  keymap         12    3[COMRAM] const unsigned char [3][
  2194 ;;  fila            1   16[COMRAM] unsigned char 
  2195 ;;  columna         1   15[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      unsigned char 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1
  2205 ;;      Params:         0       0       0
  2206 ;;      Locals:        14       0       0
  2207 ;;      Temps:          2       0       0
  2208 ;;      Totals:        16       0       0
  2209 ;;Total ram usage:       16 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 3
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_motorTeclado
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text6
  2220   000816                     __ptext6:
  2221                           	callstack 0
  2222   000816                     _GetTecla:
  2223                           	callstack 26
  2224   000816                     
  2225                           ;TAD_TECLADO.c: 98:     unsigned char columna = 0;
  2226   000816  6A10               	clrf	GetTecla@columna^0,c
  2227                           
  2228                           ;TAD_TECLADO.c: 100:     switch(Filas) {
  2229   000818  EF20  F004         	goto	l1500
  2230   00081C                     l163:
  2231   00081C  6A11               	clrf	GetTecla@fila^0,c
  2232   00081E  EF3E  F004         	goto	l1512
  2233   000822                     l1488:
  2234   000822  0E01               	movlw	1
  2235   000824  6E11               	movwf	GetTecla@fila^0,c
  2236   000826  EF3E  F004         	goto	l1512
  2237   00082A                     l1490:
  2238   00082A  0E02               	movlw	2
  2239   00082C  6E11               	movwf	GetTecla@fila^0,c
  2240   00082E  EF3E  F004         	goto	l1512
  2241   000832                     l1492:
  2242   000832  0E03               	movlw	3
  2243   000834  6E11               	movwf	GetTecla@fila^0,c
  2244   000836  EF3E  F004         	goto	l1512
  2245   00083A                     l1494:
  2246   00083A  0EFF               	movlw	255
  2247   00083C  EF6C  F004         	goto	l169
  2248   000840                     l1500:
  2249   000840  504F               	movf	_Filas^0,w,c
  2250                           
  2251                           ; Switch size 1, requested type "simple"
  2252                           ; Number of cases is 4, Range of values is 1 to 8
  2253                           ; switch strategies available:
  2254                           ; Name         Instructions Cycles
  2255                           ; simple_byte           13     7 (average)
  2256                           ;	Chosen strategy is simple_byte
  2257   000842  0A01               	xorlw	1	; case 1
  2258   000844  B4D8               	btfsc	status,2,c
  2259   000846  EF0E  F004         	goto	l163
  2260   00084A  0A03               	xorlw	3	; case 2
  2261   00084C  B4D8               	btfsc	status,2,c
  2262   00084E  EF11  F004         	goto	l1488
  2263   000852  0A06               	xorlw	6	; case 4
  2264   000854  B4D8               	btfsc	status,2,c
  2265   000856  EF15  F004         	goto	l1490
  2266   00085A  0A0C               	xorlw	12	; case 8
  2267   00085C  B4D8               	btfsc	status,2,c
  2268   00085E  EF19  F004         	goto	l1492
  2269   000862  EF1D  F004         	goto	l1494
  2270   000866                     l171:
  2271   000866  6A10               	clrf	GetTecla@columna^0,c
  2272   000868  EF58  F004         	goto	l1514
  2273   00086C                     l1502:
  2274   00086C  0E01               	movlw	1
  2275   00086E  6E10               	movwf	GetTecla@columna^0,c
  2276   000870  EF58  F004         	goto	l1514
  2277   000874                     l1504:
  2278   000874  0E02               	movlw	2
  2279   000876  6E10               	movwf	GetTecla@columna^0,c
  2280   000878  EF58  F004         	goto	l1514
  2281   00087C                     l1512:
  2282   00087C  504E               	movf	_Columnas^0,w,c
  2283   00087E  0B07               	andlw	7
  2284   000880  6E02               	movwf	??_GetTecla^0,c
  2285   000882  6A03               	clrf	(??_GetTecla+1)^0,c
  2286                           
  2287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2288                           ; Switch size 1, requested type "simple"
  2289                           ; Number of cases is 1, Range of values is 0 to 0
  2290                           ; switch strategies available:
  2291                           ; Name         Instructions Cycles
  2292                           ; simple_byte            4     3 (average)
  2293                           ;	Chosen strategy is simple_byte
  2294   000884  5003               	movf	(??_GetTecla+1)^0,w,c
  2295   000886  0A00               	xorlw	0	; case 0
  2296   000888  B4D8               	btfsc	status,2,c
  2297   00088A  EF49  F004         	goto	l2730
  2298   00088E  EF1D  F004         	goto	l1494
  2299   000892                     l2730:
  2300                           
  2301                           ; Switch size 1, requested type "simple"
  2302                           ; Number of cases is 3, Range of values is 1 to 4
  2303                           ; switch strategies available:
  2304                           ; Name         Instructions Cycles
  2305                           ; simple_byte           10     6 (average)
  2306                           ;	Chosen strategy is simple_byte
  2307   000892  5002               	movf	??_GetTecla^0,w,c
  2308   000894  0A01               	xorlw	1	; case 1
  2309   000896  B4D8               	btfsc	status,2,c
  2310   000898  EF33  F004         	goto	l171
  2311   00089C  0A03               	xorlw	3	; case 2
  2312   00089E  B4D8               	btfsc	status,2,c
  2313   0008A0  EF36  F004         	goto	l1502
  2314   0008A4  0A06               	xorlw	6	; case 4
  2315   0008A6  B4D8               	btfsc	status,2,c
  2316   0008A8  EF3A  F004         	goto	l1504
  2317   0008AC  EF1D  F004         	goto	l1494
  2318   0008B0                     l1514:
  2319                           
  2320                           ;TAD_TECLADO.c: 116:     const unsigned char keymap[4][3] = {
  2321   0008B0  0E01               	movlw	low GetTecla@F2717
  2322   0008B2  6EF6               	movwf	tblptrl,c
  2323   0008B4                     	if	1	;There is more than 1 active tblptr byte
  2324   0008B4  0E02               	movlw	high GetTecla@F2717
  2325   0008B6  6EF7               	movwf	tblptrh,c
  2326   0008B8                     	endif
  2327   0008B8                     	if	0	;There are less than 3 active tblptr bytes
  2328   0008B8                     	endif
  2329   0008B8  EE20  F004         	lfsr	2,GetTecla@keymap
  2330   0008BC  0E0B               	movlw	11
  2331   0008BE                     u410:
  2332   0008BE  0009               	tblrd		*+
  2333   0008C0  CFF5 FFDE          	movff	tablat,postinc2
  2334   0008C4  06E8               	decf	wreg,f,c
  2335   0008C6  E2FB               	bc	u410
  2336   0008C8                     
  2337                           ;TAD_TECLADO.c: 123:     return keymap[fila][columna];
  2338   0008C8  5011               	movf	GetTecla@fila^0,w,c
  2339   0008CA  0D03               	mullw	3
  2340   0008CC  50F3               	movf	243,w,c
  2341   0008CE  0F04               	addlw	low GetTecla@keymap
  2342   0008D0  2410               	addwf	GetTecla@columna^0,w,c
  2343   0008D2  6ED9               	movwf	fsr2l,c
  2344   0008D4  6ADA               	clrf	fsr2h,c
  2345   0008D6  50DF               	movf	indf2,w,c
  2346   0008D8                     l169:
  2347   0008D8  0012               	return		;funcret
  2348   0008DA                     __end_of_GetTecla:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _initTeclado *****************
  2352 ;; Defined at:
  2353 ;;		line 11 in file "TAD_TECLADO.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1
  2367 ;;      Params:         0       0       0
  2368 ;;      Locals:         0       0       0
  2369 ;;      Temps:          0       0       0
  2370 ;;      Totals:         0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 4
  2374 ;; This function calls:
  2375 ;;		_TI_NewTimer
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text7
  2382   000F60                     __ptext7:
  2383                           	callstack 0
  2384   000F60                     _initTeclado:
  2385                           	callstack 26
  2386   000F60                     
  2387                           ;TAD_TECLADO.c: 12:     Filas = 0x00;
  2388   000F60  6A4F               	clrf	_Filas^0,c
  2389                           
  2390                           ;TAD_TECLADO.c: 13:     Columnas = 0x00;
  2391   000F62  6A4E               	clrf	_Columnas^0,c
  2392                           
  2393                           ;TAD_TECLADO.c: 14:     tecla = 0;
  2394   000F64  6A4D               	clrf	_tecla^0,c
  2395   000F66                     
  2396                           ;TAD_TECLADO.c: 15:     TI_NewTimer(&timer);
  2397   000F66  0E51               	movlw	low _timer
  2398   000F68  6E02               	movwf	TI_NewTimer@TimerHandle^0,c
  2399   000F6A  EC05  F006         	call	_TI_NewTimer	;wreg free
  2400   000F6E  0012               	return		;funcret
  2401   000F70                     __end_of_initTeclado:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _TI_NewTimer *****************
  2405 ;; Defined at:
  2406 ;;		line 43 in file "TAD_TIMER.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  TimerHandle     1    1[COMRAM] PTR unsigned char 
  2409 ;;		 -> Timer(1), timer(1), 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  Comptador       1    3[COMRAM] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      unsigned char 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1
  2421 ;;      Params:         1       0       0
  2422 ;;      Locals:         1       0       0
  2423 ;;      Temps:          1       0       0
  2424 ;;      Totals:         3       0       0
  2425 ;;Total ram usage:        3 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 3
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_initTeclado
  2432 ;;		_LcInit
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text8
  2437   000C0A                     __ptext8:
  2438                           	callstack 0
  2439   000C0A                     _TI_NewTimer:
  2440                           	callstack 26
  2441   000C0A                     
  2442                           ;TAD_TIMER.c: 44:  unsigned char Comptador=0;
  2443   000C0A  6A04               	clrf	TI_NewTimer@Comptador^0,c
  2444                           
  2445                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  2446   000C0C  EF14  F006         	goto	l2280
  2447   000C10                     l2276:
  2448                           
  2449                           ;TAD_TIMER.c: 46:   if (++Comptador == 4) return (0);
  2450   000C10  2A04               	incf	TI_NewTimer@Comptador^0,f,c
  2451   000C12  0E04               	movlw	4
  2452   000C14  1804               	xorwf	TI_NewTimer@Comptador^0,w,c
  2453   000C16  A4D8               	btfss	status,2,c
  2454   000C18  EF10  F006         	goto	u1531
  2455   000C1C  EF12  F006         	goto	u1530
  2456   000C20                     u1531:
  2457   000C20  EF14  F006         	goto	l2280
  2458   000C24                     u1530:
  2459   000C24  EF2F  F006         	goto	l85
  2460   000C28                     l2280:
  2461                           
  2462                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  2463   000C28  5004               	movf	TI_NewTimer@Comptador^0,w,c
  2464   000C2A  0D05               	mullw	5
  2465   000C2C  50F3               	movf	243,w,c
  2466   000C2E  0F32               	addlw	low (_Timers+4)
  2467   000C30  6ED9               	movwf	fsr2l,c
  2468   000C32  6ADA               	clrf	fsr2h,c
  2469   000C34  04DE               	decf	postinc2,w,c
  2470   000C36  B4D8               	btfsc	status,2,c
  2471   000C38  EF20  F006         	goto	u1541
  2472   000C3C  EF22  F006         	goto	u1540
  2473   000C40                     u1541:
  2474   000C40  EF08  F006         	goto	l2276
  2475   000C44                     u1540:
  2476   000C44                     
  2477                           ;TAD_TIMER.c: 48:  Timers[Comptador].Busy=1;
  2478   000C44  5004               	movf	TI_NewTimer@Comptador^0,w,c
  2479   000C46  0D05               	mullw	5
  2480   000C48  50F3               	movf	243,w,c
  2481   000C4A  0F32               	addlw	low (_Timers+4)
  2482   000C4C  6ED9               	movwf	fsr2l,c
  2483   000C4E  6ADA               	clrf	fsr2h,c
  2484   000C50  0E01               	movlw	1
  2485   000C52  6EDF               	movwf	indf2,c
  2486   000C54                     
  2487                           ;TAD_TIMER.c: 49:  *TimerHandle=Comptador;
  2488   000C54  5002               	movf	TI_NewTimer@TimerHandle^0,w,c
  2489   000C56  6ED9               	movwf	fsr2l,c
  2490   000C58  6ADA               	clrf	fsr2h,c
  2491   000C5A  C004  FFDF         	movff	TI_NewTimer@Comptador,indf2
  2492   000C5E                     l85:
  2493   000C5E  0012               	return		;funcret
  2494   000C60                     __end_of_TI_NewTimer:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _initRFID *****************
  2498 ;; Defined at:
  2499 ;;		line 295 in file "TAD_RFID.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1
  2513 ;;      Params:         0       0       0
  2514 ;;      Locals:         0       0       0
  2515 ;;      Temps:          0       0       0
  2516 ;;      Totals:         0       0       0
  2517 ;;Total ram usage:        0 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 8
  2520 ;; This function calls:
  2521 ;;		_InitPortDirections
  2522 ;;		_MFRC522_Init
  2523 ;; This function is called by:
  2524 ;;		_main
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text9
  2529   000F94                     __ptext9:
  2530                           	callstack 0
  2531   000F94                     _initRFID:
  2532                           	callstack 22
  2533   000F94                     
  2534                           ;TAD_RFID.c: 296:     InitPortDirections();
  2535   000F94  ECC4  F007         	call	_InitPortDirections	;wreg free
  2536   000F98                     
  2537                           ;TAD_RFID.c: 297:     MFRC522_Init();
  2538   000F98  EC30  F006         	call	_MFRC522_Init	;wreg free
  2539   000F9C  0012               	return		;funcret
  2540   000F9E                     __end_of_initRFID:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _MFRC522_Init *****************
  2544 ;; Defined at:
  2545 ;;		line 115 in file "TAD_RFID.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1
  2559 ;;      Params:         0       0       0
  2560 ;;      Locals:         0       0       0
  2561 ;;      Temps:          0       0       0
  2562 ;;      Totals:         0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 7
  2566 ;; This function calls:
  2567 ;;		_MFRC522_AntennaOff
  2568 ;;		_MFRC522_AntennaOn
  2569 ;;		_MFRC522_Reset
  2570 ;;		_MFRC522_Wr
  2571 ;; This function is called by:
  2572 ;;		_initRFID
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text10
  2577   000C60                     __ptext10:
  2578                           	callstack 0
  2579   000C60                     _MFRC522_Init:
  2580                           	callstack 22
  2581   000C60                     
  2582                           ;TAD_RFID.c: 116:     LATCbits.LATC3 = 1;
  2583   000C60  868B               	bsf	139,3,c	;volatile
  2584                           
  2585                           ;TAD_RFID.c: 117:     LATCbits.LATC4 = 1;
  2586   000C62  888B               	bsf	139,4,c	;volatile
  2587   000C64                     
  2588                           ;TAD_RFID.c: 119:     MFRC522_Reset();
  2589   000C64  EC08  F007         	call	_MFRC522_Reset	;wreg free
  2590                           
  2591                           ;TAD_RFID.c: 120:     MFRC522_Wr(0x2A, 0x8D);
  2592   000C68  0E8D               	movlw	141
  2593   000C6A  6E07               	movwf	MFRC522_Wr@value^0,c
  2594   000C6C  0E2A               	movlw	42
  2595   000C6E  EC6D  F004         	call	_MFRC522_Wr
  2596                           
  2597                           ;TAD_RFID.c: 121:     MFRC522_Wr(0x2B, 0x3E);
  2598   000C72  0E3E               	movlw	62
  2599   000C74  6E07               	movwf	MFRC522_Wr@value^0,c
  2600   000C76  0E2B               	movlw	43
  2601   000C78  EC6D  F004         	call	_MFRC522_Wr
  2602                           
  2603                           ;TAD_RFID.c: 122:     MFRC522_Wr(0x2D, 30);
  2604   000C7C  0E1E               	movlw	30
  2605   000C7E  6E07               	movwf	MFRC522_Wr@value^0,c
  2606   000C80  0E2D               	movlw	45
  2607   000C82  EC6D  F004         	call	_MFRC522_Wr
  2608                           
  2609                           ;TAD_RFID.c: 123:     MFRC522_Wr(0x2C, 0);
  2610   000C86  0E00               	movlw	0
  2611   000C88  6E07               	movwf	MFRC522_Wr@value^0,c
  2612   000C8A  0E2C               	movlw	44
  2613   000C8C  EC6D  F004         	call	_MFRC522_Wr
  2614                           
  2615                           ;TAD_RFID.c: 124:     MFRC522_Wr(0x15, 0x40);
  2616   000C90  0E40               	movlw	64
  2617   000C92  6E07               	movwf	MFRC522_Wr@value^0,c
  2618   000C94  0E15               	movlw	21
  2619   000C96  EC6D  F004         	call	_MFRC522_Wr
  2620                           
  2621                           ;TAD_RFID.c: 125:     MFRC522_Wr(0x11, 0x3D);
  2622   000C9A  0E3D               	movlw	61
  2623   000C9C  6E07               	movwf	MFRC522_Wr@value^0,c
  2624   000C9E  0E11               	movlw	17
  2625   000CA0  EC6D  F004         	call	_MFRC522_Wr
  2626                           
  2627                           ;TAD_RFID.c: 127:     MFRC522_AntennaOff();
  2628   000CA4  ECBE  F007         	call	_MFRC522_AntennaOff	;wreg free
  2629                           
  2630                           ;TAD_RFID.c: 128:     MFRC522_AntennaOn();
  2631   000CA8  ECB8  F007         	call	_MFRC522_AntennaOn	;wreg free
  2632   000CAC  0012               	return		;funcret
  2633   000CAE                     __end_of_MFRC522_Init:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function _MFRC522_Reset *****************
  2637 ;; Defined at:
  2638 ;;		line 96 in file "TAD_RFID.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1
  2652 ;;      Params:         0       0       0
  2653 ;;      Locals:         0       0       0
  2654 ;;      Temps:          0       0       0
  2655 ;;      Totals:         0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 5
  2659 ;; This function calls:
  2660 ;;		_MFRC522_Wr
  2661 ;;		_delay_us
  2662 ;; This function is called by:
  2663 ;;		_MFRC522_Init
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text11
  2668   000E10                     __ptext11:
  2669                           	callstack 0
  2670   000E10                     _MFRC522_Reset:
  2671                           	callstack 23
  2672   000E10                     
  2673                           ;TAD_RFID.c: 97:     LATCbits.LATC4 = 1;
  2674   000E10  888B               	bsf	139,4,c	;volatile
  2675   000E12                     
  2676                           ;TAD_RFID.c: 98:     delay_us (1);
  2677   000E12  0E01               	movlw	1
  2678   000E14  ECBD  F006         	call	_delay_us
  2679   000E18                     
  2680                           ;TAD_RFID.c: 99:     LATCbits.LATC4 = 0;
  2681   000E18  988B               	bcf	139,4,c	;volatile
  2682                           
  2683                           ;TAD_RFID.c: 100:     delay_us (1);
  2684   000E1A  0E01               	movlw	1
  2685   000E1C  ECBD  F006         	call	_delay_us
  2686   000E20                     
  2687                           ;TAD_RFID.c: 101:     LATCbits.LATC4 = 1;
  2688   000E20  888B               	bsf	139,4,c	;volatile
  2689                           
  2690                           ;TAD_RFID.c: 102:     delay_us (1);
  2691   000E22  0E01               	movlw	1
  2692   000E24  ECBD  F006         	call	_delay_us
  2693                           
  2694                           ;TAD_RFID.c: 103:     MFRC522_Wr(0x01, 0x0F);
  2695   000E28  0E0F               	movlw	15
  2696   000E2A  6E07               	movwf	MFRC522_Wr@value^0,c
  2697   000E2C  0E01               	movlw	1
  2698   000E2E  EC6D  F004         	call	_MFRC522_Wr
  2699                           
  2700                           ;TAD_RFID.c: 104:     delay_us (1);
  2701   000E32  0E01               	movlw	1
  2702   000E34  ECBD  F006         	call	_delay_us
  2703   000E38  0012               	return		;funcret
  2704   000E3A                     __end_of_MFRC522_Reset:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _MFRC522_AntennaOn *****************
  2708 ;; Defined at:
  2709 ;;		line 107 in file "TAD_RFID.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1
  2723 ;;      Params:         0       0       0
  2724 ;;      Locals:         0       0       0
  2725 ;;      Temps:          0       0       0
  2726 ;;      Totals:         0       0       0
  2727 ;;Total ram usage:        0 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 6
  2730 ;; This function calls:
  2731 ;;		_MFRC522_Set_Bit
  2732 ;; This function is called by:
  2733 ;;		_MFRC522_Init
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text12
  2738   000F70                     __ptext12:
  2739                           	callstack 0
  2740   000F70                     _MFRC522_AntennaOn:
  2741                           	callstack 22
  2742   000F70                     
  2743                           ;TAD_RFID.c: 108:     MFRC522_Set_Bit(0x14, 0x03);
  2744   000F70  0E03               	movlw	3
  2745   000F72  6E0C               	movwf	MFRC522_Set_Bit@mask^0,c
  2746   000F74  0E14               	movlw	20
  2747   000F76  EC9D  F007         	call	_MFRC522_Set_Bit
  2748   000F7A  0012               	return		;funcret
  2749   000F7C                     __end_of_MFRC522_AntennaOn:
  2750                           	callstack 0
  2751                           
  2752 ;; *************** function _MFRC522_AntennaOff *****************
  2753 ;; Defined at:
  2754 ;;		line 111 in file "TAD_RFID.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1
  2768 ;;      Params:         0       0       0
  2769 ;;      Locals:         0       0       0
  2770 ;;      Temps:          0       0       0
  2771 ;;      Totals:         0       0       0
  2772 ;;Total ram usage:        0 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 6
  2775 ;; This function calls:
  2776 ;;		_MFRC522_Clear_Bit
  2777 ;; This function is called by:
  2778 ;;		_MFRC522_Init
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text13
  2783   000F7C                     __ptext13:
  2784                           	callstack 0
  2785   000F7C                     _MFRC522_AntennaOff:
  2786                           	callstack 22
  2787   000F7C                     
  2788                           ;TAD_RFID.c: 112:     MFRC522_Clear_Bit(0x14, 0x03);
  2789   000F7C  0E03               	movlw	3
  2790   000F7E  6E0C               	movwf	MFRC522_Clear_Bit@mask^0,c
  2791   000F80  0E14               	movlw	20
  2792   000F82  EC6E  F007         	call	_MFRC522_Clear_Bit
  2793   000F86  0012               	return		;funcret
  2794   000F88                     __end_of_MFRC522_AntennaOff:
  2795                           	callstack 0
  2796                           
  2797 ;; *************** function _InitPortDirections *****************
  2798 ;; Defined at:
  2799 ;;		line 15 in file "TAD_RFID.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		None
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1
  2813 ;;      Params:         0       0       0
  2814 ;;      Locals:         0       0       0
  2815 ;;      Temps:          0       0       0
  2816 ;;      Totals:         0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 3
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_initRFID
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text14
  2828   000F88                     __ptext14:
  2829                           	callstack 0
  2830   000F88                     _InitPortDirections:
  2831                           	callstack 26
  2832   000F88                     
  2833                           ;TAD_RFID.c: 16:     TRISCbits.TRISC0 = 1;
  2834   000F88  8094               	bsf	148,0,c	;volatile
  2835                           
  2836                           ;TAD_RFID.c: 17:     TRISCbits.TRISC1 = 0;
  2837   000F8A  9294               	bcf	148,1,c	;volatile
  2838                           
  2839                           ;TAD_RFID.c: 18:     TRISCbits.TRISC2 = 0;
  2840   000F8C  9494               	bcf	148,2,c	;volatile
  2841                           
  2842                           ;TAD_RFID.c: 19:     TRISCbits.TRISC3 = 0;
  2843   000F8E  9694               	bcf	148,3,c	;volatile
  2844                           
  2845                           ;TAD_RFID.c: 20:     TRISCbits.TRISC4 = 0;
  2846   000F90  9894               	bcf	148,4,c	;volatile
  2847   000F92  0012               	return		;funcret
  2848   000F94                     __end_of_InitPortDirections:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function _Terminal_Init *****************
  2852 ;; Defined at:
  2853 ;;		line 23 in file "TAD_TERMINAL.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1
  2867 ;;      Params:         0       0       0
  2868 ;;      Locals:         0       0       0
  2869 ;;      Temps:          0       0       0
  2870 ;;      Totals:         0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 3
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text15
  2882   000F4E                     __ptext15:
  2883                           	callstack 0
  2884   000F4E                     _Terminal_Init:
  2885                           	callstack 27
  2886   000F4E                     
  2887                           ;TAD_TERMINAL.c: 24:  TXSTA = 0x24;
  2888   000F4E  0E24               	movlw	36
  2889   000F50  6EAC               	movwf	172,c	;volatile
  2890                           
  2891                           ;TAD_TERMINAL.c: 25:  RCSTA = 0x90;
  2892   000F52  0E90               	movlw	144
  2893   000F54  6EAB               	movwf	171,c	;volatile
  2894                           
  2895                           ;TAD_TERMINAL.c: 26:  SPBRG = 64;
  2896   000F56  0E40               	movlw	64
  2897   000F58  6EAF               	movwf	175,c	;volatile
  2898   000F5A                     
  2899                           ;TAD_TERMINAL.c: 27:  BAUDCON = 0x00;
  2900   000F5A  6AB8               	clrf	184,c	;volatile
  2901   000F5C                     
  2902                           ;TAD_TERMINAL.c: 28:  hashtag_pressed = 0;
  2903   000F5C  6A47               	clrf	_hashtag_pressed^0,c
  2904   000F5E  0012               	return		;funcret
  2905   000F60                     __end_of_Terminal_Init:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _TI_Init *****************
  2909 ;; Defined at:
  2910 ;;		line 32 in file "TAD_TIMER.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  counter         1    1[COMRAM] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1
  2924 ;;      Params:         0       0       0
  2925 ;;      Locals:         1       0       0
  2926 ;;      Temps:          0       0       0
  2927 ;;      Totals:         1       0       0
  2928 ;;Total ram usage:        1 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 3
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text16
  2939   000DB0                     __ptext16:
  2940                           	callstack 0
  2941   000DB0                     _TI_Init:
  2942                           	callstack 27
  2943   000DB0                     
  2944                           ;TAD_TIMER.c: 33:  for (unsigned char counter=0; counter<4; counter++) {
  2945   000DB0  6A02               	clrf	TI_Init@counter^0,c
  2946   000DB2                     l1644:
  2947                           
  2948                           ;TAD_TIMER.c: 34:   Timers[counter].Busy=0;
  2949   000DB2  5002               	movf	TI_Init@counter^0,w,c
  2950   000DB4  0D05               	mullw	5
  2951   000DB6  50F3               	movf	243,w,c
  2952   000DB8  0F32               	addlw	low (_Timers+4)
  2953   000DBA  6ED9               	movwf	fsr2l,c
  2954   000DBC  6ADA               	clrf	fsr2h,c
  2955   000DBE  6ADF               	clrf	indf2,c
  2956   000DC0                     
  2957                           ;TAD_TIMER.c: 35:  }
  2958   000DC0  2A02               	incf	TI_Init@counter^0,f,c
  2959   000DC2  0E03               	movlw	3
  2960   000DC4  6402               	cpfsgt	TI_Init@counter^0,c
  2961   000DC6  EFE7  F006         	goto	u531
  2962   000DCA  EFE9  F006         	goto	u530
  2963   000DCE                     u531:
  2964   000DCE  EFD9  F006         	goto	l1644
  2965   000DD2                     u530:
  2966   000DD2                     
  2967                           ;TAD_TIMER.c: 36:  T0CON=0x82;
  2968   000DD2  0E82               	movlw	130
  2969   000DD4  6ED5               	movwf	213,c	;volatile
  2970                           
  2971                           ;TAD_TIMER.c: 37:     TMR0=64911;
  2972   000DD6  0EFD               	movlw	253
  2973   000DD8  6ED7               	movwf	215,c	;volatile
  2974   000DDA  0E8F               	movlw	143
  2975   000DDC  6ED6               	movwf	214,c	;volatile
  2976   000DDE                     
  2977                           ;TAD_TIMER.c: 38:  INTCONbits.TMR0IF = 0;
  2978   000DDE  94F2               	bcf	242,2,c	;volatile
  2979   000DE0                     
  2980                           ;TAD_TIMER.c: 39:  INTCONbits.TMR0IE = 1;
  2981   000DE0  8AF2               	bsf	242,5,c	;volatile
  2982   000DE2  0012               	return		;funcret
  2983   000DE4                     __end_of_TI_Init:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _ReadRFID_NoCooperatiu *****************
  2987 ;; Defined at:
  2988 ;;		line 300 in file "TAD_RFID.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  UID             6   38[COMRAM] unsigned char [6]
  2993 ;;  TagType         1   44[COMRAM] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1
  3003 ;;      Params:         0       0       0
  3004 ;;      Locals:         7       0       0
  3005 ;;      Temps:          0       0       0
  3006 ;;      Totals:         7       0       0
  3007 ;;Total ram usage:        7 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 9
  3010 ;; This function calls:
  3011 ;;		_MFRC522_Halt
  3012 ;;		_MFRC522_ReadCardSerial
  3013 ;;		_MFRC522_isCard
  3014 ;;		_displayUID
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text17
  3021   000D3C                     __ptext17:
  3022                           	callstack 0
  3023   000D3C                     _ReadRFID_NoCooperatiu:
  3024                           	callstack 21
  3025   000D3C                     
  3026                           ;TAD_RFID.c: 301:     unsigned char UID[6];;TAD_RFID.c: 302:     char TagType;;TAD_RFID.
      +                          c: 304:     if (MFRC522_isCard (&TagType)) {
  3027   000D3C  0E2D               	movlw	low ReadRFID_NoCooperatiu@TagType
  3028   000D3E  6E23               	movwf	MFRC522_isCard@TagType^0,c
  3029   000D40  EC43  F007         	call	_MFRC522_isCard	;wreg free
  3030   000D44  0900               	iorlw	0
  3031   000D46  B4D8               	btfsc	status,2,c
  3032   000D48  EFA8  F006         	goto	u1831
  3033   000D4C  EFAA  F006         	goto	u1830
  3034   000D50                     u1831:
  3035   000D50  EFBC  F006         	goto	l306
  3036   000D54                     u1830:
  3037   000D54                     
  3038                           ;TAD_RFID.c: 307:         if (MFRC522_ReadCardSerial (UID)) {
  3039   000D54  0E27               	movlw	low ReadRFID_NoCooperatiu@UID
  3040   000D56  6E25               	movwf	MFRC522_ReadCardSerial@str^0,c
  3041   000D58  ECF2  F006         	call	_MFRC522_ReadCardSerial	;wreg free
  3042   000D5C  0900               	iorlw	0
  3043   000D5E  B4D8               	btfsc	status,2,c
  3044   000D60  EFB4  F006         	goto	u1841
  3045   000D64  EFB6  F006         	goto	u1840
  3046   000D68                     u1841:
  3047   000D68  EFBA  F006         	goto	l2496
  3048   000D6C                     u1840:
  3049   000D6C                     
  3050                           ;TAD_RFID.c: 309:             displayUID(UID);
  3051   000D6C  0E27               	movlw	low ReadRFID_NoCooperatiu@UID
  3052   000D6E  6E07               	movwf	displayUID@uid^0,c
  3053   000D70  EC8F  F003         	call	_displayUID	;wreg free
  3054   000D74                     l2496:
  3055                           
  3056                           ;TAD_RFID.c: 311:         MFRC522_Halt ();
  3057   000D74  EC7D  F006         	call	_MFRC522_Halt	;wreg free
  3058   000D78                     l306:
  3059   000D78  0012               	return		;funcret
  3060   000D7A                     __end_of_ReadRFID_NoCooperatiu:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function _displayUID *****************
  3064 ;; Defined at:
  3065 ;;		line 7 in file "TAD_TERMINAL.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  uid             1    6[COMRAM] PTR unsigned char 
  3068 ;;		 -> ReadRFID_NoCooperatiu@UID(6), 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  nibble          1   25[COMRAM] unsigned char 
  3071 ;;  i               2   23[COMRAM] int 
  3072 ;;  hexString      11    8[COMRAM] unsigned char [11]
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1
  3082 ;;      Params:         1       0       0
  3083 ;;      Locals:        18       0       0
  3084 ;;      Temps:          1       0       0
  3085 ;;      Totals:        20       0       0
  3086 ;;Total ram usage:       20 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 5
  3089 ;; This function calls:
  3090 ;;		_Terminal_SendString
  3091 ;; This function is called by:
  3092 ;;		_ReadRFID_NoCooperatiu
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text18
  3097   00071E                     __ptext18:
  3098                           	callstack 0
  3099   00071E                     _displayUID:
  3100                           	callstack 24
  3101   00071E                     
  3102                           ;TAD_TERMINAL.c: 8:     char hexString[11];;TAD_TERMINAL.c: 9:     for (int i = 0; i < 5
      +                          ; i++) {
  3103   00071E  0E00               	movlw	0
  3104   000720  6E19               	movwf	(displayUID@i+1)^0,c
  3105   000722  0E00               	movlw	0
  3106   000724  6E18               	movwf	displayUID@i^0,c
  3107   000726                     l2328:
  3108                           
  3109                           ;TAD_TERMINAL.c: 10:         unsigned char nibble = (uid[i] >> 4) & 0x0F;
  3110   000726  5007               	movf	displayUID@uid^0,w,c
  3111   000728  2418               	addwf	displayUID@i^0,w,c
  3112   00072A  6ED9               	movwf	fsr2l,c
  3113   00072C  6ADA               	clrf	fsr2h,c
  3114   00072E  50DF               	movf	indf2,w,c
  3115   000730  6E08               	movwf	??_displayUID^0,c
  3116   000732  3808               	swapf	??_displayUID^0,w,c
  3117   000734  0B0F               	andlw	15
  3118   000736  0B0F               	andlw	15
  3119   000738  6E1A               	movwf	displayUID@nibble^0,c
  3120   00073A                     
  3121                           ;TAD_TERMINAL.c: 11:         hexString[i*2] = (nibble < 10) ? nibble + '0' : nibble - 10
      +                           + 'A';
  3122   00073A  0E09               	movlw	9
  3123   00073C  641A               	cpfsgt	displayUID@nibble^0,c
  3124   00073E  EFA3  F003         	goto	u1591
  3125   000742  EFA5  F003         	goto	u1590
  3126   000746                     u1591:
  3127   000746  EFAD  F003         	goto	l2334
  3128   00074A                     u1590:
  3129   00074A  0E37               	movlw	55
  3130   00074C  241A               	addwf	displayUID@nibble^0,w,c
  3131   00074E  6E14               	movwf	_displayUID$841^0,c
  3132   000750  6A15               	clrf	(_displayUID$841+1)^0,c
  3133   000752  0E00               	movlw	0
  3134   000754  2215               	addwfc	(_displayUID$841+1)^0,f,c
  3135   000756  EFB3  F003         	goto	l2336
  3136   00075A                     l2334:
  3137   00075A  0E30               	movlw	48
  3138   00075C  241A               	addwf	displayUID@nibble^0,w,c
  3139   00075E  6E14               	movwf	_displayUID$841^0,c
  3140   000760  6A15               	clrf	(_displayUID$841+1)^0,c
  3141   000762  0E00               	movlw	0
  3142   000764  2215               	addwfc	(_displayUID$841+1)^0,f,c
  3143   000766                     l2336:
  3144   000766  5018               	movf	displayUID@i^0,w,c
  3145   000768  0D02               	mullw	2
  3146   00076A  50F3               	movf	243,w,c
  3147   00076C  0F09               	addlw	low displayUID@hexString
  3148   00076E  6ED9               	movwf	fsr2l,c
  3149   000770  6ADA               	clrf	fsr2h,c
  3150   000772  C014  FFDF         	movff	_displayUID$841,indf2
  3151   000776                     
  3152                           ;TAD_TERMINAL.c: 12:         nibble = uid[i] & 0x0F;
  3153   000776  5007               	movf	displayUID@uid^0,w,c
  3154   000778  2418               	addwf	displayUID@i^0,w,c
  3155   00077A  6ED9               	movwf	fsr2l,c
  3156   00077C  6ADA               	clrf	fsr2h,c
  3157   00077E  50DF               	movf	indf2,w,c
  3158   000780  0B0F               	andlw	15
  3159   000782  6E1A               	movwf	displayUID@nibble^0,c
  3160   000784                     
  3161                           ;TAD_TERMINAL.c: 13:         hexString[i*2 + 1] = (nibble < 10) ? nibble + '0' : nibble 
      +                          - 10 + 'A';
  3162   000784  0E09               	movlw	9
  3163   000786  641A               	cpfsgt	displayUID@nibble^0,c
  3164   000788  EFC8  F003         	goto	u1601
  3165   00078C  EFCA  F003         	goto	u1600
  3166   000790                     u1601:
  3167   000790  EFD2  F003         	goto	l2344
  3168   000794                     u1600:
  3169   000794  0E37               	movlw	55
  3170   000796  241A               	addwf	displayUID@nibble^0,w,c
  3171   000798  6E16               	movwf	_displayUID$842^0,c
  3172   00079A  6A17               	clrf	(_displayUID$842+1)^0,c
  3173   00079C  0E00               	movlw	0
  3174   00079E  2217               	addwfc	(_displayUID$842+1)^0,f,c
  3175   0007A0  EFD8  F003         	goto	l2346
  3176   0007A4                     l2344:
  3177   0007A4  0E30               	movlw	48
  3178   0007A6  241A               	addwf	displayUID@nibble^0,w,c
  3179   0007A8  6E16               	movwf	_displayUID$842^0,c
  3180   0007AA  6A17               	clrf	(_displayUID$842+1)^0,c
  3181   0007AC  0E00               	movlw	0
  3182   0007AE  2217               	addwfc	(_displayUID$842+1)^0,f,c
  3183   0007B0                     l2346:
  3184   0007B0  5018               	movf	displayUID@i^0,w,c
  3185   0007B2  0D02               	mullw	2
  3186   0007B4  CFF3 F008          	movff	prodl,??_displayUID
  3187   0007B8  0E01               	movlw	1
  3188   0007BA  2608               	addwf	??_displayUID^0,f,c
  3189   0007BC  5008               	movf	??_displayUID^0,w,c
  3190   0007BE  0F09               	addlw	low displayUID@hexString
  3191   0007C0  6ED9               	movwf	fsr2l,c
  3192   0007C2  6ADA               	clrf	fsr2h,c
  3193   0007C4  C016  FFDF         	movff	_displayUID$842,indf2
  3194   0007C8                     
  3195                           ;TAD_TERMINAL.c: 14:     }
  3196   0007C8  4A18               	infsnz	displayUID@i^0,f,c
  3197   0007CA  2A19               	incf	(displayUID@i+1)^0,f,c
  3198   0007CC  BE19               	btfsc	(displayUID@i+1)^0,7,c
  3199   0007CE  EFF2  F003         	goto	u1611
  3200   0007D2  5019               	movf	(displayUID@i+1)^0,w,c
  3201   0007D4  E109               	bnz	u1610
  3202   0007D6  0E05               	movlw	5
  3203   0007D8  5C18               	subwf	displayUID@i^0,w,c
  3204   0007DA  A0D8               	btfss	status,0,c
  3205   0007DC  EFF2  F003         	goto	u1611
  3206   0007E0  EFF4  F003         	goto	u1610
  3207   0007E4                     u1611:
  3208   0007E4  EF93  F003         	goto	l2328
  3209   0007E8                     u1610:
  3210   0007E8                     
  3211                           ;TAD_TERMINAL.c: 15:     hexString[10] = '\0';
  3212   0007E8  6A13               	clrf	(displayUID@hexString+10)^0,c
  3213   0007EA                     
  3214                           ;TAD_TERMINAL.c: 17:     Terminal_SendString("UID: ");
  3215   0007EA  0EBB               	movlw	low STR_1
  3216   0007EC  6E05               	movwf	Terminal_SendString@str^0,c
  3217   0007EE  5005               	movf	Terminal_SendString@str^0,w,c
  3218   0007F0  A4D8               	btfss	status,2,c
  3219   0007F2  0E02               	movlw	high __smallconst
  3220   0007F4  6E06               	movwf	(Terminal_SendString@str+1)^0,c
  3221   0007F6  EC9E  F005         	call	_Terminal_SendString	;wreg free
  3222                           
  3223                           ;TAD_TERMINAL.c: 18:     Terminal_SendString(hexString);
  3224   0007FA  0E09               	movlw	low displayUID@hexString
  3225   0007FC  6E05               	movwf	Terminal_SendString@str^0,c
  3226   0007FE  6A06               	clrf	(Terminal_SendString@str+1)^0,c
  3227   000800  EC9E  F005         	call	_Terminal_SendString	;wreg free
  3228                           
  3229                           ;TAD_TERMINAL.c: 19:     Terminal_SendString("\n");
  3230   000804  0E90               	movlw	low (STR_6+16)
  3231   000806  6E05               	movwf	Terminal_SendString@str^0,c
  3232   000808  5005               	movf	Terminal_SendString@str^0,w,c
  3233   00080A  A4D8               	btfss	status,2,c
  3234   00080C  0E02               	movlw	high __smallconst
  3235   00080E  6E06               	movwf	(Terminal_SendString@str+1)^0,c
  3236   000810  EC9E  F005         	call	_Terminal_SendString	;wreg free
  3237   000814  0012               	return		;funcret
  3238   000816                     __end_of_displayUID:
  3239                           	callstack 0
  3240                           
  3241 ;; *************** function _Terminal_SendString *****************
  3242 ;; Defined at:
  3243 ;;		line 52 in file "TAD_TERMINAL.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  str             2    4[COMRAM] PTR const unsigned char 
  3246 ;;		 -> STR_11(31), STR_10(9), STR_9(32), STR_8(27), 
  3247 ;;		 -> STR_7(25), STR_6(18), STR_5(16), STR_4(16), 
  3248 ;;		 -> STR_3(16), STR_2(2), STR_1(6), displayUID@hexString(11), 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1
  3260 ;;      Params:         2       0       0
  3261 ;;      Locals:         0       0       0
  3262 ;;      Temps:          0       0       0
  3263 ;;      Totals:         2       0       0
  3264 ;;Total ram usage:        2 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 4
  3267 ;; This function calls:
  3268 ;;		_Terminal_SendChar
  3269 ;;		_Terminal_TXAvailable
  3270 ;; This function is called by:
  3271 ;;		_displayUID
  3272 ;;		_showMenu
  3273 ;;		_motorTerminal
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text19
  3278   000B3C                     __ptext19:
  3279                           	callstack 0
  3280   000B3C                     _Terminal_SendString:
  3281                           	callstack 24
  3282   000B3C                     
  3283                           ;TAD_TERMINAL.c: 53:  while (*str) {
  3284   000B3C  EFBF  F005         	goto	l2272
  3285   000B40                     l2266:
  3286   000B40  EC53  F007         	call	_Terminal_TXAvailable	;wreg free
  3287   000B44  5002               	movf	?_Terminal_TXAvailable^0,w,c
  3288   000B46  1003               	iorwf	(?_Terminal_TXAvailable+1)^0,w,c
  3289   000B48  B4D8               	btfsc	status,2,c
  3290   000B4A  EFA9  F005         	goto	u1491
  3291   000B4E  EFAB  F005         	goto	u1490
  3292   000B52                     u1491:
  3293   000B52  EFA0  F005         	goto	l2266
  3294   000B56                     u1490:
  3295   000B56                     
  3296                           ;TAD_TERMINAL.c: 55:   Terminal_SendChar(*str++);
  3297   000B56  C005  FFF6         	movff	Terminal_SendString@str,tblptrl
  3298   000B5A  C006  FFF7         	movff	Terminal_SendString@str+1,tblptrh
  3299   000B5E  6AF8               	clrf	tblptru,c
  3300   000B60  0E01               	movlw	(high __ramtop+-1)
  3301   000B62  64F7               	cpfsgt	tblptrh,c
  3302   000B64  D003               	bra	u1507
  3303   000B66  0008               	tblrd		*
  3304   000B68  50F5               	movf	tablat,w,c
  3305   000B6A  D005               	bra	u1500
  3306   000B6C                     u1507:
  3307   000B6C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3308   000B70  CFF7 FFEA          	movff	tblptrh,fsr0h
  3309   000B74  50EF               	movf	indf0,w,c
  3310   000B76                     u1500:
  3311   000B76  ECCF  F007         	call	_Terminal_SendChar
  3312   000B7A  4A05               	infsnz	Terminal_SendString@str^0,f,c
  3313   000B7C  2A06               	incf	(Terminal_SendString@str+1)^0,f,c
  3314   000B7E                     l2272:
  3315                           
  3316                           ;TAD_TERMINAL.c: 53:  while (*str) {
  3317   000B7E  C005  FFF6         	movff	Terminal_SendString@str,tblptrl
  3318   000B82  C006  FFF7         	movff	Terminal_SendString@str+1,tblptrh
  3319   000B86  6AF8               	clrf	tblptru,c
  3320   000B88  0E01               	movlw	(high __ramtop+-1)
  3321   000B8A  64F7               	cpfsgt	tblptrh,c
  3322   000B8C  D003               	bra	u1517
  3323   000B8E  0008               	tblrd		*
  3324   000B90  50F5               	movf	tablat,w,c
  3325   000B92  D005               	bra	u1510
  3326   000B94                     u1517:
  3327   000B94  CFF6 FFE9          	movff	tblptrl,fsr0l
  3328   000B98  CFF7 FFEA          	movff	tblptrh,fsr0h
  3329   000B9C  50EF               	movf	indf0,w,c
  3330   000B9E                     u1510:
  3331   000B9E  0900               	iorlw	0
  3332   000BA0  A4D8               	btfss	status,2,c
  3333   000BA2  EFD5  F005         	goto	u1521
  3334   000BA6  EFD7  F005         	goto	u1520
  3335   000BAA                     u1521:
  3336   000BAA  EFA0  F005         	goto	l2266
  3337   000BAE                     u1520:
  3338   000BAE  0012               	return		;funcret
  3339   000BB0                     __end_of_Terminal_SendString:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _Terminal_TXAvailable *****************
  3343 ;; Defined at:
  3344 ;;		line 32 in file "TAD_TERMINAL.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  2    1[COMRAM] int 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1
  3358 ;;      Params:         2       0       0
  3359 ;;      Locals:         0       0       0
  3360 ;;      Temps:          1       0       0
  3361 ;;      Totals:         3       0       0
  3362 ;;Total ram usage:        3 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 3
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_Terminal_SendString
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text20
  3373   000EA6                     __ptext20:
  3374                           	callstack 0
  3375   000EA6                     _Terminal_TXAvailable:
  3376                           	callstack 24
  3377   000EA6                     
  3378                           ;TAD_TERMINAL.c: 33:  return (PIR1bits.TXIF == 1) ? 1 : 0;
  3379   000EA6  B89E               	btfsc	158,4,c	;volatile
  3380   000EA8  EF58  F007         	goto	u1401
  3381   000EAC  EF5C  F007         	goto	u1400
  3382   000EB0                     u1401:
  3383   000EB0  6A04               	clrf	??_Terminal_TXAvailable^0,c
  3384   000EB2  2A04               	incf	??_Terminal_TXAvailable^0,f,c
  3385   000EB4  EF5D  F007         	goto	u1408
  3386   000EB8                     u1400:
  3387   000EB8  6A04               	clrf	??_Terminal_TXAvailable^0,c
  3388   000EBA                     u1408:
  3389   000EBA  5004               	movf	??_Terminal_TXAvailable^0,w,c
  3390   000EBC  6E02               	movwf	?_Terminal_TXAvailable^0,c
  3391   000EBE  6A03               	clrf	(?_Terminal_TXAvailable+1)^0,c
  3392   000EC0  0012               	return		;funcret
  3393   000EC2                     __end_of_Terminal_TXAvailable:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _Terminal_SendChar *****************
  3397 ;; Defined at:
  3398 ;;		line 42 in file "TAD_TERMINAL.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  c               1    wreg     unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;  c               1    1[COMRAM] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1
  3412 ;;      Params:         0       0       0
  3413 ;;      Locals:         1       0       0
  3414 ;;      Temps:          0       0       0
  3415 ;;      Totals:         1       0       0
  3416 ;;Total ram usage:        1 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; Hardware stack levels required when called: 3
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_Terminal_SendString
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text21
  3427   000F9E                     __ptext21:
  3428                           	callstack 0
  3429   000F9E                     _Terminal_SendChar:
  3430                           	callstack 24
  3431                           
  3432                           ;incstack = 0
  3433                           ;Terminal_SendChar@c stored from wreg
  3434   000F9E  6E02               	movwf	Terminal_SendChar@c^0,c
  3435   000FA0                     
  3436                           ;TAD_TERMINAL.c: 43:  TXREG = c;
  3437   000FA0  C002  FFAD         	movff	Terminal_SendChar@c,4013	;volatile
  3438   000FA4  0012               	return		;funcret
  3439   000FA6                     __end_of_Terminal_SendChar:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function _MFRC522_isCard *****************
  3443 ;; Defined at:
  3444 ;;		line 284 in file "TAD_RFID.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  TagType         1   34[COMRAM] PTR unsigned char 
  3447 ;;		 -> ReadRFID_NoCooperatiu@TagType(1), 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      unsigned char 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1
  3459 ;;      Params:         1       0       0
  3460 ;;      Locals:         0       0       0
  3461 ;;      Temps:          0       0       0
  3462 ;;      Totals:         1       0       0
  3463 ;;Total ram usage:        1 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 8
  3466 ;; This function calls:
  3467 ;;		_MFRC522_Request
  3468 ;; This function is called by:
  3469 ;;		_ReadRFID_NoCooperatiu
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text22
  3474   000E86                     __ptext22:
  3475                           	callstack 0
  3476   000E86                     _MFRC522_isCard:
  3477                           	callstack 21
  3478   000E86                     
  3479                           ;TAD_RFID.c: 285:     return (MFRC522_Request(0x26, TagType) == 0);
  3480   000E86  C023  F01E         	movff	MFRC522_isCard@TagType,MFRC522_Request@TagType
  3481   000E8A  0E26               	movlw	38
  3482   000E8C  ECD8  F005         	call	_MFRC522_Request
  3483   000E90  0900               	iorlw	0
  3484   000E92  B4D8               	btfsc	status,2,c
  3485   000E94  EF4E  F007         	goto	u1551
  3486   000E98  EF51  F007         	goto	u1550
  3487   000E9C                     u1551:
  3488   000E9C  0E01               	movlw	1
  3489   000E9E  EF52  F007         	goto	u1560
  3490   000EA2                     u1550:
  3491   000EA2  0E00               	movlw	0
  3492   000EA4                     u1560:
  3493   000EA4  0012               	return		;funcret
  3494   000EA6                     __end_of_MFRC522_isCard:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _MFRC522_Request *****************
  3498 ;; Defined at:
  3499 ;;		line 194 in file "TAD_RFID.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  reqMode         1    wreg     unsigned char 
  3502 ;;  TagType         1   29[COMRAM] PTR unsigned char 
  3503 ;;		 -> ReadRFID_NoCooperatiu@TagType(1), 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  reqMode         1   30[COMRAM] unsigned char 
  3506 ;;  backBits        2   32[COMRAM] unsigned int 
  3507 ;;  _status         1   31[COMRAM] unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      unsigned char 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1
  3517 ;;      Params:         1       0       0
  3518 ;;      Locals:         4       0       0
  3519 ;;      Temps:          0       0       0
  3520 ;;      Totals:         5       0       0
  3521 ;;Total ram usage:        5 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 7
  3524 ;; This function calls:
  3525 ;;		_MFRC522_ToCard
  3526 ;;		_MFRC522_Wr
  3527 ;; This function is called by:
  3528 ;;		_MFRC522_isCard
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text23
  3533   000BB0                     __ptext23:
  3534                           	callstack 0
  3535   000BB0                     _MFRC522_Request:
  3536                           	callstack 21
  3537                           
  3538                           ;incstack = 0
  3539                           ;MFRC522_Request@reqMode stored from wreg
  3540   000BB0  6E1F               	movwf	MFRC522_Request@reqMode^0,c
  3541   000BB2                     
  3542                           ;TAD_RFID.c: 195:     char _status;;TAD_RFID.c: 196:     unsigned backBits;;TAD_RFID.c: 
      +                          197:     MFRC522_Wr(0x0D, 0x07);
  3543   000BB2  0E07               	movlw	7
  3544   000BB4  6E07               	movwf	MFRC522_Wr@value^0,c
  3545   000BB6  0E0D               	movlw	13
  3546   000BB8  EC6D  F004         	call	_MFRC522_Wr
  3547   000BBC                     
  3548                           ;TAD_RFID.c: 198:     TagType[0] = reqMode;
  3549   000BBC  501E               	movf	MFRC522_Request@TagType^0,w,c
  3550   000BBE  6ED9               	movwf	fsr2l,c
  3551   000BC0  6ADA               	clrf	fsr2h,c
  3552   000BC2  C01F  FFDF         	movff	MFRC522_Request@reqMode,indf2
  3553   000BC6                     
  3554                           ;TAD_RFID.c: 199:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  3555   000BC6  C01E  F00F         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  3556   000BCA  0E01               	movlw	1
  3557   000BCC  6E10               	movwf	MFRC522_ToCard@sendLen^0,c
  3558   000BCE  C01E  F011         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  3559   000BD2  0E21               	movlw	low MFRC522_Request@backBits
  3560   000BD4  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  3561   000BD6  0E0C               	movlw	12
  3562   000BD8  EC61  F001         	call	_MFRC522_ToCard
  3563   000BDC  6E20               	movwf	MFRC522_Request@_status^0,c
  3564                           
  3565                           ;TAD_RFID.c: 200:     if ((_status != 0) || (backBits != 0x10)) {
  3566   000BDE  5020               	movf	MFRC522_Request@_status^0,w,c
  3567   000BE0  A4D8               	btfss	status,2,c
  3568   000BE2  EFF5  F005         	goto	u1411
  3569   000BE6  EFF7  F005         	goto	u1410
  3570   000BEA                     u1411:
  3571   000BEA  EF01  F006         	goto	l2202
  3572   000BEE                     u1410:
  3573   000BEE  0E10               	movlw	16
  3574   000BF0  1821               	xorwf	MFRC522_Request@backBits^0,w,c
  3575   000BF2  1022               	iorwf	(MFRC522_Request@backBits+1)^0,w,c
  3576   000BF4  B4D8               	btfsc	status,2,c
  3577   000BF6  EFFF  F005         	goto	u1421
  3578   000BFA  EF01  F006         	goto	u1420
  3579   000BFE                     u1421:
  3580   000BFE  EF03  F006         	goto	l262
  3581   000C02                     u1420:
  3582   000C02                     l2202:
  3583                           
  3584                           ;TAD_RFID.c: 201:         _status = 2;
  3585   000C02  0E02               	movlw	2
  3586   000C04  6E20               	movwf	MFRC522_Request@_status^0,c
  3587   000C06                     l262:
  3588                           
  3589                           ;TAD_RFID.c: 203:     return _status;
  3590   000C06  5020               	movf	MFRC522_Request@_status^0,w,c
  3591   000C08  0012               	return		;funcret
  3592   000C0A                     __end_of_MFRC522_Request:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _MFRC522_ReadCardSerial *****************
  3596 ;; Defined at:
  3597 ;;		line 288 in file "TAD_RFID.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  str             1   36[COMRAM] PTR unsigned char 
  3600 ;;		 -> ReadRFID_NoCooperatiu@UID(6), 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  _status         1   37[COMRAM] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      unsigned char 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1
  3612 ;;      Params:         1       0       0
  3613 ;;      Locals:         1       0       0
  3614 ;;      Temps:          0       0       0
  3615 ;;      Totals:         2       0       0
  3616 ;;Total ram usage:        2 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 8
  3619 ;; This function calls:
  3620 ;;		_MFRC522_AntiColl
  3621 ;; This function is called by:
  3622 ;;		_ReadRFID_NoCooperatiu
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text24
  3627   000DE4                     __ptext24:
  3628                           	callstack 0
  3629   000DE4                     _MFRC522_ReadCardSerial:
  3630                           	callstack 21
  3631   000DE4                     
  3632                           ;TAD_RFID.c: 289:     char _status = MFRC522_AntiColl(str);
  3633   000DE4  C025  F01E         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  3634   000DE8  ECC1  F004         	call	_MFRC522_AntiColl	;wreg free
  3635   000DEC  6E26               	movwf	MFRC522_ReadCardSerial@_status^0,c
  3636   000DEE                     
  3637                           ;TAD_RFID.c: 290:     str[5] = 0;
  3638   000DEE  5025               	movf	MFRC522_ReadCardSerial@str^0,w,c
  3639   000DF0  6ED9               	movwf	fsr2l,c
  3640   000DF2  6ADA               	clrf	fsr2h,c
  3641   000DF4  0E05               	movlw	5
  3642   000DF6  26D9               	addwf	fsr2l,f,c
  3643   000DF8  6ADF               	clrf	indf2,c
  3644   000DFA                     
  3645                           ;TAD_RFID.c: 291:     return (_status == 0);
  3646   000DFA  5026               	movf	MFRC522_ReadCardSerial@_status^0,w,c
  3647   000DFC  B4D8               	btfsc	status,2,c
  3648   000DFE  EF03  F007         	goto	u1571
  3649   000E02  EF06  F007         	goto	u1570
  3650   000E06                     u1571:
  3651   000E06  0E01               	movlw	1
  3652   000E08  EF07  F007         	goto	u1580
  3653   000E0C                     u1570:
  3654   000E0C  0E00               	movlw	0
  3655   000E0E                     u1580:
  3656   000E0E  0012               	return		;funcret
  3657   000E10                     __end_of_MFRC522_ReadCardSerial:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _MFRC522_AntiColl *****************
  3661 ;; Defined at:
  3662 ;;		line 265 in file "TAD_RFID.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  serNum          1   29[COMRAM] PTR unsigned char 
  3665 ;;		 -> ReadRFID_NoCooperatiu@UID(6), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  unLen           2   32[COMRAM] unsigned int 
  3668 ;;  i               1   35[COMRAM] unsigned char 
  3669 ;;  _status         1   34[COMRAM] unsigned char 
  3670 ;;  serNumCheck     1   31[COMRAM] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      unsigned char 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1
  3680 ;;      Params:         1       0       0
  3681 ;;      Locals:         5       0       0
  3682 ;;      Temps:          1       0       0
  3683 ;;      Totals:         7       0       0
  3684 ;;Total ram usage:        7 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 7
  3687 ;; This function calls:
  3688 ;;		_MFRC522_Clear_Bit
  3689 ;;		_MFRC522_ToCard
  3690 ;;		_MFRC522_Wr
  3691 ;; This function is called by:
  3692 ;;		_MFRC522_ReadCardSerial
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text25
  3697   000982                     __ptext25:
  3698                           	callstack 0
  3699   000982                     _MFRC522_AntiColl:
  3700                           	callstack 21
  3701   000982                     
  3702                           ;TAD_RFID.c: 266:     char _status;;TAD_RFID.c: 267:     char i;;TAD_RFID.c: 268:     ch
      +                          ar serNumCheck = 0;
  3703   000982  6A20               	clrf	MFRC522_AntiColl@serNumCheck^0,c
  3704   000984                     
  3705                           ;TAD_RFID.c: 269:     unsigned unLen;;TAD_RFID.c: 270:     MFRC522_Wr(0x0D, 0x00);
  3706   000984  0E00               	movlw	0
  3707   000986  6E07               	movwf	MFRC522_Wr@value^0,c
  3708   000988  0E0D               	movlw	13
  3709   00098A  EC6D  F004         	call	_MFRC522_Wr
  3710   00098E                     
  3711                           ;TAD_RFID.c: 271:     serNum[0] = 0x93;
  3712   00098E  501E               	movf	MFRC522_AntiColl@serNum^0,w,c
  3713   000990  6ED9               	movwf	fsr2l,c
  3714   000992  6ADA               	clrf	fsr2h,c
  3715   000994  0E93               	movlw	147
  3716   000996  6EDF               	movwf	indf2,c
  3717   000998                     
  3718                           ;TAD_RFID.c: 272:     serNum[1] = 0x20;
  3719   000998  501E               	movf	MFRC522_AntiColl@serNum^0,w,c
  3720   00099A  6ED9               	movwf	fsr2l,c
  3721   00099C  6ADA               	clrf	fsr2h,c
  3722   00099E  0E01               	movlw	1
  3723   0009A0  26D9               	addwf	fsr2l,f,c
  3724   0009A2  0E20               	movlw	32
  3725   0009A4  6EDF               	movwf	indf2,c
  3726   0009A6                     
  3727                           ;TAD_RFID.c: 273:     MFRC522_Clear_Bit(0x08, 0x08);
  3728   0009A6  0E08               	movlw	8
  3729   0009A8  6E0C               	movwf	MFRC522_Clear_Bit@mask^0,c
  3730   0009AA  0E08               	movlw	8
  3731   0009AC  EC6E  F007         	call	_MFRC522_Clear_Bit
  3732   0009B0                     
  3733                           ;TAD_RFID.c: 274:     _status = MFRC522_ToCard(0x0C, (char *)serNum, 2, (char *)serNum, 
      +                          &unLen);
  3734   0009B0  C01E  F00F         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  3735   0009B4  0E02               	movlw	2
  3736   0009B6  6E10               	movwf	MFRC522_ToCard@sendLen^0,c
  3737   0009B8  C01E  F011         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  3738   0009BC  0E21               	movlw	low MFRC522_AntiColl@unLen
  3739   0009BE  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  3740   0009C0  0E0C               	movlw	12
  3741   0009C2  EC61  F001         	call	_MFRC522_ToCard
  3742   0009C6  6E23               	movwf	MFRC522_AntiColl@_status^0,c
  3743   0009C8                     
  3744                           ;TAD_RFID.c: 275:     if (_status == 0) {
  3745   0009C8  5023               	movf	MFRC522_AntiColl@_status^0,w,c
  3746   0009CA  A4D8               	btfss	status,2,c
  3747   0009CC  EFEA  F004         	goto	u1461
  3748   0009D0  EFEC  F004         	goto	u1460
  3749   0009D4                     u1461:
  3750   0009D4  EF0C  F005         	goto	l288
  3751   0009D8                     u1460:
  3752   0009D8                     
  3753                           ;TAD_RFID.c: 276:         for (i = 0; i < 4; i++)
  3754   0009D8  6A24               	clrf	MFRC522_AntiColl@i^0,c
  3755   0009DA                     l2252:
  3756                           
  3757                           ;TAD_RFID.c: 277:             serNumCheck ^= serNum[(int)i];
  3758   0009DA  501E               	movf	MFRC522_AntiColl@serNum^0,w,c
  3759   0009DC  2424               	addwf	MFRC522_AntiColl@i^0,w,c
  3760   0009DE  6ED9               	movwf	fsr2l,c
  3761   0009E0  6ADA               	clrf	fsr2h,c
  3762   0009E2  50DF               	movf	indf2,w,c
  3763   0009E4  1A20               	xorwf	MFRC522_AntiColl@serNumCheck^0,f,c
  3764   0009E6  2A24               	incf	MFRC522_AntiColl@i^0,f,c
  3765   0009E8  0E03               	movlw	3
  3766   0009EA  6424               	cpfsgt	MFRC522_AntiColl@i^0,c
  3767   0009EC  EFFA  F004         	goto	u1471
  3768   0009F0  EFFC  F004         	goto	u1470
  3769   0009F4                     u1471:
  3770   0009F4  EFED  F004         	goto	l2252
  3771   0009F8                     u1470:
  3772   0009F8                     
  3773                           ;TAD_RFID.c: 278:         if (serNumCheck != serNum[4])
  3774   0009F8  501E               	movf	MFRC522_AntiColl@serNum^0,w,c
  3775   0009FA  6ED9               	movwf	fsr2l,c
  3776   0009FC  6ADA               	clrf	fsr2h,c
  3777   0009FE  0E04               	movlw	4
  3778   000A00  26D9               	addwf	fsr2l,f,c
  3779   000A02  5020               	movf	MFRC522_AntiColl@serNumCheck^0,w,c
  3780   000A04  18DE               	xorwf	postinc2,w,c
  3781   000A06  B4D8               	btfsc	status,2,c
  3782   000A08  EF08  F005         	goto	u1481
  3783   000A0C  EF0A  F005         	goto	u1480
  3784   000A10                     u1481:
  3785   000A10  EF0C  F005         	goto	l288
  3786   000A14                     u1480:
  3787   000A14                     
  3788                           ;TAD_RFID.c: 279:             _status = 2;
  3789   000A14  0E02               	movlw	2
  3790   000A16  6E23               	movwf	MFRC522_AntiColl@_status^0,c
  3791   000A18                     l288:
  3792                           
  3793                           ;TAD_RFID.c: 281:     return _status;
  3794   000A18  5023               	movf	MFRC522_AntiColl@_status^0,w,c
  3795   000A1A  0012               	return		;funcret
  3796   000A1C                     __end_of_MFRC522_AntiColl:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _MFRC522_Halt *****************
  3800 ;; Defined at:
  3801 ;;		line 253 in file "TAD_RFID.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  buff            4   29[COMRAM] unsigned char [4]
  3806 ;;  unLen           2   33[COMRAM] unsigned int 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1
  3816 ;;      Params:         0       0       0
  3817 ;;      Locals:         6       0       0
  3818 ;;      Temps:          0       0       0
  3819 ;;      Totals:         6       0       0
  3820 ;;Total ram usage:        6 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 7
  3823 ;; This function calls:
  3824 ;;		_MFRC522_CRC
  3825 ;;		_MFRC522_Clear_Bit
  3826 ;;		_MFRC522_ToCard
  3827 ;; This function is called by:
  3828 ;;		_ReadRFID_NoCooperatiu
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text26
  3833   000CFA                     __ptext26:
  3834                           	callstack 0
  3835   000CFA                     _MFRC522_Halt:
  3836                           	callstack 22
  3837   000CFA                     
  3838                           ;TAD_RFID.c: 254:     unsigned unLen;;TAD_RFID.c: 255:     char buff[4];;TAD_RFID.c: 257
      +                          :     buff[0] = 0x50;
  3839   000CFA  0E50               	movlw	80
  3840   000CFC  6E1E               	movwf	MFRC522_Halt@buff^0,c
  3841   000CFE                     
  3842                           ;TAD_RFID.c: 258:     buff[1] = 0;
  3843   000CFE  6A1F               	clrf	(MFRC522_Halt@buff+1)^0,c
  3844   000D00                     
  3845                           ;TAD_RFID.c: 259:     MFRC522_CRC(buff, 2, &buff[2]);
  3846   000D00  0E1E               	movlw	low MFRC522_Halt@buff
  3847   000D02  6E0F               	movwf	MFRC522_CRC@dataIn^0,c
  3848   000D04  0E02               	movlw	2
  3849   000D06  6E10               	movwf	MFRC522_CRC@length^0,c
  3850   000D08  0E20               	movlw	low (MFRC522_Halt@buff+2)
  3851   000D0A  6E11               	movwf	MFRC522_CRC@dataOut^0,c
  3852   000D0C  EC0E  F005         	call	_MFRC522_CRC	;wreg free
  3853   000D10                     
  3854                           ;TAD_RFID.c: 260:     MFRC522_Clear_Bit(0x08, 0x80);
  3855   000D10  0E80               	movlw	128
  3856   000D12  6E0C               	movwf	MFRC522_Clear_Bit@mask^0,c
  3857   000D14  0E08               	movlw	8
  3858   000D16  EC6E  F007         	call	_MFRC522_Clear_Bit
  3859   000D1A                     
  3860                           ;TAD_RFID.c: 261:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
  3861   000D1A  0E1E               	movlw	low MFRC522_Halt@buff
  3862   000D1C  6E0F               	movwf	MFRC522_ToCard@sendData^0,c
  3863   000D1E  0E04               	movlw	4
  3864   000D20  6E10               	movwf	MFRC522_ToCard@sendLen^0,c
  3865   000D22  0E1E               	movlw	low MFRC522_Halt@buff
  3866   000D24  6E11               	movwf	MFRC522_ToCard@backData^0,c
  3867   000D26  0E22               	movlw	low MFRC522_Halt@unLen
  3868   000D28  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  3869   000D2A  0E0C               	movlw	12
  3870   000D2C  EC61  F001         	call	_MFRC522_ToCard
  3871   000D30                     
  3872                           ;TAD_RFID.c: 262:     MFRC522_Clear_Bit(0x08, 0x08);
  3873   000D30  0E08               	movlw	8
  3874   000D32  6E0C               	movwf	MFRC522_Clear_Bit@mask^0,c
  3875   000D34  0E08               	movlw	8
  3876   000D36  EC6E  F007         	call	_MFRC522_Clear_Bit
  3877   000D3A  0012               	return		;funcret
  3878   000D3C                     __end_of_MFRC522_Halt:
  3879                           	callstack 0
  3880                           
  3881 ;; *************** function _MFRC522_ToCard *****************
  3882 ;; Defined at:
  3883 ;;		line 131 in file "TAD_RFID.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  command         1    wreg     unsigned char 
  3886 ;;  sendData        1   14[COMRAM] PTR unsigned char 
  3887 ;;		 -> ReadRFID_NoCooperatiu@UID(6), ReadRFID_NoCooperatiu@TagType(1), MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9
      +), 
  3888 ;;  sendLen         1   15[COMRAM] unsigned char 
  3889 ;;  backData        1   16[COMRAM] PTR unsigned char 
  3890 ;;		 -> ReadRFID_NoCooperatiu@UID(6), ReadRFID_NoCooperatiu@TagType(1), MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9
      +), 
  3891 ;;  backLen         1   17[COMRAM] PTR unsigned int 
  3892 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag@size(2), MFRC522_Request@backBits(2), 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  command         1   26[COMRAM] unsigned char 
  3895 ;;  n               1   28[COMRAM] unsigned char 
  3896 ;;  i               1   27[COMRAM] unsigned char 
  3897 ;;  irqEn           1   25[COMRAM] unsigned char 
  3898 ;;  lastBits        1   24[COMRAM] unsigned char 
  3899 ;;  _status         1   23[COMRAM] unsigned char 
  3900 ;;  waitIRq         1   22[COMRAM] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      unsigned char 
  3903 ;; Registers used:
  3904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1
  3910 ;;      Params:         4       0       0
  3911 ;;      Locals:         7       0       0
  3912 ;;      Temps:          4       0       0
  3913 ;;      Totals:        15       0       0
  3914 ;;Total ram usage:       15 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 6
  3917 ;; This function calls:
  3918 ;;		_MFRC522_Clear_Bit
  3919 ;;		_MFRC522_Rd
  3920 ;;		_MFRC522_Set_Bit
  3921 ;;		_MFRC522_Wr
  3922 ;; This function is called by:
  3923 ;;		_MFRC522_Request
  3924 ;;		_MFRC522_Halt
  3925 ;;		_MFRC522_AntiColl
  3926 ;;		_MFRC522_SelectTag
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text27
  3931   0002C2                     __ptext27:
  3932                           	callstack 0
  3933   0002C2                     _MFRC522_ToCard:
  3934                           	callstack 21
  3935                           
  3936                           ;incstack = 0
  3937                           ;MFRC522_ToCard@command stored from wreg
  3938   0002C2  6E1B               	movwf	MFRC522_ToCard@command^0,c
  3939   0002C4                     
  3940                           ;TAD_RFID.c: 132:     char _status = 2;
  3941   0002C4  0E02               	movlw	2
  3942   0002C6  6E18               	movwf	MFRC522_ToCard@_status^0,c
  3943   0002C8                     
  3944                           ;TAD_RFID.c: 133:     char irqEn = 0x00;
  3945   0002C8  6A1A               	clrf	MFRC522_ToCard@irqEn^0,c
  3946   0002CA                     
  3947                           ;TAD_RFID.c: 134:     char waitIRq = 0x00;
  3948   0002CA  6A17               	clrf	MFRC522_ToCard@waitIRq^0,c
  3949                           
  3950                           ;TAD_RFID.c: 135:     char lastBits;;TAD_RFID.c: 136:     char n;;TAD_RFID.c: 137:     u
      +                          nsigned char i;;TAD_RFID.c: 139:     switch (command) {
  3951   0002CC  EF74  F001         	goto	l2102
  3952   0002D0                     l2096:
  3953                           
  3954                           ;TAD_RFID.c: 141:             irqEn = 0x12;
  3955   0002D0  0E12               	movlw	18
  3956   0002D2  6E1A               	movwf	MFRC522_ToCard@irqEn^0,c
  3957                           
  3958                           ;TAD_RFID.c: 142:             waitIRq = 0x10;
  3959   0002D4  0E10               	movlw	16
  3960   0002D6  6E17               	movwf	MFRC522_ToCard@waitIRq^0,c
  3961                           
  3962                           ;TAD_RFID.c: 143:             break;
  3963   0002D8  EF7F  F001         	goto	l2104
  3964   0002DC                     l2098:
  3965                           
  3966                           ;TAD_RFID.c: 146:             irqEn = 0x77;
  3967   0002DC  0E77               	movlw	119
  3968   0002DE  6E1A               	movwf	MFRC522_ToCard@irqEn^0,c
  3969                           
  3970                           ;TAD_RFID.c: 147:             waitIRq = 0x30;
  3971   0002E0  0E30               	movlw	48
  3972   0002E2  6E17               	movwf	MFRC522_ToCard@waitIRq^0,c
  3973                           
  3974                           ;TAD_RFID.c: 148:             break;
  3975   0002E4  EF7F  F001         	goto	l2104
  3976   0002E8                     l2102:
  3977   0002E8  501B               	movf	MFRC522_ToCard@command^0,w,c
  3978                           
  3979                           ; Switch size 1, requested type "simple"
  3980                           ; Number of cases is 2, Range of values is 12 to 14
  3981                           ; switch strategies available:
  3982                           ; Name         Instructions Cycles
  3983                           ; simple_byte            7     4 (average)
  3984                           ;	Chosen strategy is simple_byte
  3985   0002EA  0A0C               	xorlw	12	; case 12
  3986   0002EC  B4D8               	btfsc	status,2,c
  3987   0002EE  EF6E  F001         	goto	l2098
  3988   0002F2  0A02               	xorlw	2	; case 14
  3989   0002F4  B4D8               	btfsc	status,2,c
  3990   0002F6  EF68  F001         	goto	l2096
  3991   0002FA  EF7F  F001         	goto	l2104
  3992   0002FE                     l2104:
  3993                           
  3994                           ;TAD_RFID.c: 150:     MFRC522_Wr(0x02, irqEn | 0x80);
  3995   0002FE  501A               	movf	MFRC522_ToCard@irqEn^0,w,c
  3996   000300  0980               	iorlw	128
  3997   000302  6E07               	movwf	MFRC522_Wr@value^0,c
  3998   000304  0E02               	movlw	2
  3999   000306  EC6D  F004         	call	_MFRC522_Wr
  4000                           
  4001                           ;TAD_RFID.c: 151:     MFRC522_Clear_Bit(0x04, 0x80);
  4002   00030A  0E80               	movlw	128
  4003   00030C  6E0C               	movwf	MFRC522_Clear_Bit@mask^0,c
  4004   00030E  0E04               	movlw	4
  4005   000310  EC6E  F007         	call	_MFRC522_Clear_Bit
  4006                           
  4007                           ;TAD_RFID.c: 152:     MFRC522_Set_Bit(0x0A, 0x80);
  4008   000314  0E80               	movlw	128
  4009   000316  6E0C               	movwf	MFRC522_Set_Bit@mask^0,c
  4010   000318  0E0A               	movlw	10
  4011   00031A  EC9D  F007         	call	_MFRC522_Set_Bit
  4012                           
  4013                           ;TAD_RFID.c: 153:     MFRC522_Wr(0x01, 0x00);
  4014   00031E  0E00               	movlw	0
  4015   000320  6E07               	movwf	MFRC522_Wr@value^0,c
  4016   000322  0E01               	movlw	1
  4017   000324  EC6D  F004         	call	_MFRC522_Wr
  4018   000328                     
  4019                           ;TAD_RFID.c: 155:     for (i = 0; i < sendLen; i++) MFRC522_Wr(0x09, sendData[i]);
  4020   000328  6A1C               	clrf	MFRC522_ToCard@i^0,c
  4021   00032A  EFA1  F001         	goto	l2112
  4022   00032E                     l2108:
  4023   00032E  500F               	movf	MFRC522_ToCard@sendData^0,w,c
  4024   000330  241C               	addwf	MFRC522_ToCard@i^0,w,c
  4025   000332  6ED9               	movwf	fsr2l,c
  4026   000334  6ADA               	clrf	fsr2h,c
  4027   000336  50DF               	movf	indf2,w,c
  4028   000338  6E07               	movwf	MFRC522_Wr@value^0,c
  4029   00033A  0E09               	movlw	9
  4030   00033C  EC6D  F004         	call	_MFRC522_Wr
  4031   000340  2A1C               	incf	MFRC522_ToCard@i^0,f,c
  4032   000342                     l2112:
  4033   000342  5010               	movf	MFRC522_ToCard@sendLen^0,w,c
  4034   000344  5C1C               	subwf	MFRC522_ToCard@i^0,w,c
  4035   000346  A0D8               	btfss	status,0,c
  4036   000348  EFA8  F001         	goto	u1271
  4037   00034C  EFAA  F001         	goto	u1270
  4038   000350                     u1271:
  4039   000350  EF97  F001         	goto	l2108
  4040   000354                     u1270:
  4041   000354                     
  4042                           ;TAD_RFID.c: 157:     MFRC522_Wr(0x01, command);
  4043   000354  C01B  F007         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  4044   000358  0E01               	movlw	1
  4045   00035A  EC6D  F004         	call	_MFRC522_Wr
  4046   00035E                     
  4047                           ;TAD_RFID.c: 158:     if (command == 0x0C) MFRC522_Set_Bit(0x0D, 0x80);
  4048   00035E  0E0C               	movlw	12
  4049   000360  181B               	xorwf	MFRC522_ToCard@command^0,w,c
  4050   000362  A4D8               	btfss	status,2,c
  4051   000364  EFB6  F001         	goto	u1281
  4052   000368  EFB8  F001         	goto	u1280
  4053   00036C                     u1281:
  4054   00036C  EFBD  F001         	goto	l2120
  4055   000370                     u1280:
  4056   000370  0E80               	movlw	128
  4057   000372  6E0C               	movwf	MFRC522_Set_Bit@mask^0,c
  4058   000374  0E0D               	movlw	13
  4059   000376  EC9D  F007         	call	_MFRC522_Set_Bit
  4060   00037A                     l2120:
  4061                           
  4062                           ;TAD_RFID.c: 159:     i = 0xFF;
  4063   00037A  681C               	setf	MFRC522_ToCard@i^0,c
  4064   00037C                     l2122:
  4065                           
  4066                           ;TAD_RFID.c: 161:         n = MFRC522_Rd(0x04);
  4067   00037C  0E04               	movlw	4
  4068   00037E  EC59  F005         	call	_MFRC522_Rd
  4069   000382  6E1D               	movwf	MFRC522_ToCard@n^0,c
  4070   000384                     
  4071                           ;TAD_RFID.c: 162:         i--;
  4072   000384  061C               	decf	MFRC522_ToCard@i^0,f,c
  4073   000386                     
  4074                           ;TAD_RFID.c: 163:     } while (i && !(n & 0x01) && !(n & waitIRq));
  4075   000386  501C               	movf	MFRC522_ToCard@i^0,w,c
  4076   000388  B4D8               	btfsc	status,2,c
  4077   00038A  EFC9  F001         	goto	u1291
  4078   00038E  EFCB  F001         	goto	u1290
  4079   000392                     u1291:
  4080   000392  EFDC  F001         	goto	l2132
  4081   000396                     u1290:
  4082   000396  B01D               	btfsc	MFRC522_ToCard@n^0,0,c
  4083   000398  EFD0  F001         	goto	u1301
  4084   00039C  EFD2  F001         	goto	u1300
  4085   0003A0                     u1301:
  4086   0003A0  EFDC  F001         	goto	l2132
  4087   0003A4                     u1300:
  4088   0003A4  501D               	movf	MFRC522_ToCard@n^0,w,c
  4089   0003A6  1417               	andwf	MFRC522_ToCard@waitIRq^0,w,c
  4090   0003A8  0900               	iorlw	0
  4091   0003AA  B4D8               	btfsc	status,2,c
  4092   0003AC  EFDA  F001         	goto	u1311
  4093   0003B0  EFDC  F001         	goto	u1310
  4094   0003B4                     u1311:
  4095   0003B4  EFBE  F001         	goto	l2122
  4096   0003B8                     u1310:
  4097   0003B8                     l2132:
  4098                           
  4099                           ;TAD_RFID.c: 164:     MFRC522_Clear_Bit(0x0D, 0x80);
  4100   0003B8  0E80               	movlw	128
  4101   0003BA  6E0C               	movwf	MFRC522_Clear_Bit@mask^0,c
  4102   0003BC  0E0D               	movlw	13
  4103   0003BE  EC6E  F007         	call	_MFRC522_Clear_Bit
  4104   0003C2                     
  4105                           ;TAD_RFID.c: 165:     if (i != 0) {
  4106   0003C2  501C               	movf	MFRC522_ToCard@i^0,w,c
  4107   0003C4  B4D8               	btfsc	status,2,c
  4108   0003C6  EFE7  F001         	goto	u1321
  4109   0003CA  EFE9  F001         	goto	u1320
  4110   0003CE                     u1321:
  4111   0003CE  EF79  F002         	goto	l246
  4112   0003D2                     u1320:
  4113   0003D2                     
  4114                           ;TAD_RFID.c: 166:         if(!(MFRC522_Rd(0x06) & 0x1B)){
  4115   0003D2  0E06               	movlw	6
  4116   0003D4  EC59  F005         	call	_MFRC522_Rd
  4117   0003D8  6E13               	movwf	??_MFRC522_ToCard^0,c
  4118   0003DA  0E1B               	movlw	27
  4119   0003DC  1613               	andwf	??_MFRC522_ToCard^0,f,c
  4120   0003DE  A4D8               	btfss	status,2,c
  4121   0003E0  EFF4  F001         	goto	u1331
  4122   0003E4  EFF6  F001         	goto	u1330
  4123   0003E8                     u1331:
  4124   0003E8  EF77  F002         	goto	l2172
  4125   0003EC                     u1330:
  4126   0003EC                     
  4127                           ;TAD_RFID.c: 167:             _status = 0;
  4128   0003EC  6A18               	clrf	MFRC522_ToCard@_status^0,c
  4129   0003EE                     
  4130                           ;TAD_RFID.c: 168:             if (n & irqEn & 0x01) _status = 1;
  4131   0003EE  501D               	movf	MFRC522_ToCard@n^0,w,c
  4132   0003F0  141A               	andwf	MFRC522_ToCard@irqEn^0,w,c
  4133   0003F2  6E13               	movwf	??_MFRC522_ToCard^0,c
  4134   0003F4  A013               	btfss	??_MFRC522_ToCard^0,0,c
  4135   0003F6  EFFF  F001         	goto	u1341
  4136   0003FA  EF01  F002         	goto	u1340
  4137   0003FE                     u1341:
  4138   0003FE  EF03  F002         	goto	l2144
  4139   000402                     u1340:
  4140   000402  0E01               	movlw	1
  4141   000404  6E18               	movwf	MFRC522_ToCard@_status^0,c
  4142   000406                     l2144:
  4143                           
  4144                           ;TAD_RFID.c: 169:             if (command == 0x0C) {
  4145   000406  0E0C               	movlw	12
  4146   000408  181B               	xorwf	MFRC522_ToCard@command^0,w,c
  4147   00040A  A4D8               	btfss	status,2,c
  4148   00040C  EF0A  F002         	goto	u1351
  4149   000410  EF0C  F002         	goto	u1350
  4150   000414                     u1351:
  4151   000414  EF79  F002         	goto	l246
  4152   000418                     u1350:
  4153   000418                     
  4154                           ;TAD_RFID.c: 170:                 n = MFRC522_Rd(0x0A);
  4155   000418  0E0A               	movlw	10
  4156   00041A  EC59  F005         	call	_MFRC522_Rd
  4157   00041E  6E1D               	movwf	MFRC522_ToCard@n^0,c
  4158                           
  4159                           ;TAD_RFID.c: 171:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
  4160   000420  0E0C               	movlw	12
  4161   000422  EC59  F005         	call	_MFRC522_Rd
  4162   000426  0B07               	andlw	7
  4163   000428  6E19               	movwf	MFRC522_ToCard@lastBits^0,c
  4164   00042A                     
  4165                           ;TAD_RFID.c: 172:                 if (lastBits) {
  4166   00042A  5019               	movf	MFRC522_ToCard@lastBits^0,w,c
  4167   00042C  B4D8               	btfsc	status,2,c
  4168   00042E  EF1B  F002         	goto	u1361
  4169   000432  EF1D  F002         	goto	u1360
  4170   000436                     u1361:
  4171   000436  EF3C  F002         	goto	l2152
  4172   00043A                     u1360:
  4173   00043A                     
  4174                           ;TAD_RFID.c: 173:                     *backLen = (n - 1) * 8 + lastBits;
  4175   00043A  5019               	movf	MFRC522_ToCard@lastBits^0,w,c
  4176   00043C  C01D  F013         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard
  4177   000440  6A14               	clrf	(??_MFRC522_ToCard+1)^0,c
  4178   000442  90D8               	bcf	status,0,c
  4179   000444  3613               	rlcf	??_MFRC522_ToCard^0,f,c
  4180   000446  3614               	rlcf	(??_MFRC522_ToCard+1)^0,f,c
  4181   000448  90D8               	bcf	status,0,c
  4182   00044A  3613               	rlcf	??_MFRC522_ToCard^0,f,c
  4183   00044C  3614               	rlcf	(??_MFRC522_ToCard+1)^0,f,c
  4184   00044E  90D8               	bcf	status,0,c
  4185   000450  3613               	rlcf	??_MFRC522_ToCard^0,f,c
  4186   000452  3614               	rlcf	(??_MFRC522_ToCard+1)^0,f,c
  4187   000454  2613               	addwf	??_MFRC522_ToCard^0,f,c
  4188   000456  0E00               	movlw	0
  4189   000458  2214               	addwfc	(??_MFRC522_ToCard+1)^0,f,c
  4190   00045A  0EF8               	movlw	248
  4191   00045C  2413               	addwf	??_MFRC522_ToCard^0,w,c
  4192   00045E  6E15               	movwf	(??_MFRC522_ToCard+2)^0,c
  4193   000460  0EFF               	movlw	255
  4194   000462  2014               	addwfc	(??_MFRC522_ToCard+1)^0,w,c
  4195   000464  6E16               	movwf	(??_MFRC522_ToCard+3)^0,c
  4196   000466  5012               	movf	MFRC522_ToCard@backLen^0,w,c
  4197   000468  6ED9               	movwf	fsr2l,c
  4198   00046A  6ADA               	clrf	fsr2h,c
  4199   00046C  C015  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  4200   000470  C016  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  4201                           
  4202                           ;TAD_RFID.c: 174:                 } else {
  4203   000474  EF45  F002         	goto	l2154
  4204   000478                     l2152:
  4205                           
  4206                           ;TAD_RFID.c: 175:                     *backLen = n * 8;
  4207   000478  501D               	movf	MFRC522_ToCard@n^0,w,c
  4208   00047A  0D08               	mullw	8
  4209   00047C  5012               	movf	MFRC522_ToCard@backLen^0,w,c
  4210   00047E  6ED9               	movwf	fsr2l,c
  4211   000480  6ADA               	clrf	fsr2h,c
  4212   000482  CFF3 FFDE          	movff	prodl,postinc2
  4213   000486  CFF4 FFDD          	movff	prodh,postdec2
  4214   00048A                     l2154:
  4215                           
  4216                           ;TAD_RFID.c: 177:                 if (n == 0) {
  4217   00048A  501D               	movf	MFRC522_ToCard@n^0,w,c
  4218   00048C  A4D8               	btfss	status,2,c
  4219   00048E  EF4B  F002         	goto	u1371
  4220   000492  EF4D  F002         	goto	u1370
  4221   000496                     u1371:
  4222   000496  EF51  F002         	goto	l2158
  4223   00049A                     u1370:
  4224   00049A                     
  4225                           ;TAD_RFID.c: 178:                     n = 1;
  4226   00049A  0E01               	movlw	1
  4227   00049C  6E1D               	movwf	MFRC522_ToCard@n^0,c
  4228                           
  4229                           ;TAD_RFID.c: 179:                 } else if (n > 16) {
  4230   00049E  EF5B  F002         	goto	l2162
  4231   0004A2                     l2158:
  4232   0004A2  0E10               	movlw	16
  4233   0004A4  641D               	cpfsgt	MFRC522_ToCard@n^0,c
  4234   0004A6  EF57  F002         	goto	u1381
  4235   0004AA  EF59  F002         	goto	u1380
  4236   0004AE                     u1381:
  4237   0004AE  EF5B  F002         	goto	l2162
  4238   0004B2                     u1380:
  4239   0004B2                     
  4240                           ;TAD_RFID.c: 180:                     n = 16;
  4241   0004B2  0E10               	movlw	16
  4242   0004B4  6E1D               	movwf	MFRC522_ToCard@n^0,c
  4243   0004B6                     l2162:
  4244                           
  4245                           ;TAD_RFID.c: 182:                 for (i = 0; i < n; i++) {
  4246   0004B6  6A1C               	clrf	MFRC522_ToCard@i^0,c
  4247   0004B8  EF67  F002         	goto	l2168
  4248   0004BC                     l2164:
  4249                           
  4250                           ;TAD_RFID.c: 183:                     backData[i] = MFRC522_Rd(0x09);
  4251   0004BC  5011               	movf	MFRC522_ToCard@backData^0,w,c
  4252   0004BE  241C               	addwf	MFRC522_ToCard@i^0,w,c
  4253   0004C0  6ED9               	movwf	fsr2l,c
  4254   0004C2  6ADA               	clrf	fsr2h,c
  4255   0004C4  0E09               	movlw	9
  4256   0004C6  EC59  F005         	call	_MFRC522_Rd
  4257   0004CA  6EDF               	movwf	indf2,c
  4258   0004CC                     
  4259                           ;TAD_RFID.c: 184:                 }
  4260   0004CC  2A1C               	incf	MFRC522_ToCard@i^0,f,c
  4261   0004CE                     l2168:
  4262   0004CE  501D               	movf	MFRC522_ToCard@n^0,w,c
  4263   0004D0  5C1C               	subwf	MFRC522_ToCard@i^0,w,c
  4264   0004D2  A0D8               	btfss	status,0,c
  4265   0004D4  EF6E  F002         	goto	u1391
  4266   0004D8  EF70  F002         	goto	u1390
  4267   0004DC                     u1391:
  4268   0004DC  EF5E  F002         	goto	l2164
  4269   0004E0                     u1390:
  4270   0004E0                     
  4271                           ;TAD_RFID.c: 185:                 backData[i] = 0;
  4272   0004E0  5011               	movf	MFRC522_ToCard@backData^0,w,c
  4273   0004E2  241C               	addwf	MFRC522_ToCard@i^0,w,c
  4274   0004E4  6ED9               	movwf	fsr2l,c
  4275   0004E6  6ADA               	clrf	fsr2h,c
  4276   0004E8  6ADF               	clrf	indf2,c
  4277   0004EA  EF79  F002         	goto	l246
  4278   0004EE                     l2172:
  4279   0004EE  0E02               	movlw	2
  4280   0004F0  6E18               	movwf	MFRC522_ToCard@_status^0,c
  4281   0004F2                     l246:
  4282                           
  4283                           ;TAD_RFID.c: 190:     return _status;
  4284   0004F2  5018               	movf	MFRC522_ToCard@_status^0,w,c
  4285   0004F4  0012               	return		;funcret
  4286   0004F6                     __end_of_MFRC522_ToCard:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _MFRC522_CRC *****************
  4290 ;; Defined at:
  4291 ;;		line 206 in file "TAD_RFID.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  dataIn          1   14[COMRAM] PTR unsigned char 
  4294 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  4295 ;;  length          1   15[COMRAM] unsigned char 
  4296 ;;  dataOut         1   16[COMRAM] PTR unsigned char 
  4297 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  i               1   18[COMRAM] unsigned char 
  4300 ;;  n               1   17[COMRAM] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1
  4310 ;;      Params:         3       0       0
  4311 ;;      Locals:         2       0       0
  4312 ;;      Temps:          0       0       0
  4313 ;;      Totals:         5       0       0
  4314 ;;Total ram usage:        5 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; Hardware stack levels required when called: 6
  4317 ;; This function calls:
  4318 ;;		_MFRC522_Clear_Bit
  4319 ;;		_MFRC522_Rd
  4320 ;;		_MFRC522_Set_Bit
  4321 ;;		_MFRC522_Wr
  4322 ;; This function is called by:
  4323 ;;		_MFRC522_Halt
  4324 ;;		_MFRC522_SelectTag
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text28
  4329   000A1C                     __ptext28:
  4330                           	callstack 0
  4331   000A1C                     _MFRC522_CRC:
  4332                           	callstack 22
  4333   000A1C                     
  4334                           ;TAD_RFID.c: 207:     unsigned char i, n;;TAD_RFID.c: 208:     MFRC522_Clear_Bit(0x05, 0
      +                          x04);
  4335   000A1C  0E04               	movlw	4
  4336   000A1E  6E0C               	movwf	MFRC522_Clear_Bit@mask^0,c
  4337   000A20  0E05               	movlw	5
  4338   000A22  EC6E  F007         	call	_MFRC522_Clear_Bit
  4339                           
  4340                           ;TAD_RFID.c: 209:     MFRC522_Set_Bit(0x0A, 0x80);
  4341   000A26  0E80               	movlw	128
  4342   000A28  6E0C               	movwf	MFRC522_Set_Bit@mask^0,c
  4343   000A2A  0E0A               	movlw	10
  4344   000A2C  EC9D  F007         	call	_MFRC522_Set_Bit
  4345   000A30                     
  4346                           ;TAD_RFID.c: 211:     for (i = 0; i < length; i++) {
  4347   000A30  6A13               	clrf	MFRC522_CRC@i^0,c
  4348   000A32  EF25  F005         	goto	l2216
  4349   000A36                     l2210:
  4350                           
  4351                           ;TAD_RFID.c: 212:         MFRC522_Wr(0x09, *dataIn++);
  4352   000A36  500F               	movf	MFRC522_CRC@dataIn^0,w,c
  4353   000A38  6ED9               	movwf	fsr2l,c
  4354   000A3A  6ADA               	clrf	fsr2h,c
  4355   000A3C  50DF               	movf	indf2,w,c
  4356   000A3E  6E07               	movwf	MFRC522_Wr@value^0,c
  4357   000A40  0E09               	movlw	9
  4358   000A42  EC6D  F004         	call	_MFRC522_Wr
  4359   000A46  2A0F               	incf	MFRC522_CRC@dataIn^0,f,c
  4360   000A48                     
  4361                           ;TAD_RFID.c: 213:     }
  4362   000A48  2A13               	incf	MFRC522_CRC@i^0,f,c
  4363   000A4A                     l2216:
  4364   000A4A  5010               	movf	MFRC522_CRC@length^0,w,c
  4365   000A4C  5C13               	subwf	MFRC522_CRC@i^0,w,c
  4366   000A4E  A0D8               	btfss	status,0,c
  4367   000A50  EF2C  F005         	goto	u1431
  4368   000A54  EF2E  F005         	goto	u1430
  4369   000A58                     u1431:
  4370   000A58  EF1B  F005         	goto	l2210
  4371   000A5C                     u1430:
  4372   000A5C                     
  4373                           ;TAD_RFID.c: 215:     MFRC522_Wr(0x01, 0x03);
  4374   000A5C  0E03               	movlw	3
  4375   000A5E  6E07               	movwf	MFRC522_Wr@value^0,c
  4376   000A60  0E01               	movlw	1
  4377   000A62  EC6D  F004         	call	_MFRC522_Wr
  4378   000A66                     
  4379                           ;TAD_RFID.c: 218:     i = 255;
  4380   000A66  6813               	setf	MFRC522_CRC@i^0,c
  4381   000A68                     l2222:
  4382                           
  4383                           ;TAD_RFID.c: 220:         n = MFRC522_Rd(0x05);
  4384   000A68  0E05               	movlw	5
  4385   000A6A  EC59  F005         	call	_MFRC522_Rd
  4386   000A6E  6E12               	movwf	MFRC522_CRC@n^0,c
  4387   000A70                     
  4388                           ;TAD_RFID.c: 221:         i--;
  4389   000A70  0613               	decf	MFRC522_CRC@i^0,f,c
  4390   000A72                     
  4391                           ;TAD_RFID.c: 222:     } while (i && !(n & 0x04));
  4392   000A72  5013               	movf	MFRC522_CRC@i^0,w,c
  4393   000A74  B4D8               	btfsc	status,2,c
  4394   000A76  EF3F  F005         	goto	u1441
  4395   000A7A  EF41  F005         	goto	u1440
  4396   000A7E                     u1441:
  4397   000A7E  EF48  F005         	goto	l2230
  4398   000A82                     u1440:
  4399   000A82  A412               	btfss	MFRC522_CRC@n^0,2,c
  4400   000A84  EF46  F005         	goto	u1451
  4401   000A88  EF48  F005         	goto	u1450
  4402   000A8C                     u1451:
  4403   000A8C  EF34  F005         	goto	l2222
  4404   000A90                     u1450:
  4405   000A90                     l2230:
  4406                           
  4407                           ;TAD_RFID.c: 224:     dataOut[0] = MFRC522_Rd(0x22);
  4408   000A90  5011               	movf	MFRC522_CRC@dataOut^0,w,c
  4409   000A92  6ED9               	movwf	fsr2l,c
  4410   000A94  6ADA               	clrf	fsr2h,c
  4411   000A96  0E22               	movlw	34
  4412   000A98  EC59  F005         	call	_MFRC522_Rd
  4413   000A9C  6EDF               	movwf	indf2,c
  4414                           
  4415                           ;TAD_RFID.c: 225:     dataOut[1] = MFRC522_Rd(0x21);
  4416   000A9E  5011               	movf	MFRC522_CRC@dataOut^0,w,c
  4417   000AA0  6ED9               	movwf	fsr2l,c
  4418   000AA2  6ADA               	clrf	fsr2h,c
  4419   000AA4  0E01               	movlw	1
  4420   000AA6  26D9               	addwf	fsr2l,f,c
  4421   000AA8  0E21               	movlw	33
  4422   000AAA  EC59  F005         	call	_MFRC522_Rd
  4423   000AAE  6EDF               	movwf	indf2,c
  4424   000AB0  0012               	return		;funcret
  4425   000AB2                     __end_of_MFRC522_CRC:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _MFRC522_Set_Bit *****************
  4429 ;; Defined at:
  4430 ;;		line 92 in file "TAD_RFID.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  addr            1    wreg     unsigned char 
  4433 ;;  mask            1   11[COMRAM] unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  addr            1   12[COMRAM] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1
  4445 ;;      Params:         1       0       0
  4446 ;;      Locals:         1       0       0
  4447 ;;      Temps:          0       0       0
  4448 ;;      Totals:         2       0       0
  4449 ;;Total ram usage:        2 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 5
  4452 ;; This function calls:
  4453 ;;		_MFRC522_Rd
  4454 ;;		_MFRC522_Wr
  4455 ;; This function is called by:
  4456 ;;		_MFRC522_AntennaOn
  4457 ;;		_MFRC522_ToCard
  4458 ;;		_MFRC522_CRC
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text29
  4463   000F3A                     __ptext29:
  4464                           	callstack 0
  4465   000F3A                     _MFRC522_Set_Bit:
  4466                           	callstack 22
  4467                           
  4468                           ;incstack = 0
  4469                           ;MFRC522_Set_Bit@addr stored from wreg
  4470   000F3A  6E0D               	movwf	MFRC522_Set_Bit@addr^0,c
  4471   000F3C                     
  4472                           ;TAD_RFID.c: 93:     MFRC522_Wr(addr, MFRC522_Rd(addr) | mask);
  4473   000F3C  500D               	movf	MFRC522_Set_Bit@addr^0,w,c
  4474   000F3E  EC59  F005         	call	_MFRC522_Rd
  4475   000F42  100C               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  4476   000F44  6E07               	movwf	MFRC522_Wr@value^0,c
  4477   000F46  500D               	movf	MFRC522_Set_Bit@addr^0,w,c
  4478   000F48  EC6D  F004         	call	_MFRC522_Wr
  4479   000F4C  0012               	return		;funcret
  4480   000F4E                     __end_of_MFRC522_Set_Bit:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _MFRC522_Clear_Bit *****************
  4484 ;; Defined at:
  4485 ;;		line 88 in file "TAD_RFID.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  addr            1    wreg     unsigned char 
  4488 ;;  mask            1   11[COMRAM] unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  addr            1   13[COMRAM] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1
  4500 ;;      Params:         1       0       0
  4501 ;;      Locals:         1       0       0
  4502 ;;      Temps:          1       0       0
  4503 ;;      Totals:         3       0       0
  4504 ;;Total ram usage:        3 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 5
  4507 ;; This function calls:
  4508 ;;		_MFRC522_Rd
  4509 ;;		_MFRC522_Wr
  4510 ;; This function is called by:
  4511 ;;		_MFRC522_AntennaOff
  4512 ;;		_MFRC522_ToCard
  4513 ;;		_MFRC522_CRC
  4514 ;;		_MFRC522_Halt
  4515 ;;		_MFRC522_AntiColl
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text30
  4520   000EDC                     __ptext30:
  4521                           	callstack 0
  4522   000EDC                     _MFRC522_Clear_Bit:
  4523                           	callstack 22
  4524                           
  4525                           ;incstack = 0
  4526                           ;MFRC522_Clear_Bit@addr stored from wreg
  4527   000EDC  6E0E               	movwf	MFRC522_Clear_Bit@addr^0,c
  4528   000EDE                     
  4529                           ;TAD_RFID.c: 89:     MFRC522_Wr(addr, MFRC522_Rd(addr) & ~mask);
  4530   000EDE  500C               	movf	MFRC522_Clear_Bit@mask^0,w,c
  4531   000EE0  0AFF               	xorlw	255
  4532   000EE2  6E0D               	movwf	??_MFRC522_Clear_Bit^0,c
  4533   000EE4  500E               	movf	MFRC522_Clear_Bit@addr^0,w,c
  4534   000EE6  EC59  F005         	call	_MFRC522_Rd
  4535   000EEA  140D               	andwf	??_MFRC522_Clear_Bit^0,w,c
  4536   000EEC  6E07               	movwf	MFRC522_Wr@value^0,c
  4537   000EEE  500E               	movf	MFRC522_Clear_Bit@addr^0,w,c
  4538   000EF0  EC6D  F004         	call	_MFRC522_Wr
  4539   000EF4  0012               	return		;funcret
  4540   000EF6                     __end_of_MFRC522_Clear_Bit:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function _MFRC522_Wr *****************
  4544 ;; Defined at:
  4545 ;;		line 60 in file "TAD_RFID.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  Address         1    wreg     unsigned char 
  4548 ;;  value           1    6[COMRAM] unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  Address         1    8[COMRAM] unsigned char 
  4551 ;;  i               1   10[COMRAM] unsigned char 
  4552 ;;  ucAddr          1    9[COMRAM] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1
  4562 ;;      Params:         1       0       0
  4563 ;;      Locals:         3       0       0
  4564 ;;      Temps:          1       0       0
  4565 ;;      Totals:         5       0       0
  4566 ;;Total ram usage:        5 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 4
  4569 ;; This function calls:
  4570 ;;		_delay_us
  4571 ;; This function is called by:
  4572 ;;		_MFRC522_Clear_Bit
  4573 ;;		_MFRC522_Set_Bit
  4574 ;;		_MFRC522_Reset
  4575 ;;		_MFRC522_Init
  4576 ;;		_MFRC522_ToCard
  4577 ;;		_MFRC522_Request
  4578 ;;		_MFRC522_CRC
  4579 ;;		_MFRC522_AntiColl
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text31
  4584   0008DA                     __ptext31:
  4585                           	callstack 0
  4586   0008DA                     _MFRC522_Wr:
  4587                           	callstack 24
  4588                           
  4589                           ;incstack = 0
  4590                           ;MFRC522_Wr@Address stored from wreg
  4591   0008DA  6E09               	movwf	MFRC522_Wr@Address^0,c
  4592   0008DC                     
  4593                           ;TAD_RFID.c: 61:     unsigned char i, ucAddr = ((Address << 1) & 0x7E);
  4594   0008DC  5009               	movf	MFRC522_Wr@Address^0,w,c
  4595   0008DE  2409               	addwf	MFRC522_Wr@Address^0,w,c
  4596   0008E0  0B7E               	andlw	126
  4597   0008E2  6E0A               	movwf	MFRC522_Wr@ucAddr^0,c
  4598   0008E4                     
  4599                           ;TAD_RFID.c: 62:     LATCbits.LATC2 = 0;
  4600   0008E4  948B               	bcf	139,2,c	;volatile
  4601   0008E6                     
  4602                           ;TAD_RFID.c: 63:     LATCbits.LATC3 = 0;
  4603   0008E6  968B               	bcf	139,3,c	;volatile
  4604   0008E8                     
  4605                           ;TAD_RFID.c: 64:     for (i = 8; i > 0; i--) {
  4606   0008E8  0E08               	movlw	8
  4607   0008EA  6E0B               	movwf	MFRC522_Wr@i^0,c
  4608   0008EC                     l2054:
  4609                           
  4610                           ;TAD_RFID.c: 65:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
  4611   0008EC  BE0A               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  4612   0008EE  EF7B  F004         	goto	u1211
  4613   0008F2  EF7F  F004         	goto	u1210
  4614   0008F6                     u1211:
  4615   0008F6  6A08               	clrf	??_MFRC522_Wr^0,c
  4616   0008F8  2A08               	incf	??_MFRC522_Wr^0,f,c
  4617   0008FA  EF80  F004         	goto	u1228
  4618   0008FE                     u1210:
  4619   0008FE  6A08               	clrf	??_MFRC522_Wr^0,c
  4620   000900                     u1228:
  4621   000900  4608               	rlncf	??_MFRC522_Wr^0,f,c
  4622   000902  508B               	movf	139,w,c	;volatile
  4623   000904  1808               	xorwf	??_MFRC522_Wr^0,w,c
  4624   000906  0BFD               	andlw	-3
  4625   000908  1808               	xorwf	??_MFRC522_Wr^0,w,c
  4626   00090A  6E8B               	movwf	139,c	;volatile
  4627   00090C                     
  4628                           ;TAD_RFID.c: 66:         LATCbits.LATC2 = 1;
  4629   00090C  848B               	bsf	139,2,c	;volatile
  4630                           
  4631                           ;TAD_RFID.c: 67:         ucAddr <<= 1;
  4632   00090E  90D8               	bcf	status,0,c
  4633   000910  360A               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  4634   000912                     
  4635                           ;TAD_RFID.c: 68:         delay_us(5);
  4636   000912  0E05               	movlw	5
  4637   000914  ECBD  F006         	call	_delay_us
  4638   000918                     
  4639                           ;TAD_RFID.c: 69:         LATCbits.LATC2 = 0;
  4640   000918  948B               	bcf	139,2,c	;volatile
  4641   00091A                     
  4642                           ;TAD_RFID.c: 70:         delay_us(5);
  4643   00091A  0E05               	movlw	5
  4644   00091C  ECBD  F006         	call	_delay_us
  4645   000920                     
  4646                           ;TAD_RFID.c: 71:     }
  4647   000920  060B               	decf	MFRC522_Wr@i^0,f,c
  4648   000922  500B               	movf	MFRC522_Wr@i^0,w,c
  4649   000924  A4D8               	btfss	status,2,c
  4650   000926  EF97  F004         	goto	u1231
  4651   00092A  EF99  F004         	goto	u1230
  4652   00092E                     u1231:
  4653   00092E  EF76  F004         	goto	l2054
  4654   000932                     u1230:
  4655   000932                     
  4656                           ;TAD_RFID.c: 73:     for (i = 8; i > 0; i--) {
  4657   000932  0E08               	movlw	8
  4658   000934  6E0B               	movwf	MFRC522_Wr@i^0,c
  4659   000936                     l2072:
  4660                           
  4661                           ;TAD_RFID.c: 74:         LATCbits.LATC1 = ((value & 0x80) == 0x80);
  4662   000936  BE07               	btfsc	MFRC522_Wr@value^0,7,c
  4663   000938  EFA0  F004         	goto	u1241
  4664   00093C  EFA4  F004         	goto	u1240
  4665   000940                     u1241:
  4666   000940  6A08               	clrf	??_MFRC522_Wr^0,c
  4667   000942  2A08               	incf	??_MFRC522_Wr^0,f,c
  4668   000944  EFA5  F004         	goto	u1258
  4669   000948                     u1240:
  4670   000948  6A08               	clrf	??_MFRC522_Wr^0,c
  4671   00094A                     u1258:
  4672   00094A  4608               	rlncf	??_MFRC522_Wr^0,f,c
  4673   00094C  508B               	movf	139,w,c	;volatile
  4674   00094E  1808               	xorwf	??_MFRC522_Wr^0,w,c
  4675   000950  0BFD               	andlw	-3
  4676   000952  1808               	xorwf	??_MFRC522_Wr^0,w,c
  4677   000954  6E8B               	movwf	139,c	;volatile
  4678   000956                     
  4679                           ;TAD_RFID.c: 75:         LATCbits.LATC2 = 1;
  4680   000956  848B               	bsf	139,2,c	;volatile
  4681                           
  4682                           ;TAD_RFID.c: 76:         value <<= 1;
  4683   000958  90D8               	bcf	status,0,c
  4684   00095A  3607               	rlcf	MFRC522_Wr@value^0,f,c
  4685   00095C                     
  4686                           ;TAD_RFID.c: 77:         delay_us(5);
  4687   00095C  0E05               	movlw	5
  4688   00095E  ECBD  F006         	call	_delay_us
  4689   000962                     
  4690                           ;TAD_RFID.c: 78:         LATCbits.LATC2 = 0;
  4691   000962  948B               	bcf	139,2,c	;volatile
  4692   000964                     
  4693                           ;TAD_RFID.c: 79:         delay_us(5);
  4694   000964  0E05               	movlw	5
  4695   000966  ECBD  F006         	call	_delay_us
  4696   00096A                     
  4697                           ;TAD_RFID.c: 80:     }
  4698   00096A  060B               	decf	MFRC522_Wr@i^0,f,c
  4699   00096C  500B               	movf	MFRC522_Wr@i^0,w,c
  4700   00096E  A4D8               	btfss	status,2,c
  4701   000970  EFBC  F004         	goto	u1261
  4702   000974  EFBE  F004         	goto	u1260
  4703   000978                     u1261:
  4704   000978  EF9B  F004         	goto	l2072
  4705   00097C                     u1260:
  4706   00097C                     
  4707                           ;TAD_RFID.c: 82:     LATCbits.LATC3 = 1;
  4708   00097C  868B               	bsf	139,3,c	;volatile
  4709                           
  4710                           ;TAD_RFID.c: 83:     LATCbits.LATC2 = 1;
  4711   00097E  848B               	bsf	139,2,c	;volatile
  4712   000980  0012               	return		;funcret
  4713   000982                     __end_of_MFRC522_Wr:
  4714                           	callstack 0
  4715                           
  4716 ;; *************** function _delay_us *****************
  4717 ;; Defined at:
  4718 ;;		line 23 in file "TAD_RFID.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  howMany         1    wreg     unsigned char 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  howMany         1    4[COMRAM] unsigned char 
  4723 ;;  x               1    5[COMRAM] unsigned char 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0, prodl, prodh
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1
  4733 ;;      Params:         0       0       0
  4734 ;;      Locals:         2       0       0
  4735 ;;      Temps:          3       0       0
  4736 ;;      Totals:         5       0       0
  4737 ;;Total ram usage:        5 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 3
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		_MFRC522_Wr
  4744 ;;		_MFRC522_Reset
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text32
  4749   000D7A                     __ptext32:
  4750                           	callstack 0
  4751   000D7A                     _delay_us:
  4752                           	callstack 24
  4753                           
  4754                           ;incstack = 0
  4755                           ;delay_us@howMany stored from wreg
  4756   000D7A  6E05               	movwf	delay_us@howMany^0,c
  4757   000D7C                     
  4758                           ;TAD_RFID.c: 25:     char x;;TAD_RFID.c: 26:     for (x = 0; x < howMany * 3; x++) __nop
      +                          ();
  4759   000D7C  6A06               	clrf	delay_us@x^0,c
  4760   000D7E  EFC3  F006         	goto	l1182
  4761   000D82                     l197:
  4762   000D82  0000               	nop	
  4763   000D84  2A06               	incf	delay_us@x^0,f,c
  4764   000D86                     l1182:
  4765   000D86  5005               	movf	delay_us@howMany^0,w,c
  4766   000D88  0D03               	mullw	3
  4767   000D8A  5006               	movf	delay_us@x^0,w,c
  4768   000D8C  6E02               	movwf	??_delay_us^0,c
  4769   000D8E  6A03               	clrf	(??_delay_us+1)^0,c
  4770   000D90  50F3               	movf	243,w,c
  4771   000D92  5C02               	subwf	??_delay_us^0,w,c
  4772   000D94  5003               	movf	(??_delay_us+1)^0,w,c
  4773   000D96  0A80               	xorlw	128
  4774   000D98  6E04               	movwf	(??_delay_us+2)^0,c
  4775   000D9A  50F4               	movf	244,w,c
  4776   000D9C  0A80               	xorlw	128
  4777   000D9E  5804               	subwfb	(??_delay_us+2)^0,w,c
  4778   000DA0  A0D8               	btfss	status,0,c
  4779   000DA2  EFD5  F006         	goto	u11
  4780   000DA6  EFD7  F006         	goto	u10
  4781   000DAA                     u11:
  4782   000DAA  EFC1  F006         	goto	l197
  4783   000DAE                     u10:
  4784   000DAE  0012               	return		;funcret
  4785   000DB0                     __end_of_delay_us:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _MFRC522_Rd *****************
  4789 ;; Defined at:
  4790 ;;		line 29 in file "TAD_RFID.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  Address         1    wreg     unsigned char 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  Address         1    2[COMRAM] unsigned char 
  4795 ;;  i               1    5[COMRAM] unsigned char 
  4796 ;;  ucResult        1    4[COMRAM] unsigned char 
  4797 ;;  ucAddr          1    3[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      unsigned char 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1
  4807 ;;      Params:         0       0       0
  4808 ;;      Locals:         4       0       0
  4809 ;;      Temps:          1       0       0
  4810 ;;      Totals:         5       0       0
  4811 ;;Total ram usage:        5 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 3
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_MFRC522_Clear_Bit
  4818 ;;		_MFRC522_Set_Bit
  4819 ;;		_MFRC522_ToCard
  4820 ;;		_MFRC522_CRC
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text33
  4825   000AB2                     __ptext33:
  4826                           	callstack 0
  4827   000AB2                     _MFRC522_Rd:
  4828                           	callstack 23
  4829                           
  4830                           ;incstack = 0
  4831                           ;MFRC522_Rd@Address stored from wreg
  4832   000AB2  6E03               	movwf	MFRC522_Rd@Address^0,c
  4833   000AB4                     
  4834                           ;TAD_RFID.c: 30:     unsigned char i, ucAddr = ((Address<<1) & 0x7E) | 0x80;
  4835   000AB4  5003               	movf	MFRC522_Rd@Address^0,w,c
  4836   000AB6  2403               	addwf	MFRC522_Rd@Address^0,w,c
  4837   000AB8  0B7E               	andlw	126
  4838   000ABA  0980               	iorlw	128
  4839   000ABC  6E04               	movwf	MFRC522_Rd@ucAddr^0,c
  4840   000ABE                     
  4841                           ;TAD_RFID.c: 31:     unsigned char ucResult = 0;
  4842   000ABE  6A05               	clrf	MFRC522_Rd@ucResult^0,c
  4843   000AC0                     
  4844                           ;TAD_RFID.c: 33:     LATCbits.LATC2 = 0;
  4845   000AC0  948B               	bcf	139,2,c	;volatile
  4846   000AC2                     
  4847                           ;TAD_RFID.c: 34:     LATCbits.LATC3 = 0;
  4848   000AC2  968B               	bcf	139,3,c	;volatile
  4849   000AC4                     
  4850                           ;TAD_RFID.c: 36:     for (i = 8; i > 0; i--) {
  4851   000AC4  0E08               	movlw	8
  4852   000AC6  6E06               	movwf	MFRC522_Rd@i^0,c
  4853   000AC8                     l1198:
  4854                           
  4855                           ;TAD_RFID.c: 37:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
  4856   000AC8  BE04               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  4857   000ACA  EF69  F005         	goto	u21
  4858   000ACE  EF6D  F005         	goto	u20
  4859   000AD2                     u21:
  4860   000AD2  6A02               	clrf	??_MFRC522_Rd^0,c
  4861   000AD4  2A02               	incf	??_MFRC522_Rd^0,f,c
  4862   000AD6  EF6E  F005         	goto	u38
  4863   000ADA                     u20:
  4864   000ADA  6A02               	clrf	??_MFRC522_Rd^0,c
  4865   000ADC                     u38:
  4866   000ADC  4602               	rlncf	??_MFRC522_Rd^0,f,c
  4867   000ADE  508B               	movf	139,w,c	;volatile
  4868   000AE0  1802               	xorwf	??_MFRC522_Rd^0,w,c
  4869   000AE2  0BFD               	andlw	-3
  4870   000AE4  1802               	xorwf	??_MFRC522_Rd^0,w,c
  4871   000AE6  6E8B               	movwf	139,c	;volatile
  4872   000AE8                     
  4873                           ;TAD_RFID.c: 38:         LATCbits.LATC2 = 1;
  4874   000AE8  848B               	bsf	139,2,c	;volatile
  4875                           
  4876                           ;TAD_RFID.c: 40:         ucAddr <<= 1;
  4877   000AEA  90D8               	bcf	status,0,c
  4878   000AEC  3604               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  4879   000AEE                     
  4880                           ;TAD_RFID.c: 41:         LATCbits.LATC2 = 0;
  4881   000AEE  948B               	bcf	139,2,c	;volatile
  4882   000AF0                     
  4883                           ;TAD_RFID.c: 43:     }
  4884   000AF0  0606               	decf	MFRC522_Rd@i^0,f,c
  4885   000AF2  5006               	movf	MFRC522_Rd@i^0,w,c
  4886   000AF4  A4D8               	btfss	status,2,c
  4887   000AF6  EF7F  F005         	goto	u41
  4888   000AFA  EF81  F005         	goto	u40
  4889   000AFE                     u41:
  4890   000AFE  EF64  F005         	goto	l1198
  4891   000B02                     u40:
  4892   000B02                     
  4893                           ;TAD_RFID.c: 45:     for (i = 8; i > 0; i--) {
  4894   000B02  0E08               	movlw	8
  4895   000B04  6E06               	movwf	MFRC522_Rd@i^0,c
  4896   000B06                     l204:
  4897                           
  4898                           ;TAD_RFID.c: 46:         LATCbits.LATC2 = 1;
  4899   000B06  848B               	bsf	139,2,c	;volatile
  4900   000B08                     
  4901                           ;TAD_RFID.c: 48:         ucResult <<= 1;
  4902   000B08  90D8               	bcf	status,0,c
  4903   000B0A  3605               	rlcf	MFRC522_Rd@ucResult^0,f,c
  4904                           
  4905                           ;TAD_RFID.c: 49:         ucResult|= PORTCbits.RC0;
  4906   000B0C  B082               	btfsc	130,0,c	;volatile
  4907   000B0E  EF8B  F005         	goto	u51
  4908   000B12  EF8E  F005         	goto	u50
  4909   000B16                     u51:
  4910   000B16  0E01               	movlw	1
  4911   000B18  EF8F  F005         	goto	u56
  4912   000B1C                     u50:
  4913   000B1C  0E00               	movlw	0
  4914   000B1E                     u56:
  4915   000B1E  1205               	iorwf	MFRC522_Rd@ucResult^0,f,c
  4916   000B20                     
  4917                           ;TAD_RFID.c: 50:         LATCbits.LATC2 = 0;
  4918   000B20  948B               	bcf	139,2,c	;volatile
  4919   000B22                     
  4920                           ;TAD_RFID.c: 52:     }
  4921   000B22  0606               	decf	MFRC522_Rd@i^0,f,c
  4922   000B24  5006               	movf	MFRC522_Rd@i^0,w,c
  4923   000B26  A4D8               	btfss	status,2,c
  4924   000B28  EF98  F005         	goto	u61
  4925   000B2C  EF9A  F005         	goto	u60
  4926   000B30                     u61:
  4927   000B30  EF83  F005         	goto	l204
  4928   000B34                     u60:
  4929   000B34                     
  4930                           ;TAD_RFID.c: 54:     LATCbits.LATC3 = 1;
  4931   000B34  868B               	bsf	139,3,c	;volatile
  4932                           
  4933                           ;TAD_RFID.c: 55:     LATCbits.LATC2 = 1;
  4934   000B36  848B               	bsf	139,2,c	;volatile
  4935   000B38                     
  4936                           ;TAD_RFID.c: 56:     return ucResult;
  4937   000B38  5005               	movf	MFRC522_Rd@ucResult^0,w,c
  4938   000B3A  0012               	return		;funcret
  4939   000B3C                     __end_of_MFRC522_Rd:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _InitPorts *****************
  4943 ;; Defined at:
  4944 ;;		line 54 in file "main.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, status,2, status,0
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1
  4958 ;;      Params:         0       0       0
  4959 ;;      Locals:         0       0       0
  4960 ;;      Temps:          0       0       0
  4961 ;;      Totals:         0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; Hardware stack levels required when called: 3
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text34
  4973   000F0E                     __ptext34:
  4974                           	callstack 0
  4975   000F0E                     _InitPorts:
  4976                           	callstack 27
  4977   000F0E                     
  4978                           ;main.c: 56: }
  4979   000F0E  0E0F               	movlw	15
  4980   000F10  6EC1               	movwf	193,c	;volatile
  4981   000F12  0E0F               	movlw	15
  4982   000F14  1292               	iorwf	146,f,c	;volatile
  4983   000F16  9EF1               	bcf	241,7,c	;volatile
  4984   000F18  0EF8               	movlw	248
  4985   000F1A  1693               	andwf	147,f,c	;volatile
  4986   000F1C  508A               	movf	138,w,c	;volatile
  4987   000F1E  6A95               	clrf	149,c	;volatile
  4988   000F20  6A8C               	clrf	140,c	;volatile
  4989   000F22  0012               	return		;funcret
  4990   000F24                     __end_of_InitPorts:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function _LowRSI *****************
  4994 ;; Defined at:
  4995 ;;		line 31 in file "main.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		None
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1
  5009 ;;      Params:         0       0       0
  5010 ;;      Locals:         0       0       0
  5011 ;;      Temps:          1       0       0
  5012 ;;      Totals:         1       0       0
  5013 ;;Total ram usage:        1 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 2
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		Interrupt level 1
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	intcodelo
  5024   000018                     __pintcodelo:
  5025                           	callstack 0
  5026   000018                     _LowRSI:
  5027                           	callstack 21
  5028                           
  5029                           ;incstack = 0
  5030   000018  8052               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5031   00001A  CFE0 F001          	movff	bsr,??_LowRSI
  5032   00001E  C001  FFE0         	movff	??_LowRSI,bsr
  5033   000022  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5034   000024  0010               	retfie	
  5035   000026                     __end_of_LowRSI:
  5036                           	callstack 0
  5037                           
  5038 ;; *************** function _HighRSI *****************
  5039 ;; Defined at:
  5040 ;;		line 27 in file "main.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1
  5054 ;;      Params:         0       0       0
  5055 ;;      Locals:         0       0       0
  5056 ;;      Temps:          0       0       0
  5057 ;;      Totals:         0       0       0
  5058 ;;Total ram usage:        0 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; Hardware stack levels required when called: 1
  5061 ;; This function calls:
  5062 ;;		_RSI_Timer0
  5063 ;; This function is called by:
  5064 ;;		Interrupt level 2
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	intcode
  5069   000008                     __pintcode:
  5070                           	callstack 0
  5071   000008                     _HighRSI:
  5072                           	callstack 21
  5073                           
  5074                           ;incstack = 0
  5075   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5076   00000A  EF92  F007         	goto	int_func
  5077                           
  5078                           	psect	intcode_body
  5079   000F24                     __pintcode_body:
  5080                           	callstack 21
  5081   000F24                     int_func:
  5082                           	callstack 21
  5083   000F24                     
  5084                           ;main.c: 29:  }
  5085   000F24  A4F2               	btfss	242,2,c	;volatile
  5086   000F26  EF97  F007         	goto	i2u98_41
  5087   000F2A  EF99  F007         	goto	i2u98_40
  5088   000F2E                     i2u98_41:
  5089   000F2E  EF9B  F007         	goto	i2l40
  5090   000F32                     i2u98_40:
  5091   000F32  EC7B  F007         	call	_RSI_Timer0	;wreg free
  5092   000F36                     i2l40:
  5093   000F36  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5094   000F38  0011               	retfie		f
  5095   000F3A                     __end_of_HighRSI:
  5096                           	callstack 0
  5097                           
  5098 ;; *************** function _RSI_Timer0 *****************
  5099 ;; Defined at:
  5100 ;;		line 25 in file "TAD_TIMER.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2, status,0
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1
  5114 ;;      Params:         0       0       0
  5115 ;;      Locals:         0       0       0
  5116 ;;      Temps:          0       0       0
  5117 ;;      Totals:         0       0       0
  5118 ;;Total ram usage:        0 bytes
  5119 ;; Hardware stack levels used: 1
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_HighRSI
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text37
  5128   000EF6                     __ptext37:
  5129                           	callstack 0
  5130   000EF6                     _RSI_Timer0:
  5131                           	callstack 21
  5132   000EF6                     
  5133                           ;TAD_TIMER.c: 27:     TMR0=64911;
  5134   000EF6  0EFD               	movlw	253
  5135   000EF8  6ED7               	movwf	215,c	;volatile
  5136   000EFA  0E8F               	movlw	143
  5137   000EFC  6ED6               	movwf	214,c	;volatile
  5138   000EFE                     
  5139                           ;TAD_TIMER.c: 28:     TMR0IF=0;
  5140   000EFE  94F2               	bcf	4082,2,c	;volatile
  5141   000F00                     
  5142                           ;TAD_TIMER.c: 29:     Tics++;
  5143   000F00  0E01               	movlw	1
  5144   000F02  2642               	addwf	_Tics^0,f,c	;volatile
  5145   000F04  0E00               	movlw	0
  5146   000F06  2243               	addwfc	(_Tics+1)^0,f,c	;volatile
  5147   000F08  2244               	addwfc	(_Tics+2)^0,f,c	;volatile
  5148   000F0A  2245               	addwfc	(_Tics+3)^0,f,c	;volatile
  5149   000F0C  0012               	return		;funcret
  5150   000F0E                     __end_of_RSI_Timer0:
  5151                           	callstack 0
  5152                           
  5153                           	psect	rparam
  5154   000001                     ___rparam_used  equ	1
  5155   000000                     ___param_bank   equ	0
  5156   000000                     __Lparam        equ	__Lrparam
  5157   000000                     __Hparam        equ	__Hrparam
  5158                           
  5159                           	psect	temp
  5160   000052                     btemp:
  5161                           	callstack 0
  5162   000052                     	ds	1
  5163   000052                     int$flags       set	btemp
  5164   000053                     wtemp8          set	btemp+1
  5165   000053                     ttemp5          set	btemp+1
  5166   000056                     ttemp6          set	btemp+4
  5167   00005A                     ttemp7          set	btemp+8
  5168                           
  5169                           	psect	idloc
  5170                           
  5171                           ;Config register IDLOC0 @ 0x200000
  5172                           ;	unspecified, using default values
  5173   200000                     	org	2097152
  5174   200000  FF                 	db	255
  5175                           
  5176                           ;Config register IDLOC1 @ 0x200001
  5177                           ;	unspecified, using default values
  5178   200001                     	org	2097153
  5179   200001  FF                 	db	255
  5180                           
  5181                           ;Config register IDLOC2 @ 0x200002
  5182                           ;	unspecified, using default values
  5183   200002                     	org	2097154
  5184   200002  FF                 	db	255
  5185                           
  5186                           ;Config register IDLOC3 @ 0x200003
  5187                           ;	unspecified, using default values
  5188   200003                     	org	2097155
  5189   200003  FF                 	db	255
  5190                           
  5191                           ;Config register IDLOC4 @ 0x200004
  5192                           ;	unspecified, using default values
  5193   200004                     	org	2097156
  5194   200004  FF                 	db	255
  5195                           
  5196                           ;Config register IDLOC5 @ 0x200005
  5197                           ;	unspecified, using default values
  5198   200005                     	org	2097157
  5199   200005  FF                 	db	255
  5200                           
  5201                           ;Config register IDLOC6 @ 0x200006
  5202                           ;	unspecified, using default values
  5203   200006                     	org	2097158
  5204   200006  FF                 	db	255
  5205                           
  5206                           ;Config register IDLOC7 @ 0x200007
  5207                           ;	unspecified, using default values
  5208   200007                     	org	2097159
  5209   200007  FF                 	db	255
  5210                           
  5211                           	psect	config
  5212                           
  5213                           ; Padding undefined space
  5214   300000                     	org	3145728
  5215   300000  FF                 	db	255
  5216                           
  5217                           ;Config register CONFIG1H @ 0x300001
  5218                           ;	Oscillator
  5219                           ;	OSC = HS, HS Oscillator
  5220                           ;	Fail-Safe Clock Monitor Enable bit
  5221                           ;	FCMEN = 0x0, unprogrammed default
  5222                           ;	Internal/External Oscillator Switchover bit
  5223                           ;	IESO = 0x0, unprogrammed default
  5224   300001                     	org	3145729
  5225   300001  02                 	db	2
  5226                           
  5227                           ;Config register CONFIG2L @ 0x300002
  5228                           ;	Power-up Timer Enable bit
  5229                           ;	PWRT = OFF, PWRT disabled
  5230                           ;	Brown-out Reset Enable bits
  5231                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5232                           ;	Brown-out Reset Voltage bits
  5233                           ;	BORV = 0x3, unprogrammed default
  5234   300002                     	org	3145730
  5235   300002  19                 	db	25
  5236                           
  5237                           ;Config register CONFIG2H @ 0x300003
  5238                           ;	Watchdog Timer Enable bit
  5239                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5240                           ;	Watchdog Timer Postscale Select bits
  5241                           ;	WDTPS = 0xF, unprogrammed default
  5242   300003                     	org	3145731
  5243   300003  1E                 	db	30
  5244                           
  5245                           ; Padding undefined space
  5246   300004                     	org	3145732
  5247   300004  FF                 	db	255
  5248                           
  5249                           ;Config register CONFIG3H @ 0x300005
  5250                           ;	CCP2 MUX bit
  5251                           ;	CCP2MX = 0x1, unprogrammed default
  5252                           ;	PORTB A/D Enable bit
  5253                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5254                           ;	Low-Power Timer1 Oscillator Enable bit
  5255                           ;	LPT1OSC = 0x0, unprogrammed default
  5256                           ;	MCLR Pin Enable bit
  5257                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5258   300005                     	org	3145733
  5259   300005  01                 	db	1
  5260                           
  5261                           ;Config register CONFIG4L @ 0x300006
  5262                           ;	Stack Full/Underflow Reset Enable bit
  5263                           ;	STVREN = 0x1, unprogrammed default
  5264                           ;	Single-Supply ICSP Enable bit
  5265                           ;	LVP = OFF, Single-Supply ICSP disabled
  5266                           ;	Boot Block Size Select bits
  5267                           ;	BBSIZ = 0x0, unprogrammed default
  5268                           ;	Extended Instruction Set Enable bit
  5269                           ;	XINST = 0x0, unprogrammed default
  5270                           ;	Background Debugger Enable bit
  5271                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5272   300006                     	org	3145734
  5273   300006  81                 	db	129
  5274                           
  5275                           ; Padding undefined space
  5276   300007                     	org	3145735
  5277   300007  FF                 	db	255
  5278                           
  5279                           ;Config register CONFIG5L @ 0x300008
  5280                           ;	unspecified, using default values
  5281                           ;	Code Protection bit
  5282                           ;	CP0 = 0x1, unprogrammed default
  5283                           ;	Code Protection bit
  5284                           ;	CP1 = 0x1, unprogrammed default
  5285   300008                     	org	3145736
  5286   300008  03                 	db	3
  5287                           
  5288                           ;Config register CONFIG5H @ 0x300009
  5289                           ;	unspecified, using default values
  5290                           ;	Boot Block Code Protection bitProtect Boot
  5291                           ;	CPB = 0x1, unprogrammed default
  5292                           ;	Data EEPROM Code Protection bit
  5293                           ;	CPD = 0x1, unprogrammed default
  5294   300009                     	org	3145737
  5295   300009  C0                 	db	192
  5296                           
  5297                           ;Config register CONFIG6L @ 0x30000A
  5298                           ;	unspecified, using default values
  5299                           ;	Write Protection bit
  5300                           ;	WRT0 = 0x1, unprogrammed default
  5301                           ;	Write Protection bit
  5302                           ;	WRT1 = 0x1, unprogrammed default
  5303   30000A                     	org	3145738
  5304   30000A  03                 	db	3
  5305                           
  5306                           ;Config register CONFIG6H @ 0x30000B
  5307                           ;	unspecified, using default values
  5308                           ;	Configuration Register Write Protection bit
  5309                           ;	WRTC = 0x1, unprogrammed default
  5310                           ;	Boot Block Write Protection bit
  5311                           ;	WRTB = 0x1, unprogrammed default
  5312                           ;	Data EEPROM Write Protection bit
  5313                           ;	WRTD = 0x1, unprogrammed default
  5314   30000B                     	org	3145739
  5315   30000B  E0                 	db	224
  5316                           
  5317                           ;Config register CONFIG7L @ 0x30000C
  5318                           ;	unspecified, using default values
  5319                           ;	Table Read Protection bit
  5320                           ;	EBTR0 = 0x1, unprogrammed default
  5321                           ;	Table Read Protection bit
  5322                           ;	EBTR1 = 0x1, unprogrammed default
  5323   30000C                     	org	3145740
  5324   30000C  03                 	db	3
  5325                           
  5326                           ;Config register CONFIG7H @ 0x30000D
  5327                           ;	unspecified, using default values
  5328                           ;	Boot Block Table Read Protection bit
  5329                           ;	EBTRB = 0x1, unprogrammed default
  5330   30000D                     	org	3145741
  5331   30000D  40                 	db	64
  5332                           tosu	equ	0xFFF
  5333                           tosh	equ	0xFFE
  5334                           tosl	equ	0xFFD
  5335                           stkptr	equ	0xFFC
  5336                           pclatu	equ	0xFFB
  5337                           pclath	equ	0xFFA
  5338                           pcl	equ	0xFF9
  5339                           tblptru	equ	0xFF8
  5340                           tblptrh	equ	0xFF7
  5341                           tblptrl	equ	0xFF6
  5342                           tablat	equ	0xFF5
  5343                           prodh	equ	0xFF4
  5344                           prodl	equ	0xFF3
  5345                           indf0	equ	0xFEF
  5346                           postinc0	equ	0xFEE
  5347                           postdec0	equ	0xFED
  5348                           preinc0	equ	0xFEC
  5349                           plusw0	equ	0xFEB
  5350                           fsr0h	equ	0xFEA
  5351                           fsr0l	equ	0xFE9
  5352                           wreg	equ	0xFE8
  5353                           indf1	equ	0xFE7
  5354                           postinc1	equ	0xFE6
  5355                           postdec1	equ	0xFE5
  5356                           preinc1	equ	0xFE4
  5357                           plusw1	equ	0xFE3
  5358                           fsr1h	equ	0xFE2
  5359                           fsr1l	equ	0xFE1
  5360                           bsr	equ	0xFE0
  5361                           indf2	equ	0xFDF
  5362                           postinc2	equ	0xFDE
  5363                           postdec2	equ	0xFDD
  5364                           preinc2	equ	0xFDC
  5365                           plusw2	equ	0xFDB
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8

Data Sizes:
    Strings     180
    Constant    12
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     45      81
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    displayUID@uid	PTR unsigned char  size(1) Largest target is 6
		 -> ReadRFID_NoCooperatiu@UID(COMRAM[6]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(1) Largest target is 6
		 -> ReadRFID_NoCooperatiu@UID(COMRAM[6]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(1) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(1) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_isCard@TagType	PTR unsigned char  size(1) Largest target is 1
		 -> ReadRFID_NoCooperatiu@TagType(COMRAM[1]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(1) Largest target is 6
		 -> ReadRFID_NoCooperatiu@UID(COMRAM[6]), 

    MFRC522_Request@TagType	PTR unsigned char  size(1) Largest target is 1
		 -> ReadRFID_NoCooperatiu@TagType(COMRAM[1]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(1) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), ReadRFID_NoCooperatiu@TagType(COMRAM[1]), ReadRFID_NoCooperatiu@UID(COMRAM[6]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(1) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), MFRC522_SelectTag@size(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(1) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), ReadRFID_NoCooperatiu@TagType(COMRAM[1]), ReadRFID_NoCooperatiu@UID(COMRAM[6]), 

    Terminal_SendString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> displayUID@hexString(COMRAM[11]), STR_1(CODE[6]), STR_10(CODE[9]), STR_11(CODE[31]), 
		 -> STR_2(CODE[2]), STR_3(CODE[16]), STR_4(CODE[16]), STR_5(CODE[16]), 
		 -> STR_6(CODE[18]), STR_7(CODE[25]), STR_8(CODE[27]), STR_9(CODE[32]), 

    TI_NewTimer@TimerHandle	PTR unsigned char  size(1) Largest target is 1
		 -> timer(COMRAM[1]), Timer(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ReadRFID_NoCooperatiu
    _motorTeclado->_GetTecla
    _initTeclado->_TI_NewTimer
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _ReadRFID_NoCooperatiu->_MFRC522_ReadCardSerial
    _displayUID->_Terminal_SendString
    _Terminal_SendString->_Terminal_TXAvailable
    _MFRC522_isCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Wr->_MFRC522_Rd
    _MFRC522_Wr->_delay_us

Critical Paths under _LowRSI in COMRAM

    None.

Critical Paths under _HighRSI in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowRSI in BANK0

    None.

Critical Paths under _HighRSI in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowRSI in BANK1

    None.

Critical Paths under _HighRSI in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11074
                          _InitPorts
              _ReadRFID_NoCooperatiu
                            _TI_Init
                      _Terminal_Init
                           _initRFID
                        _initTeclado
                       _motorTeclado
 ---------------------------------------------------------------------------------
 (1) _motorTeclado                                         1     1      0     112
                                             17 COMRAM     1     1      0
                           _GetTecla
                          _ReadFilas
                         _TI_GetTics
                       _TI_ResetTics
                          _showTecla
 ---------------------------------------------------------------------------------
 (2) _showTecla                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TI_ResetTics                                         1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TI_GetTics                                          13     9      4      52
                                              1 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _ReadFilas                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetTecla                                            16    16      0      45
                                              1 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0     113
                        _TI_NewTimer
 ---------------------------------------------------------------------------------
 (2) _TI_NewTimer                                          3     2      1     113
                                              1 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initRFID                                             0     0      0    1271
                 _InitPortDirections
                       _MFRC522_Init
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Init                                         0     0      0    1271
                 _MFRC522_AntennaOff
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Reset                                        0     0      0     245
                         _MFRC522_Wr
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntennaOn                                    0     0      0     404
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntennaOff                                   0     0      0     407
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (2) _InitPortDirections                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Terminal_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TI_Init                                              1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadRFID_NoCooperatiu                                7     7      0    9533
                                             38 COMRAM     7     7      0
                       _MFRC522_Halt
             _MFRC522_ReadCardSerial
                     _MFRC522_isCard
                         _displayUID
 ---------------------------------------------------------------------------------
 (2) _displayUID                                          20    19      1     543
                                              6 COMRAM    20    19      1
                _Terminal_SendString
 ---------------------------------------------------------------------------------
 (3) _Terminal_SendString                                  2     0      2      86
                                              4 COMRAM     2     0      2
                  _Terminal_SendChar
               _Terminal_TXAvailable
 ---------------------------------------------------------------------------------
 (4) _Terminal_TXAvailable                                 3     1      2       0
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _Terminal_SendChar                                    1     1      0      29
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MFRC522_isCard                                       1     0      1    2306
                                             34 COMRAM     1     0      1
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Request                                      5     4      1    2283
                                             29 COMRAM     5     4      1
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_ReadCardSerial                               2     1      1    2865
                                             36 COMRAM     2     1      1
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntiColl                                     7     6      1    2797
                                             29 COMRAM     7     6      1
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Halt                                         6     6      0    3731
                                             29 COMRAM     6     6      0
                        _MFRC522_CRC
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
 ---------------------------------------------------------------------------------
 (4) _MFRC522_ToCard                                      15    11      4    1878
                                             14 COMRAM    15    11      4
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_CRC                                          5     2      3    1297
                                             14 COMRAM     5     2      3
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      2     1      1     404
                                             11 COMRAM     2     1      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1     407
                                             11 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1     215
                                              6 COMRAM     5     4      1
                         _MFRC522_Rd (ARG)
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             5     5      0      30
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           5     5      0     105
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowRSI                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighRSI                                              0     0      0       0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (10) _RSI_Timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPorts
   _ReadRFID_NoCooperatiu
     _MFRC522_Halt
       _MFRC522_CRC
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
             _delay_us (ARG)
         _MFRC522_Rd
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
         _MFRC522_Wr
       _MFRC522_Clear_Bit
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
         _MFRC522_Rd
         _MFRC522_Set_Bit
         _MFRC522_Wr
     _MFRC522_ReadCardSerial
       _MFRC522_AntiColl
         _MFRC522_Clear_Bit
         _MFRC522_ToCard
         _MFRC522_Wr
     _MFRC522_isCard
       _MFRC522_Request
         _MFRC522_ToCard
         _MFRC522_Wr
     _displayUID
       _Terminal_SendString
         _Terminal_SendChar
         _Terminal_TXAvailable
   _TI_Init
   _Terminal_Init
   _initRFID
     _InitPortDirections
     _MFRC522_Init
       _MFRC522_AntennaOff
         _MFRC522_Clear_Bit
       _MFRC522_AntennaOn
         _MFRC522_Set_Bit
       _MFRC522_Reset
         _MFRC522_Wr
         _delay_us
       _MFRC522_Wr
   _initTeclado
     _TI_NewTimer
   _motorTeclado
     _GetTecla
     _ReadFilas
     _TI_GetTics
     _TI_ResetTics
     _showTecla

 _LowRSI (ROOT)

 _HighRSI (ROOT)
   _RSI_Timer0

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     45      81     64.3%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      81      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Feb 28 17:03:47 2025

         __end_ofGetTecla@F2717 020D                      _RSI_Timer0 0EF6                     MFRC522_Rd@i 0006  
                  MFRC522_CRC@i 0013                    MFRC522_CRC@n 0012                     MFRC522_Wr@i 000B  
                            l56 0F22                              l92 0CF8                              l85 0C5E  
                            l79 0DE2                              l89 0E84                              u10 0DAE  
                            u11 0DAA                              u20 0ADA                              u21 0AD2  
                            u40 0B02                              u41 0AFE                              u50 0B1C  
                            u51 0B16                              u60 0B34                              u61 0B30  
                            u38 0ADC                              u56 0B1E                      _TI_GetTics 0CAE  
                            bsr 0FE0            ??_InitPortDirections 0002                             l204 0B06  
                           l212 097C                             l205 0B34                             l213 0980  
                           l301 0F9C                             l125 0FB0                             l206 0B3A  
                           l222 0E38                             l231 0CAC                             l216 0EF4  
                           l128 0F6E                             l225 0F7A                             l306 0D78  
                           l219 0F4C                             l171 0866                             l163 081C  
                           l228 0F86                             l180 0FAA                             l246 04F2  
                           l262 0C06                             l159 071C                             l265 0C08  
                           l193 0F92                             l169 08D8                             l275 0AB0  
                           l259 04F4                             l292 0A1A                             l460 0EC0  
                           l197 0D82                             l285 0D3A                             l445 07E8  
                           l454 0814                             l199 0DAE                             l295 0EA4  
                           l288 0A18                             l457 0F5E                             l298 0E0E  
                           l466 0FA4                             l478 0BAE                             u410 08BE  
                           u530 0DD2                             u531 0DCE   __end_of_ReadRFID_NoCooperatiu 0D7A  
      ReadRFID_NoCooperatiu@UID 0027                             wreg 0FE8                  ??_MFRC522_Halt 001E  
                ??_MFRC522_Init 000F                            l1200 0AE8                            l1202 0AEE  
                          l1220 0B38                            l1212 0B08                            l1204 0AF0  
                          l1214 0B20                            l1206 0AF2                            l2110 0340  
                          l2102 02E8                            l1216 0B22                            l1208 0B02  
                          l2120 037A                            l2112 0342                            l2104 02FE  
                          l2200 0BEE                            l1218 0B24                            l2042 08DC  
                          l2210 0A36                            l2130 03A4                            l2122 037C  
                          l2114 0354                            l2106 0328                            l2202 0C02  
                          l1180 0D84                            l2060 0918                            l2044 08E4  
                          l2220 0A66                            l2212 0A46                            l2140 03EE  
                          l2132 03B8                            l2124 0384                            l2116 035E  
                          l2108 032E                            l2300 0CFE                            l1500 0840  
                          l1190 0AC2                            l1182 0D86                            l2062 091A  
                          l2054 08EC                            l2046 08E6                            l2230 0A90  
                          l2222 0A68                            l2214 0A48                            l2206 0A1C  
                          l2150 043A                            l2142 0402                            l2134 03C2  
                          l2126 0386                            l2118 0370                            l2302 0D00  
                          l2310 0E86                            l1502 086C                            l1192 0AC4  
                          l1184 0AB4                            l2080 0964                            l2072 0936  
                          l2064 0920                            l2056 090C                            l2048 08E8  
                          l2224 0A70                            l2216 0A4A                            l2208 0A30  
                          l2160 04B2                            l2152 0478                            l2144 0406  
                          l2136 03D2                            l2128 0396                            l2304 0D10  
                          l2240 09A6                            l2232 0982                            l1504 0874  
                          l1512 087C                            l2400 0514                            l1186 0ABE  
                          l1178 0D7C                            l2082 096A                            l2074 0956  
                          l2066 0922                            l2058 0912                            l2226 0A72  
                          l2218 0A5C                            l2170 04E0                            l2162 04B6  
                          l2154 048A                            l2146 0418                            l2138 03EC  
                          l2090 02C4                            l2306 0D1A                            l2242 09B0  
                          l2234 0984                            l2314 0DE4                            l2330 073A  
                          l2322 071E                            l1514 08B0                            l2410 054E  
                          l2402 0520                            l1188 0AC0                            l2084 096C  
                          l2076 095C                            l2068 0932                            l2228 0A82  
                          l2164 04BC                            l2156 049A                            l2148 042A  
                          l2172 04EE                            l2092 02C8                            l2308 0D30  
                          l2260 0A14                            l2252 09DA                            l2244 09C8  
                          l2236 098E                            l2316 0DEE                            l2180 0FA0  
                          l2340 0784                            l2332 074A                            l1516 08C8  
                          l1524 0FA6                            l2420 0578                            l2412 0552  
                          l2404 0530                            l1630 0F18                            l1198 0AC8  
                          l2078 0962                            l2086 0EDE                            l2166 04CC  
                          l2158 04A2                            l2094 02CA                            l2254 09E6  
                          l2246 09D8                            l2238 0998                            l2318 0DFA  
                          l2270 0B7A                            l2350 07CC                            l2342 0794  
                          l2334 075A                            l1526 0F88                            l2190 0F70  
                          l2182 0E10                            l1470 0E64                            l2430 05A6  
                          l2422 0588                            l2414 055E                            l2406 0536  
                          l1632 0F1C                            l1624 0F0E                            l2088 0F3C  
                          l2168 04CE                            l2096 02D0                            l2256 09E8  
                          l2176 0EA6                            l2272 0B7E                            l2264 0B3C  
                          l2352 07EA                            l2344 07A4                            l2336 0766  
                          l2328 0726                            l2192 0F7C                            l2184 0E12  
                          l2280 0C28                            l1472 0E66                            l2432 05AA  
                          l2416 056E                            l2408 053E                            l1634 0F1E  
                          l1626 0F12                            l2098 02DC                            l2258 09F8  
                          l2194 0BB2                            l2266 0B40                            l2346 07B0  
                          l2338 0776                            l1650 0DD2                            l2186 0E18  
                          l2282 0C44                            l2274 0C0A                            l1490 082A  
                          l1482 0FAC                            l2290 0CC4                            l1474 0E82  
                          l2450 060C                            l2434 05B0                            l2426 0592  
                          l1636 0F20                            l1628 0F16                            l2196 0BBC  
                          l2268 0B56                            l2348 07C8                            l1652 0DDE  
                          l1644 0DB2                            l2188 0E20                            l2284 0C54  
                          l2276 0C10                            l1492 0832                            l2460 064C  
                          l2452 0610                            l2444 05CA                            l2436 05B6  
                          l2428 05A2                            l2540 0E3E                            l2198 0BC6  
                          l1654 0DE0                            l1646 0DC0                            l1638 0DB0  
                          l2294 0C60                            l2390 0F94                            l1494 083A  
                          l1486 0816                            l2470 0680                            l2462 065E  
                          l2454 0614                            l2446 05DA                            l2550 0E50  
                          l2542 0E42                            l1648 0DC2                            l1664 0F4E  
                          l2296 0C64                            l2392 0F98                            l1488 0822  
                          l2288 0CB0                            l2480 06C8                            l2472 0690  
                          l2464 0664                            l2448 05FA                            l2456 061C  
                          l2552 0E52                            l2544 0E46                            l2298 0CFA  
                          l2490 0D3C                            l1666 0F5A                            l2386 0F60  
                          l2730 0892                            l2482 06CC                            l2466 066C  
                          l2458 062C                            l2394 04F6                            l2554 0E56  
                          l2546 0E4A                            l2538 0E3A                            l2492 0D54  
                          l1668 0F5C                            l2388 0F66                            l2476 06B6  
                          l2396 0500                            l2548 0E4E                            l2494 0D6C  
                          l2478 06C6                            l2398 0510                            l2486 06D4  
                          l2496 0D74                            l2488 070A                     _TI_NewTimer 0C0A  
                          STR_1 02BB                            STR_2 0290                            STR_3 0292  
                          STR_4 02A2                            STR_6 0280                            STR_7 0267  
                          STR_8 024C                            STR_9 020D                            u1210 08FE  
                          u1211 08F6                            u1300 03A4                            u1301 03A0  
                          u1230 0932                            u1310 03B8                            u1231 092E  
                          u1311 03B4                            u1240 0948                            u1320 03D2  
                          u1400 0EB8                            u1241 0940                            u1321 03CE  
                          u1401 0EB0                            u1330 03EC                            u1410 0BEE  
                          u1331 03E8                            u1411 0BEA                            u1260 097C  
                          u1228 0900                            u1340 0402                            u1420 0C02  
                          u1500 0B76                            u1261 0978                            u1341 03FE  
                          u1421 0BFE                            u1430 0A5C                            u1350 0418  
                          u1270 0354                            u1510 0B9E                            _LATB 0F8A  
                          u1431 0A58                            u1351 0414                            u1271 0350  
                          _LATC 0F8B                            u1440 0A82                            u1360 043A  
                          u1280 0370                            u1408 0EBA                            u1520 0BAE  
                          u1600 0794                            _LATD 0F8C                            u1441 0A7E  
                          u1361 0436                            u1281 036C                            u1521 0BAA  
                          u1601 0790                            u1258 094A                            u1450 0A90  
                          u1370 049A                            u1290 0396                            u1610 07E8  
                          u1530 0C24                            u1451 0A8C                            u1371 0496  
                          u1291 0392                            u1507 0B6C                            u1611 07E4  
                          u1531 0C20                            u1380 04B2                            u1460 09D8  
                          u1540 0C44                            u1700 0588                            u1381 04AE  
                          u1461 09D4                            u1517 0B94                            u1541 0C40  
                          u1701 0584                            u1390 04E0                            u1470 09F8  
                          u1550 0EA2                            u1710 05A2                            u1391 04DC  
                          u1471 09F4                            u1551 0E9C                            u1711 059E  
                          u1480 0A14                            u1560 0EA4                            u1800 0690  
                          u1720 05C6                            u1481 0A10                            u1801 068C  
                          u1721 05C2                            u1570 0E0C                            u1490 0B56  
                          u1810 06B2                            u1730 05DA                            u1571 0E06  
                          u1491 0B52                            u1811 06AE                            u1731 05D6  
                          u1580 0E0E                            u1820 06C6                            u1740 05FA  
                          u1660 0510                            u1821 06C2                            u1741 05F6  
                          u1661 050C                            u1590 074A                            u1830 0D54  
                          u1750 060C                            u1670 0530                            u1591 0746  
                          u1831 0D50                            u1751 0608                            u1671 052C  
                          u1840 0D6C                            u1760 062C                            u1680 054E  
                          u1841 0D68                            u1761 0628                            u1681 054A  
                          u1770 064C                            u1690 056E                            u1771 0648  
                          u1691 056A                            u1780 065E                            u1781 065A  
                          u1790 067C                            u1791 0678                            i1l45 001E  
                          i2l40 0F36                            i2l74 0F0C                            _TMR0 0FD6  
                   displayUID@i 0018                            _Tics 0042                            _Rows 004B  
                          _main 0E3A           MFRC522_AntiColl@unLen 0021                            fsr0h 0FEA  
                          indf0 0FEF                            fsr2h 0FDA                            fsr0l 0FE9  
                          indf2 0FDF                            fsr2l 0FD9                            btemp 0052  
               __end_of_TI_Init 0DE4                            prodh 0FF4                            prodl 0FF3  
                          start 0026                _MFRC522_AntiColl 0982                 __end_of_HighRSI 0F3A  
                  ___param_bank 0000                 ??_MFRC522_Reset 000C                    ?_initTeclado 0001  
                         ?_main 0001         ?_MFRC522_ReadCardSerial 0025                           STR_10 02B2  
                         STR_11 022D                           _T0CON 0FD5                           _RCREG 0FAE  
                         _RCSTA 0FAB                           _SPBRG 0FAF                           _PORTA 0F80  
                         _TRISA 0F92                           _TRISB 0F93                           _TRISD 0F95  
                         _TXREG 0FAD                           _TXSTA 0FAC                           _Filas 004F  
                         _Timer 0050                    _TI_ResetTics 0E62                           _tecla 004D  
                         _timer 0051          MFRC522_AntiColl@serNum 001E                           tablat 0FF5  
             _MFRC522_Clear_Bit 0EDC                           ttemp5 0053                           ttemp6 0056  
                         ttemp7 005A                           status 0FD8                           wtemp8 0053  
            Terminal_SendChar@c 0002              ?_MFRC522_Clear_Bit 000C                __end_of_GetTecla 08DA  
             _MFRC522_AntennaOn 0F70                 __initialization 0EC2                    __end_of_main 0E62  
            ?_MFRC522_AntennaOn 0001             ??_MFRC522_Clear_Bit 000D                     ?_RSI_Timer0 0001  
                TI_Init@counter 0002       MFRC522_ReadCardSerial@str 0025                     ?_TI_GetTics 0002  
__end_of_MFRC522_ReadCardSerial 0E10                ??_MFRC522_ToCard 0013                          ??_main 002E  
           ??_MFRC522_AntennaOn 000E                   __activetblptr 0002                 MFRC522_ToCard@i 001C  
               MFRC522_ToCard@n 001D                ??_MFRC522_isCard 0024           MFRC522_ToCard@backLen 0012  
            MFRC522_Rd@ucResult 0005                          _ADCON1 0FC1                 MFRC522_Wr@value 0007  
     __end_of_MFRC522_Clear_Bit 0EF6           MFRC522_ToCard@_status 0018           MFRC522_ToCard@command 001B  
                     ??_TI_Init 0002             displayUID@hexString 0009          Terminal_SendString@str 0005  
                        i2l1620 0EFE                          i2l1622 0F00                          i2l1618 0EF6  
                        i2l1824 0F24                          i2l1826 0F32           MFRC522_ToCard@sendLen 0010  
                        _TMR0IF 7F92                       ??_HighRSI 0001           MFRC522_ToCard@waitIRq 0017  
     __end_of_MFRC522_AntennaOn 0F7C                   displayUID@uid 0007                __end_of_delay_us 0DB0  
                        _LowRSI 0018                          _RowAct 0049                          _Timers 002E  
          __end_of_MFRC522_Halt 0D3C            __end_of_MFRC522_Init 0CAE                __end_of_initRFID 0F9E  
       MFRC522_AntiColl@_status 0023              motorTerminal@state 0046                          clear_0 0EC8  
                        isa$std 0001                    __mediumconst 0200                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8           __end_of_Terminal_Init 0F60  
                    __accesstop 0080         __end_of__initialization 0ECE                 delay_us@howMany 0005  
                 ___rparam_used 0001          MFRC522_Request@TagType 001E                    ??_MFRC522_Rd 0002  
                  ??_MFRC522_Wr 0008              _MFRC522_AntennaOff 0F7C           MFRC522_isCard@TagType 0023  
                __pcstackCOMRAM 0001             ?_MFRC522_AntennaOff 0001                MFRC522_Halt@buff 001E  
          TI_NewTimer@Comptador 0004          MFRC522_Request@_status 0020               __end_of_ReadFilas 0FB2  
              MFRC522_Rd@ucAddr 0004               __end_of_InitPorts 0F24          MFRC522_Request@reqMode 001F  
             motorTeclado@state 004C        __end_of_MFRC522_AntiColl 0A1C               ??_MFRC522_Set_Bit 000D  
            __end_of_MFRC522_Rd 0B3C              __end_of_MFRC522_Wr 0982                       ?_GetTecla 0001  
             ??_MFRC522_Request 001F            ??_MFRC522_AntennaOff 000F                    ?_TI_NewTimer 0002  
        MFRC522_ToCard@backData 0011          TI_NewTimer@TimerHandle 0002                         ?_LowRSI 0001  
             MFRC522_CRC@dataIn 000F               MFRC522_CRC@length 0010                MFRC522_Wr@ucAddr 000A  
       TI_ResetTics@TimerHandle 0002                         _BAUDCON 0FB8          MFRC522_ToCard@lastBits 0019  
        MFRC522_ToCard@sendData 000F                       ?_delay_us 0001                      ??_GetTecla 0002  
         _ReadRFID_NoCooperatiu 0D3C                         i2u98_40 0F32                         i2u98_41 0F2E  
             _Terminal_SendChar 0F9E                      _displayUID 071E                         _TI_Init 0DB0  
            ?_Terminal_SendChar 0001                       ?_initRFID 0001                         _HighRSI 0008  
                       _Columns 004A             ??_Terminal_SendChar 0002                         __Hparam 0000  
                       __Lparam 0000                    ??_RSI_Timer0 0001                    __psmallconst 0200  
                  ??_TI_GetTics 0006                         __pcinit 0EC2           __end_of_MFRC522_Reset 0E3A  
                       __ramtop 0200                         __ptext0 0E3A                         __ptext1 04F6  
                       __ptext2 0FA6                         __ptext3 0E62                         __ptext4 0CAE  
                       __ptext5 0FAC                         __ptext6 0816                         __ptext7 0F60  
                       __ptext8 0C0A                         __ptext9 0F94                   ?_motorTeclado 0001  
     __end_of_Terminal_SendChar 0FA6                      ??_delay_us 0002                    _MFRC522_Halt 0CFA  
                  _MFRC522_Init 0C60                  __pintcode_body 0F24            end_of_initialization 0ECE  
                    ??_initRFID 000F              __end_of_RSI_Timer0 0F0E                   __Lmediumconst 0000  
                       int_func 0F24              __end_of_TI_GetTics 0CFA               __end_of_showTecla 0FAC  
 MFRC522_ReadCardSerial@_status 0026                         postdec2 0FDD                         postinc0 0FEE  
                       postinc2 0FDE                   GetTecla@F2717 0201                  ??_motorTeclado 0012  
                     _PORTBbits 0F81                       _PORTCbits 0F82             _Terminal_SendString 0B3C  
         TI_GetTics@TimerHandle 000E          ?_ReadRFID_NoCooperatiu 0001                       _TRISBbits 0F93  
                     _TRISCbits 0F94                     ?_displayUID 0007                   ??_MFRC522_CRC 0012  
              displayUID@nibble 001A            ?_Terminal_SendString 0005               MFRC522_Rd@Address 0003  
                __end_of_LowRSI 0026                 _MFRC522_Set_Bit 0F3A         MFRC522_Request@backBits 0021  
           MFRC522_ToCard@irqEn 001A                 _MFRC522_Request 0BB0                       _ColumnAct 0048  
           start_initialization 0EC2               MFRC522_Halt@unLen 0022               ?_MFRC522_AntiColl 001E  
             MFRC522_AntiColl@i 0024                       _ReadFilas 0FAC                       _InitPorts 0F0E  
            ??_MFRC522_AntiColl 001F    __end_of_Terminal_TXAvailable 0EC2           ??_Terminal_SendString 0007  
                      ??_LowRSI 0001        ??_MFRC522_ReadCardSerial 0026             __end_of_MFRC522_CRC 0AB2  
                 ??_initTeclado 0005                     __pbssCOMRAM 002E                      ?_ReadFilas 0001  
             MFRC522_Wr@Address 0009                      ?_InitPorts 0001                   ?_TI_ResetTics 0001  
                      ?_TI_Init 0001                        ?_HighRSI 0001            __end_of_motorTeclado 071E  
       __end_of_MFRC522_Set_Bit 0F4E              MFRC522_CRC@dataOut 0011         __end_of_MFRC522_Request 0C0A  
           MFRC522_Set_Bit@addr 000D             MFRC522_Set_Bit@mask 000C                       __pintcode 0008  
    __end_of_InitPortDirections 0F94                     __pintcodelo 0018                     __smallconst 0200  
           __end_of_initTeclado 0F70                  ??_TI_ResetTics 0002                   _Terminal_Init 0F4E  
                   _MFRC522_CRC 0A1C                        _LATBbits 0F8A                        _LATCbits 0F8B  
                     delay_us@x 0006                 _hashtag_pressed 0047                        _PIR1bits 0F9E  
                     _showTecla 0FA6            _Terminal_TXAvailable 0EA6                    GetTecla@fila 0011  
       ??_ReadRFID_NoCooperatiu 0027                     ??_ReadFilas 0002                     ??_InitPorts 0002  
                  ??_displayUID 0008                        _GetTecla 0816                  _MFRC522_ToCard 02C2  
                ?_Terminal_Init 0001                     _INTCON2bits 0FF1                        _Columnas 004E  
                _MFRC522_isCard 0E86                ?_MFRC522_Set_Bit 000C                        __Hrparam 0000  
         MFRC522_Clear_Bit@addr 000E                ?_MFRC522_Request 001E           MFRC522_Clear_Bit@mask 000C  
                      __Lrparam 0000                      ?_showTecla 0001                     _initTeclado 0F60  
            __end_of_displayUID 0816           ?_Terminal_TXAvailable 0002          __end_of_MFRC522_ToCard 04F6  
        _MFRC522_ReadCardSerial 0DE4                        _delay_us 0D7A                        __ptext10 0C60  
                      __ptext11 0E10                        __ptext20 0EA6                        __ptext12 0F70  
                      __ptext21 0F9E                        __ptext13 0F7C                        __ptext30 0EDC  
                      __ptext22 0E86                        __ptext14 0F88                        __ptext31 08DA  
                      __ptext23 0BB0                        __ptext15 0F4E                        __ptext32 0D7A  
                      __ptext24 0DE4                        __ptext16 0DB0                        __ptext33 0AB2  
                      __ptext25 0982                        __ptext17 0D3C                        __ptext34 0F0E  
                      __ptext26 0CFA                        __ptext18 071E                        __ptext27 02C2  
                      __ptext19 0B3C                        __ptext28 0A1C                        __ptext37 0EF6  
                      __ptext29 0F3A                   ??_TI_NewTimer 0003          __end_of_MFRC522_isCard 0EA6  
   MFRC522_AntiColl@serNumCheck 0020                        _initRFID 0F94                      _MFRC522_Rd 0AB2  
                    _MFRC522_Wr 08DA                        isa$xinst 0000            __end_of_TI_ResetTics 0E86  
                      int$flags 0052                   _MFRC522_Reset 0E10                    _motorTeclado 04F6  
                    _INTCONbits 0FF2                 ?_MFRC522_ToCard 000F                 ??_Terminal_Init 0002  
     TI_GetTics@CopiaTicsActual 000A                 ?_MFRC522_isCard 0023     __end_of_Terminal_SendString 0BB0  
                _displayUID$841 0014                  _displayUID$842 0016                        intlevel1 0000  
                      intlevel2 0000             __end_of_TI_NewTimer 0C60                     ??_showTecla 0002  
        ??_Terminal_TXAvailable 0004    ReadRFID_NoCooperatiu@TagType 002D                  ?_MFRC522_Reset 0001  
            _InitPortDirections 0F88      __end_of_MFRC522_AntennaOff 0F88                   ?_MFRC522_Halt 0001  
                 ?_MFRC522_Init 0001             ?_InitPortDirections 0001                    ?_MFRC522_CRC 000F  
               GetTecla@columna 0010                     ?_MFRC522_Rd 0001                     ?_MFRC522_Wr 0007  
                GetTecla@keymap 0004  
