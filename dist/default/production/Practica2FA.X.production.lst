

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Mar 04 18:50:01 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 05/12/2024 GMT
    57                           ; 
    58                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4321 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000FE0                     bsr             equ	4064
    91   000FE9                     fsr0            equ	4073
    92   000FEA                     fsr0h           equ	4074
    93   000FE9                     fsr0l           equ	4073
    94   000FE1                     fsr1            equ	4065
    95   000FE2                     fsr1h           equ	4066
    96   000FE1                     fsr1l           equ	4065
    97   000FD9                     fsr2            equ	4057
    98   000FDA                     fsr2h           equ	4058
    99   000FD9                     fsr2l           equ	4057
   100   000FEF                     indf0           equ	4079
   101   000FE7                     indf1           equ	4071
   102   000FDF                     indf2           equ	4063
   103   000FF2                     intcon          equ	4082
   104   000000                     nvmcon          equ	0
   105   000FF9                     pcl             equ	4089
   106   000FFA                     pclath          equ	4090
   107   000FFB                     pclatu          equ	4091
   108   000FEB                     plusw0          equ	4075
   109   000FE3                     plusw1          equ	4067
   110   000FDB                     plusw2          equ	4059
   111   000FED                     postdec0        equ	4077
   112   000FE5                     postdec1        equ	4069
   113   000FDD                     postdec2        equ	4061
   114   000FEE                     postinc0        equ	4078
   115   000FE6                     postinc1        equ	4070
   116   000FDE                     postinc2        equ	4062
   117   000FEC                     preinc0         equ	4076
   118   000FE4                     preinc1         equ	4068
   119   000FDC                     preinc2         equ	4060
   120   000FF3                     prod            equ	4083
   121   000FF4                     prodh           equ	4084
   122   000FF3                     prodl           equ	4083
   123   000FD8                     status          equ	4056
   124   000FF5                     tablat          equ	4085
   125   000FF6                     tblptr          equ	4086
   126   000FF7                     tblptrh         equ	4087
   127   000FF6                     tblptrl         equ	4086
   128   000FF8                     tblptru         equ	4088
   129   000FFD                     tosl            equ	4093
   130   000FE8                     wreg            equ	4072
   131   000F80                     PORTA           equ	3968	;# 
   132   000F81                     PORTB           equ	3969	;# 
   133   000F82                     PORTC           equ	3970	;# 
   134   000F83                     PORTD           equ	3971	;# 
   135   000F84                     PORTE           equ	3972	;# 
   136   000F89                     LATA            equ	3977	;# 
   137   000F8A                     LATB            equ	3978	;# 
   138   000F8B                     LATC            equ	3979	;# 
   139   000F8C                     LATD            equ	3980	;# 
   140   000F8D                     LATE            equ	3981	;# 
   141   000F92                     TRISA           equ	3986	;# 
   142   000F92                     DDRA            equ	3986	;# 
   143   000F93                     TRISB           equ	3987	;# 
   144   000F93                     DDRB            equ	3987	;# 
   145   000F94                     TRISC           equ	3988	;# 
   146   000F94                     DDRC            equ	3988	;# 
   147   000F95                     TRISD           equ	3989	;# 
   148   000F95                     DDRD            equ	3989	;# 
   149   000F96                     TRISE           equ	3990	;# 
   150   000F96                     DDRE            equ	3990	;# 
   151   000F9B                     OSCTUNE         equ	3995	;# 
   152   000F9D                     PIE1            equ	3997	;# 
   153   000F9E                     PIR1            equ	3998	;# 
   154   000F9F                     IPR1            equ	3999	;# 
   155   000FA0                     PIE2            equ	4000	;# 
   156   000FA1                     PIR2            equ	4001	;# 
   157   000FA2                     IPR2            equ	4002	;# 
   158   000FA6                     EECON1          equ	4006	;# 
   159   000FA7                     EECON2          equ	4007	;# 
   160   000FA8                     EEDATA          equ	4008	;# 
   161   000FA9                     EEADR           equ	4009	;# 
   162   000FAB                     RCSTA           equ	4011	;# 
   163   000FAB                     RCSTA1          equ	4011	;# 
   164   000FAC                     TXSTA           equ	4012	;# 
   165   000FAC                     TXSTA1          equ	4012	;# 
   166   000FAD                     TXREG           equ	4013	;# 
   167   000FAD                     TXREG1          equ	4013	;# 
   168   000FAE                     RCREG           equ	4014	;# 
   169   000FAE                     RCREG1          equ	4014	;# 
   170   000FAF                     SPBRG           equ	4015	;# 
   171   000FAF                     SPBRG1          equ	4015	;# 
   172   000FB0                     SPBRGH          equ	4016	;# 
   173   000FB1                     T3CON           equ	4017	;# 
   174   000FB2                     TMR3            equ	4018	;# 
   175   000FB2                     TMR3L           equ	4018	;# 
   176   000FB3                     TMR3H           equ	4019	;# 
   177   000FB4                     CMCON           equ	4020	;# 
   178   000FB5                     CVRCON          equ	4021	;# 
   179   000FB6                     ECCP1AS         equ	4022	;# 
   180   000FB7                     ECCP1DEL        equ	4023	;# 
   181   000FB7                     PWM1CON         equ	4023	;# 
   182   000FB8                     BAUDCON         equ	4024	;# 
   183   000FB8                     BAUDCTL         equ	4024	;# 
   184   000FBA                     CCP2CON         equ	4026	;# 
   185   000FBB                     CCPR2           equ	4027	;# 
   186   000FBB                     CCPR2L          equ	4027	;# 
   187   000FBC                     CCPR2H          equ	4028	;# 
   188   000FBD                     CCP1CON         equ	4029	;# 
   189   000FBD                     ECCP1CON        equ	4029	;# 
   190   000FBE                     CCPR1           equ	4030	;# 
   191   000FBE                     CCPR1L          equ	4030	;# 
   192   000FBF                     CCPR1H          equ	4031	;# 
   193   000FC0                     ADCON2          equ	4032	;# 
   194   000FC1                     ADCON1          equ	4033	;# 
   195   000FC2                     ADCON0          equ	4034	;# 
   196   000FC3                     ADRES           equ	4035	;# 
   197   000FC3                     ADRESL          equ	4035	;# 
   198   000FC4                     ADRESH          equ	4036	;# 
   199   000FC5                     SSPCON2         equ	4037	;# 
   200   000FC6                     SSPCON1         equ	4038	;# 
   201   000FC7                     SSPSTAT         equ	4039	;# 
   202   000FC8                     SSPADD          equ	4040	;# 
   203   000FC9                     SSPBUF          equ	4041	;# 
   204   000FCA                     T2CON           equ	4042	;# 
   205   000FCB                     PR2             equ	4043	;# 
   206   000FCB                     MEMCON          equ	4043	;# 
   207   000FCC                     TMR2            equ	4044	;# 
   208   000FCD                     T1CON           equ	4045	;# 
   209   000FCE                     TMR1            equ	4046	;# 
   210   000FCE                     TMR1L           equ	4046	;# 
   211   000FCF                     TMR1H           equ	4047	;# 
   212   000FD0                     RCON            equ	4048	;# 
   213   000FD1                     WDTCON          equ	4049	;# 
   214   000FD2                     HLVDCON         equ	4050	;# 
   215   000FD2                     LVDCON          equ	4050	;# 
   216   000FD3                     OSCCON          equ	4051	;# 
   217   000FD5                     T0CON           equ	4053	;# 
   218   000FD6                     TMR0            equ	4054	;# 
   219   000FD6                     TMR0L           equ	4054	;# 
   220   000FD7                     TMR0H           equ	4055	;# 
   221   000FD8                     STATUS          equ	4056	;# 
   222   000FD9                     FSR2            equ	4057	;# 
   223   000FD9                     FSR2L           equ	4057	;# 
   224   000FDA                     FSR2H           equ	4058	;# 
   225   000FDB                     PLUSW2          equ	4059	;# 
   226   000FDC                     PREINC2         equ	4060	;# 
   227   000FDD                     POSTDEC2        equ	4061	;# 
   228   000FDE                     POSTINC2        equ	4062	;# 
   229   000FDF                     INDF2           equ	4063	;# 
   230   000FE0                     BSR             equ	4064	;# 
   231   000FE1                     FSR1            equ	4065	;# 
   232   000FE1                     FSR1L           equ	4065	;# 
   233   000FE2                     FSR1H           equ	4066	;# 
   234   000FE3                     PLUSW1          equ	4067	;# 
   235   000FE4                     PREINC1         equ	4068	;# 
   236   000FE5                     POSTDEC1        equ	4069	;# 
   237   000FE6                     POSTINC1        equ	4070	;# 
   238   000FE7                     INDF1           equ	4071	;# 
   239   000FE8                     WREG            equ	4072	;# 
   240   000FE9                     FSR0            equ	4073	;# 
   241   000FE9                     FSR0L           equ	4073	;# 
   242   000FEA                     FSR0H           equ	4074	;# 
   243   000FEB                     PLUSW0          equ	4075	;# 
   244   000FEC                     PREINC0         equ	4076	;# 
   245   000FED                     POSTDEC0        equ	4077	;# 
   246   000FEE                     POSTINC0        equ	4078	;# 
   247   000FEF                     INDF0           equ	4079	;# 
   248   000FF0                     INTCON3         equ	4080	;# 
   249   000FF1                     INTCON2         equ	4081	;# 
   250   000FF2                     INTCON          equ	4082	;# 
   251   000FF3                     PROD            equ	4083	;# 
   252   000FF3                     PRODL           equ	4083	;# 
   253   000FF4                     PRODH           equ	4084	;# 
   254   000FF5                     TABLAT          equ	4085	;# 
   255   000FF6                     TBLPTR          equ	4086	;# 
   256   000FF6                     TBLPTRL         equ	4086	;# 
   257   000FF7                     TBLPTRH         equ	4087	;# 
   258   000FF8                     TBLPTRU         equ	4088	;# 
   259   000FF9                     PCLAT           equ	4089	;# 
   260   000FF9                     PC              equ	4089	;# 
   261   000FF9                     PCL             equ	4089	;# 
   262   000FFA                     PCLATH          equ	4090	;# 
   263   000FFB                     PCLATU          equ	4091	;# 
   264   000FFC                     STKPTR          equ	4092	;# 
   265   000FFD                     TOS             equ	4093	;# 
   266   000FFD                     TOSL            equ	4093	;# 
   267   000FFE                     TOSH            equ	4094	;# 
   268   000FFF                     TOSU            equ	4095	;# 
   269   000F80                     PORTA           equ	3968	;# 
   270   000F81                     PORTB           equ	3969	;# 
   271   000F82                     PORTC           equ	3970	;# 
   272   000F83                     PORTD           equ	3971	;# 
   273   000F84                     PORTE           equ	3972	;# 
   274   000F89                     LATA            equ	3977	;# 
   275   000F8A                     LATB            equ	3978	;# 
   276   000F8B                     LATC            equ	3979	;# 
   277   000F8C                     LATD            equ	3980	;# 
   278   000F8D                     LATE            equ	3981	;# 
   279   000F92                     TRISA           equ	3986	;# 
   280   000F92                     DDRA            equ	3986	;# 
   281   000F93                     TRISB           equ	3987	;# 
   282   000F93                     DDRB            equ	3987	;# 
   283   000F94                     TRISC           equ	3988	;# 
   284   000F94                     DDRC            equ	3988	;# 
   285   000F95                     TRISD           equ	3989	;# 
   286   000F95                     DDRD            equ	3989	;# 
   287   000F96                     TRISE           equ	3990	;# 
   288   000F96                     DDRE            equ	3990	;# 
   289   000F9B                     OSCTUNE         equ	3995	;# 
   290   000F9D                     PIE1            equ	3997	;# 
   291   000F9E                     PIR1            equ	3998	;# 
   292   000F9F                     IPR1            equ	3999	;# 
   293   000FA0                     PIE2            equ	4000	;# 
   294   000FA1                     PIR2            equ	4001	;# 
   295   000FA2                     IPR2            equ	4002	;# 
   296   000FA6                     EECON1          equ	4006	;# 
   297   000FA7                     EECON2          equ	4007	;# 
   298   000FA8                     EEDATA          equ	4008	;# 
   299   000FA9                     EEADR           equ	4009	;# 
   300   000FAB                     RCSTA           equ	4011	;# 
   301   000FAB                     RCSTA1          equ	4011	;# 
   302   000FAC                     TXSTA           equ	4012	;# 
   303   000FAC                     TXSTA1          equ	4012	;# 
   304   000FAD                     TXREG           equ	4013	;# 
   305   000FAD                     TXREG1          equ	4013	;# 
   306   000FAE                     RCREG           equ	4014	;# 
   307   000FAE                     RCREG1          equ	4014	;# 
   308   000FAF                     SPBRG           equ	4015	;# 
   309   000FAF                     SPBRG1          equ	4015	;# 
   310   000FB0                     SPBRGH          equ	4016	;# 
   311   000FB1                     T3CON           equ	4017	;# 
   312   000FB2                     TMR3            equ	4018	;# 
   313   000FB2                     TMR3L           equ	4018	;# 
   314   000FB3                     TMR3H           equ	4019	;# 
   315   000FB4                     CMCON           equ	4020	;# 
   316   000FB5                     CVRCON          equ	4021	;# 
   317   000FB6                     ECCP1AS         equ	4022	;# 
   318   000FB7                     ECCP1DEL        equ	4023	;# 
   319   000FB7                     PWM1CON         equ	4023	;# 
   320   000FB8                     BAUDCON         equ	4024	;# 
   321   000FB8                     BAUDCTL         equ	4024	;# 
   322   000FBA                     CCP2CON         equ	4026	;# 
   323   000FBB                     CCPR2           equ	4027	;# 
   324   000FBB                     CCPR2L          equ	4027	;# 
   325   000FBC                     CCPR2H          equ	4028	;# 
   326   000FBD                     CCP1CON         equ	4029	;# 
   327   000FBD                     ECCP1CON        equ	4029	;# 
   328   000FBE                     CCPR1           equ	4030	;# 
   329   000FBE                     CCPR1L          equ	4030	;# 
   330   000FBF                     CCPR1H          equ	4031	;# 
   331   000FC0                     ADCON2          equ	4032	;# 
   332   000FC1                     ADCON1          equ	4033	;# 
   333   000FC2                     ADCON0          equ	4034	;# 
   334   000FC3                     ADRES           equ	4035	;# 
   335   000FC3                     ADRESL          equ	4035	;# 
   336   000FC4                     ADRESH          equ	4036	;# 
   337   000FC5                     SSPCON2         equ	4037	;# 
   338   000FC6                     SSPCON1         equ	4038	;# 
   339   000FC7                     SSPSTAT         equ	4039	;# 
   340   000FC8                     SSPADD          equ	4040	;# 
   341   000FC9                     SSPBUF          equ	4041	;# 
   342   000FCA                     T2CON           equ	4042	;# 
   343   000FCB                     PR2             equ	4043	;# 
   344   000FCB                     MEMCON          equ	4043	;# 
   345   000FCC                     TMR2            equ	4044	;# 
   346   000FCD                     T1CON           equ	4045	;# 
   347   000FCE                     TMR1            equ	4046	;# 
   348   000FCE                     TMR1L           equ	4046	;# 
   349   000FCF                     TMR1H           equ	4047	;# 
   350   000FD0                     RCON            equ	4048	;# 
   351   000FD1                     WDTCON          equ	4049	;# 
   352   000FD2                     HLVDCON         equ	4050	;# 
   353   000FD2                     LVDCON          equ	4050	;# 
   354   000FD3                     OSCCON          equ	4051	;# 
   355   000FD5                     T0CON           equ	4053	;# 
   356   000FD6                     TMR0            equ	4054	;# 
   357   000FD6                     TMR0L           equ	4054	;# 
   358   000FD7                     TMR0H           equ	4055	;# 
   359   000FD8                     STATUS          equ	4056	;# 
   360   000FD9                     FSR2            equ	4057	;# 
   361   000FD9                     FSR2L           equ	4057	;# 
   362   000FDA                     FSR2H           equ	4058	;# 
   363   000FDB                     PLUSW2          equ	4059	;# 
   364   000FDC                     PREINC2         equ	4060	;# 
   365   000FDD                     POSTDEC2        equ	4061	;# 
   366   000FDE                     POSTINC2        equ	4062	;# 
   367   000FDF                     INDF2           equ	4063	;# 
   368   000FE0                     BSR             equ	4064	;# 
   369   000FE1                     FSR1            equ	4065	;# 
   370   000FE1                     FSR1L           equ	4065	;# 
   371   000FE2                     FSR1H           equ	4066	;# 
   372   000FE3                     PLUSW1          equ	4067	;# 
   373   000FE4                     PREINC1         equ	4068	;# 
   374   000FE5                     POSTDEC1        equ	4069	;# 
   375   000FE6                     POSTINC1        equ	4070	;# 
   376   000FE7                     INDF1           equ	4071	;# 
   377   000FE8                     WREG            equ	4072	;# 
   378   000FE9                     FSR0            equ	4073	;# 
   379   000FE9                     FSR0L           equ	4073	;# 
   380   000FEA                     FSR0H           equ	4074	;# 
   381   000FEB                     PLUSW0          equ	4075	;# 
   382   000FEC                     PREINC0         equ	4076	;# 
   383   000FED                     POSTDEC0        equ	4077	;# 
   384   000FEE                     POSTINC0        equ	4078	;# 
   385   000FEF                     INDF0           equ	4079	;# 
   386   000FF0                     INTCON3         equ	4080	;# 
   387   000FF1                     INTCON2         equ	4081	;# 
   388   000FF2                     INTCON          equ	4082	;# 
   389   000FF3                     PROD            equ	4083	;# 
   390   000FF3                     PRODL           equ	4083	;# 
   391   000FF4                     PRODH           equ	4084	;# 
   392   000FF5                     TABLAT          equ	4085	;# 
   393   000FF6                     TBLPTR          equ	4086	;# 
   394   000FF6                     TBLPTRL         equ	4086	;# 
   395   000FF7                     TBLPTRH         equ	4087	;# 
   396   000FF8                     TBLPTRU         equ	4088	;# 
   397   000FF9                     PCLAT           equ	4089	;# 
   398   000FF9                     PC              equ	4089	;# 
   399   000FF9                     PCL             equ	4089	;# 
   400   000FFA                     PCLATH          equ	4090	;# 
   401   000FFB                     PCLATU          equ	4091	;# 
   402   000FFC                     STKPTR          equ	4092	;# 
   403   000FFD                     TOS             equ	4093	;# 
   404   000FFD                     TOSL            equ	4093	;# 
   405   000FFE                     TOSH            equ	4094	;# 
   406   000FFF                     TOSU            equ	4095	;# 
   407   000F80                     PORTA           equ	3968	;# 
   408   000F81                     PORTB           equ	3969	;# 
   409   000F82                     PORTC           equ	3970	;# 
   410   000F83                     PORTD           equ	3971	;# 
   411   000F84                     PORTE           equ	3972	;# 
   412   000F89                     LATA            equ	3977	;# 
   413   000F8A                     LATB            equ	3978	;# 
   414   000F8B                     LATC            equ	3979	;# 
   415   000F8C                     LATD            equ	3980	;# 
   416   000F8D                     LATE            equ	3981	;# 
   417   000F92                     TRISA           equ	3986	;# 
   418   000F92                     DDRA            equ	3986	;# 
   419   000F93                     TRISB           equ	3987	;# 
   420   000F93                     DDRB            equ	3987	;# 
   421   000F94                     TRISC           equ	3988	;# 
   422   000F94                     DDRC            equ	3988	;# 
   423   000F95                     TRISD           equ	3989	;# 
   424   000F95                     DDRD            equ	3989	;# 
   425   000F96                     TRISE           equ	3990	;# 
   426   000F96                     DDRE            equ	3990	;# 
   427   000F9B                     OSCTUNE         equ	3995	;# 
   428   000F9D                     PIE1            equ	3997	;# 
   429   000F9E                     PIR1            equ	3998	;# 
   430   000F9F                     IPR1            equ	3999	;# 
   431   000FA0                     PIE2            equ	4000	;# 
   432   000FA1                     PIR2            equ	4001	;# 
   433   000FA2                     IPR2            equ	4002	;# 
   434   000FA6                     EECON1          equ	4006	;# 
   435   000FA7                     EECON2          equ	4007	;# 
   436   000FA8                     EEDATA          equ	4008	;# 
   437   000FA9                     EEADR           equ	4009	;# 
   438   000FAB                     RCSTA           equ	4011	;# 
   439   000FAB                     RCSTA1          equ	4011	;# 
   440   000FAC                     TXSTA           equ	4012	;# 
   441   000FAC                     TXSTA1          equ	4012	;# 
   442   000FAD                     TXREG           equ	4013	;# 
   443   000FAD                     TXREG1          equ	4013	;# 
   444   000FAE                     RCREG           equ	4014	;# 
   445   000FAE                     RCREG1          equ	4014	;# 
   446   000FAF                     SPBRG           equ	4015	;# 
   447   000FAF                     SPBRG1          equ	4015	;# 
   448   000FB0                     SPBRGH          equ	4016	;# 
   449   000FB1                     T3CON           equ	4017	;# 
   450   000FB2                     TMR3            equ	4018	;# 
   451   000FB2                     TMR3L           equ	4018	;# 
   452   000FB3                     TMR3H           equ	4019	;# 
   453   000FB4                     CMCON           equ	4020	;# 
   454   000FB5                     CVRCON          equ	4021	;# 
   455   000FB6                     ECCP1AS         equ	4022	;# 
   456   000FB7                     ECCP1DEL        equ	4023	;# 
   457   000FB7                     PWM1CON         equ	4023	;# 
   458   000FB8                     BAUDCON         equ	4024	;# 
   459   000FB8                     BAUDCTL         equ	4024	;# 
   460   000FBA                     CCP2CON         equ	4026	;# 
   461   000FBB                     CCPR2           equ	4027	;# 
   462   000FBB                     CCPR2L          equ	4027	;# 
   463   000FBC                     CCPR2H          equ	4028	;# 
   464   000FBD                     CCP1CON         equ	4029	;# 
   465   000FBD                     ECCP1CON        equ	4029	;# 
   466   000FBE                     CCPR1           equ	4030	;# 
   467   000FBE                     CCPR1L          equ	4030	;# 
   468   000FBF                     CCPR1H          equ	4031	;# 
   469   000FC0                     ADCON2          equ	4032	;# 
   470   000FC1                     ADCON1          equ	4033	;# 
   471   000FC2                     ADCON0          equ	4034	;# 
   472   000FC3                     ADRES           equ	4035	;# 
   473   000FC3                     ADRESL          equ	4035	;# 
   474   000FC4                     ADRESH          equ	4036	;# 
   475   000FC5                     SSPCON2         equ	4037	;# 
   476   000FC6                     SSPCON1         equ	4038	;# 
   477   000FC7                     SSPSTAT         equ	4039	;# 
   478   000FC8                     SSPADD          equ	4040	;# 
   479   000FC9                     SSPBUF          equ	4041	;# 
   480   000FCA                     T2CON           equ	4042	;# 
   481   000FCB                     PR2             equ	4043	;# 
   482   000FCB                     MEMCON          equ	4043	;# 
   483   000FCC                     TMR2            equ	4044	;# 
   484   000FCD                     T1CON           equ	4045	;# 
   485   000FCE                     TMR1            equ	4046	;# 
   486   000FCE                     TMR1L           equ	4046	;# 
   487   000FCF                     TMR1H           equ	4047	;# 
   488   000FD0                     RCON            equ	4048	;# 
   489   000FD1                     WDTCON          equ	4049	;# 
   490   000FD2                     HLVDCON         equ	4050	;# 
   491   000FD2                     LVDCON          equ	4050	;# 
   492   000FD3                     OSCCON          equ	4051	;# 
   493   000FD5                     T0CON           equ	4053	;# 
   494   000FD6                     TMR0            equ	4054	;# 
   495   000FD6                     TMR0L           equ	4054	;# 
   496   000FD7                     TMR0H           equ	4055	;# 
   497   000FD8                     STATUS          equ	4056	;# 
   498   000FD9                     FSR2            equ	4057	;# 
   499   000FD9                     FSR2L           equ	4057	;# 
   500   000FDA                     FSR2H           equ	4058	;# 
   501   000FDB                     PLUSW2          equ	4059	;# 
   502   000FDC                     PREINC2         equ	4060	;# 
   503   000FDD                     POSTDEC2        equ	4061	;# 
   504   000FDE                     POSTINC2        equ	4062	;# 
   505   000FDF                     INDF2           equ	4063	;# 
   506   000FE0                     BSR             equ	4064	;# 
   507   000FE1                     FSR1            equ	4065	;# 
   508   000FE1                     FSR1L           equ	4065	;# 
   509   000FE2                     FSR1H           equ	4066	;# 
   510   000FE3                     PLUSW1          equ	4067	;# 
   511   000FE4                     PREINC1         equ	4068	;# 
   512   000FE5                     POSTDEC1        equ	4069	;# 
   513   000FE6                     POSTINC1        equ	4070	;# 
   514   000FE7                     INDF1           equ	4071	;# 
   515   000FE8                     WREG            equ	4072	;# 
   516   000FE9                     FSR0            equ	4073	;# 
   517   000FE9                     FSR0L           equ	4073	;# 
   518   000FEA                     FSR0H           equ	4074	;# 
   519   000FEB                     PLUSW0          equ	4075	;# 
   520   000FEC                     PREINC0         equ	4076	;# 
   521   000FED                     POSTDEC0        equ	4077	;# 
   522   000FEE                     POSTINC0        equ	4078	;# 
   523   000FEF                     INDF0           equ	4079	;# 
   524   000FF0                     INTCON3         equ	4080	;# 
   525   000FF1                     INTCON2         equ	4081	;# 
   526   000FF2                     INTCON          equ	4082	;# 
   527   000FF3                     PROD            equ	4083	;# 
   528   000FF3                     PRODL           equ	4083	;# 
   529   000FF4                     PRODH           equ	4084	;# 
   530   000FF5                     TABLAT          equ	4085	;# 
   531   000FF6                     TBLPTR          equ	4086	;# 
   532   000FF6                     TBLPTRL         equ	4086	;# 
   533   000FF7                     TBLPTRH         equ	4087	;# 
   534   000FF8                     TBLPTRU         equ	4088	;# 
   535   000FF9                     PCLAT           equ	4089	;# 
   536   000FF9                     PC              equ	4089	;# 
   537   000FF9                     PCL             equ	4089	;# 
   538   000FFA                     PCLATH          equ	4090	;# 
   539   000FFB                     PCLATU          equ	4091	;# 
   540   000FFC                     STKPTR          equ	4092	;# 
   541   000FFD                     TOS             equ	4093	;# 
   542   000FFD                     TOSL            equ	4093	;# 
   543   000FFE                     TOSH            equ	4094	;# 
   544   000FFF                     TOSU            equ	4095	;# 
   545   000F80                     PORTA           equ	3968	;# 
   546   000F81                     PORTB           equ	3969	;# 
   547   000F82                     PORTC           equ	3970	;# 
   548   000F83                     PORTD           equ	3971	;# 
   549   000F84                     PORTE           equ	3972	;# 
   550   000F89                     LATA            equ	3977	;# 
   551   000F8A                     LATB            equ	3978	;# 
   552   000F8B                     LATC            equ	3979	;# 
   553   000F8C                     LATD            equ	3980	;# 
   554   000F8D                     LATE            equ	3981	;# 
   555   000F92                     TRISA           equ	3986	;# 
   556   000F92                     DDRA            equ	3986	;# 
   557   000F93                     TRISB           equ	3987	;# 
   558   000F93                     DDRB            equ	3987	;# 
   559   000F94                     TRISC           equ	3988	;# 
   560   000F94                     DDRC            equ	3988	;# 
   561   000F95                     TRISD           equ	3989	;# 
   562   000F95                     DDRD            equ	3989	;# 
   563   000F96                     TRISE           equ	3990	;# 
   564   000F96                     DDRE            equ	3990	;# 
   565   000F9B                     OSCTUNE         equ	3995	;# 
   566   000F9D                     PIE1            equ	3997	;# 
   567   000F9E                     PIR1            equ	3998	;# 
   568   000F9F                     IPR1            equ	3999	;# 
   569   000FA0                     PIE2            equ	4000	;# 
   570   000FA1                     PIR2            equ	4001	;# 
   571   000FA2                     IPR2            equ	4002	;# 
   572   000FA6                     EECON1          equ	4006	;# 
   573   000FA7                     EECON2          equ	4007	;# 
   574   000FA8                     EEDATA          equ	4008	;# 
   575   000FA9                     EEADR           equ	4009	;# 
   576   000FAB                     RCSTA           equ	4011	;# 
   577   000FAB                     RCSTA1          equ	4011	;# 
   578   000FAC                     TXSTA           equ	4012	;# 
   579   000FAC                     TXSTA1          equ	4012	;# 
   580   000FAD                     TXREG           equ	4013	;# 
   581   000FAD                     TXREG1          equ	4013	;# 
   582   000FAE                     RCREG           equ	4014	;# 
   583   000FAE                     RCREG1          equ	4014	;# 
   584   000FAF                     SPBRG           equ	4015	;# 
   585   000FAF                     SPBRG1          equ	4015	;# 
   586   000FB0                     SPBRGH          equ	4016	;# 
   587   000FB1                     T3CON           equ	4017	;# 
   588   000FB2                     TMR3            equ	4018	;# 
   589   000FB2                     TMR3L           equ	4018	;# 
   590   000FB3                     TMR3H           equ	4019	;# 
   591   000FB4                     CMCON           equ	4020	;# 
   592   000FB5                     CVRCON          equ	4021	;# 
   593   000FB6                     ECCP1AS         equ	4022	;# 
   594   000FB7                     ECCP1DEL        equ	4023	;# 
   595   000FB7                     PWM1CON         equ	4023	;# 
   596   000FB8                     BAUDCON         equ	4024	;# 
   597   000FB8                     BAUDCTL         equ	4024	;# 
   598   000FBA                     CCP2CON         equ	4026	;# 
   599   000FBB                     CCPR2           equ	4027	;# 
   600   000FBB                     CCPR2L          equ	4027	;# 
   601   000FBC                     CCPR2H          equ	4028	;# 
   602   000FBD                     CCP1CON         equ	4029	;# 
   603   000FBD                     ECCP1CON        equ	4029	;# 
   604   000FBE                     CCPR1           equ	4030	;# 
   605   000FBE                     CCPR1L          equ	4030	;# 
   606   000FBF                     CCPR1H          equ	4031	;# 
   607   000FC0                     ADCON2          equ	4032	;# 
   608   000FC1                     ADCON1          equ	4033	;# 
   609   000FC2                     ADCON0          equ	4034	;# 
   610   000FC3                     ADRES           equ	4035	;# 
   611   000FC3                     ADRESL          equ	4035	;# 
   612   000FC4                     ADRESH          equ	4036	;# 
   613   000FC5                     SSPCON2         equ	4037	;# 
   614   000FC6                     SSPCON1         equ	4038	;# 
   615   000FC7                     SSPSTAT         equ	4039	;# 
   616   000FC8                     SSPADD          equ	4040	;# 
   617   000FC9                     SSPBUF          equ	4041	;# 
   618   000FCA                     T2CON           equ	4042	;# 
   619   000FCB                     PR2             equ	4043	;# 
   620   000FCB                     MEMCON          equ	4043	;# 
   621   000FCC                     TMR2            equ	4044	;# 
   622   000FCD                     T1CON           equ	4045	;# 
   623   000FCE                     TMR1            equ	4046	;# 
   624   000FCE                     TMR1L           equ	4046	;# 
   625   000FCF                     TMR1H           equ	4047	;# 
   626   000FD0                     RCON            equ	4048	;# 
   627   000FD1                     WDTCON          equ	4049	;# 
   628   000FD2                     HLVDCON         equ	4050	;# 
   629   000FD2                     LVDCON          equ	4050	;# 
   630   000FD3                     OSCCON          equ	4051	;# 
   631   000FD5                     T0CON           equ	4053	;# 
   632   000FD6                     TMR0            equ	4054	;# 
   633   000FD6                     TMR0L           equ	4054	;# 
   634   000FD7                     TMR0H           equ	4055	;# 
   635   000FD8                     STATUS          equ	4056	;# 
   636   000FD9                     FSR2            equ	4057	;# 
   637   000FD9                     FSR2L           equ	4057	;# 
   638   000FDA                     FSR2H           equ	4058	;# 
   639   000FDB                     PLUSW2          equ	4059	;# 
   640   000FDC                     PREINC2         equ	4060	;# 
   641   000FDD                     POSTDEC2        equ	4061	;# 
   642   000FDE                     POSTINC2        equ	4062	;# 
   643   000FDF                     INDF2           equ	4063	;# 
   644   000FE0                     BSR             equ	4064	;# 
   645   000FE1                     FSR1            equ	4065	;# 
   646   000FE1                     FSR1L           equ	4065	;# 
   647   000FE2                     FSR1H           equ	4066	;# 
   648   000FE3                     PLUSW1          equ	4067	;# 
   649   000FE4                     PREINC1         equ	4068	;# 
   650   000FE5                     POSTDEC1        equ	4069	;# 
   651   000FE6                     POSTINC1        equ	4070	;# 
   652   000FE7                     INDF1           equ	4071	;# 
   653   000FE8                     WREG            equ	4072	;# 
   654   000FE9                     FSR0            equ	4073	;# 
   655   000FE9                     FSR0L           equ	4073	;# 
   656   000FEA                     FSR0H           equ	4074	;# 
   657   000FEB                     PLUSW0          equ	4075	;# 
   658   000FEC                     PREINC0         equ	4076	;# 
   659   000FED                     POSTDEC0        equ	4077	;# 
   660   000FEE                     POSTINC0        equ	4078	;# 
   661   000FEF                     INDF0           equ	4079	;# 
   662   000FF0                     INTCON3         equ	4080	;# 
   663   000FF1                     INTCON2         equ	4081	;# 
   664   000FF2                     INTCON          equ	4082	;# 
   665   000FF3                     PROD            equ	4083	;# 
   666   000FF3                     PRODL           equ	4083	;# 
   667   000FF4                     PRODH           equ	4084	;# 
   668   000FF5                     TABLAT          equ	4085	;# 
   669   000FF6                     TBLPTR          equ	4086	;# 
   670   000FF6                     TBLPTRL         equ	4086	;# 
   671   000FF7                     TBLPTRH         equ	4087	;# 
   672   000FF8                     TBLPTRU         equ	4088	;# 
   673   000FF9                     PCLAT           equ	4089	;# 
   674   000FF9                     PC              equ	4089	;# 
   675   000FF9                     PCL             equ	4089	;# 
   676   000FFA                     PCLATH          equ	4090	;# 
   677   000FFB                     PCLATU          equ	4091	;# 
   678   000FFC                     STKPTR          equ	4092	;# 
   679   000FFD                     TOS             equ	4093	;# 
   680   000FFD                     TOSL            equ	4093	;# 
   681   000FFE                     TOSH            equ	4094	;# 
   682   000FFF                     TOSU            equ	4095	;# 
   683   000F80                     PORTA           equ	3968	;# 
   684   000F81                     PORTB           equ	3969	;# 
   685   000F82                     PORTC           equ	3970	;# 
   686   000F83                     PORTD           equ	3971	;# 
   687   000F84                     PORTE           equ	3972	;# 
   688   000F89                     LATA            equ	3977	;# 
   689   000F8A                     LATB            equ	3978	;# 
   690   000F8B                     LATC            equ	3979	;# 
   691   000F8C                     LATD            equ	3980	;# 
   692   000F8D                     LATE            equ	3981	;# 
   693   000F92                     TRISA           equ	3986	;# 
   694   000F92                     DDRA            equ	3986	;# 
   695   000F93                     TRISB           equ	3987	;# 
   696   000F93                     DDRB            equ	3987	;# 
   697   000F94                     TRISC           equ	3988	;# 
   698   000F94                     DDRC            equ	3988	;# 
   699   000F95                     TRISD           equ	3989	;# 
   700   000F95                     DDRD            equ	3989	;# 
   701   000F96                     TRISE           equ	3990	;# 
   702   000F96                     DDRE            equ	3990	;# 
   703   000F9B                     OSCTUNE         equ	3995	;# 
   704   000F9D                     PIE1            equ	3997	;# 
   705   000F9E                     PIR1            equ	3998	;# 
   706   000F9F                     IPR1            equ	3999	;# 
   707   000FA0                     PIE2            equ	4000	;# 
   708   000FA1                     PIR2            equ	4001	;# 
   709   000FA2                     IPR2            equ	4002	;# 
   710   000FA6                     EECON1          equ	4006	;# 
   711   000FA7                     EECON2          equ	4007	;# 
   712   000FA8                     EEDATA          equ	4008	;# 
   713   000FA9                     EEADR           equ	4009	;# 
   714   000FAB                     RCSTA           equ	4011	;# 
   715   000FAB                     RCSTA1          equ	4011	;# 
   716   000FAC                     TXSTA           equ	4012	;# 
   717   000FAC                     TXSTA1          equ	4012	;# 
   718   000FAD                     TXREG           equ	4013	;# 
   719   000FAD                     TXREG1          equ	4013	;# 
   720   000FAE                     RCREG           equ	4014	;# 
   721   000FAE                     RCREG1          equ	4014	;# 
   722   000FAF                     SPBRG           equ	4015	;# 
   723   000FAF                     SPBRG1          equ	4015	;# 
   724   000FB0                     SPBRGH          equ	4016	;# 
   725   000FB1                     T3CON           equ	4017	;# 
   726   000FB2                     TMR3            equ	4018	;# 
   727   000FB2                     TMR3L           equ	4018	;# 
   728   000FB3                     TMR3H           equ	4019	;# 
   729   000FB4                     CMCON           equ	4020	;# 
   730   000FB5                     CVRCON          equ	4021	;# 
   731   000FB6                     ECCP1AS         equ	4022	;# 
   732   000FB7                     ECCP1DEL        equ	4023	;# 
   733   000FB7                     PWM1CON         equ	4023	;# 
   734   000FB8                     BAUDCON         equ	4024	;# 
   735   000FB8                     BAUDCTL         equ	4024	;# 
   736   000FBA                     CCP2CON         equ	4026	;# 
   737   000FBB                     CCPR2           equ	4027	;# 
   738   000FBB                     CCPR2L          equ	4027	;# 
   739   000FBC                     CCPR2H          equ	4028	;# 
   740   000FBD                     CCP1CON         equ	4029	;# 
   741   000FBD                     ECCP1CON        equ	4029	;# 
   742   000FBE                     CCPR1           equ	4030	;# 
   743   000FBE                     CCPR1L          equ	4030	;# 
   744   000FBF                     CCPR1H          equ	4031	;# 
   745   000FC0                     ADCON2          equ	4032	;# 
   746   000FC1                     ADCON1          equ	4033	;# 
   747   000FC2                     ADCON0          equ	4034	;# 
   748   000FC3                     ADRES           equ	4035	;# 
   749   000FC3                     ADRESL          equ	4035	;# 
   750   000FC4                     ADRESH          equ	4036	;# 
   751   000FC5                     SSPCON2         equ	4037	;# 
   752   000FC6                     SSPCON1         equ	4038	;# 
   753   000FC7                     SSPSTAT         equ	4039	;# 
   754   000FC8                     SSPADD          equ	4040	;# 
   755   000FC9                     SSPBUF          equ	4041	;# 
   756   000FCA                     T2CON           equ	4042	;# 
   757   000FCB                     PR2             equ	4043	;# 
   758   000FCB                     MEMCON          equ	4043	;# 
   759   000FCC                     TMR2            equ	4044	;# 
   760   000FCD                     T1CON           equ	4045	;# 
   761   000FCE                     TMR1            equ	4046	;# 
   762   000FCE                     TMR1L           equ	4046	;# 
   763   000FCF                     TMR1H           equ	4047	;# 
   764   000FD0                     RCON            equ	4048	;# 
   765   000FD1                     WDTCON          equ	4049	;# 
   766   000FD2                     HLVDCON         equ	4050	;# 
   767   000FD2                     LVDCON          equ	4050	;# 
   768   000FD3                     OSCCON          equ	4051	;# 
   769   000FD5                     T0CON           equ	4053	;# 
   770   000FD6                     TMR0            equ	4054	;# 
   771   000FD6                     TMR0L           equ	4054	;# 
   772   000FD7                     TMR0H           equ	4055	;# 
   773   000FD8                     STATUS          equ	4056	;# 
   774   000FD9                     FSR2            equ	4057	;# 
   775   000FD9                     FSR2L           equ	4057	;# 
   776   000FDA                     FSR2H           equ	4058	;# 
   777   000FDB                     PLUSW2          equ	4059	;# 
   778   000FDC                     PREINC2         equ	4060	;# 
   779   000FDD                     POSTDEC2        equ	4061	;# 
   780   000FDE                     POSTINC2        equ	4062	;# 
   781   000FDF                     INDF2           equ	4063	;# 
   782   000FE0                     BSR             equ	4064	;# 
   783   000FE1                     FSR1            equ	4065	;# 
   784   000FE1                     FSR1L           equ	4065	;# 
   785   000FE2                     FSR1H           equ	4066	;# 
   786   000FE3                     PLUSW1          equ	4067	;# 
   787   000FE4                     PREINC1         equ	4068	;# 
   788   000FE5                     POSTDEC1        equ	4069	;# 
   789   000FE6                     POSTINC1        equ	4070	;# 
   790   000FE7                     INDF1           equ	4071	;# 
   791   000FE8                     WREG            equ	4072	;# 
   792   000FE9                     FSR0            equ	4073	;# 
   793   000FE9                     FSR0L           equ	4073	;# 
   794   000FEA                     FSR0H           equ	4074	;# 
   795   000FEB                     PLUSW0          equ	4075	;# 
   796   000FEC                     PREINC0         equ	4076	;# 
   797   000FED                     POSTDEC0        equ	4077	;# 
   798   000FEE                     POSTINC0        equ	4078	;# 
   799   000FEF                     INDF0           equ	4079	;# 
   800   000FF0                     INTCON3         equ	4080	;# 
   801   000FF1                     INTCON2         equ	4081	;# 
   802   000FF2                     INTCON          equ	4082	;# 
   803   000FF3                     PROD            equ	4083	;# 
   804   000FF3                     PRODL           equ	4083	;# 
   805   000FF4                     PRODH           equ	4084	;# 
   806   000FF5                     TABLAT          equ	4085	;# 
   807   000FF6                     TBLPTR          equ	4086	;# 
   808   000FF6                     TBLPTRL         equ	4086	;# 
   809   000FF7                     TBLPTRH         equ	4087	;# 
   810   000FF8                     TBLPTRU         equ	4088	;# 
   811   000FF9                     PCLAT           equ	4089	;# 
   812   000FF9                     PC              equ	4089	;# 
   813   000FF9                     PCL             equ	4089	;# 
   814   000FFA                     PCLATH          equ	4090	;# 
   815   000FFB                     PCLATU          equ	4091	;# 
   816   000FFC                     STKPTR          equ	4092	;# 
   817   000FFD                     TOS             equ	4093	;# 
   818   000FFD                     TOSL            equ	4093	;# 
   819   000FFE                     TOSH            equ	4094	;# 
   820   000FFF                     TOSU            equ	4095	;# 
   821   000F80                     PORTA           equ	3968	;# 
   822   000F81                     PORTB           equ	3969	;# 
   823   000F82                     PORTC           equ	3970	;# 
   824   000F83                     PORTD           equ	3971	;# 
   825   000F84                     PORTE           equ	3972	;# 
   826   000F89                     LATA            equ	3977	;# 
   827   000F8A                     LATB            equ	3978	;# 
   828   000F8B                     LATC            equ	3979	;# 
   829   000F8C                     LATD            equ	3980	;# 
   830   000F8D                     LATE            equ	3981	;# 
   831   000F92                     TRISA           equ	3986	;# 
   832   000F92                     DDRA            equ	3986	;# 
   833   000F93                     TRISB           equ	3987	;# 
   834   000F93                     DDRB            equ	3987	;# 
   835   000F94                     TRISC           equ	3988	;# 
   836   000F94                     DDRC            equ	3988	;# 
   837   000F95                     TRISD           equ	3989	;# 
   838   000F95                     DDRD            equ	3989	;# 
   839   000F96                     TRISE           equ	3990	;# 
   840   000F96                     DDRE            equ	3990	;# 
   841   000F9B                     OSCTUNE         equ	3995	;# 
   842   000F9D                     PIE1            equ	3997	;# 
   843   000F9E                     PIR1            equ	3998	;# 
   844   000F9F                     IPR1            equ	3999	;# 
   845   000FA0                     PIE2            equ	4000	;# 
   846   000FA1                     PIR2            equ	4001	;# 
   847   000FA2                     IPR2            equ	4002	;# 
   848   000FA6                     EECON1          equ	4006	;# 
   849   000FA7                     EECON2          equ	4007	;# 
   850   000FA8                     EEDATA          equ	4008	;# 
   851   000FA9                     EEADR           equ	4009	;# 
   852   000FAB                     RCSTA           equ	4011	;# 
   853   000FAB                     RCSTA1          equ	4011	;# 
   854   000FAC                     TXSTA           equ	4012	;# 
   855   000FAC                     TXSTA1          equ	4012	;# 
   856   000FAD                     TXREG           equ	4013	;# 
   857   000FAD                     TXREG1          equ	4013	;# 
   858   000FAE                     RCREG           equ	4014	;# 
   859   000FAE                     RCREG1          equ	4014	;# 
   860   000FAF                     SPBRG           equ	4015	;# 
   861   000FAF                     SPBRG1          equ	4015	;# 
   862   000FB0                     SPBRGH          equ	4016	;# 
   863   000FB1                     T3CON           equ	4017	;# 
   864   000FB2                     TMR3            equ	4018	;# 
   865   000FB2                     TMR3L           equ	4018	;# 
   866   000FB3                     TMR3H           equ	4019	;# 
   867   000FB4                     CMCON           equ	4020	;# 
   868   000FB5                     CVRCON          equ	4021	;# 
   869   000FB6                     ECCP1AS         equ	4022	;# 
   870   000FB7                     ECCP1DEL        equ	4023	;# 
   871   000FB7                     PWM1CON         equ	4023	;# 
   872   000FB8                     BAUDCON         equ	4024	;# 
   873   000FB8                     BAUDCTL         equ	4024	;# 
   874   000FBA                     CCP2CON         equ	4026	;# 
   875   000FBB                     CCPR2           equ	4027	;# 
   876   000FBB                     CCPR2L          equ	4027	;# 
   877   000FBC                     CCPR2H          equ	4028	;# 
   878   000FBD                     CCP1CON         equ	4029	;# 
   879   000FBD                     ECCP1CON        equ	4029	;# 
   880   000FBE                     CCPR1           equ	4030	;# 
   881   000FBE                     CCPR1L          equ	4030	;# 
   882   000FBF                     CCPR1H          equ	4031	;# 
   883   000FC0                     ADCON2          equ	4032	;# 
   884   000FC1                     ADCON1          equ	4033	;# 
   885   000FC2                     ADCON0          equ	4034	;# 
   886   000FC3                     ADRES           equ	4035	;# 
   887   000FC3                     ADRESL          equ	4035	;# 
   888   000FC4                     ADRESH          equ	4036	;# 
   889   000FC5                     SSPCON2         equ	4037	;# 
   890   000FC6                     SSPCON1         equ	4038	;# 
   891   000FC7                     SSPSTAT         equ	4039	;# 
   892   000FC8                     SSPADD          equ	4040	;# 
   893   000FC9                     SSPBUF          equ	4041	;# 
   894   000FCA                     T2CON           equ	4042	;# 
   895   000FCB                     PR2             equ	4043	;# 
   896   000FCB                     MEMCON          equ	4043	;# 
   897   000FCC                     TMR2            equ	4044	;# 
   898   000FCD                     T1CON           equ	4045	;# 
   899   000FCE                     TMR1            equ	4046	;# 
   900   000FCE                     TMR1L           equ	4046	;# 
   901   000FCF                     TMR1H           equ	4047	;# 
   902   000FD0                     RCON            equ	4048	;# 
   903   000FD1                     WDTCON          equ	4049	;# 
   904   000FD2                     HLVDCON         equ	4050	;# 
   905   000FD2                     LVDCON          equ	4050	;# 
   906   000FD3                     OSCCON          equ	4051	;# 
   907   000FD5                     T0CON           equ	4053	;# 
   908   000FD6                     TMR0            equ	4054	;# 
   909   000FD6                     TMR0L           equ	4054	;# 
   910   000FD7                     TMR0H           equ	4055	;# 
   911   000FD8                     STATUS          equ	4056	;# 
   912   000FD9                     FSR2            equ	4057	;# 
   913   000FD9                     FSR2L           equ	4057	;# 
   914   000FDA                     FSR2H           equ	4058	;# 
   915   000FDB                     PLUSW2          equ	4059	;# 
   916   000FDC                     PREINC2         equ	4060	;# 
   917   000FDD                     POSTDEC2        equ	4061	;# 
   918   000FDE                     POSTINC2        equ	4062	;# 
   919   000FDF                     INDF2           equ	4063	;# 
   920   000FE0                     BSR             equ	4064	;# 
   921   000FE1                     FSR1            equ	4065	;# 
   922   000FE1                     FSR1L           equ	4065	;# 
   923   000FE2                     FSR1H           equ	4066	;# 
   924   000FE3                     PLUSW1          equ	4067	;# 
   925   000FE4                     PREINC1         equ	4068	;# 
   926   000FE5                     POSTDEC1        equ	4069	;# 
   927   000FE6                     POSTINC1        equ	4070	;# 
   928   000FE7                     INDF1           equ	4071	;# 
   929   000FE8                     WREG            equ	4072	;# 
   930   000FE9                     FSR0            equ	4073	;# 
   931   000FE9                     FSR0L           equ	4073	;# 
   932   000FEA                     FSR0H           equ	4074	;# 
   933   000FEB                     PLUSW0          equ	4075	;# 
   934   000FEC                     PREINC0         equ	4076	;# 
   935   000FED                     POSTDEC0        equ	4077	;# 
   936   000FEE                     POSTINC0        equ	4078	;# 
   937   000FEF                     INDF0           equ	4079	;# 
   938   000FF0                     INTCON3         equ	4080	;# 
   939   000FF1                     INTCON2         equ	4081	;# 
   940   000FF2                     INTCON          equ	4082	;# 
   941   000FF3                     PROD            equ	4083	;# 
   942   000FF3                     PRODL           equ	4083	;# 
   943   000FF4                     PRODH           equ	4084	;# 
   944   000FF5                     TABLAT          equ	4085	;# 
   945   000FF6                     TBLPTR          equ	4086	;# 
   946   000FF6                     TBLPTRL         equ	4086	;# 
   947   000FF7                     TBLPTRH         equ	4087	;# 
   948   000FF8                     TBLPTRU         equ	4088	;# 
   949   000FF9                     PCLAT           equ	4089	;# 
   950   000FF9                     PC              equ	4089	;# 
   951   000FF9                     PCL             equ	4089	;# 
   952   000FFA                     PCLATH          equ	4090	;# 
   953   000FFB                     PCLATU          equ	4091	;# 
   954   000FFC                     STKPTR          equ	4092	;# 
   955   000FFD                     TOS             equ	4093	;# 
   956   000FFD                     TOSL            equ	4093	;# 
   957   000FFE                     TOSH            equ	4094	;# 
   958   000FFF                     TOSU            equ	4095	;# 
   959                           
   960                           	psect	mediumconst
   961   001EF6                     __pmediumconst:
   962                           	callstack 0
   963   001EF6  00                 	db	0
   964   001EF7                     GetTecla@F3224:
   965                           	callstack 0
   966   001EF7  01                 	db	1
   967   001EF8  02                 	db	2
   968   001EF9  03                 	db	3
   969   001EFA  04                 	db	4
   970   001EFB  05                 	db	5
   971   001EFC  06                 	db	6
   972   001EFD  07                 	db	7
   973   001EFE  08                 	db	8
   974   001EFF  09                 	db	9
   975   001F00  0A                 	db	10
   976   001F01  00                 	db	0
   977   001F02  0B                 	db	11
   978   001F03                     __end_ofGetTecla@F3224:
   979                           	callstack 0
   980   007F92                     _TMR0IF         set	32658
   981   000FD6                     _TMR0           set	4054
   982   000FAE                     _RCREG          set	4014
   983   000FAD                     _TXREG          set	4013
   984   000F9E                     _PIR1bits       set	3998
   985   000FB8                     _BAUDCON        set	4024
   986   000FAF                     _SPBRG          set	4015
   987   000FAB                     _RCSTA          set	4011
   988   000FAC                     _TXSTA          set	4012
   989   000F81                     _PORTBbits      set	3969
   990   000F8A                     _LATBbits       set	3978
   991   000F93                     _TRISBbits      set	3987
   992   000F82                     _PORTCbits      set	3970
   993   000F8B                     _LATCbits       set	3979
   994   000F94                     _TRISCbits      set	3988
   995   000F8C                     _LATD           set	3980
   996   000F95                     _TRISD          set	3989
   997   000F83                     _PORTD          set	3971
   998   000FD5                     _T0CON          set	4053
   999   000F8B                     _LATC           set	3979
  1000   000FF2                     _INTCONbits     set	4082
  1001   001F03                     STR_1:
  1002   001F03  53                 	db	83	;'S'
  1003   001F04  74                 	db	116	;'t'
  1004   001F05  61                 	db	97	;'a'
  1005   001F06  74                 	db	116	;'t'
  1006   001F07  65                 	db	101	;'e'
  1007   001F08  3A                 	db	58	;':'
  1008   001F09  20                 	db	32
  1009   001F0A  25                 	db	37
  1010   001F0B  64                 	db	100	;'d'
  1011   001F0C  09                 	db	9
  1012   001F0D  46                 	db	70	;'F'
  1013   001F0E  69                 	db	105	;'i'
  1014   001F0F  6C                 	db	108	;'l'
  1015   001F10  61                 	db	97	;'a'
  1016   001F11  73                 	db	115	;'s'
  1017   001F12  3A                 	db	58	;':'
  1018   001F13  20                 	db	32
  1019   001F14  25                 	db	37
  1020   001F15  64                 	db	100	;'d'
  1021   001F16  09                 	db	9
  1022   001F17  43                 	db	67	;'C'
  1023   001F18  6F                 	db	111	;'o'
  1024   001F19  6C                 	db	108	;'l'
  1025   001F1A  75                 	db	117	;'u'
  1026   001F1B  6D                 	db	109	;'m'
  1027   001F1C  6E                 	db	110	;'n'
  1028   001F1D  61                 	db	97	;'a'
  1029   001F1E  73                 	db	115	;'s'
  1030   001F1F  3A                 	db	58	;':'
  1031   001F20  20                 	db	32
  1032   001F21  25                 	db	37
  1033   001F22  64                 	db	100	;'d'
  1034   001F23  09                 	db	9
  1035   001F24  54                 	db	84	;'T'
  1036   001F25  65                 	db	101	;'e'
  1037   001F26  63                 	db	99	;'c'
  1038   001F27  6C                 	db	108	;'l'
  1039   001F28  61                 	db	97	;'a'
  1040   001F29  3A                 	db	58	;':'
  1041   001F2A  20                 	db	32
  1042   001F2B  25                 	db	37
  1043   001F2C  64                 	db	100	;'d'
  1044   001F2D  0D                 	db	13
  1045   001F2E  0A                 	db	10
  1046   001F2F  00                 	db	0
  1047   001F30  45                 	db	69	;'E'
  1048   001F31  52                 	db	82	;'R'
  1049   001F32  52                 	db	82	;'R'
  1050   001F33  4F                 	db	79	;'O'
  1051   001F34  52                 	db	82	;'R'
  1052   001F35  2E                 	db	46
  1053   001F36  20                 	db	32
  1054   001F37  56                 	db	86	;'V'
  1055   001F38  61                 	db	97	;'a'
  1056   001F39  6C                 	db	108	;'l'
  1057   001F3A  6F                 	db	111	;'o'
  1058   001F3B  72                 	db	114	;'r'
  1059   001F3C  20                 	db	32
  1060   001F3D  69                 	db	105	;'i'
  1061   001F3E  6E                 	db	110	;'n'
  1062   001F3F  74                 	db	116	;'t'
  1063   001F40  72                 	db	114	;'r'
  1064   001F41  6F                 	db	111	;'o'
  1065   001F42  64                 	db	100	;'d'
  1066   001F43  75                 	db	117	;'u'
  1067   001F44  69                 	db	105	;'i'
  1068   001F45  74                 	db	116	;'t'
  1069   001F46  20                 	db	32
  1070   001F47  65                 	db	101	;'e'
  1071   001F48  72                 	db	114	;'r'
  1072   001F49  72                 	db	114	;'r'
  1073   001F4A  6F                 	db	111	;'o'
  1074   001F4B  6E                 	db	110	;'n'
  1075   001F4C  69                 	db	105	;'i'
  1076   001F4D  2E                 	db	46
  1077   001F4E  0D                 	db	13
  1078   001F4F  0A                 	db	10
  1079   001F50  00                 	db	0
  1080   001F51  09                 	db	9
  1081   001F52  33                 	db	51	;'3'
  1082   001F53  2E                 	db	46
  1083   001F54  20                 	db	32
  1084   001F55  4D                 	db	77	;'M'
  1085   001F56  6F                 	db	111	;'o'
  1086   001F57  64                 	db	100	;'d'
  1087   001F58  69                 	db	105	;'i'
  1088   001F59  66                 	db	102	;'f'
  1089   001F5A  69                 	db	105	;'i'
  1090   001F5B  63                 	db	99	;'c'
  1091   001F5C  61                 	db	97	;'a'
  1092   001F5D  72                 	db	114	;'r'
  1093   001F5E  20                 	db	32
  1094   001F5F  68                 	db	104	;'h'
  1095   001F60  6F                 	db	111	;'o'
  1096   001F61  72                 	db	114	;'r'
  1097   001F62  61                 	db	97	;'a'
  1098   001F63  20                 	db	32
  1099   001F64  64                 	db	100	;'d'
  1100   001F65  65                 	db	101	;'e'
  1101   001F66  6C                 	db	108	;'l'
  1102   001F67  20                 	db	32
  1103   001F68  73                 	db	115	;'s'
  1104   001F69  69                 	db	105	;'i'
  1105   001F6A  73                 	db	115	;'s'
  1106   001F6B  74                 	db	116	;'t'
  1107   001F6C  65                 	db	101	;'e'
  1108   001F6D  6D                 	db	109	;'m'
  1109   001F6E  61                 	db	97	;'a'
  1110   001F6F  0D                 	db	13
  1111   001F70  0A                 	db	10
  1112   001F71  00                 	db	0
  1113   001F72  09                 	db	9
  1114   001F73  32                 	db	50	;'2'
  1115   001F74  2E                 	db	46
  1116   001F75  20                 	db	32
  1117   001F76  4D                 	db	77	;'M'
  1118   001F77  6F                 	db	111	;'o'
  1119   001F78  73                 	db	115	;'s'
  1120   001F79  74                 	db	116	;'t'
  1121   001F7A  72                 	db	114	;'r'
  1122   001F7B  61                 	db	97	;'a'
  1123   001F7C  72                 	db	114	;'r'
  1124   001F7D  20                 	db	32
  1125   001F7E  63                 	db	99	;'c'
  1126   001F7F  6F                 	db	111	;'o'
  1127   001F80  6E                 	db	110	;'n'
  1128   001F81  66                 	db	102	;'f'
  1129   001F82  69                 	db	105	;'i'
  1130   001F83  67                 	db	103	;'g'
  1131   001F84  75                 	db	117	;'u'
  1132   001F85  72                 	db	114	;'r'
  1133   001F86  61                 	db	97	;'a'
  1134   001F87  63                 	db	99	;'c'
  1135   001F88  69                 	db	105	;'i'
  1136   001F89  6F                 	db	111	;'o'
  1137   001F8A  6E                 	db	110	;'n'
  1138   001F8B  73                 	db	115	;'s'
  1139   001F8C  0D                 	db	13
  1140   001F8D  0A                 	db	10
  1141   001F8E  00                 	db	0
  1142   001F8F  09                 	db	9
  1143   001F90  31                 	db	49	;'1'
  1144   001F91  2E                 	db	46
  1145   001F92  20                 	db	32
  1146   001F93  51                 	db	81	;'Q'
  1147   001F94  75                 	db	117	;'u'
  1148   001F95  69                 	db	105	;'i'
  1149   001F96  20                 	db	32
  1150   001F97  68                 	db	104	;'h'
  1151   001F98  69                 	db	105	;'i'
  1152   001F99  20                 	db	32
  1153   001F9A  68                 	db	104	;'h'
  1154   001F9B  61                 	db	97	;'a'
  1155   001F9C  20                 	db	32
  1156   001F9D  61                 	db	97	;'a'
  1157   001F9E  20                 	db	32
  1158   001F9F  6C                 	db	108	;'l'
  1159   001FA0  61                 	db	97	;'a'
  1160   001FA1  20                 	db	32
  1161   001FA2  73                 	db	115	;'s'
  1162   001FA3  61                 	db	97	;'a'
  1163   001FA4  6C                 	db	108	;'l'
  1164   001FA5  61                 	db	97	;'a'
  1165   001FA6  3F                 	db	63	;'?'
  1166   001FA7  0D                 	db	13
  1167   001FA8  0A                 	db	10
  1168   001FA9  00                 	db	0
  1169   001FAA  54                 	db	84	;'T'
  1170   001FAB  72                 	db	114	;'r'
  1171   001FAC  69                 	db	105	;'i'
  1172   001FAD  61                 	db	97	;'a'
  1173   001FAE  20                 	db	32
  1174   001FAF  75                 	db	117	;'u'
  1175   001FB0  6E                 	db	110	;'n'
  1176   001FB1  61                 	db	97	;'a'
  1177   001FB2  20                 	db	32
  1178   001FB3  6F                 	db	111	;'o'
  1179   001FB4  70                 	db	112	;'p'
  1180   001FB5  63                 	db	99	;'c'
  1181   001FB6  69                 	db	105	;'i'
  1182   001FB7  C3                 	db	-61
  1183   001FB8  B3                 	db	-77
  1184   001FB9  3A                 	db	58	;':'
  1185   001FBA  0D                 	db	13
  1186   001FBB  0A                 	db	10
  1187   001FBC  00                 	db	0
  1188   001FBD                     STR_4:
  1189   001FBD  2D                 	db	45
  1190   001FBE  2D                 	db	45
  1191   001FBF  2D                 	db	45
  1192   001FC0  2D                 	db	45
  1193   001FC1  2D                 	db	45
  1194   001FC2  2D                 	db	45
  1195   001FC3  2D                 	db	45
  1196   001FC4  2D                 	db	45
  1197   001FC5  2D                 	db	45
  1198   001FC6  2D                 	db	45
  1199   001FC7  2D                 	db	45
  1200   001FC8  2D                 	db	45
  1201   001FC9  2D                 	db	45
  1202   001FCA  2D                 	db	45
  1203   001FCB  2D                 	db	45
  1204   001FCC  0D                 	db	13
  1205   001FCD  0A                 	db	10
  1206   001FCE  00                 	db	0
  1207   001FCF  4D                 	db	77	;'M'
  1208   001FD0  65                 	db	101	;'e'
  1209   001FD1  6E                 	db	110	;'n'
  1210   001FD2  C3                 	db	-61
  1211   001FD3  BA                 	db	-70
  1212   001FD4  20                 	db	32
  1213   001FD5  70                 	db	112	;'p'
  1214   001FD6  72                 	db	114	;'r'
  1215   001FD7  69                 	db	105	;'i'
  1216   001FD8  6E                 	db	110	;'n'
  1217   001FD9  63                 	db	99	;'c'
  1218   001FDA  69                 	db	105	;'i'
  1219   001FDB  70                 	db	112	;'p'
  1220   001FDC  61                 	db	97	;'a'
  1221   001FDD  6C                 	db	108	;'l'
  1222   001FDE  0D                 	db	13
  1223   001FDF  0A                 	db	10
  1224   001FE0  00                 	db	0
  1225   001FE1  48                 	db	72	;'H'
  1226   001FE2  61                 	db	97	;'a'
  1227   001FE3  73                 	db	115	;'s'
  1228   001FE4  20                 	db	32
  1229   001FE5  70                 	db	112	;'p'
  1230   001FE6  75                 	db	117	;'u'
  1231   001FE7  6C                 	db	108	;'l'
  1232   001FE8  73                 	db	115	;'s'
  1233   001FE9  61                 	db	97	;'a'
  1234   001FEA  64                 	db	100	;'d'
  1235   001FEB  6F                 	db	111	;'o'
  1236   001FEC  20                 	db	32
  1237   001FED  31                 	db	49	;'1'
  1238   001FEE  00                 	db	0
  1239   001FEF  4F                 	db	79	;'O'
  1240   001FF0  70                 	db	112	;'p'
  1241   001FF1  63                 	db	99	;'c'
  1242   001FF2  69                 	db	105	;'i'
  1243   001FF3  C3                 	db	-61
  1244   001FF4  B3                 	db	-77
  1245   001FF5  3A                 	db	58	;':'
  1246   001FF6  20                 	db	32
  1247   001FF7  00                 	db	0
  1248   001FF8  55                 	db	85	;'U'
  1249   001FF9  49                 	db	73	;'I'
  1250   001FFA  44                 	db	68	;'D'
  1251   001FFB  3A                 	db	58	;':'
  1252   001FFC  20                 	db	32
  1253   001FFD  00                 	db	0
  1254   001FBD                     STR_6           equ	STR_4
  1255   001FCD                     STR_3           equ	STR_4+16
  1256   001FFE  00                 	db	0	; dummy byte at the end
  1257   001EF6                     __smallconst    set	__pmediumconst
  1258   001EF6                     __mediumconst   set	__pmediumconst
  1259   000002                     __activetblptr  equ	2
  1260                           
  1261                           ; #config settings
  1262                           
  1263                           	psect	cinit
  1264   000B3E                     __pcinit:
  1265                           	callstack 0
  1266   000B3E                     start_initialization:
  1267                           	callstack 0
  1268   000B3E                     __initialization:
  1269                           	callstack 0
  1270                           
  1271                           ; Clear objects allocated to BANK0 (32 bytes)
  1272   000B3E  EE00  F080         	lfsr	0,__pbssBANK0
  1273   000B42  0E20               	movlw	32
  1274   000B44                     clear_0:
  1275   000B44  6AEE               	clrf	postinc0,c
  1276   000B46  06E8               	decf	wreg,f,c
  1277   000B48  E1FD               	bnz	clear_0
  1278                           
  1279                           ; Clear objects allocated to COMRAM (41 bytes)
  1280   000B4A  EE00  F036         	lfsr	0,__pbssCOMRAM
  1281   000B4E  0E29               	movlw	41
  1282   000B50                     clear_1:
  1283   000B50  6AEE               	clrf	postinc0,c
  1284   000B52  06E8               	decf	wreg,f,c
  1285   000B54  E1FD               	bnz	clear_1
  1286   000B56                     end_of_initialization:
  1287                           	callstack 0
  1288   000B56                     __end_of__initialization:
  1289                           	callstack 0
  1290   000B56  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1291   000B58  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1292   000B5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1293   000B5C  6EF8               	movwf	tblptru,c
  1294   000B5E  0100               	movlb	0
  1295   000B60  EFC4  F005         	goto	_main	;jump to C main() function
  1296                           
  1297                           	psect	bssCOMRAM
  1298   000036                     __pbssCOMRAM:
  1299                           	callstack 0
  1300   000036                     _Timers:
  1301                           	callstack 0
  1302   000036                     	ds	20
  1303   00004A                     _Tics:
  1304                           	callstack 0
  1305   00004A                     	ds	4
  1306   00004E                     _width:
  1307                           	callstack 0
  1308   00004E                     	ds	2
  1309   000050                     _prec:
  1310                           	callstack 0
  1311   000050                     	ds	2
  1312   000052                     _flags:
  1313                           	callstack 0
  1314   000052                     	ds	1
  1315   000053                     motorTerminal@state:
  1316                           	callstack 0
  1317   000053                     	ds	1
  1318   000054                     _hashtag_pressed:
  1319                           	callstack 0
  1320   000054                     	ds	1
  1321   000055                     _ColumnAct:
  1322                           	callstack 0
  1323   000055                     	ds	1
  1324   000056                     _RowAct:
  1325                           	callstack 0
  1326   000056                     	ds	1
  1327   000057                     _Columns:
  1328                           	callstack 0
  1329   000057                     	ds	1
  1330   000058                     _Rows:
  1331                           	callstack 0
  1332   000058                     	ds	1
  1333   000059                     _state:
  1334                           	callstack 0
  1335   000059                     	ds	1
  1336   00005A                     _tecla:
  1337                           	callstack 0
  1338   00005A                     	ds	1
  1339   00005B                     _Columnas:
  1340                           	callstack 0
  1341   00005B                     	ds	1
  1342   00005C                     _Filas:
  1343                           	callstack 0
  1344   00005C                     	ds	1
  1345   00005D                     _Timer:
  1346                           	callstack 0
  1347   00005D                     	ds	1
  1348   00005E                     _timer:
  1349                           	callstack 0
  1350   00005E                     	ds	1
  1351                           
  1352                           	psect	bssBANK0
  1353   000080                     __pbssBANK0:
  1354                           	callstack 0
  1355   000080                     _dbuf:
  1356                           	callstack 0
  1357   000080                     	ds	32
  1358                           
  1359                           	psect	cstackBANK0
  1360   0000A0                     __pcstackBANK0:
  1361                           	callstack 0
  1362   0000A0                     motorTeclado@buffer:
  1363                           	callstack 0
  1364                           
  1365                           ; 32 bytes @ 0x0
  1366   0000A0                     	ds	32
  1367                           
  1368                           	psect	cstackCOMRAM
  1369   000001                     __pcstackCOMRAM:
  1370                           	callstack 0
  1371   000001                     ??_LowRSI:
  1372                           
  1373                           ; 1 bytes @ 0x0
  1374   000001                     	ds	1
  1375   000002                     ?_Terminal_TXAvailable:
  1376                           	callstack 0
  1377   000002                     ?___awdiv:
  1378                           	callstack 0
  1379   000002                     ?___awmod:
  1380                           	callstack 0
  1381   000002                     ?_TI_GetTics:
  1382                           	callstack 0
  1383   000002                     TI_Init@counter:
  1384                           	callstack 0
  1385   000002                     TI_NewTimer@TimerHandle:
  1386                           	callstack 0
  1387   000002                     TI_ResetTics@TimerHandle:
  1388                           	callstack 0
  1389   000002                     Terminal_SendChar@c:
  1390                           	callstack 0
  1391   000002                     ___awdiv@dividend:
  1392                           	callstack 0
  1393   000002                     ___awmod@dividend:
  1394                           	callstack 0
  1395   000002                     fputc@c:
  1396                           	callstack 0
  1397   000002                     ??_GetTecla:
  1398   000002                     ??_delay_us:
  1399   000002                     ??_MFRC522_Rd:
  1400   000002                     
  1401                           ; 1 bytes @ 0x1
  1402   000002                     	ds	1
  1403   000003                     MFRC522_Rd@Address:
  1404                           	callstack 0
  1405   000003                     
  1406                           ; 1 bytes @ 0x2
  1407   000003                     	ds	1
  1408   000004                     TI_NewTimer@Comptador:
  1409                           	callstack 0
  1410   000004                     MFRC522_Rd@ucAddr:
  1411                           	callstack 0
  1412   000004                     fputc@fp:
  1413                           	callstack 0
  1414   000004                     ___awdiv@divisor:
  1415                           	callstack 0
  1416   000004                     ___awmod@divisor:
  1417                           	callstack 0
  1418   000004                     GetTecla@keymap:
  1419                           	callstack 0
  1420   000004                     ??_Terminal_TXAvailable:
  1421                           
  1422                           ; 1 bytes @ 0x3
  1423   000004                     	ds	1
  1424   000005                     delay_us@howMany:
  1425                           	callstack 0
  1426   000005                     MFRC522_Rd@ucResult:
  1427                           	callstack 0
  1428   000005                     Terminal_SendString@str:
  1429                           	callstack 0
  1430   000005                     ??_fputc:
  1431                           
  1432                           ; 1 bytes @ 0x4
  1433   000005                     	ds	1
  1434   000006                     delay_us@x:
  1435                           	callstack 0
  1436   000006                     MFRC522_Rd@i:
  1437                           	callstack 0
  1438   000006                     ___awdiv@counter:
  1439                           	callstack 0
  1440   000006                     ___awmod@counter:
  1441                           	callstack 0
  1442   000006                     ??_TI_GetTics:
  1443   000006                     
  1444                           ; 1 bytes @ 0x5
  1445   000006                     	ds	1
  1446   000007                     MFRC522_Wr@value:
  1447                           	callstack 0
  1448   000007                     ___awdiv@sign:
  1449                           	callstack 0
  1450   000007                     ___awmod@sign:
  1451                           	callstack 0
  1452   000007                     
  1453                           ; 1 bytes @ 0x6
  1454   000007                     	ds	1
  1455   000008                     ?_abs:
  1456                           	callstack 0
  1457   000008                     ___awdiv@quotient:
  1458                           	callstack 0
  1459   000008                     abs@a:
  1460                           	callstack 0
  1461   000008                     ??_MFRC522_Wr:
  1462                           
  1463                           ; 1 bytes @ 0x7
  1464   000008                     	ds	1
  1465   000009                     MFRC522_Wr@Address:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x8
  1469   000009                     	ds	1
  1470   00000A                     MFRC522_Wr@ucAddr:
  1471                           	callstack 0
  1472   00000A                     TI_GetTics@CopiaTicsActual:
  1473                           	callstack 0
  1474   00000A                     ??_abs:
  1475                           
  1476                           ; 1 bytes @ 0x9
  1477   00000A                     	ds	1
  1478   00000B                     MFRC522_Wr@i:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0xA
  1482   00000B                     	ds	1
  1483   00000C                     MFRC522_Clear_Bit@mask:
  1484                           	callstack 0
  1485   00000C                     MFRC522_Set_Bit@mask:
  1486                           	callstack 0
  1487   00000C                     vfpfcnvrt@fp:
  1488                           	callstack 0
  1489   00000C                     
  1490                           ; 1 bytes @ 0xB
  1491   00000C                     	ds	1
  1492   00000D                     MFRC522_Set_Bit@addr:
  1493                           	callstack 0
  1494   00000D                     vfpfcnvrt@fmt:
  1495                           	callstack 0
  1496   00000D                     ??_MFRC522_Clear_Bit:
  1497   00000D                     
  1498                           ; 1 bytes @ 0xC
  1499   00000D                     	ds	1
  1500   00000E                     TI_GetTics@TimerHandle:
  1501                           	callstack 0
  1502   00000E                     MFRC522_Clear_Bit@addr:
  1503                           	callstack 0
  1504   00000E                     vfpfcnvrt@ap:
  1505                           	callstack 0
  1506   00000E                     
  1507                           ; 1 bytes @ 0xD
  1508   00000E                     	ds	1
  1509   00000F                     ??_vfpfcnvrt:
  1510                           
  1511                           ; 1 bytes @ 0xE
  1512   00000F                     	ds	1
  1513   000010                     GetTecla@columna:
  1514                           	callstack 0
  1515                           
  1516                           ; 1 bytes @ 0xF
  1517   000010                     	ds	1
  1518   000011                     GetTecla@fila:
  1519                           	callstack 0
  1520   000011                     vfpfcnvrt@done:
  1521                           	callstack 0
  1522                           
  1523                           ; 1 bytes @ 0x10
  1524   000011                     	ds	1
  1525   000012                     vfpfcnvrt@cp:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x11
  1529   000012                     	ds	2
  1530   000014                     vfpfcnvrt@convarg:
  1531                           	callstack 0
  1532                           
  1533                           ; 4 bytes @ 0x13
  1534   000014                     	ds	4
  1535   000018                     vfpfcnvrt@c:
  1536                           	callstack 0
  1537                           
  1538                           ; 1 bytes @ 0x17
  1539   000018                     	ds	1
  1540   000019                     ?_vfprintf:
  1541                           	callstack 0
  1542   000019                     vfprintf@fp:
  1543                           	callstack 0
  1544                           
  1545                           ; 1 bytes @ 0x18
  1546   000019                     	ds	1
  1547   00001A                     vfprintf@fmt:
  1548                           	callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x19
  1551   00001A                     	ds	2
  1552   00001C                     vfprintf@ap:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x1B
  1556   00001C                     	ds	1
  1557   00001D                     vfprintf@cfmt:
  1558                           	callstack 0
  1559   00001D                     
  1560                           ; 1 bytes @ 0x1C
  1561   00001D                     	ds	2
  1562   00001F                     ?_sprintf:
  1563                           	callstack 0
  1564   00001F                     sprintf@s:
  1565                           	callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x1E
  1568   00001F                     	ds	1
  1569   000020                     sprintf@fmt:
  1570                           	callstack 0
  1571                           
  1572                           ; 2 bytes @ 0x1F
  1573   000020                     	ds	10
  1574   00002A                     sprintf@ap:
  1575                           	callstack 0
  1576   00002A                     
  1577                           ; 1 bytes @ 0x29
  1578   00002A                     	ds	1
  1579   00002B                     sprintf@f:
  1580                           	callstack 0
  1581                           
  1582                           ; 11 bytes @ 0x2A
  1583   00002B                     	ds	11
  1584   000036                     
  1585                           ; 1 bytes @ 0x35
  1586 ;;
  1587 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1588 ;;
  1589 ;; *************** function _main *****************
  1590 ;; Defined at:
  1591 ;;		line 36 in file "main.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1
  1605 ;;      Params:         0       0       0
  1606 ;;      Locals:         0       0       0
  1607 ;;      Temps:          0       0       0
  1608 ;;      Totals:         0       0       0
  1609 ;;Total ram usage:        0 bytes
  1610 ;; Hardware stack levels required when called: 9
  1611 ;; This function calls:
  1612 ;;		_TI_Init
  1613 ;;		_Terminal_Init
  1614 ;;		_initRFID
  1615 ;;		_initTeclado
  1616 ;;		_motorTeclado
  1617 ;; This function is called by:
  1618 ;;		Startup code after reset
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text0
  1623   000B88                     __ptext0:
  1624                           	callstack 0
  1625   000B88                     _main:
  1626                           	callstack 22
  1627   000B88                     
  1628                           ;main.c: 37:  LATC = key;
  1629   000B88  EC70  F005         	call	_TI_Init	;wreg free
  1630                           
  1631                           ;main.c: 38: }
  1632   000B8C  ECFB  F005         	call	_initTeclado	;wreg free
  1633   000B90  EC36  F006         	call	_initRFID	;wreg free
  1634   000B94  EC1B  F006         	call	_Terminal_Init	;wreg free
  1635   000B98  8EF2               	bsf	242,7,c	;volatile
  1636   000B9A  8CF2               	bsf	242,6,c	;volatile
  1637   000B9C                     l3594:
  1638   000B9C  EC15  F000         	call	_motorTeclado	;wreg free
  1639   000BA0  EFCE  F005         	goto	l3594
  1640   000BA4  EF13  F000         	goto	start
  1641   000BA8                     __end_of_main:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _motorTeclado *****************
  1645 ;; Defined at:
  1646 ;;		line 32 in file "TAD_TECLADO.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  buffer         32    0[BANK0 ] unsigned char [32]
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1
  1660 ;;      Params:         0       0       0
  1661 ;;      Locals:         0      32       0
  1662 ;;      Temps:          0       0       0
  1663 ;;      Totals:         0      32       0
  1664 ;;Total ram usage:       32 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 8
  1667 ;; This function calls:
  1668 ;;		_GetTecla
  1669 ;;		_ReadFilas
  1670 ;;		_TI_GetTics
  1671 ;;		_TI_ResetTics
  1672 ;;		_Terminal_SendString
  1673 ;;		_hashtag_pressed3s
  1674 ;;		_sprintf
  1675 ;;		_writeColumnas
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text1
  1682   00002A                     __ptext1:
  1683                           	callstack 0
  1684   00002A                     _motorTeclado:
  1685                           	callstack 22
  1686   00002A                     
  1687                           ;TAD_TECLADO.c: 33:  Filas = ReadFilas();
  1688   00002A  EC46  F006         	call	_ReadFilas	;wreg free
  1689   00002E  6E5C               	movwf	_Filas^0,c
  1690   000030                     
  1691                           ;TAD_TECLADO.c: 34:  char buffer[32];;TAD_TECLADO.c: 35:  sprintf(buffer, "State: %d\tFi
      +                          las: %d\tColumnas: %d\tTecla: %d\r\n", state, Filas, Columnas, tecla);
  1692   000030  0EA0               	movlw	low motorTeclado@buffer
  1693   000032  6E1F               	movwf	sprintf@s^0,c
  1694   000034  0E03               	movlw	low STR_1
  1695   000036  6E20               	movwf	sprintf@fmt^0,c
  1696   000038  0E1F               	movlw	high STR_1
  1697   00003A  6E21               	movwf	(sprintf@fmt+1)^0,c
  1698   00003C  C059  F022         	movff	_state,?_sprintf+3
  1699   000040  6A23               	clrf	(?_sprintf+4)^0,c
  1700   000042  C05C  F024         	movff	_Filas,?_sprintf+5
  1701   000046  6A25               	clrf	(?_sprintf+6)^0,c
  1702   000048  C05B  F026         	movff	_Columnas,?_sprintf+7
  1703   00004C  6A27               	clrf	(?_sprintf+8)^0,c
  1704   00004E  C05A  F028         	movff	_tecla,?_sprintf+9
  1705   000052  6A29               	clrf	(?_sprintf+10)^0,c
  1706   000054  EC1F  F005         	call	_sprintf	;wreg free
  1707   000058                     
  1708                           ;TAD_TECLADO.c: 36:     Terminal_SendString(buffer);
  1709   000058  0EA0               	movlw	low motorTeclado@buffer
  1710   00005A  6E05               	movwf	Terminal_SendString@str^0,c
  1711   00005C  6A06               	clrf	(Terminal_SendString@str+1)^0,c
  1712   00005E  EC29  F004         	call	_Terminal_SendString	;wreg free
  1713                           
  1714                           ;TAD_TECLADO.c: 37:  switch(state) {
  1715   000062  EF1B  F001         	goto	l3542
  1716   000066                     l3450:
  1717                           
  1718                           ;TAD_TECLADO.c: 39:    if (Filas == 0x0) {
  1719   000066  505C               	movf	_Filas^0,w,c
  1720   000068  A4D8               	btfss	status,2,c
  1721   00006A  EF39  F000         	goto	u3071
  1722   00006E  EF3B  F000         	goto	u3070
  1723   000072                     u3071:
  1724   000072  EF43  F000         	goto	l3458
  1725   000076                     u3070:
  1726   000076                     
  1727                           ;TAD_TECLADO.c: 40:     Columnas = (0x01);
  1728   000076  0E01               	movlw	1
  1729   000078  6E5B               	movwf	_Columnas^0,c
  1730   00007A                     
  1731                           ;TAD_TECLADO.c: 41:     writeColumnas();
  1732   00007A  ECDB  F004         	call	_writeColumnas	;wreg free
  1733   00007E                     
  1734                           ;TAD_TECLADO.c: 42:     state = 1;
  1735   00007E  0E01               	movlw	1
  1736   000080  6E59               	movwf	_state^0,c
  1737                           
  1738                           ;TAD_TECLADO.c: 43:    }
  1739   000082  EF36  F001         	goto	l149
  1740   000086                     l3458:
  1741   000086  505C               	movf	_Filas^0,w,c
  1742   000088  B4D8               	btfsc	status,2,c
  1743   00008A  EF49  F000         	goto	u3081
  1744   00008E  EF4B  F000         	goto	u3080
  1745   000092                     u3081:
  1746   000092  EF36  F001         	goto	l149
  1747   000096                     u3080:
  1748   000096                     
  1749                           ;TAD_TECLADO.c: 45:     TI_ResetTics(timer);
  1750   000096  505E               	movf	_timer^0,w,c
  1751   000098  ECB2  F005         	call	_TI_ResetTics
  1752   00009C                     l3462:
  1753                           
  1754                           ;TAD_TECLADO.c: 46:     state = 3;
  1755   00009C  0E03               	movlw	3
  1756   00009E  6E59               	movwf	_state^0,c
  1757   0000A0  EF36  F001         	goto	l149
  1758   0000A4                     l3464:
  1759                           
  1760                           ;TAD_TECLADO.c: 50:    if (Filas == 0x0) {
  1761   0000A4  505C               	movf	_Filas^0,w,c
  1762   0000A6  A4D8               	btfss	status,2,c
  1763   0000A8  EF58  F000         	goto	u3091
  1764   0000AC  EF5A  F000         	goto	u3090
  1765   0000B0                     u3091:
  1766   0000B0  EF62  F000         	goto	l3472
  1767   0000B4                     u3090:
  1768   0000B4                     
  1769                           ;TAD_TECLADO.c: 51:     Columnas = (0x02);
  1770   0000B4  0E02               	movlw	2
  1771   0000B6  6E5B               	movwf	_Columnas^0,c
  1772   0000B8                     
  1773                           ;TAD_TECLADO.c: 52:     writeColumnas();
  1774   0000B8  ECDB  F004         	call	_writeColumnas	;wreg free
  1775   0000BC                     
  1776                           ;TAD_TECLADO.c: 53:     state = 2;
  1777   0000BC  0E02               	movlw	2
  1778   0000BE  6E59               	movwf	_state^0,c
  1779                           
  1780                           ;TAD_TECLADO.c: 54:    }
  1781   0000C0  EF36  F001         	goto	l149
  1782   0000C4                     l3472:
  1783   0000C4  505C               	movf	_Filas^0,w,c
  1784   0000C6  B4D8               	btfsc	status,2,c
  1785   0000C8  EF68  F000         	goto	u3101
  1786   0000CC  EF6A  F000         	goto	u3100
  1787   0000D0                     u3101:
  1788   0000D0  EF36  F001         	goto	l149
  1789   0000D4                     u3100:
  1790   0000D4                     
  1791                           ;TAD_TECLADO.c: 56:     TI_ResetTics(timer);
  1792   0000D4  505E               	movf	_timer^0,w,c
  1793   0000D6  ECB2  F005         	call	_TI_ResetTics
  1794   0000DA  EF4E  F000         	goto	l3462
  1795   0000DE                     l3478:
  1796                           
  1797                           ;TAD_TECLADO.c: 61:    if (Filas != 0x0) {
  1798   0000DE  505C               	movf	_Filas^0,w,c
  1799   0000E0  B4D8               	btfsc	status,2,c
  1800   0000E2  EF75  F000         	goto	u3111
  1801   0000E6  EF77  F000         	goto	u3110
  1802   0000EA                     u3111:
  1803   0000EA  EF7C  F000         	goto	l3484
  1804   0000EE                     u3110:
  1805   0000EE                     
  1806                           ;TAD_TECLADO.c: 62:     TI_ResetTics(timer);
  1807   0000EE  505E               	movf	_timer^0,w,c
  1808   0000F0  ECB2  F005         	call	_TI_ResetTics
  1809   0000F4  EF4E  F000         	goto	l3462
  1810   0000F8                     l3484:
  1811   0000F8  505C               	movf	_Filas^0,w,c
  1812   0000FA  A4D8               	btfss	status,2,c
  1813   0000FC  EF82  F000         	goto	u3121
  1814   000100  EF84  F000         	goto	u3120
  1815   000104                     u3121:
  1816   000104  EF36  F001         	goto	l149
  1817   000108                     u3120:
  1818   000108                     l3486:
  1819                           
  1820                           ;TAD_TECLADO.c: 66:     Columnas = (0x04);
  1821   000108  0E04               	movlw	4
  1822   00010A  6E5B               	movwf	_Columnas^0,c
  1823   00010C                     
  1824                           ;TAD_TECLADO.c: 67:     writeColumnas();
  1825   00010C  ECDB  F004         	call	_writeColumnas	;wreg free
  1826   000110                     l3490:
  1827                           
  1828                           ;TAD_TECLADO.c: 68:     state = 0;
  1829   000110  6A59               	clrf	_state^0,c
  1830   000112  EF36  F001         	goto	l149
  1831   000116                     l3492:
  1832                           
  1833                           ;TAD_TECLADO.c: 72:    tecla = GetTecla ();
  1834   000116  EC21  F002         	call	_GetTecla	;wreg free
  1835   00011A  6E5A               	movwf	_tecla^0,c
  1836   00011C                     
  1837                           ;TAD_TECLADO.c: 73:    if (Filas == 0x0) {
  1838   00011C  505C               	movf	_Filas^0,w,c
  1839   00011E  A4D8               	btfss	status,2,c
  1840   000120  EF94  F000         	goto	u3131
  1841   000124  EF96  F000         	goto	u3130
  1842   000128                     u3131:
  1843   000128  EF98  F000         	goto	l3502
  1844   00012C                     u3130:
  1845   00012C  EF84  F000         	goto	l3486
  1846   000130                     l3502:
  1847   000130  505C               	movf	_Filas^0,w,c
  1848   000132  B4D8               	btfsc	status,2,c
  1849   000134  EF9E  F000         	goto	u3141
  1850   000138  EFA0  F000         	goto	u3140
  1851   00013C                     u3141:
  1852   00013C  EFBD  F000         	goto	l3510
  1853   000140                     u3140:
  1854   000140  505E               	movf	_timer^0,w,c
  1855   000142  ECB5  F004         	call	_TI_GetTics
  1856   000146  5005               	movf	(?_TI_GetTics+3)^0,w,c
  1857   000148  1004               	iorwf	(?_TI_GetTics+2)^0,w,c
  1858   00014A  1003               	iorwf	(?_TI_GetTics+1)^0,w,c
  1859   00014C  E109               	bnz	u3150
  1860   00014E  0E09               	movlw	9
  1861   000150  5C02               	subwf	?_TI_GetTics^0,w,c
  1862   000152  A0D8               	btfss	status,0,c
  1863   000154  EFAE  F000         	goto	u3151
  1864   000158  EFB0  F000         	goto	u3150
  1865   00015C                     u3151:
  1866   00015C  EFBD  F000         	goto	l3510
  1867   000160                     u3150:
  1868   000160  0E0B               	movlw	11
  1869   000162  185A               	xorwf	_tecla^0,w,c
  1870   000164  B4D8               	btfsc	status,2,c
  1871   000166  EFB7  F000         	goto	u3161
  1872   00016A  EFB9  F000         	goto	u3160
  1873   00016E                     u3161:
  1874   00016E  EFBD  F000         	goto	l3510
  1875   000172                     u3160:
  1876   000172                     l3508:
  1877                           
  1878                           ;TAD_TECLADO.c: 79:     state = 5;
  1879   000172  0E05               	movlw	5
  1880   000174  6E59               	movwf	_state^0,c
  1881                           
  1882                           ;TAD_TECLADO.c: 80:    }
  1883   000176  EF36  F001         	goto	l149
  1884   00017A                     l3510:
  1885   00017A  505C               	movf	_Filas^0,w,c
  1886   00017C  B4D8               	btfsc	status,2,c
  1887   00017E  EFC3  F000         	goto	u3171
  1888   000182  EFC5  F000         	goto	u3170
  1889   000186                     u3171:
  1890   000186  EF36  F001         	goto	l149
  1891   00018A                     u3170:
  1892   00018A  505E               	movf	_timer^0,w,c
  1893   00018C  ECB5  F004         	call	_TI_GetTics
  1894   000190  5005               	movf	(?_TI_GetTics+3)^0,w,c
  1895   000192  1004               	iorwf	(?_TI_GetTics+2)^0,w,c
  1896   000194  1003               	iorwf	(?_TI_GetTics+1)^0,w,c
  1897   000196  E109               	bnz	u3180
  1898   000198  0E09               	movlw	9
  1899   00019A  5C02               	subwf	?_TI_GetTics^0,w,c
  1900   00019C  A0D8               	btfss	status,0,c
  1901   00019E  EFD3  F000         	goto	u3181
  1902   0001A2  EFD5  F000         	goto	u3180
  1903   0001A6                     u3181:
  1904   0001A6  EF36  F001         	goto	l149
  1905   0001AA                     u3180:
  1906   0001AA  0E0B               	movlw	11
  1907   0001AC  185A               	xorwf	_tecla^0,w,c
  1908   0001AE  A4D8               	btfss	status,2,c
  1909   0001B0  EFDC  F000         	goto	u3191
  1910   0001B4  EFDE  F000         	goto	u3190
  1911   0001B8                     u3191:
  1912   0001B8  EF36  F001         	goto	l149
  1913   0001BC                     u3190:
  1914   0001BC                     
  1915                           ;TAD_TECLADO.c: 82:     TI_ResetTics(timer);
  1916   0001BC  505E               	movf	_timer^0,w,c
  1917   0001BE  ECB2  F005         	call	_TI_ResetTics
  1918   0001C2                     
  1919                           ;TAD_TECLADO.c: 83:     state = 4;
  1920   0001C2  0E04               	movlw	4
  1921   0001C4  6E59               	movwf	_state^0,c
  1922   0001C6  EF36  F001         	goto	l149
  1923   0001CA                     l3520:
  1924                           
  1925                           ;TAD_TECLADO.c: 87:    if (Filas == 0x0) {
  1926   0001CA  505C               	movf	_Filas^0,w,c
  1927   0001CC  A4D8               	btfss	status,2,c
  1928   0001CE  EFEB  F000         	goto	u3201
  1929   0001D2  EFED  F000         	goto	u3200
  1930   0001D6                     u3201:
  1931   0001D6  EFEF  F000         	goto	l3524
  1932   0001DA                     u3200:
  1933   0001DA  EF88  F000         	goto	l3490
  1934   0001DE                     l3524:
  1935   0001DE  505C               	movf	_Filas^0,w,c
  1936   0001E0  B4D8               	btfsc	status,2,c
  1937   0001E2  EFF5  F000         	goto	u3211
  1938   0001E6  EFF7  F000         	goto	u3210
  1939   0001EA                     u3211:
  1940   0001EA  EF36  F001         	goto	l149
  1941   0001EE                     u3210:
  1942   0001EE  505E               	movf	_timer^0,w,c
  1943   0001F0  ECB5  F004         	call	_TI_GetTics
  1944   0001F4  5005               	movf	(?_TI_GetTics+3)^0,w,c
  1945   0001F6  1004               	iorwf	(?_TI_GetTics+2)^0,w,c
  1946   0001F8  E10B               	bnz	u3220
  1947   0001FA  0EDD               	movlw	221
  1948   0001FC  5C02               	subwf	?_TI_GetTics^0,w,c
  1949   0001FE  0E05               	movlw	5
  1950   000200  5803               	subwfb	(?_TI_GetTics+1)^0,w,c
  1951   000202  A0D8               	btfss	status,0,c
  1952   000204  EF06  F001         	goto	u3221
  1953   000208  EF08  F001         	goto	u3220
  1954   00020C                     u3221:
  1955   00020C  EF36  F001         	goto	l149
  1956   000210                     u3220:
  1957   000210                     
  1958                           ;TAD_TECLADO.c: 91:     hashtag_pressed3s();
  1959   000210  EC43  F006         	call	_hashtag_pressed3s	;wreg free
  1960   000214  EFB9  F000         	goto	l3508
  1961   000218                     l3532:
  1962                           
  1963                           ;TAD_TECLADO.c: 97:    if (Filas == 0x0) {
  1964   000218  505C               	movf	_Filas^0,w,c
  1965   00021A  A4D8               	btfss	status,2,c
  1966   00021C  EF12  F001         	goto	u3231
  1967   000220  EF14  F001         	goto	u3230
  1968   000224                     u3231:
  1969   000224  EF36  F001         	goto	l149
  1970   000228                     u3230:
  1971   000228                     
  1972                           ;TAD_TECLADO.c: 98:     state = 0;
  1973   000228  6A59               	clrf	_state^0,c
  1974   00022A                     
  1975                           ;TAD_TECLADO.c: 99:     Columnas = (0x04);
  1976   00022A  0E04               	movlw	4
  1977   00022C  6E5B               	movwf	_Columnas^0,c
  1978   00022E                     
  1979                           ;TAD_TECLADO.c: 100:     writeColumnas();
  1980   00022E  ECDB  F004         	call	_writeColumnas	;wreg free
  1981   000232  EF36  F001         	goto	l149
  1982   000236                     l3542:
  1983   000236  5059               	movf	_state^0,w,c
  1984                           
  1985                           ; Switch size 1, requested type "simple"
  1986                           ; Number of cases is 6, Range of values is 0 to 5
  1987                           ; switch strategies available:
  1988                           ; Name         Instructions Cycles
  1989                           ; simple_byte           19    10 (average)
  1990                           ;	Chosen strategy is simple_byte
  1991   000238  0A00               	xorlw	0	; case 0
  1992   00023A  B4D8               	btfsc	status,2,c
  1993   00023C  EF33  F000         	goto	l3450
  1994   000240  0A01               	xorlw	1	; case 1
  1995   000242  B4D8               	btfsc	status,2,c
  1996   000244  EF52  F000         	goto	l3464
  1997   000248  0A03               	xorlw	3	; case 2
  1998   00024A  B4D8               	btfsc	status,2,c
  1999   00024C  EF6F  F000         	goto	l3478
  2000   000250  0A01               	xorlw	1	; case 3
  2001   000252  B4D8               	btfsc	status,2,c
  2002   000254  EF8B  F000         	goto	l3492
  2003   000258  0A07               	xorlw	7	; case 4
  2004   00025A  B4D8               	btfsc	status,2,c
  2005   00025C  EFE5  F000         	goto	l3520
  2006   000260  0A01               	xorlw	1	; case 5
  2007   000262  B4D8               	btfsc	status,2,c
  2008   000264  EF0C  F001         	goto	l3532
  2009   000268  EF36  F001         	goto	l149
  2010   00026C                     l149:
  2011   00026C  0012               	return		;funcret
  2012   00026E                     __end_of_motorTeclado:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _writeColumnas *****************
  2016 ;; Defined at:
  2017 ;;		line 110 in file "TAD_TECLADO.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1
  2031 ;;      Params:         0       0       0
  2032 ;;      Locals:         0       0       0
  2033 ;;      Temps:          0       0       0
  2034 ;;      Totals:         0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 3
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_motorTeclado
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text2
  2046   0009B6                     __ptext2:
  2047                           	callstack 0
  2048   0009B6                     _writeColumnas:
  2049                           	callstack 26
  2050   0009B6                     
  2051                           ;TAD_TECLADO.c: 111:     LATD = (0x00);
  2052   0009B6  6A8C               	clrf	140,c	;volatile
  2053   0009B8                     
  2054                           ;TAD_TECLADO.c: 112:     if (Columnas == 0x01) {
  2055   0009B8  045B               	decf	_Columnas^0,w,c
  2056   0009BA  A4D8               	btfss	status,2,c
  2057   0009BC  EFE2  F004         	goto	u2991
  2058   0009C0  EFE4  F004         	goto	u2990
  2059   0009C4                     u2991:
  2060   0009C4  EFE7  F004         	goto	l3364
  2061   0009C8                     u2990:
  2062   0009C8                     
  2063                           ;TAD_TECLADO.c: 114:         LATD |= (1 << 5);
  2064   0009C8  8A8C               	bsf	140,5,c	;volatile
  2065                           
  2066                           ;TAD_TECLADO.c: 115:     } else if (Columnas == 0x02) {
  2067   0009CA  EFFD  F004         	goto	l157
  2068   0009CE                     l3364:
  2069   0009CE  0E02               	movlw	2
  2070   0009D0  185B               	xorwf	_Columnas^0,w,c
  2071   0009D2  A4D8               	btfss	status,2,c
  2072   0009D4  EFEE  F004         	goto	u3001
  2073   0009D8  EFF0  F004         	goto	u3000
  2074   0009DC                     u3001:
  2075   0009DC  EFF3  F004         	goto	l3368
  2076   0009E0                     u3000:
  2077   0009E0                     
  2078                           ;TAD_TECLADO.c: 117:         LATD |= (1 << 6);
  2079   0009E0  8C8C               	bsf	140,6,c	;volatile
  2080                           
  2081                           ;TAD_TECLADO.c: 118:     } else if (Columnas == 0x04) {
  2082   0009E2  EFFD  F004         	goto	l157
  2083   0009E6                     l3368:
  2084   0009E6  0E04               	movlw	4
  2085   0009E8  185B               	xorwf	_Columnas^0,w,c
  2086   0009EA  A4D8               	btfss	status,2,c
  2087   0009EC  EFFA  F004         	goto	u3011
  2088   0009F0  EFFC  F004         	goto	u3010
  2089   0009F4                     u3011:
  2090   0009F4  EFFD  F004         	goto	l157
  2091   0009F8                     u3010:
  2092   0009F8                     
  2093                           ;TAD_TECLADO.c: 120:         LATD |= (1 << 4);
  2094   0009F8  888C               	bsf	140,4,c	;volatile
  2095   0009FA                     l157:
  2096   0009FA  0012               	return		;funcret
  2097   0009FC                     __end_of_writeColumnas:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _sprintf *****************
  2101 ;; Defined at:
  2102 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  s               1   30[COMRAM] PTR unsigned char 
  2105 ;;		 -> motorTeclado@buffer(32), 
  2106 ;;  fmt             2   31[COMRAM] PTR const unsigned char 
  2107 ;;		 -> STR_1(45), 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  f              11   42[COMRAM] struct _IO_FILE
  2110 ;;  ret             2    0        int 
  2111 ;;  ap              1   41[COMRAM] PTR void [1]
  2112 ;;		 -> ?_sprintf(2), 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2   30[COMRAM] int 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1
  2122 ;;      Params:        11       0       0
  2123 ;;      Locals:        12       0       0
  2124 ;;      Temps:          0       0       0
  2125 ;;      Totals:        23       0       0
  2126 ;;Total ram usage:       23 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 7
  2129 ;; This function calls:
  2130 ;;		_vfprintf
  2131 ;; This function is called by:
  2132 ;;		_motorTeclado
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text3
  2137   000A3E                     __ptext3:
  2138                           	callstack 0
  2139   000A3E                     _sprintf:
  2140                           	callstack 22
  2141   000A3E  0E22               	movlw	low (?_sprintf+3)
  2142   000A40  6E2A               	movwf	sprintf@ap^0,c
  2143   000A42  C01F  F02B         	movff	sprintf@s,sprintf@f
  2144   000A46  0E00               	movlw	0
  2145   000A48  6E2E               	movwf	(sprintf@f+3)^0,c
  2146   000A4A  0E00               	movlw	0
  2147   000A4C  6E2D               	movwf	(sprintf@f+2)^0,c
  2148   000A4E  0E00               	movlw	0
  2149   000A50  6E35               	movwf	(sprintf@f+10)^0,c
  2150   000A52  0E00               	movlw	0
  2151   000A54  6E34               	movwf	(sprintf@f+9)^0,c
  2152   000A56  0E2B               	movlw	low sprintf@f
  2153   000A58  6E19               	movwf	vfprintf@fp^0,c
  2154   000A5A  C020  F01A         	movff	sprintf@fmt,vfprintf@fmt
  2155   000A5E  C021  F01B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2156   000A62  0E2A               	movlw	low sprintf@ap
  2157   000A64  6E1C               	movwf	vfprintf@ap^0,c
  2158   000A66  ECFE  F004         	call	_vfprintf	;wreg free
  2159   000A6A  501F               	movf	sprintf@s^0,w,c
  2160   000A6C  242D               	addwf	(sprintf@f+2)^0,w,c
  2161   000A6E  6ED9               	movwf	fsr2l,c
  2162   000A70  6ADA               	clrf	fsr2h,c
  2163   000A72  6ADF               	clrf	indf2,c
  2164   000A74  0012               	return		;funcret
  2165   000A76                     __end_of_sprintf:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function _vfprintf *****************
  2169 ;; Defined at:
  2170 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  2173 ;;		 -> sprintf@f(11), 
  2174 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
  2175 ;;		 -> STR_1(45), 
  2176 ;;  ap              1   27[COMRAM] PTR PTR void 
  2177 ;;		 -> sprintf@ap(1), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  cfmt            2   28[COMRAM] PTR unsigned char 
  2180 ;;		 -> STR_1(45), 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  2   24[COMRAM] int 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1
  2190 ;;      Params:         4       0       0
  2191 ;;      Locals:         2       0       0
  2192 ;;      Temps:          0       0       0
  2193 ;;      Totals:         6       0       0
  2194 ;;Total ram usage:        6 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 6
  2197 ;; This function calls:
  2198 ;;		_vfpfcnvrt
  2199 ;; This function is called by:
  2200 ;;		_sprintf
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text4
  2205   0009FC                     __ptext4:
  2206                           	callstack 0
  2207   0009FC                     _vfprintf:
  2208                           	callstack 22
  2209   0009FC                     
  2210                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2211   0009FC  C01A  F01D         	movff	vfprintf@fmt,vfprintf@cfmt
  2212   000A00  C01B  F01E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2215   000A04  EF0C  F005         	goto	l3314
  2216   000A08                     l3312:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2219   000A08  C019  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2220   000A0C  0E1D               	movlw	low vfprintf@cfmt
  2221   000A0E  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  2222   000A10  C01C  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2223   000A14  EC37  F001         	call	_vfpfcnvrt	;wreg free
  2224   000A18                     l3314:
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2227   000A18  C01D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2228   000A1C  C01E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2229   000A20                     	if	0	;tblptru may be non-zero
  2230   000A20                     	endif
  2231   000A20                     	if	0	;tblptru may be non-zero
  2232   000A20                     	endif
  2233   000A20  0008               	tblrd		*
  2234   000A22  50F5               	movf	tablat,w,c
  2235   000A24  0900               	iorlw	0
  2236   000A26  A4D8               	btfss	status,2,c
  2237   000A28  EF18  F005         	goto	u2941
  2238   000A2C  EF1A  F005         	goto	u2940
  2239   000A30                     u2941:
  2240   000A30  EF04  F005         	goto	l3312
  2241   000A34                     u2940:
  2242   000A34                     
  2243                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2244   000A34  0E00               	movlw	0
  2245   000A36  6E1A               	movwf	(?_vfprintf+1)^0,c
  2246   000A38  0E00               	movlw	0
  2247   000A3A  6E19               	movwf	?_vfprintf^0,c
  2248   000A3C  0012               	return		;funcret
  2249   000A3E                     __end_of_vfprintf:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _vfpfcnvrt *****************
  2253 ;; Defined at:
  2254 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  2257 ;;		 -> sprintf@f(11), 
  2258 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  2259 ;;		 -> vfprintf@cfmt(2), 
  2260 ;;  ap              1   13[COMRAM] PTR PTR void 
  2261 ;;		 -> sprintf@ap(1), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  convarg         4   19[COMRAM] struct .
  2264 ;;  cp              2   17[COMRAM] PTR unsigned char 
  2265 ;;		 -> STR_1(45), 
  2266 ;;  c               1   23[COMRAM] unsigned char 
  2267 ;;  done            1   16[COMRAM] _Bool 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1
  2277 ;;      Params:         3       0       0
  2278 ;;      Locals:         8       0       0
  2279 ;;      Temps:          2       0       0
  2280 ;;      Totals:        13       0       0
  2281 ;;Total ram usage:       13 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 5
  2284 ;; This function calls:
  2285 ;;		___awdiv
  2286 ;;		___awmod
  2287 ;;		_abs
  2288 ;;		_fputc
  2289 ;; This function is called by:
  2290 ;;		_vfprintf
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text5
  2295   00026E                     __ptext5:
  2296                           	callstack 0
  2297   00026E                     _vfpfcnvrt:
  2298                           	callstack 22
  2299   00026E                     
  2300                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2301   00026E  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2302   000270  6ED9               	movwf	fsr2l,c
  2303   000272  6ADA               	clrf	fsr2h,c
  2304   000274  CFDE FFF6          	movff	postinc2,tblptrl
  2305   000278  CFDD FFF7          	movff	postdec2,tblptrh
  2306   00027C                     	if	0	;tblptru may be non-zero
  2307   00027C                     	endif
  2308   00027C                     	if	0	;tblptru may be non-zero
  2309   00027C                     	endif
  2310   00027C  0008               	tblrd		*
  2311   00027E  50F5               	movf	tablat,w,c
  2312   000280  0A25               	xorlw	37
  2313   000282  A4D8               	btfss	status,2,c
  2314   000284  EF46  F001         	goto	u2831
  2315   000288  EF48  F001         	goto	u2830
  2316   00028C                     u2831:
  2317   00028C  EF0F  F002         	goto	l3298
  2318   000290                     u2830:
  2319   000290                     
  2320                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2321   000290  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2322   000292  6ED9               	movwf	fsr2l,c
  2323   000294  6ADA               	clrf	fsr2h,c
  2324   000296  2ADE               	incf	postinc2,f,c
  2325   000298  0E00               	movlw	0
  2326   00029A  22DD               	addwfc	postdec2,f,c
  2327   00029C                     
  2328                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2329   00029C  0E00               	movlw	0
  2330   00029E  6E4F               	movwf	(_width+1)^0,c
  2331   0002A0  0E00               	movlw	0
  2332   0002A2  6E4E               	movwf	_width^0,c
  2333   0002A4  C04E  F052         	movff	_width,_flags
  2334   0002A8                     
  2335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2336   0002A8  6850               	setf	_prec^0,c
  2337   0002AA  6851               	setf	(_prec+1)^0,c
  2338   0002AC                     
  2339                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2340   0002AC  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2341   0002AE  6ED9               	movwf	fsr2l,c
  2342   0002B0  6ADA               	clrf	fsr2h,c
  2343   0002B2  CFDE F012          	movff	postinc2,vfpfcnvrt@cp
  2344   0002B6  CFDD F013          	movff	postdec2,vfpfcnvrt@cp+1
  2345   0002BA                     
  2346                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2347   0002BA  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2348   0002BE  C013  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2349   0002C2                     	if	0	;tblptru may be non-zero
  2350   0002C2                     	endif
  2351   0002C2                     	if	0	;tblptru may be non-zero
  2352   0002C2                     	endif
  2353   0002C2  0008               	tblrd		*
  2354   0002C4  50F5               	movf	tablat,w,c
  2355   0002C6  0A64               	xorlw	100
  2356   0002C8  B4D8               	btfsc	status,2,c
  2357   0002CA  EF69  F001         	goto	u2841
  2358   0002CE  EF6B  F001         	goto	u2840
  2359   0002D2                     u2841:
  2360   0002D2  EF79  F001         	goto	l3268
  2361   0002D6                     u2840:
  2362   0002D6  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2363   0002DA  C013  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2364   0002DE                     	if	0	;tblptru may be non-zero
  2365   0002DE                     	endif
  2366   0002DE                     	if	0	;tblptru may be non-zero
  2367   0002DE                     	endif
  2368   0002DE  0008               	tblrd		*
  2369   0002E0  50F5               	movf	tablat,w,c
  2370   0002E2  0A69               	xorlw	105
  2371   0002E4  A4D8               	btfss	status,2,c
  2372   0002E6  EF77  F001         	goto	u2851
  2373   0002EA  EF79  F001         	goto	u2850
  2374   0002EE                     u2851:
  2375   0002EE  EF07  F002         	goto	l3294
  2376   0002F2                     u2850:
  2377   0002F2                     l3268:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2380   0002F2  500E               	movf	vfpfcnvrt@ap^0,w,c
  2381   0002F4  6ED9               	movwf	fsr2l,c
  2382   0002F6  6ADA               	clrf	fsr2h,c
  2383   0002F8  0E02               	movlw	2
  2384   0002FA  26DF               	addwf	indf2,f,c
  2385   0002FC  5CDF               	subwf	indf2,w,c
  2386   0002FE  6ED9               	movwf	fsr2l,c
  2387   000300  6ADA               	clrf	fsr2h,c
  2388   000302  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  2389   000306  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  2390   00030A                     
  2391                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2392   00030A  0E01               	movlw	1
  2393   00030C  2412               	addwf	vfpfcnvrt@cp^0,w,c
  2394   00030E  6E0F               	movwf	??_vfpfcnvrt^0,c
  2395   000310  0E00               	movlw	0
  2396   000312  2013               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2397   000314  6E10               	movwf	(??_vfpfcnvrt+1)^0,c
  2398   000316  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2399   000318  6ED9               	movwf	fsr2l,c
  2400   00031A  6ADA               	clrf	fsr2h,c
  2401   00031C  C00F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2402   000320  C010  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2403   000324                     
  2404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2405   000324  0E20               	movlw	32
  2406   000326  6E18               	movwf	vfpfcnvrt@c^0,c
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2409   000328  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2410   00032A  EF99  F001         	goto	u2861
  2411   00032E  EF9C  F001         	goto	u2860
  2412   000332                     u2861:
  2413   000332  0E01               	movlw	1
  2414   000334  EF9D  F001         	goto	u2870
  2415   000338                     u2860:
  2416   000338  0E00               	movlw	0
  2417   00033A                     u2870:
  2418   00033A  6E11               	movwf	vfpfcnvrt@done^0,c
  2419   00033C                     l3274:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2422   00033C  0618               	decf	vfpfcnvrt@c^0,f,c
  2423   00033E  5018               	movf	vfpfcnvrt@c^0,w,c
  2424   000340  0F80               	addlw	low _dbuf
  2425   000342  6ED9               	movwf	fsr2l,c
  2426   000344  6ADA               	clrf	fsr2h,c
  2427   000346  C014  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2428   00034A  C015  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2429   00034E  0E00               	movlw	0
  2430   000350  6E05               	movwf	(___awmod@divisor+1)^0,c
  2431   000352  0E0A               	movlw	10
  2432   000354  6E04               	movwf	___awmod@divisor^0,c
  2433   000356  ECE4  F002         	call	___awmod	;wreg free
  2434   00035A  C002  F008         	movff	?___awmod,abs@a
  2435   00035E  C003  F009         	movff	?___awmod+1,abs@a+1
  2436   000362  EC56  F005         	call	_abs	;wreg free
  2437   000366  5008               	movf	?_abs^0,w,c
  2438   000368  0F30               	addlw	48
  2439   00036A  6EDF               	movwf	indf2,c
  2440   00036C                     
  2441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2442   00036C  C014  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2443   000370  C015  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2444   000374  0E00               	movlw	0
  2445   000376  6E05               	movwf	(___awdiv@divisor+1)^0,c
  2446   000378  0E0A               	movlw	10
  2447   00037A  6E04               	movwf	___awdiv@divisor^0,c
  2448   00037C  EC83  F002         	call	___awdiv	;wreg free
  2449   000380  C002  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  2450   000384  C003  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2451   000388                     
  2452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2453   000388  5014               	movf	vfpfcnvrt@convarg^0,w,c
  2454   00038A  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2455   00038C  B4D8               	btfsc	status,2,c
  2456   00038E  EFCB  F001         	goto	u2881
  2457   000392  EFCD  F001         	goto	u2880
  2458   000396                     u2881:
  2459   000396  EFD5  F001         	goto	l3282
  2460   00039A                     u2880:
  2461   00039A  5018               	movf	vfpfcnvrt@c^0,w,c
  2462   00039C  A4D8               	btfss	status,2,c
  2463   00039E  EFD3  F001         	goto	u2891
  2464   0003A2  EFD5  F001         	goto	u2890
  2465   0003A6                     u2891:
  2466   0003A6  EF9E  F001         	goto	l3274
  2467   0003AA                     u2890:
  2468   0003AA                     l3282:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2471   0003AA  5018               	movf	vfpfcnvrt@c^0,w,c
  2472   0003AC  B4D8               	btfsc	status,2,c
  2473   0003AE  EFDB  F001         	goto	u2901
  2474   0003B2  EFDD  F001         	goto	u2900
  2475   0003B6                     u2901:
  2476   0003B6  EFFC  F001         	goto	l3292
  2477   0003BA                     u2900:
  2478   0003BA  5011               	movf	vfpfcnvrt@done^0,w,c
  2479   0003BC  B4D8               	btfsc	status,2,c
  2480   0003BE  EFE3  F001         	goto	u2911
  2481   0003C2  EFE5  F001         	goto	u2910
  2482   0003C6                     u2911:
  2483   0003C6  EFFC  F001         	goto	l3292
  2484   0003CA                     u2910:
  2485   0003CA                     
  2486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2487   0003CA  0618               	decf	vfpfcnvrt@c^0,f,c
  2488   0003CC  5018               	movf	vfpfcnvrt@c^0,w,c
  2489   0003CE  0F80               	addlw	low _dbuf
  2490   0003D0  6ED9               	movwf	fsr2l,c
  2491   0003D2  6ADA               	clrf	fsr2h,c
  2492   0003D4  0E2D               	movlw	45
  2493   0003D6  6EDF               	movwf	indf2,c
  2494   0003D8  EFFC  F001         	goto	l3292
  2495   0003DC                     l3288:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2498   0003DC  5018               	movf	vfpfcnvrt@c^0,w,c
  2499   0003DE  0F80               	addlw	low _dbuf
  2500   0003E0  6ED9               	movwf	fsr2l,c
  2501   0003E2  6ADA               	clrf	fsr2h,c
  2502   0003E4  50DF               	movf	indf2,w,c
  2503   0003E6  6E0F               	movwf	??_vfpfcnvrt^0,c
  2504   0003E8  500F               	movf	??_vfpfcnvrt^0,w,c
  2505   0003EA  6E02               	movwf	fputc@c^0,c
  2506   0003EC  6A03               	clrf	(fputc@c+1)^0,c
  2507   0003EE  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2508   0003F2  EC3B  F003         	call	_fputc	;wreg free
  2509   0003F6  2A18               	incf	vfpfcnvrt@c^0,f,c
  2510   0003F8                     l3292:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2513   0003F8  0E20               	movlw	32
  2514   0003FA  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2515   0003FC  A4D8               	btfss	status,2,c
  2516   0003FE  EF03  F002         	goto	u2921
  2517   000402  EF05  F002         	goto	u2920
  2518   000406                     u2921:
  2519   000406  EFEE  F001         	goto	l3288
  2520   00040A                     u2920:
  2521   00040A  EF20  F002         	goto	l1214
  2522   00040E                     l3294:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2525   00040E  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2526   000410  6ED9               	movwf	fsr2l,c
  2527   000412  6ADA               	clrf	fsr2h,c
  2528   000414  2ADE               	incf	postinc2,f,c
  2529   000416  0E00               	movlw	0
  2530   000418  22DD               	addwfc	postdec2,f,c
  2531   00041A  EF20  F002         	goto	l1214
  2532   00041E                     l3298:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2535   00041E  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2536   000420  6ED9               	movwf	fsr2l,c
  2537   000422  6ADA               	clrf	fsr2h,c
  2538   000424  CFDE FFF6          	movff	postinc2,tblptrl
  2539   000428  CFDD FFF7          	movff	postdec2,tblptrh
  2540   00042C                     	if	0	;tblptru may be non-zero
  2541   00042C                     	endif
  2542   00042C                     	if	0	;tblptru may be non-zero
  2543   00042C                     	endif
  2544   00042C  0008               	tblrd		*
  2545   00042E  50F5               	movf	tablat,w,c
  2546   000430  6E02               	movwf	fputc@c^0,c
  2547   000432  6A03               	clrf	(fputc@c+1)^0,c
  2548   000434  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2549   000438  EC3B  F003         	call	_fputc	;wreg free
  2550   00043C  EF07  F002         	goto	l3294
  2551   000440                     l1214:
  2552   000440  0012               	return		;funcret
  2553   000442                     __end_of_vfpfcnvrt:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function _fputc *****************
  2557 ;; Defined at:
  2558 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  c               2    1[COMRAM] int 
  2561 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  2562 ;;		 -> sprintf@f(11), 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2    1[COMRAM] int 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1
  2574 ;;      Params:         3       0       0
  2575 ;;      Locals:         0       0       0
  2576 ;;      Temps:          5       0       0
  2577 ;;      Totals:         8       0       0
  2578 ;;Total ram usage:        8 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 4
  2581 ;; This function calls:
  2582 ;;		_putch
  2583 ;; This function is called by:
  2584 ;;		_vfpfcnvrt
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text6
  2589   000676                     __ptext6:
  2590                           	callstack 0
  2591   000676                     _fputc:
  2592                           	callstack 22
  2593   000676  5004               	movf	fputc@fp^0,w,c
  2594   000678  B4D8               	btfsc	status,2,c
  2595   00067A  EF41  F003         	goto	u2781
  2596   00067E  EF43  F003         	goto	u2780
  2597   000682                     u2781:
  2598   000682  EF4B  F003         	goto	l3240
  2599   000686                     u2780:
  2600   000686  5004               	movf	fputc@fp^0,w,c
  2601   000688  A4D8               	btfss	status,2,c
  2602   00068A  EF49  F003         	goto	u2791
  2603   00068E  EF4B  F003         	goto	u2790
  2604   000692                     u2791:
  2605   000692  EF50  F003         	goto	l3242
  2606   000696                     u2790:
  2607   000696                     l3240:
  2608   000696  5002               	movf	fputc@c^0,w,c
  2609   000698  EC49  F006         	call	_putch
  2610   00069C  EF8F  F003         	goto	l1239
  2611   0006A0                     l3242:
  2612   0006A0  5004               	movf	fputc@fp^0,w,c
  2613   0006A2  6ED9               	movwf	fsr2l,c
  2614   0006A4  6ADA               	clrf	fsr2h,c
  2615   0006A6  0E09               	movlw	9
  2616   0006A8  26D9               	addwf	fsr2l,f,c
  2617   0006AA  50DE               	movf	postinc2,w,c
  2618   0006AC  10DE               	iorwf	postinc2,w,c
  2619   0006AE  B4D8               	btfsc	status,2,c
  2620   0006B0  EF5C  F003         	goto	u2801
  2621   0006B4  EF5E  F003         	goto	u2800
  2622   0006B8                     u2801:
  2623   0006B8  EF77  F003         	goto	l3246
  2624   0006BC                     u2800:
  2625   0006BC  5004               	movf	fputc@fp^0,w,c
  2626   0006BE  6ED9               	movwf	fsr2l,c
  2627   0006C0  6ADA               	clrf	fsr2h,c
  2628   0006C2  0E09               	movlw	9
  2629   0006C4  26D9               	addwf	fsr2l,f,c
  2630   0006C6  5004               	movf	fputc@fp^0,w,c
  2631   0006C8  6EE1               	movwf	fsr1l,c
  2632   0006CA  6AE2               	clrf	fsr1h,c
  2633   0006CC  0E02               	movlw	2
  2634   0006CE  26E1               	addwf	fsr1l,f,c
  2635   0006D0  50DE               	movf	postinc2,w,c
  2636   0006D2  5CE6               	subwf	postinc1,w,c
  2637   0006D4  50E6               	movf	postinc1,w,c
  2638   0006D6  0A80               	xorlw	128
  2639   0006D8  6E09               	movwf	(??_fputc+4)^0,c
  2640   0006DA  50DE               	movf	postinc2,w,c
  2641   0006DC  0A80               	xorlw	128
  2642   0006DE  5809               	subwfb	(??_fputc+4)^0,w,c
  2643   0006E0  B0D8               	btfsc	status,0,c
  2644   0006E2  EF75  F003         	goto	u2811
  2645   0006E6  EF77  F003         	goto	u2810
  2646   0006EA                     u2811:
  2647   0006EA  EF8F  F003         	goto	l1239
  2648   0006EE                     u2810:
  2649   0006EE                     l3246:
  2650   0006EE  5004               	movf	fputc@fp^0,w,c
  2651   0006F0  6ED9               	movwf	fsr2l,c
  2652   0006F2  6ADA               	clrf	fsr2h,c
  2653   0006F4  0E02               	movlw	2
  2654   0006F6  26D9               	addwf	fsr2l,f,c
  2655   0006F8  50DF               	movf	indf2,w,c
  2656   0006FA  6E05               	movwf	??_fputc^0,c
  2657   0006FC  5004               	movf	fputc@fp^0,w,c
  2658   0006FE  6ED9               	movwf	fsr2l,c
  2659   000700  6ADA               	clrf	fsr2h,c
  2660   000702  50DF               	movf	indf2,w,c
  2661   000704  2405               	addwf	??_fputc^0,w,c
  2662   000706  6ED9               	movwf	fsr2l,c
  2663   000708  6ADA               	clrf	fsr2h,c
  2664   00070A  C002  FFDF         	movff	fputc@c,indf2
  2665   00070E  5004               	movf	fputc@fp^0,w,c
  2666   000710  6ED9               	movwf	fsr2l,c
  2667   000712  6ADA               	clrf	fsr2h,c
  2668   000714  0E02               	movlw	2
  2669   000716  26D9               	addwf	fsr2l,f,c
  2670   000718  2ADE               	incf	postinc2,f,c
  2671   00071A  0E00               	movlw	0
  2672   00071C  22DD               	addwfc	postdec2,f,c
  2673   00071E                     l1239:
  2674   00071E  0012               	return		;funcret
  2675   000720                     __end_of_fputc:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function _putch *****************
  2679 ;; Defined at:
  2680 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  c               1    wreg     unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  c               1    0[COMRAM] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1
  2694 ;;      Params:         0       0       0
  2695 ;;      Locals:         0       0       0
  2696 ;;      Temps:          0       0       0
  2697 ;;      Totals:         0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 3
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_fputc
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text7
  2709   000C92                     __ptext7:
  2710                           	callstack 0
  2711   000C92                     _putch:
  2712                           	callstack 22
  2713   000C92  0012               	return		;funcret
  2714   000C94                     __end_of_putch:
  2715                           	callstack 0
  2716                           
  2717 ;; *************** function _abs *****************
  2718 ;; Defined at:
  2719 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  a               2    7[COMRAM] int 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  2    7[COMRAM] int 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1
  2733 ;;      Params:         2       0       0
  2734 ;;      Locals:         0       0       0
  2735 ;;      Temps:          2       0       0
  2736 ;;      Totals:         4       0       0
  2737 ;;Total ram usage:        4 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 3
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_vfpfcnvrt
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text8
  2748   000AAC                     __ptext8:
  2749                           	callstack 0
  2750   000AAC                     _abs:
  2751                           	callstack 23
  2752   000AAC  BE09               	btfsc	(abs@a+1)^0,7,c
  2753   000AAE  EF5B  F005         	goto	u2821
  2754   000AB2  EF5D  F005         	goto	u2820
  2755   000AB6                     u2821:
  2756   000AB6  EF63  F005         	goto	l1224
  2757   000ABA                     u2820:
  2758   000ABA  C008  F008         	movff	abs@a,?_abs
  2759   000ABE  C009  F009         	movff	abs@a+1,?_abs+1
  2760   000AC2  EF6F  F005         	goto	l1227
  2761   000AC6                     l1224:
  2762   000AC6  C008  F00A         	movff	abs@a,??_abs
  2763   000ACA  C009  F00B         	movff	abs@a+1,??_abs+1
  2764   000ACE  1E0A               	comf	??_abs^0,f,c
  2765   000AD0  1E0B               	comf	(??_abs+1)^0,f,c
  2766   000AD2  4A0A               	infsnz	??_abs^0,f,c
  2767   000AD4  2A0B               	incf	(??_abs+1)^0,f,c
  2768   000AD6  C00A  F008         	movff	??_abs,?_abs
  2769   000ADA  C00B  F009         	movff	??_abs+1,?_abs+1
  2770   000ADE                     l1227:
  2771   000ADE  0012               	return		;funcret
  2772   000AE0                     __end_of_abs:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function ___awmod *****************
  2776 ;; Defined at:
  2777 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  dividend        2    1[COMRAM] int 
  2780 ;;  divisor         2    3[COMRAM] int 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  sign            1    6[COMRAM] unsigned char 
  2783 ;;  counter         1    5[COMRAM] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  2    1[COMRAM] int 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1
  2793 ;;      Params:         4       0       0
  2794 ;;      Locals:         2       0       0
  2795 ;;      Temps:          0       0       0
  2796 ;;      Totals:         6       0       0
  2797 ;;Total ram usage:        6 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 3
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_vfpfcnvrt
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text9
  2808   0005C8                     __ptext9:
  2809                           	callstack 0
  2810   0005C8                     ___awmod:
  2811                           	callstack 23
  2812   0005C8  6A07               	clrf	___awmod@sign^0,c
  2813   0005CA  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  2814   0005CC  EFEC  F002         	goto	u2720
  2815   0005D0  EFEA  F002         	goto	u2721
  2816   0005D4                     u2721:
  2817   0005D4  EFF2  F002         	goto	l3208
  2818   0005D8                     u2720:
  2819   0005D8  6C02               	negf	___awmod@dividend^0,c
  2820   0005DA  1E03               	comf	(___awmod@dividend+1)^0,f,c
  2821   0005DC  B0D8               	btfsc	status,0,c
  2822   0005DE  2A03               	incf	(___awmod@dividend+1)^0,f,c
  2823   0005E0  0E01               	movlw	1
  2824   0005E2  6E07               	movwf	___awmod@sign^0,c
  2825   0005E4                     l3208:
  2826   0005E4  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  2827   0005E6  EFF9  F002         	goto	u2730
  2828   0005EA  EFF7  F002         	goto	u2731
  2829   0005EE                     u2731:
  2830   0005EE  EFFD  F002         	goto	l3212
  2831   0005F2                     u2730:
  2832   0005F2  6C04               	negf	___awmod@divisor^0,c
  2833   0005F4  1E05               	comf	(___awmod@divisor+1)^0,f,c
  2834   0005F6  B0D8               	btfsc	status,0,c
  2835   0005F8  2A05               	incf	(___awmod@divisor+1)^0,f,c
  2836   0005FA                     l3212:
  2837   0005FA  5004               	movf	___awmod@divisor^0,w,c
  2838   0005FC  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  2839   0005FE  B4D8               	btfsc	status,2,c
  2840   000600  EF04  F003         	goto	u2741
  2841   000604  EF06  F003         	goto	u2740
  2842   000608                     u2741:
  2843   000608  EF2A  F003         	goto	l3228
  2844   00060C                     u2740:
  2845   00060C  0E01               	movlw	1
  2846   00060E  6E06               	movwf	___awmod@counter^0,c
  2847   000610  EF0E  F003         	goto	l3218
  2848   000614                     l3216:
  2849   000614  90D8               	bcf	status,0,c
  2850   000616  3604               	rlcf	___awmod@divisor^0,f,c
  2851   000618  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  2852   00061A  2A06               	incf	___awmod@counter^0,f,c
  2853   00061C                     l3218:
  2854   00061C  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  2855   00061E  EF13  F003         	goto	u2751
  2856   000622  EF15  F003         	goto	u2750
  2857   000626                     u2751:
  2858   000626  EF0A  F003         	goto	l3216
  2859   00062A                     u2750:
  2860   00062A                     l3220:
  2861   00062A  5004               	movf	___awmod@divisor^0,w,c
  2862   00062C  5C02               	subwf	___awmod@dividend^0,w,c
  2863   00062E  5005               	movf	(___awmod@divisor+1)^0,w,c
  2864   000630  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  2865   000632  A0D8               	btfss	status,0,c
  2866   000634  EF1E  F003         	goto	u2761
  2867   000638  EF20  F003         	goto	u2760
  2868   00063C                     u2761:
  2869   00063C  EF24  F003         	goto	l3224
  2870   000640                     u2760:
  2871   000640  5004               	movf	___awmod@divisor^0,w,c
  2872   000642  5E02               	subwf	___awmod@dividend^0,f,c
  2873   000644  5005               	movf	(___awmod@divisor+1)^0,w,c
  2874   000646  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  2875   000648                     l3224:
  2876   000648  90D8               	bcf	status,0,c
  2877   00064A  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  2878   00064C  3204               	rrcf	___awmod@divisor^0,f,c
  2879   00064E  2E06               	decfsz	___awmod@counter^0,f,c
  2880   000650  EF15  F003         	goto	l3220
  2881   000654                     l3228:
  2882   000654  5007               	movf	___awmod@sign^0,w,c
  2883   000656  B4D8               	btfsc	status,2,c
  2884   000658  EF30  F003         	goto	u2771
  2885   00065C  EF32  F003         	goto	u2770
  2886   000660                     u2771:
  2887   000660  EF36  F003         	goto	l3232
  2888   000664                     u2770:
  2889   000664  6C02               	negf	___awmod@dividend^0,c
  2890   000666  1E03               	comf	(___awmod@dividend+1)^0,f,c
  2891   000668  B0D8               	btfsc	status,0,c
  2892   00066A  2A03               	incf	(___awmod@dividend+1)^0,f,c
  2893   00066C                     l3232:
  2894   00066C  C002  F002         	movff	___awmod@dividend,?___awmod
  2895   000670  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  2896   000674  0012               	return		;funcret
  2897   000676                     __end_of___awmod:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function ___awdiv *****************
  2901 ;; Defined at:
  2902 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  dividend        2    1[COMRAM] int 
  2905 ;;  divisor         2    3[COMRAM] int 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  quotient        2    7[COMRAM] int 
  2908 ;;  sign            1    6[COMRAM] unsigned char 
  2909 ;;  counter         1    5[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  2    1[COMRAM] int 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1
  2919 ;;      Params:         4       0       0
  2920 ;;      Locals:         4       0       0
  2921 ;;      Temps:          0       0       0
  2922 ;;      Totals:         8       0       0
  2923 ;;Total ram usage:        8 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 3
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_vfpfcnvrt
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text10
  2934   000506                     __ptext10:
  2935                           	callstack 0
  2936   000506                     ___awdiv:
  2937                           	callstack 23
  2938   000506  6A07               	clrf	___awdiv@sign^0,c
  2939   000508  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  2940   00050A  EF8B  F002         	goto	u2660
  2941   00050E  EF89  F002         	goto	u2661
  2942   000512                     u2661:
  2943   000512  EF91  F002         	goto	l3164
  2944   000516                     u2660:
  2945   000516  6C04               	negf	___awdiv@divisor^0,c
  2946   000518  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  2947   00051A  B0D8               	btfsc	status,0,c
  2948   00051C  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  2949   00051E  0E01               	movlw	1
  2950   000520  6E07               	movwf	___awdiv@sign^0,c
  2951   000522                     l3164:
  2952   000522  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  2953   000524  EF98  F002         	goto	u2670
  2954   000528  EF96  F002         	goto	u2671
  2955   00052C                     u2671:
  2956   00052C  EF9E  F002         	goto	l3170
  2957   000530                     u2670:
  2958   000530  6C02               	negf	___awdiv@dividend^0,c
  2959   000532  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  2960   000534  B0D8               	btfsc	status,0,c
  2961   000536  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  2962   000538  0E01               	movlw	1
  2963   00053A  1A07               	xorwf	___awdiv@sign^0,f,c
  2964   00053C                     l3170:
  2965   00053C  0E00               	movlw	0
  2966   00053E  6E09               	movwf	(___awdiv@quotient+1)^0,c
  2967   000540  0E00               	movlw	0
  2968   000542  6E08               	movwf	___awdiv@quotient^0,c
  2969   000544  5004               	movf	___awdiv@divisor^0,w,c
  2970   000546  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  2971   000548  B4D8               	btfsc	status,2,c
  2972   00054A  EFA9  F002         	goto	u2681
  2973   00054E  EFAB  F002         	goto	u2680
  2974   000552                     u2681:
  2975   000552  EFD3  F002         	goto	l3192
  2976   000556                     u2680:
  2977   000556  0E01               	movlw	1
  2978   000558  6E06               	movwf	___awdiv@counter^0,c
  2979   00055A  EFB3  F002         	goto	l3178
  2980   00055E                     l3176:
  2981   00055E  90D8               	bcf	status,0,c
  2982   000560  3604               	rlcf	___awdiv@divisor^0,f,c
  2983   000562  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  2984   000564  2A06               	incf	___awdiv@counter^0,f,c
  2985   000566                     l3178:
  2986   000566  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  2987   000568  EFB8  F002         	goto	u2691
  2988   00056C  EFBA  F002         	goto	u2690
  2989   000570                     u2691:
  2990   000570  EFAF  F002         	goto	l3176
  2991   000574                     u2690:
  2992   000574                     l3180:
  2993   000574  90D8               	bcf	status,0,c
  2994   000576  3608               	rlcf	___awdiv@quotient^0,f,c
  2995   000578  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  2996   00057A  5004               	movf	___awdiv@divisor^0,w,c
  2997   00057C  5C02               	subwf	___awdiv@dividend^0,w,c
  2998   00057E  5005               	movf	(___awdiv@divisor+1)^0,w,c
  2999   000580  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  3000   000582  A0D8               	btfss	status,0,c
  3001   000584  EFC6  F002         	goto	u2701
  3002   000588  EFC8  F002         	goto	u2700
  3003   00058C                     u2701:
  3004   00058C  EFCD  F002         	goto	l3188
  3005   000590                     u2700:
  3006   000590  5004               	movf	___awdiv@divisor^0,w,c
  3007   000592  5E02               	subwf	___awdiv@dividend^0,f,c
  3008   000594  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3009   000596  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  3010   000598  8008               	bsf	___awdiv@quotient^0,0,c
  3011   00059A                     l3188:
  3012   00059A  90D8               	bcf	status,0,c
  3013   00059C  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  3014   00059E  3204               	rrcf	___awdiv@divisor^0,f,c
  3015   0005A0  2E06               	decfsz	___awdiv@counter^0,f,c
  3016   0005A2  EFBA  F002         	goto	l3180
  3017   0005A6                     l3192:
  3018   0005A6  5007               	movf	___awdiv@sign^0,w,c
  3019   0005A8  B4D8               	btfsc	status,2,c
  3020   0005AA  EFD9  F002         	goto	u2711
  3021   0005AE  EFDB  F002         	goto	u2710
  3022   0005B2                     u2711:
  3023   0005B2  EFDF  F002         	goto	l3196
  3024   0005B6                     u2710:
  3025   0005B6  6C08               	negf	___awdiv@quotient^0,c
  3026   0005B8  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  3027   0005BA  B0D8               	btfsc	status,0,c
  3028   0005BC  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  3029   0005BE                     l3196:
  3030   0005BE  C008  F002         	movff	___awdiv@quotient,?___awdiv
  3031   0005C2  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  3032   0005C6  0012               	return		;funcret
  3033   0005C8                     __end_of___awdiv:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function _hashtag_pressed3s *****************
  3037 ;; Defined at:
  3038 ;;		line 73 in file "TAD_TERMINAL.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1
  3052 ;;      Params:         0       0       0
  3053 ;;      Locals:         0       0       0
  3054 ;;      Temps:          0       0       0
  3055 ;;      Totals:         0       0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 3
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_motorTeclado
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text11
  3067   000C86                     __ptext11:
  3068                           	callstack 0
  3069   000C86                     _hashtag_pressed3s:
  3070                           	callstack 26
  3071   000C86                     
  3072                           ;TAD_TERMINAL.c: 74:  hashtag_pressed = 1;
  3073   000C86  0E01               	movlw	1
  3074   000C88  6E54               	movwf	_hashtag_pressed^0,c
  3075   000C8A  0012               	return		;funcret
  3076   000C8C                     __end_of_hashtag_pressed3s:
  3077                           	callstack 0
  3078                           
  3079 ;; *************** function _Terminal_SendString *****************
  3080 ;; Defined at:
  3081 ;;		line 55 in file "TAD_TERMINAL.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  str             2    4[COMRAM] PTR const unsigned char 
  3084 ;;		 -> STR_13(33), STR_12(14), STR_11(9), STR_10(33), 
  3085 ;;		 -> STR_9(29), STR_8(27), STR_7(19), STR_6(18), 
  3086 ;;		 -> STR_5(18), STR_4(18), STR_3(2), STR_2(6), 
  3087 ;;		 -> displayUID@hexString(11), motorTeclado@buffer(32), 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1
  3099 ;;      Params:         2       0       0
  3100 ;;      Locals:         0       0       0
  3101 ;;      Temps:          0       0       0
  3102 ;;      Totals:         2       0       0
  3103 ;;Total ram usage:        2 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 4
  3106 ;; This function calls:
  3107 ;;		_Terminal_SendChar
  3108 ;;		_Terminal_TXAvailable
  3109 ;; This function is called by:
  3110 ;;		_motorTeclado
  3111 ;;		_displayUID
  3112 ;;		_showMenu
  3113 ;;		_motorTerminal
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text12
  3118   000852                     __ptext12:
  3119                           	callstack 0
  3120   000852                     _Terminal_SendString:
  3121                           	callstack 25
  3122   000852                     
  3123                           ;TAD_TERMINAL.c: 56:  while (*str) {
  3124   000852  EF4A  F004         	goto	l3356
  3125   000856                     l3350:
  3126   000856  ECD4  F005         	call	_Terminal_TXAvailable	;wreg free
  3127   00085A  5002               	movf	?_Terminal_TXAvailable^0,w,c
  3128   00085C  1003               	iorwf	(?_Terminal_TXAvailable+1)^0,w,c
  3129   00085E  B4D8               	btfsc	status,2,c
  3130   000860  EF34  F004         	goto	u2951
  3131   000864  EF36  F004         	goto	u2950
  3132   000868                     u2951:
  3133   000868  EF2B  F004         	goto	l3350
  3134   00086C                     u2950:
  3135   00086C                     
  3136                           ;TAD_TERMINAL.c: 58:   Terminal_SendChar(*str++);
  3137   00086C  C005  FFF6         	movff	Terminal_SendString@str,tblptrl
  3138   000870  C006  FFF7         	movff	Terminal_SendString@str+1,tblptrh
  3139   000874  6AF8               	clrf	tblptru,c
  3140   000876  0E01               	movlw	(high __ramtop+-1)
  3141   000878  64F7               	cpfsgt	tblptrh,c
  3142   00087A  D003               	bra	u2967
  3143   00087C  0008               	tblrd		*
  3144   00087E  50F5               	movf	tablat,w,c
  3145   000880  D005               	bra	u2960
  3146   000882                     u2967:
  3147   000882  CFF6 FFE9          	movff	tblptrl,fsr0l
  3148   000886  CFF7 FFEA          	movff	tblptrh,fsr0h
  3149   00088A  50EF               	movf	indf0,w,c
  3150   00088C                     u2960:
  3151   00088C  EC3B  F006         	call	_Terminal_SendChar
  3152   000890  4A05               	infsnz	Terminal_SendString@str^0,f,c
  3153   000892  2A06               	incf	(Terminal_SendString@str+1)^0,f,c
  3154   000894                     l3356:
  3155                           
  3156                           ;TAD_TERMINAL.c: 56:  while (*str) {
  3157   000894  C005  FFF6         	movff	Terminal_SendString@str,tblptrl
  3158   000898  C006  FFF7         	movff	Terminal_SendString@str+1,tblptrh
  3159   00089C  6AF8               	clrf	tblptru,c
  3160   00089E  0E01               	movlw	(high __ramtop+-1)
  3161   0008A0  64F7               	cpfsgt	tblptrh,c
  3162   0008A2  D003               	bra	u2977
  3163   0008A4  0008               	tblrd		*
  3164   0008A6  50F5               	movf	tablat,w,c
  3165   0008A8  D005               	bra	u2970
  3166   0008AA                     u2977:
  3167   0008AA  CFF6 FFE9          	movff	tblptrl,fsr0l
  3168   0008AE  CFF7 FFEA          	movff	tblptrh,fsr0h
  3169   0008B2  50EF               	movf	indf0,w,c
  3170   0008B4                     u2970:
  3171   0008B4  0900               	iorlw	0
  3172   0008B6  A4D8               	btfss	status,2,c
  3173   0008B8  EF60  F004         	goto	u2981
  3174   0008BC  EF62  F004         	goto	u2980
  3175   0008C0                     u2981:
  3176   0008C0  EF2B  F004         	goto	l3350
  3177   0008C4                     u2980:
  3178   0008C4  0012               	return		;funcret
  3179   0008C6                     __end_of_Terminal_SendString:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _Terminal_TXAvailable *****************
  3183 ;; Defined at:
  3184 ;;		line 35 in file "TAD_TERMINAL.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  2    1[COMRAM] int 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1
  3198 ;;      Params:         2       0       0
  3199 ;;      Locals:         0       0       0
  3200 ;;      Temps:          1       0       0
  3201 ;;      Totals:         3       0       0
  3202 ;;Total ram usage:        3 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 3
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_Terminal_SendString
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text13
  3213   000BA8                     __ptext13:
  3214                           	callstack 0
  3215   000BA8                     _Terminal_TXAvailable:
  3216                           	callstack 25
  3217   000BA8                     
  3218                           ;TAD_TERMINAL.c: 36:  return (PIR1bits.TXIF == 1) ? 1 : 0;
  3219   000BA8  B89E               	btfsc	158,4,c	;volatile
  3220   000BAA  EFD9  F005         	goto	u2931
  3221   000BAE  EFDD  F005         	goto	u2930
  3222   000BB2                     u2931:
  3223   000BB2  6A04               	clrf	??_Terminal_TXAvailable^0,c
  3224   000BB4  2A04               	incf	??_Terminal_TXAvailable^0,f,c
  3225   000BB6  EFDE  F005         	goto	u2938
  3226   000BBA                     u2930:
  3227   000BBA  6A04               	clrf	??_Terminal_TXAvailable^0,c
  3228   000BBC                     u2938:
  3229   000BBC  5004               	movf	??_Terminal_TXAvailable^0,w,c
  3230   000BBE  6E02               	movwf	?_Terminal_TXAvailable^0,c
  3231   000BC0  6A03               	clrf	(?_Terminal_TXAvailable+1)^0,c
  3232   000BC2  0012               	return		;funcret
  3233   000BC4                     __end_of_Terminal_TXAvailable:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _Terminal_SendChar *****************
  3237 ;; Defined at:
  3238 ;;		line 45 in file "TAD_TERMINAL.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  c               1    wreg     unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  c               1    1[COMRAM] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1
  3252 ;;      Params:         0       0       0
  3253 ;;      Locals:         1       0       0
  3254 ;;      Temps:          0       0       0
  3255 ;;      Totals:         1       0       0
  3256 ;;Total ram usage:        1 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 3
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_Terminal_SendString
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text14
  3267   000C76                     __ptext14:
  3268                           	callstack 0
  3269   000C76                     _Terminal_SendChar:
  3270                           	callstack 25
  3271                           
  3272                           ;incstack = 0
  3273                           ;Terminal_SendChar@c stored from wreg
  3274   000C76  6E02               	movwf	Terminal_SendChar@c^0,c
  3275   000C78                     
  3276                           ;TAD_TERMINAL.c: 46:  TXREG = c;
  3277   000C78  C002  FFAD         	movff	Terminal_SendChar@c,4013	;volatile
  3278   000C7C  0012               	return		;funcret
  3279   000C7E                     __end_of_Terminal_SendChar:
  3280                           	callstack 0
  3281                           
  3282 ;; *************** function _TI_ResetTics *****************
  3283 ;; Defined at:
  3284 ;;		line 53 in file "TAD_TIMER.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  TimerHandle     1    wreg     unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  TimerHandle     1    1[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1
  3298 ;;      Params:         0       0       0
  3299 ;;      Locals:         1       0       0
  3300 ;;      Temps:          0       0       0
  3301 ;;      Totals:         1       0       0
  3302 ;;Total ram usage:        1 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 3
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_motorTeclado
  3309 ;;		_Espera
  3310 ;;		_WaitForBusy
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text15
  3315   000B64                     __ptext15:
  3316                           	callstack 0
  3317   000B64                     _TI_ResetTics:
  3318                           	callstack 26
  3319                           
  3320                           ;incstack = 0
  3321                           ;TI_ResetTics@TimerHandle stored from wreg
  3322   000B64  6E02               	movwf	TI_ResetTics@TimerHandle^0,c
  3323   000B66                     
  3324                           ;TAD_TIMER.c: 57:  (INTCONbits.GIE = 0); Timers[TimerHandle].TicsInicials=Tics; (INTCONb
      +                          its.GIE = 1);
  3325   000B66  9EF2               	bcf	242,7,c	;volatile
  3326   000B68  5002               	movf	TI_ResetTics@TimerHandle^0,w,c
  3327   000B6A  0D05               	mullw	5
  3328   000B6C  50F3               	movf	243,w,c
  3329   000B6E  0F36               	addlw	low _Timers
  3330   000B70  6ED9               	movwf	fsr2l,c
  3331   000B72  6ADA               	clrf	fsr2h,c
  3332   000B74  C04A  FFDE         	movff	_Tics,postinc2	;volatile
  3333   000B78  C04B  FFDE         	movff	_Tics+1,postinc2	;volatile
  3334   000B7C  C04C  FFDE         	movff	_Tics+2,postinc2	;volatile
  3335   000B80  C04D  FFDE         	movff	_Tics+3,postinc2	;volatile
  3336   000B84  8EF2               	bsf	242,7,c	;volatile
  3337   000B86  0012               	return		;funcret
  3338   000B88                     __end_of_TI_ResetTics:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _TI_GetTics *****************
  3342 ;; Defined at:
  3343 ;;		line 61 in file "TAD_TIMER.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  TimerHandle     1    wreg     unsigned char 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  TimerHandle     1   13[COMRAM] unsigned char 
  3348 ;;  CopiaTicsAct    4    9[COMRAM] unsigned long 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  4    1[COMRAM] unsigned long 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1
  3358 ;;      Params:         4       0       0
  3359 ;;      Locals:         5       0       0
  3360 ;;      Temps:          4       0       0
  3361 ;;      Totals:        13       0       0
  3362 ;;Total ram usage:       13 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 3
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_motorTeclado
  3369 ;;		_Espera
  3370 ;;		_WaitForBusy
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text16
  3375   00096A                     __ptext16:
  3376                           	callstack 0
  3377   00096A                     _TI_GetTics:
  3378                           	callstack 26
  3379                           
  3380                           ;incstack = 0
  3381                           ;TI_GetTics@TimerHandle stored from wreg
  3382   00096A  6E0E               	movwf	TI_GetTics@TimerHandle^0,c
  3383   00096C                     
  3384                           ;TAD_TIMER.c: 62:     (INTCONbits.GIE = 0); unsigned long CopiaTicsActual=Tics; (INTCONb
      +                          its.GIE = 1);
  3385   00096C  9EF2               	bcf	242,7,c	;volatile
  3386   00096E  C04A  F00A         	movff	_Tics,TI_GetTics@CopiaTicsActual	;volatile
  3387   000972  C04B  F00B         	movff	_Tics+1,TI_GetTics@CopiaTicsActual+1	;volatile
  3388   000976  C04C  F00C         	movff	_Tics+2,TI_GetTics@CopiaTicsActual+2	;volatile
  3389   00097A  C04D  F00D         	movff	_Tics+3,TI_GetTics@CopiaTicsActual+3	;volatile
  3390   00097E  8EF2               	bsf	242,7,c	;volatile
  3391   000980                     
  3392                           ;TAD_TIMER.c: 63:  return (CopiaTicsActual-(Timers[TimerHandle].TicsInicials));
  3393   000980  500E               	movf	TI_GetTics@TimerHandle^0,w,c
  3394   000982  0D05               	mullw	5
  3395   000984  50F3               	movf	243,w,c
  3396   000986  0F36               	addlw	low _Timers
  3397   000988  6ED9               	movwf	fsr2l,c
  3398   00098A  6ADA               	clrf	fsr2h,c
  3399   00098C  CFDE F006          	movff	postinc2,??_TI_GetTics
  3400   000990  CFDE F007          	movff	postinc2,??_TI_GetTics+1
  3401   000994  CFDE F008          	movff	postinc2,??_TI_GetTics+2
  3402   000998  CFDE F009          	movff	postinc2,??_TI_GetTics+3
  3403   00099C  5006               	movf	??_TI_GetTics^0,w,c
  3404   00099E  5C0A               	subwf	TI_GetTics@CopiaTicsActual^0,w,c
  3405   0009A0  6E02               	movwf	?_TI_GetTics^0,c
  3406   0009A2  5007               	movf	(??_TI_GetTics+1)^0,w,c
  3407   0009A4  580B               	subwfb	(TI_GetTics@CopiaTicsActual+1)^0,w,c
  3408   0009A6  6E03               	movwf	(?_TI_GetTics+1)^0,c
  3409   0009A8  5008               	movf	(??_TI_GetTics+2)^0,w,c
  3410   0009AA  580C               	subwfb	(TI_GetTics@CopiaTicsActual+2)^0,w,c
  3411   0009AC  6E04               	movwf	(?_TI_GetTics+2)^0,c
  3412   0009AE  5009               	movf	(??_TI_GetTics+3)^0,w,c
  3413   0009B0  580D               	subwfb	(TI_GetTics@CopiaTicsActual+3)^0,w,c
  3414   0009B2  6E05               	movwf	(?_TI_GetTics+3)^0,c
  3415   0009B4  0012               	return		;funcret
  3416   0009B6                     __end_of_TI_GetTics:
  3417                           	callstack 0
  3418                           
  3419 ;; *************** function _ReadFilas *****************
  3420 ;; Defined at:
  3421 ;;		line 10 in file "TAD_TECLADO.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      unsigned char 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1
  3435 ;;      Params:         0       0       0
  3436 ;;      Locals:         0       0       0
  3437 ;;      Temps:          0       0       0
  3438 ;;      Totals:         0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 3
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_motorTeclado
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text17
  3450   000C8C                     __ptext17:
  3451                           	callstack 0
  3452   000C8C                     _ReadFilas:
  3453                           	callstack 26
  3454   000C8C                     
  3455                           ;TAD_TECLADO.c: 11:     return (PORTD & 0x0F);
  3456   000C8C  5083               	movf	131,w,c	;volatile
  3457   000C8E  0B0F               	andlw	15
  3458   000C90  0012               	return		;funcret
  3459   000C92                     __end_of_ReadFilas:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _GetTecla *****************
  3463 ;; Defined at:
  3464 ;;		line 124 in file "TAD_TECLADO.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  keymap         12    3[COMRAM] const unsigned char [3][
  3469 ;;  fila            1   16[COMRAM] unsigned char 
  3470 ;;  columna         1   15[COMRAM] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      unsigned char 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1
  3480 ;;      Params:         0       0       0
  3481 ;;      Locals:        14       0       0
  3482 ;;      Temps:          2       0       0
  3483 ;;      Totals:        16       0       0
  3484 ;;Total ram usage:       16 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 3
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_motorTeclado
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text18
  3495   000442                     __ptext18:
  3496                           	callstack 0
  3497   000442                     _GetTecla:
  3498                           	callstack 26
  3499   000442                     
  3500                           ;TAD_TECLADO.c: 126:     unsigned char columna = 0;
  3501   000442  6A10               	clrf	GetTecla@columna^0,c
  3502                           
  3503                           ;TAD_TECLADO.c: 128:     switch(Filas) {
  3504   000444  EF36  F002         	goto	l3386
  3505   000448                     l161:
  3506   000448  6A11               	clrf	GetTecla@fila^0,c
  3507   00044A  EF54  F002         	goto	l3398
  3508   00044E                     l3374:
  3509   00044E  0E01               	movlw	1
  3510   000450  6E11               	movwf	GetTecla@fila^0,c
  3511   000452  EF54  F002         	goto	l3398
  3512   000456                     l3376:
  3513   000456  0E02               	movlw	2
  3514   000458  6E11               	movwf	GetTecla@fila^0,c
  3515   00045A  EF54  F002         	goto	l3398
  3516   00045E                     l3378:
  3517   00045E  0E03               	movlw	3
  3518   000460  6E11               	movwf	GetTecla@fila^0,c
  3519   000462  EF54  F002         	goto	l3398
  3520   000466                     l3380:
  3521   000466  0EFF               	movlw	255
  3522   000468  EF82  F002         	goto	l167
  3523   00046C                     l3386:
  3524   00046C  505C               	movf	_Filas^0,w,c
  3525                           
  3526                           ; Switch size 1, requested type "simple"
  3527                           ; Number of cases is 4, Range of values is 1 to 8
  3528                           ; switch strategies available:
  3529                           ; Name         Instructions Cycles
  3530                           ; simple_byte           13     7 (average)
  3531                           ;	Chosen strategy is simple_byte
  3532   00046E  0A01               	xorlw	1	; case 1
  3533   000470  B4D8               	btfsc	status,2,c
  3534   000472  EF24  F002         	goto	l161
  3535   000476  0A03               	xorlw	3	; case 2
  3536   000478  B4D8               	btfsc	status,2,c
  3537   00047A  EF27  F002         	goto	l3374
  3538   00047E  0A06               	xorlw	6	; case 4
  3539   000480  B4D8               	btfsc	status,2,c
  3540   000482  EF2B  F002         	goto	l3376
  3541   000486  0A0C               	xorlw	12	; case 8
  3542   000488  B4D8               	btfsc	status,2,c
  3543   00048A  EF2F  F002         	goto	l3378
  3544   00048E  EF33  F002         	goto	l3380
  3545   000492                     l169:
  3546   000492  6A10               	clrf	GetTecla@columna^0,c
  3547   000494  EF6E  F002         	goto	l3400
  3548   000498                     l3388:
  3549   000498  0E01               	movlw	1
  3550   00049A  6E10               	movwf	GetTecla@columna^0,c
  3551   00049C  EF6E  F002         	goto	l3400
  3552   0004A0                     l3390:
  3553   0004A0  0E02               	movlw	2
  3554   0004A2  6E10               	movwf	GetTecla@columna^0,c
  3555   0004A4  EF6E  F002         	goto	l3400
  3556   0004A8                     l3398:
  3557   0004A8  505B               	movf	_Columnas^0,w,c
  3558   0004AA  0B07               	andlw	7
  3559   0004AC  6E02               	movwf	??_GetTecla^0,c
  3560   0004AE  6A03               	clrf	(??_GetTecla+1)^0,c
  3561                           
  3562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3563                           ; Switch size 1, requested type "simple"
  3564                           ; Number of cases is 1, Range of values is 0 to 0
  3565                           ; switch strategies available:
  3566                           ; Name         Instructions Cycles
  3567                           ; simple_byte            4     3 (average)
  3568                           ;	Chosen strategy is simple_byte
  3569   0004B0  5003               	movf	(??_GetTecla+1)^0,w,c
  3570   0004B2  0A00               	xorlw	0	; case 0
  3571   0004B4  B4D8               	btfsc	status,2,c
  3572   0004B6  EF5F  F002         	goto	l3782
  3573   0004BA  EF33  F002         	goto	l3380
  3574   0004BE                     l3782:
  3575                           
  3576                           ; Switch size 1, requested type "simple"
  3577                           ; Number of cases is 3, Range of values is 1 to 4
  3578                           ; switch strategies available:
  3579                           ; Name         Instructions Cycles
  3580                           ; simple_byte           10     6 (average)
  3581                           ;	Chosen strategy is simple_byte
  3582   0004BE  5002               	movf	??_GetTecla^0,w,c
  3583   0004C0  0A01               	xorlw	1	; case 1
  3584   0004C2  B4D8               	btfsc	status,2,c
  3585   0004C4  EF49  F002         	goto	l169
  3586   0004C8  0A03               	xorlw	3	; case 2
  3587   0004CA  B4D8               	btfsc	status,2,c
  3588   0004CC  EF4C  F002         	goto	l3388
  3589   0004D0  0A06               	xorlw	6	; case 4
  3590   0004D2  B4D8               	btfsc	status,2,c
  3591   0004D4  EF50  F002         	goto	l3390
  3592   0004D8  EF33  F002         	goto	l3380
  3593   0004DC                     l3400:
  3594                           
  3595                           ;TAD_TECLADO.c: 144:     const unsigned char keymap[4][3] = {
  3596   0004DC  0EF7               	movlw	low GetTecla@F3224
  3597   0004DE  6EF6               	movwf	tblptrl,c
  3598   0004E0                     	if	1	;There is more than 1 active tblptr byte
  3599   0004E0  0E1E               	movlw	high GetTecla@F3224
  3600   0004E2  6EF7               	movwf	tblptrh,c
  3601   0004E4                     	endif
  3602   0004E4                     	if	0	;There are less than 3 active tblptr bytes
  3603   0004E4                     	endif
  3604   0004E4  EE20  F004         	lfsr	2,GetTecla@keymap
  3605   0004E8  0E0B               	movlw	11
  3606   0004EA                     u3020:
  3607   0004EA  0009               	tblrd		*+
  3608   0004EC  CFF5 FFDE          	movff	tablat,postinc2
  3609   0004F0  06E8               	decf	wreg,f,c
  3610   0004F2  E2FB               	bc	u3020
  3611   0004F4                     
  3612                           ;TAD_TECLADO.c: 151:     return keymap[fila][columna];
  3613   0004F4  5011               	movf	GetTecla@fila^0,w,c
  3614   0004F6  0D03               	mullw	3
  3615   0004F8  50F3               	movf	243,w,c
  3616   0004FA  0F04               	addlw	low GetTecla@keymap
  3617   0004FC  2410               	addwf	GetTecla@columna^0,w,c
  3618   0004FE  6ED9               	movwf	fsr2l,c
  3619   000500  6ADA               	clrf	fsr2h,c
  3620   000502  50DF               	movf	indf2,w,c
  3621   000504                     l167:
  3622   000504  0012               	return		;funcret
  3623   000506                     __end_of_GetTecla:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _initTeclado *****************
  3627 ;; Defined at:
  3628 ;;		line 14 in file "TAD_TECLADO.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1
  3642 ;;      Params:         0       0       0
  3643 ;;      Locals:         0       0       0
  3644 ;;      Temps:          0       0       0
  3645 ;;      Totals:         0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 4
  3649 ;; This function calls:
  3650 ;;		_TI_NewTimer
  3651 ;;		_initPortsTeclado
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;;		_motorTerminal
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text19
  3659   000BF6                     __ptext19:
  3660                           	callstack 0
  3661   000BF6                     _initTeclado:
  3662                           	callstack 26
  3663   000BF6                     
  3664                           ;TAD_TECLADO.c: 15:  initPortsTeclado();
  3665   000BF6  EC3F  F006         	call	_initPortsTeclado	;wreg free
  3666   000BFA                     
  3667                           ;TAD_TECLADO.c: 16:     Filas = 0x00;
  3668   000BFA  6A5C               	clrf	_Filas^0,c
  3669   000BFC                     
  3670                           ;TAD_TECLADO.c: 17:     Columnas = 0x00;
  3671   000BFC  6A5B               	clrf	_Columnas^0,c
  3672   000BFE                     
  3673                           ;TAD_TECLADO.c: 18:     tecla = 0;
  3674   000BFE  6A5A               	clrf	_tecla^0,c
  3675   000C00                     
  3676                           ;TAD_TECLADO.c: 19:  state = 0;
  3677   000C00  6A59               	clrf	_state^0,c
  3678   000C02                     
  3679                           ;TAD_TECLADO.c: 20:     TI_NewTimer(&timer);
  3680   000C02  0E5E               	movlw	low _timer
  3681   000C04  6E02               	movwf	TI_NewTimer@TimerHandle^0,c
  3682   000C06  EC63  F004         	call	_TI_NewTimer	;wreg free
  3683   000C0A  0012               	return		;funcret
  3684   000C0C                     __end_of_initTeclado:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _initPortsTeclado *****************
  3688 ;; Defined at:
  3689 ;;		line 23 in file "TAD_TECLADO.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1
  3703 ;;      Params:         0       0       0
  3704 ;;      Locals:         0       0       0
  3705 ;;      Temps:          0       0       0
  3706 ;;      Totals:         0       0       0
  3707 ;;Total ram usage:        0 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; Hardware stack levels required when called: 3
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_initTeclado
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text20
  3718   000C7E                     __ptext20:
  3719                           	callstack 0
  3720   000C7E                     _initPortsTeclado:
  3721                           	callstack 26
  3722   000C7E                     
  3723                           ;TAD_TECLADO.c: 24:  TRISD = 0x0F;
  3724   000C7E  0E0F               	movlw	15
  3725   000C80  6E95               	movwf	149,c	;volatile
  3726   000C82                     
  3727                           ;TAD_TECLADO.c: 25:  LATD = 0x00;
  3728   000C82  6A8C               	clrf	140,c	;volatile
  3729   000C84  0012               	return		;funcret
  3730   000C86                     __end_of_initPortsTeclado:
  3731                           	callstack 0
  3732                           
  3733 ;; *************** function _TI_NewTimer *****************
  3734 ;; Defined at:
  3735 ;;		line 43 in file "TAD_TIMER.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  TimerHandle     1    1[COMRAM] PTR unsigned char 
  3738 ;;		 -> Timer(1), timer(1), 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  Comptador       1    3[COMRAM] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      unsigned char 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1
  3750 ;;      Params:         1       0       0
  3751 ;;      Locals:         1       0       0
  3752 ;;      Temps:          1       0       0
  3753 ;;      Totals:         3       0       0
  3754 ;;Total ram usage:        3 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 3
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_initTeclado
  3761 ;;		_LcInit
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text21
  3766   0008C6                     __ptext21:
  3767                           	callstack 0
  3768   0008C6                     _TI_NewTimer:
  3769                           	callstack 26
  3770   0008C6                     
  3771                           ;TAD_TIMER.c: 44:  unsigned char Comptador=0;
  3772   0008C6  6A04               	clrf	TI_NewTimer@Comptador^0,c
  3773                           
  3774                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  3775   0008C8  EF72  F004         	goto	l2608
  3776   0008CC                     l2604:
  3777                           
  3778                           ;TAD_TIMER.c: 46:   if (++Comptador == 4) return (0);
  3779   0008CC  2A04               	incf	TI_NewTimer@Comptador^0,f,c
  3780   0008CE  0E04               	movlw	4
  3781   0008D0  1804               	xorwf	TI_NewTimer@Comptador^0,w,c
  3782   0008D2  A4D8               	btfss	status,2,c
  3783   0008D4  EF6E  F004         	goto	u2001
  3784   0008D8  EF70  F004         	goto	u2000
  3785   0008DC                     u2001:
  3786   0008DC  EF72  F004         	goto	l2608
  3787   0008E0                     u2000:
  3788   0008E0  EF8D  F004         	goto	l64
  3789   0008E4                     l2608:
  3790                           
  3791                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  3792   0008E4  5004               	movf	TI_NewTimer@Comptador^0,w,c
  3793   0008E6  0D05               	mullw	5
  3794   0008E8  50F3               	movf	243,w,c
  3795   0008EA  0F3A               	addlw	low (_Timers+4)
  3796   0008EC  6ED9               	movwf	fsr2l,c
  3797   0008EE  6ADA               	clrf	fsr2h,c
  3798   0008F0  04DE               	decf	postinc2,w,c
  3799   0008F2  B4D8               	btfsc	status,2,c
  3800   0008F4  EF7E  F004         	goto	u2011
  3801   0008F8  EF80  F004         	goto	u2010
  3802   0008FC                     u2011:
  3803   0008FC  EF66  F004         	goto	l2604
  3804   000900                     u2010:
  3805   000900                     
  3806                           ;TAD_TIMER.c: 48:  Timers[Comptador].Busy=1;
  3807   000900  5004               	movf	TI_NewTimer@Comptador^0,w,c
  3808   000902  0D05               	mullw	5
  3809   000904  50F3               	movf	243,w,c
  3810   000906  0F3A               	addlw	low (_Timers+4)
  3811   000908  6ED9               	movwf	fsr2l,c
  3812   00090A  6ADA               	clrf	fsr2h,c
  3813   00090C  0E01               	movlw	1
  3814   00090E  6EDF               	movwf	indf2,c
  3815   000910                     
  3816                           ;TAD_TIMER.c: 49:  *TimerHandle=Comptador;
  3817   000910  5002               	movf	TI_NewTimer@TimerHandle^0,w,c
  3818   000912  6ED9               	movwf	fsr2l,c
  3819   000914  6ADA               	clrf	fsr2h,c
  3820   000916  C004  FFDF         	movff	TI_NewTimer@Comptador,indf2
  3821   00091A                     l64:
  3822   00091A  0012               	return		;funcret
  3823   00091C                     __end_of_TI_NewTimer:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _initRFID *****************
  3827 ;; Defined at:
  3828 ;;		line 294 in file "TAD_RFID.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1
  3842 ;;      Params:         0       0       0
  3843 ;;      Locals:         0       0       0
  3844 ;;      Temps:          0       0       0
  3845 ;;      Totals:         0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 8
  3849 ;; This function calls:
  3850 ;;		_InitPortDirections
  3851 ;;		_MFRC522_Init
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text22
  3858   000C6C                     __ptext22:
  3859                           	callstack 0
  3860   000C6C                     _initRFID:
  3861                           	callstack 22
  3862   000C6C                     
  3863                           ;TAD_RFID.c: 295:     InitPortDirections();
  3864   000C6C  EC30  F006         	call	_InitPortDirections	;wreg free
  3865   000C70                     
  3866                           ;TAD_RFID.c: 296:     MFRC522_Init();
  3867   000C70  EC8E  F004         	call	_MFRC522_Init	;wreg free
  3868   000C74  0012               	return		;funcret
  3869   000C76                     __end_of_initRFID:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function _MFRC522_Init *****************
  3873 ;; Defined at:
  3874 ;;		line 115 in file "TAD_RFID.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1
  3888 ;;      Params:         0       0       0
  3889 ;;      Locals:         0       0       0
  3890 ;;      Temps:          0       0       0
  3891 ;;      Totals:         0       0       0
  3892 ;;Total ram usage:        0 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 7
  3895 ;; This function calls:
  3896 ;;		_MFRC522_AntennaOff
  3897 ;;		_MFRC522_AntennaOn
  3898 ;;		_MFRC522_Reset
  3899 ;;		_MFRC522_Wr
  3900 ;; This function is called by:
  3901 ;;		_initRFID
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text23
  3906   00091C                     __ptext23:
  3907                           	callstack 0
  3908   00091C                     _MFRC522_Init:
  3909                           	callstack 22
  3910   00091C                     
  3911                           ;TAD_RFID.c: 116:     LATCbits.LATC3 = 1;
  3912   00091C  868B               	bsf	139,3,c	;volatile
  3913                           
  3914                           ;TAD_RFID.c: 117:     LATCbits.LATC4 = 1;
  3915   00091E  888B               	bsf	139,4,c	;volatile
  3916   000920                     
  3917                           ;TAD_RFID.c: 119:     MFRC522_Reset();
  3918   000920  EC8A  F005         	call	_MFRC522_Reset	;wreg free
  3919                           
  3920                           ;TAD_RFID.c: 120:     MFRC522_Wr(0x2A, 0x8D);
  3921   000924  0E8D               	movlw	141
  3922   000926  6E07               	movwf	MFRC522_Wr@value^0,c
  3923   000928  0E2A               	movlw	42
  3924   00092A  EC90  F003         	call	_MFRC522_Wr
  3925                           
  3926                           ;TAD_RFID.c: 121:     MFRC522_Wr(0x2B, 0x3E);
  3927   00092E  0E3E               	movlw	62
  3928   000930  6E07               	movwf	MFRC522_Wr@value^0,c
  3929   000932  0E2B               	movlw	43
  3930   000934  EC90  F003         	call	_MFRC522_Wr
  3931                           
  3932                           ;TAD_RFID.c: 122:     MFRC522_Wr(0x2D, 30);
  3933   000938  0E1E               	movlw	30
  3934   00093A  6E07               	movwf	MFRC522_Wr@value^0,c
  3935   00093C  0E2D               	movlw	45
  3936   00093E  EC90  F003         	call	_MFRC522_Wr
  3937                           
  3938                           ;TAD_RFID.c: 123:     MFRC522_Wr(0x2C, 0);
  3939   000942  0E00               	movlw	0
  3940   000944  6E07               	movwf	MFRC522_Wr@value^0,c
  3941   000946  0E2C               	movlw	44
  3942   000948  EC90  F003         	call	_MFRC522_Wr
  3943                           
  3944                           ;TAD_RFID.c: 124:     MFRC522_Wr(0x15, 0x40);
  3945   00094C  0E40               	movlw	64
  3946   00094E  6E07               	movwf	MFRC522_Wr@value^0,c
  3947   000950  0E15               	movlw	21
  3948   000952  EC90  F003         	call	_MFRC522_Wr
  3949                           
  3950                           ;TAD_RFID.c: 125:     MFRC522_Wr(0x11, 0x3D);
  3951   000956  0E3D               	movlw	61
  3952   000958  6E07               	movwf	MFRC522_Wr@value^0,c
  3953   00095A  0E11               	movlw	17
  3954   00095C  EC90  F003         	call	_MFRC522_Wr
  3955                           
  3956                           ;TAD_RFID.c: 127:     MFRC522_AntennaOff();
  3957   000960  EC2A  F006         	call	_MFRC522_AntennaOff	;wreg free
  3958                           
  3959                           ;TAD_RFID.c: 128:     MFRC522_AntennaOn();
  3960   000964  EC24  F006         	call	_MFRC522_AntennaOn	;wreg free
  3961   000968  0012               	return		;funcret
  3962   00096A                     __end_of_MFRC522_Init:
  3963                           	callstack 0
  3964                           
  3965 ;; *************** function _MFRC522_Reset *****************
  3966 ;; Defined at:
  3967 ;;		line 96 in file "TAD_RFID.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1
  3981 ;;      Params:         0       0       0
  3982 ;;      Locals:         0       0       0
  3983 ;;      Temps:          0       0       0
  3984 ;;      Totals:         0       0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; Hardware stack levels required when called: 5
  3988 ;; This function calls:
  3989 ;;		_MFRC522_Wr
  3990 ;;		_delay_us
  3991 ;; This function is called by:
  3992 ;;		_MFRC522_Init
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text24
  3997   000B14                     __ptext24:
  3998                           	callstack 0
  3999   000B14                     _MFRC522_Reset:
  4000                           	callstack 23
  4001   000B14                     
  4002                           ;TAD_RFID.c: 97:     LATCbits.LATC4 = 1;
  4003   000B14  888B               	bsf	139,4,c	;volatile
  4004   000B16                     
  4005                           ;TAD_RFID.c: 98:     delay_us (1);
  4006   000B16  0E01               	movlw	1
  4007   000B18  EC3B  F005         	call	_delay_us
  4008   000B1C                     
  4009                           ;TAD_RFID.c: 99:     LATCbits.LATC4 = 0;
  4010   000B1C  988B               	bcf	139,4,c	;volatile
  4011                           
  4012                           ;TAD_RFID.c: 100:     delay_us (1);
  4013   000B1E  0E01               	movlw	1
  4014   000B20  EC3B  F005         	call	_delay_us
  4015   000B24                     
  4016                           ;TAD_RFID.c: 101:     LATCbits.LATC4 = 1;
  4017   000B24  888B               	bsf	139,4,c	;volatile
  4018                           
  4019                           ;TAD_RFID.c: 102:     delay_us (1);
  4020   000B26  0E01               	movlw	1
  4021   000B28  EC3B  F005         	call	_delay_us
  4022                           
  4023                           ;TAD_RFID.c: 103:     MFRC522_Wr(0x01, 0x0F);
  4024   000B2C  0E0F               	movlw	15
  4025   000B2E  6E07               	movwf	MFRC522_Wr@value^0,c
  4026   000B30  0E01               	movlw	1
  4027   000B32  EC90  F003         	call	_MFRC522_Wr
  4028                           
  4029                           ;TAD_RFID.c: 104:     delay_us (1);
  4030   000B36  0E01               	movlw	1
  4031   000B38  EC3B  F005         	call	_delay_us
  4032   000B3C  0012               	return		;funcret
  4033   000B3E                     __end_of_MFRC522_Reset:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function _MFRC522_AntennaOn *****************
  4037 ;; Defined at:
  4038 ;;		line 107 in file "TAD_RFID.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1
  4052 ;;      Params:         0       0       0
  4053 ;;      Locals:         0       0       0
  4054 ;;      Temps:          0       0       0
  4055 ;;      Totals:         0       0       0
  4056 ;;Total ram usage:        0 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 6
  4059 ;; This function calls:
  4060 ;;		_MFRC522_Set_Bit
  4061 ;; This function is called by:
  4062 ;;		_MFRC522_Init
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           	psect	text25
  4067   000C48                     __ptext25:
  4068                           	callstack 0
  4069   000C48                     _MFRC522_AntennaOn:
  4070                           	callstack 22
  4071   000C48                     
  4072                           ;TAD_RFID.c: 108:     MFRC522_Set_Bit(0x14, 0x03);
  4073   000C48  0E03               	movlw	3
  4074   000C4A  6E0C               	movwf	MFRC522_Set_Bit@mask^0,c
  4075   000C4C  0E14               	movlw	20
  4076   000C4E  EC11  F006         	call	_MFRC522_Set_Bit
  4077   000C52  0012               	return		;funcret
  4078   000C54                     __end_of_MFRC522_AntennaOn:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _MFRC522_Set_Bit *****************
  4082 ;; Defined at:
  4083 ;;		line 92 in file "TAD_RFID.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  addr            1    wreg     unsigned char 
  4086 ;;  mask            1   11[COMRAM] unsigned char 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  addr            1   12[COMRAM] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1
  4098 ;;      Params:         1       0       0
  4099 ;;      Locals:         1       0       0
  4100 ;;      Temps:          0       0       0
  4101 ;;      Totals:         2       0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 5
  4105 ;; This function calls:
  4106 ;;		_MFRC522_Rd
  4107 ;;		_MFRC522_Wr
  4108 ;; This function is called by:
  4109 ;;		_MFRC522_AntennaOn
  4110 ;;		_MFRC522_ToCard
  4111 ;;		_MFRC522_CRC
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text26
  4116   000C22                     __ptext26:
  4117                           	callstack 0
  4118   000C22                     _MFRC522_Set_Bit:
  4119                           	callstack 22
  4120                           
  4121                           ;incstack = 0
  4122                           ;MFRC522_Set_Bit@addr stored from wreg
  4123   000C22  6E0D               	movwf	MFRC522_Set_Bit@addr^0,c
  4124   000C24                     
  4125                           ;TAD_RFID.c: 93:     MFRC522_Wr(addr, MFRC522_Rd(addr) | mask);
  4126   000C24  500D               	movf	MFRC522_Set_Bit@addr^0,w,c
  4127   000C26  ECE4  F003         	call	_MFRC522_Rd
  4128   000C2A  100C               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  4129   000C2C  6E07               	movwf	MFRC522_Wr@value^0,c
  4130   000C2E  500D               	movf	MFRC522_Set_Bit@addr^0,w,c
  4131   000C30  EC90  F003         	call	_MFRC522_Wr
  4132   000C34  0012               	return		;funcret
  4133   000C36                     __end_of_MFRC522_Set_Bit:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function _MFRC522_AntennaOff *****************
  4137 ;; Defined at:
  4138 ;;		line 111 in file "TAD_RFID.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1
  4152 ;;      Params:         0       0       0
  4153 ;;      Locals:         0       0       0
  4154 ;;      Temps:          0       0       0
  4155 ;;      Totals:         0       0       0
  4156 ;;Total ram usage:        0 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 6
  4159 ;; This function calls:
  4160 ;;		_MFRC522_Clear_Bit
  4161 ;; This function is called by:
  4162 ;;		_MFRC522_Init
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text27
  4167   000C54                     __ptext27:
  4168                           	callstack 0
  4169   000C54                     _MFRC522_AntennaOff:
  4170                           	callstack 22
  4171   000C54                     
  4172                           ;TAD_RFID.c: 112:     MFRC522_Clear_Bit(0x14, 0x03);
  4173   000C54  0E03               	movlw	3
  4174   000C56  6E0C               	movwf	MFRC522_Clear_Bit@mask^0,c
  4175   000C58  0E14               	movlw	20
  4176   000C5A  ECE2  F005         	call	_MFRC522_Clear_Bit
  4177   000C5E  0012               	return		;funcret
  4178   000C60                     __end_of_MFRC522_AntennaOff:
  4179                           	callstack 0
  4180                           
  4181 ;; *************** function _MFRC522_Clear_Bit *****************
  4182 ;; Defined at:
  4183 ;;		line 88 in file "TAD_RFID.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  addr            1    wreg     unsigned char 
  4186 ;;  mask            1   11[COMRAM] unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  addr            1   13[COMRAM] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1
  4198 ;;      Params:         1       0       0
  4199 ;;      Locals:         1       0       0
  4200 ;;      Temps:          1       0       0
  4201 ;;      Totals:         3       0       0
  4202 ;;Total ram usage:        3 bytes
  4203 ;; Hardware stack levels used: 1
  4204 ;; Hardware stack levels required when called: 5
  4205 ;; This function calls:
  4206 ;;		_MFRC522_Rd
  4207 ;;		_MFRC522_Wr
  4208 ;; This function is called by:
  4209 ;;		_MFRC522_AntennaOff
  4210 ;;		_MFRC522_ToCard
  4211 ;;		_MFRC522_CRC
  4212 ;;		_MFRC522_Halt
  4213 ;;		_MFRC522_AntiColl
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text28
  4218   000BC4                     __ptext28:
  4219                           	callstack 0
  4220   000BC4                     _MFRC522_Clear_Bit:
  4221                           	callstack 22
  4222                           
  4223                           ;incstack = 0
  4224                           ;MFRC522_Clear_Bit@addr stored from wreg
  4225   000BC4  6E0E               	movwf	MFRC522_Clear_Bit@addr^0,c
  4226   000BC6                     
  4227                           ;TAD_RFID.c: 89:     MFRC522_Wr(addr, MFRC522_Rd(addr) & ~mask);
  4228   000BC6  500C               	movf	MFRC522_Clear_Bit@mask^0,w,c
  4229   000BC8  0AFF               	xorlw	255
  4230   000BCA  6E0D               	movwf	??_MFRC522_Clear_Bit^0,c
  4231   000BCC  500E               	movf	MFRC522_Clear_Bit@addr^0,w,c
  4232   000BCE  ECE4  F003         	call	_MFRC522_Rd
  4233   000BD2  140D               	andwf	??_MFRC522_Clear_Bit^0,w,c
  4234   000BD4  6E07               	movwf	MFRC522_Wr@value^0,c
  4235   000BD6  500E               	movf	MFRC522_Clear_Bit@addr^0,w,c
  4236   000BD8  EC90  F003         	call	_MFRC522_Wr
  4237   000BDC  0012               	return		;funcret
  4238   000BDE                     __end_of_MFRC522_Clear_Bit:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function _MFRC522_Wr *****************
  4242 ;; Defined at:
  4243 ;;		line 60 in file "TAD_RFID.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  Address         1    wreg     unsigned char 
  4246 ;;  value           1    6[COMRAM] unsigned char 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  Address         1    8[COMRAM] unsigned char 
  4249 ;;  i               1   10[COMRAM] unsigned char 
  4250 ;;  ucAddr          1    9[COMRAM] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1
  4260 ;;      Params:         1       0       0
  4261 ;;      Locals:         3       0       0
  4262 ;;      Temps:          1       0       0
  4263 ;;      Totals:         5       0       0
  4264 ;;Total ram usage:        5 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; Hardware stack levels required when called: 4
  4267 ;; This function calls:
  4268 ;;		_delay_us
  4269 ;; This function is called by:
  4270 ;;		_MFRC522_Clear_Bit
  4271 ;;		_MFRC522_Set_Bit
  4272 ;;		_MFRC522_Reset
  4273 ;;		_MFRC522_Init
  4274 ;;		_MFRC522_ToCard
  4275 ;;		_MFRC522_Request
  4276 ;;		_MFRC522_CRC
  4277 ;;		_MFRC522_AntiColl
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text29
  4282   000720                     __ptext29:
  4283                           	callstack 0
  4284   000720                     _MFRC522_Wr:
  4285                           	callstack 24
  4286                           
  4287                           ;incstack = 0
  4288                           ;MFRC522_Wr@Address stored from wreg
  4289   000720  6E09               	movwf	MFRC522_Wr@Address^0,c
  4290   000722                     
  4291                           ;TAD_RFID.c: 61:     unsigned char i, ucAddr = ((Address << 1) & 0x7E);
  4292   000722  5009               	movf	MFRC522_Wr@Address^0,w,c
  4293   000724  2409               	addwf	MFRC522_Wr@Address^0,w,c
  4294   000726  0B7E               	andlw	126
  4295   000728  6E0A               	movwf	MFRC522_Wr@ucAddr^0,c
  4296   00072A                     
  4297                           ;TAD_RFID.c: 62:     LATCbits.LATC2 = 0;
  4298   00072A  948B               	bcf	139,2,c	;volatile
  4299   00072C                     
  4300                           ;TAD_RFID.c: 63:     LATCbits.LATC3 = 0;
  4301   00072C  968B               	bcf	139,3,c	;volatile
  4302   00072E                     
  4303                           ;TAD_RFID.c: 64:     for (i = 8; i > 0; i--) {
  4304   00072E  0E08               	movlw	8
  4305   000730  6E0B               	movwf	MFRC522_Wr@i^0,c
  4306   000732                     l2306:
  4307                           
  4308                           ;TAD_RFID.c: 65:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
  4309   000732  BE0A               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  4310   000734  EF9E  F003         	goto	u1521
  4311   000738  EFA2  F003         	goto	u1520
  4312   00073C                     u1521:
  4313   00073C  6A08               	clrf	??_MFRC522_Wr^0,c
  4314   00073E  2A08               	incf	??_MFRC522_Wr^0,f,c
  4315   000740  EFA3  F003         	goto	u1538
  4316   000744                     u1520:
  4317   000744  6A08               	clrf	??_MFRC522_Wr^0,c
  4318   000746                     u1538:
  4319   000746  4608               	rlncf	??_MFRC522_Wr^0,f,c
  4320   000748  508B               	movf	139,w,c	;volatile
  4321   00074A  1808               	xorwf	??_MFRC522_Wr^0,w,c
  4322   00074C  0BFD               	andlw	-3
  4323   00074E  1808               	xorwf	??_MFRC522_Wr^0,w,c
  4324   000750  6E8B               	movwf	139,c	;volatile
  4325   000752                     
  4326                           ;TAD_RFID.c: 66:         LATCbits.LATC2 = 1;
  4327   000752  848B               	bsf	139,2,c	;volatile
  4328                           
  4329                           ;TAD_RFID.c: 67:         ucAddr <<= 1;
  4330   000754  90D8               	bcf	status,0,c
  4331   000756  360A               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  4332   000758                     
  4333                           ;TAD_RFID.c: 68:         delay_us(5);
  4334   000758  0E05               	movlw	5
  4335   00075A  EC3B  F005         	call	_delay_us
  4336   00075E                     
  4337                           ;TAD_RFID.c: 69:         LATCbits.LATC2 = 0;
  4338   00075E  948B               	bcf	139,2,c	;volatile
  4339   000760                     
  4340                           ;TAD_RFID.c: 70:         delay_us(5);
  4341   000760  0E05               	movlw	5
  4342   000762  EC3B  F005         	call	_delay_us
  4343   000766                     
  4344                           ;TAD_RFID.c: 71:     }
  4345   000766  060B               	decf	MFRC522_Wr@i^0,f,c
  4346   000768  500B               	movf	MFRC522_Wr@i^0,w,c
  4347   00076A  A4D8               	btfss	status,2,c
  4348   00076C  EFBA  F003         	goto	u1541
  4349   000770  EFBC  F003         	goto	u1540
  4350   000774                     u1541:
  4351   000774  EF99  F003         	goto	l2306
  4352   000778                     u1540:
  4353   000778                     
  4354                           ;TAD_RFID.c: 73:     for (i = 8; i > 0; i--) {
  4355   000778  0E08               	movlw	8
  4356   00077A  6E0B               	movwf	MFRC522_Wr@i^0,c
  4357   00077C                     l2324:
  4358                           
  4359                           ;TAD_RFID.c: 74:         LATCbits.LATC1 = ((value & 0x80) == 0x80);
  4360   00077C  BE07               	btfsc	MFRC522_Wr@value^0,7,c
  4361   00077E  EFC3  F003         	goto	u1551
  4362   000782  EFC7  F003         	goto	u1550
  4363   000786                     u1551:
  4364   000786  6A08               	clrf	??_MFRC522_Wr^0,c
  4365   000788  2A08               	incf	??_MFRC522_Wr^0,f,c
  4366   00078A  EFC8  F003         	goto	u1568
  4367   00078E                     u1550:
  4368   00078E  6A08               	clrf	??_MFRC522_Wr^0,c
  4369   000790                     u1568:
  4370   000790  4608               	rlncf	??_MFRC522_Wr^0,f,c
  4371   000792  508B               	movf	139,w,c	;volatile
  4372   000794  1808               	xorwf	??_MFRC522_Wr^0,w,c
  4373   000796  0BFD               	andlw	-3
  4374   000798  1808               	xorwf	??_MFRC522_Wr^0,w,c
  4375   00079A  6E8B               	movwf	139,c	;volatile
  4376   00079C                     
  4377                           ;TAD_RFID.c: 75:         LATCbits.LATC2 = 1;
  4378   00079C  848B               	bsf	139,2,c	;volatile
  4379                           
  4380                           ;TAD_RFID.c: 76:         value <<= 1;
  4381   00079E  90D8               	bcf	status,0,c
  4382   0007A0  3607               	rlcf	MFRC522_Wr@value^0,f,c
  4383   0007A2                     
  4384                           ;TAD_RFID.c: 77:         delay_us(5);
  4385   0007A2  0E05               	movlw	5
  4386   0007A4  EC3B  F005         	call	_delay_us
  4387   0007A8                     
  4388                           ;TAD_RFID.c: 78:         LATCbits.LATC2 = 0;
  4389   0007A8  948B               	bcf	139,2,c	;volatile
  4390   0007AA                     
  4391                           ;TAD_RFID.c: 79:         delay_us(5);
  4392   0007AA  0E05               	movlw	5
  4393   0007AC  EC3B  F005         	call	_delay_us
  4394   0007B0                     
  4395                           ;TAD_RFID.c: 80:     }
  4396   0007B0  060B               	decf	MFRC522_Wr@i^0,f,c
  4397   0007B2  500B               	movf	MFRC522_Wr@i^0,w,c
  4398   0007B4  A4D8               	btfss	status,2,c
  4399   0007B6  EFDF  F003         	goto	u1571
  4400   0007BA  EFE1  F003         	goto	u1570
  4401   0007BE                     u1571:
  4402   0007BE  EFBE  F003         	goto	l2324
  4403   0007C2                     u1570:
  4404   0007C2                     
  4405                           ;TAD_RFID.c: 82:     LATCbits.LATC3 = 1;
  4406   0007C2  868B               	bsf	139,3,c	;volatile
  4407                           
  4408                           ;TAD_RFID.c: 83:     LATCbits.LATC2 = 1;
  4409   0007C4  848B               	bsf	139,2,c	;volatile
  4410   0007C6  0012               	return		;funcret
  4411   0007C8                     __end_of_MFRC522_Wr:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function _delay_us *****************
  4415 ;; Defined at:
  4416 ;;		line 23 in file "TAD_RFID.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  howMany         1    wreg     unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  howMany         1    4[COMRAM] unsigned char 
  4421 ;;  x               1    5[COMRAM] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0, prodl, prodh
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1
  4431 ;;      Params:         0       0       0
  4432 ;;      Locals:         2       0       0
  4433 ;;      Temps:          3       0       0
  4434 ;;      Totals:         5       0       0
  4435 ;;Total ram usage:        5 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; Hardware stack levels required when called: 3
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_MFRC522_Wr
  4442 ;;		_MFRC522_Reset
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text30
  4447   000A76                     __ptext30:
  4448                           	callstack 0
  4449   000A76                     _delay_us:
  4450                           	callstack 24
  4451                           
  4452                           ;incstack = 0
  4453                           ;delay_us@howMany stored from wreg
  4454   000A76  6E05               	movwf	delay_us@howMany^0,c
  4455   000A78                     
  4456                           ;TAD_RFID.c: 25:     char x;;TAD_RFID.c: 26:     for (x = 0; x < howMany * 3; x++) __nop
      +                          ();
  4457   000A78  6A06               	clrf	delay_us@x^0,c
  4458   000A7A  EF41  F005         	goto	l1256
  4459   000A7E                     l192:
  4460   000A7E  0000               	nop	
  4461   000A80  2A06               	incf	delay_us@x^0,f,c
  4462   000A82                     l1256:
  4463   000A82  5005               	movf	delay_us@howMany^0,w,c
  4464   000A84  0D03               	mullw	3
  4465   000A86  5006               	movf	delay_us@x^0,w,c
  4466   000A88  6E02               	movwf	??_delay_us^0,c
  4467   000A8A  6A03               	clrf	(??_delay_us+1)^0,c
  4468   000A8C  50F3               	movf	243,w,c
  4469   000A8E  5C02               	subwf	??_delay_us^0,w,c
  4470   000A90  5003               	movf	(??_delay_us+1)^0,w,c
  4471   000A92  0A80               	xorlw	128
  4472   000A94  6E04               	movwf	(??_delay_us+2)^0,c
  4473   000A96  50F4               	movf	244,w,c
  4474   000A98  0A80               	xorlw	128
  4475   000A9A  5804               	subwfb	(??_delay_us+2)^0,w,c
  4476   000A9C  A0D8               	btfss	status,0,c
  4477   000A9E  EF53  F005         	goto	u11
  4478   000AA2  EF55  F005         	goto	u10
  4479   000AA6                     u11:
  4480   000AA6  EF3F  F005         	goto	l192
  4481   000AAA                     u10:
  4482   000AAA  0012               	return		;funcret
  4483   000AAC                     __end_of_delay_us:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _MFRC522_Rd *****************
  4487 ;; Defined at:
  4488 ;;		line 29 in file "TAD_RFID.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  Address         1    wreg     unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  Address         1    2[COMRAM] unsigned char 
  4493 ;;  i               1    5[COMRAM] unsigned char 
  4494 ;;  ucResult        1    4[COMRAM] unsigned char 
  4495 ;;  ucAddr          1    3[COMRAM] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      unsigned char 
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1
  4505 ;;      Params:         0       0       0
  4506 ;;      Locals:         4       0       0
  4507 ;;      Temps:          1       0       0
  4508 ;;      Totals:         5       0       0
  4509 ;;Total ram usage:        5 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 3
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_MFRC522_Clear_Bit
  4516 ;;		_MFRC522_Set_Bit
  4517 ;;		_MFRC522_ToCard
  4518 ;;		_MFRC522_CRC
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text31
  4523   0007C8                     __ptext31:
  4524                           	callstack 0
  4525   0007C8                     _MFRC522_Rd:
  4526                           	callstack 23
  4527                           
  4528                           ;incstack = 0
  4529                           ;MFRC522_Rd@Address stored from wreg
  4530   0007C8  6E03               	movwf	MFRC522_Rd@Address^0,c
  4531   0007CA                     
  4532                           ;TAD_RFID.c: 30:     unsigned char i, ucAddr = ((Address<<1) & 0x7E) | 0x80;
  4533   0007CA  5003               	movf	MFRC522_Rd@Address^0,w,c
  4534   0007CC  2403               	addwf	MFRC522_Rd@Address^0,w,c
  4535   0007CE  0B7E               	andlw	126
  4536   0007D0  0980               	iorlw	128
  4537   0007D2  6E04               	movwf	MFRC522_Rd@ucAddr^0,c
  4538   0007D4                     
  4539                           ;TAD_RFID.c: 31:     unsigned char ucResult = 0;
  4540   0007D4  6A05               	clrf	MFRC522_Rd@ucResult^0,c
  4541   0007D6                     
  4542                           ;TAD_RFID.c: 33:     LATCbits.LATC2 = 0;
  4543   0007D6  948B               	bcf	139,2,c	;volatile
  4544   0007D8                     
  4545                           ;TAD_RFID.c: 34:     LATCbits.LATC3 = 0;
  4546   0007D8  968B               	bcf	139,3,c	;volatile
  4547   0007DA                     
  4548                           ;TAD_RFID.c: 36:     for (i = 8; i > 0; i--) {
  4549   0007DA  0E08               	movlw	8
  4550   0007DC  6E06               	movwf	MFRC522_Rd@i^0,c
  4551   0007DE                     l1272:
  4552                           
  4553                           ;TAD_RFID.c: 37:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
  4554   0007DE  BE04               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  4555   0007E0  EFF4  F003         	goto	u21
  4556   0007E4  EFF8  F003         	goto	u20
  4557   0007E8                     u21:
  4558   0007E8  6A02               	clrf	??_MFRC522_Rd^0,c
  4559   0007EA  2A02               	incf	??_MFRC522_Rd^0,f,c
  4560   0007EC  EFF9  F003         	goto	u38
  4561   0007F0                     u20:
  4562   0007F0  6A02               	clrf	??_MFRC522_Rd^0,c
  4563   0007F2                     u38:
  4564   0007F2  4602               	rlncf	??_MFRC522_Rd^0,f,c
  4565   0007F4  508B               	movf	139,w,c	;volatile
  4566   0007F6  1802               	xorwf	??_MFRC522_Rd^0,w,c
  4567   0007F8  0BFD               	andlw	-3
  4568   0007FA  1802               	xorwf	??_MFRC522_Rd^0,w,c
  4569   0007FC  6E8B               	movwf	139,c	;volatile
  4570   0007FE                     
  4571                           ;TAD_RFID.c: 38:         LATCbits.LATC2 = 1;
  4572   0007FE  848B               	bsf	139,2,c	;volatile
  4573                           
  4574                           ;TAD_RFID.c: 40:         ucAddr <<= 1;
  4575   000800  90D8               	bcf	status,0,c
  4576   000802  3604               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  4577   000804                     
  4578                           ;TAD_RFID.c: 41:         LATCbits.LATC2 = 0;
  4579   000804  948B               	bcf	139,2,c	;volatile
  4580   000806                     
  4581                           ;TAD_RFID.c: 43:     }
  4582   000806  0606               	decf	MFRC522_Rd@i^0,f,c
  4583   000808  5006               	movf	MFRC522_Rd@i^0,w,c
  4584   00080A  A4D8               	btfss	status,2,c
  4585   00080C  EF0A  F004         	goto	u41
  4586   000810  EF0C  F004         	goto	u40
  4587   000814                     u41:
  4588   000814  EFEF  F003         	goto	l1272
  4589   000818                     u40:
  4590   000818                     
  4591                           ;TAD_RFID.c: 45:     for (i = 8; i > 0; i--) {
  4592   000818  0E08               	movlw	8
  4593   00081A  6E06               	movwf	MFRC522_Rd@i^0,c
  4594   00081C                     l199:
  4595                           
  4596                           ;TAD_RFID.c: 46:         LATCbits.LATC2 = 1;
  4597   00081C  848B               	bsf	139,2,c	;volatile
  4598   00081E                     
  4599                           ;TAD_RFID.c: 48:         ucResult <<= 1;
  4600   00081E  90D8               	bcf	status,0,c
  4601   000820  3605               	rlcf	MFRC522_Rd@ucResult^0,f,c
  4602                           
  4603                           ;TAD_RFID.c: 49:         ucResult|= PORTCbits.RC0;
  4604   000822  B082               	btfsc	130,0,c	;volatile
  4605   000824  EF16  F004         	goto	u51
  4606   000828  EF19  F004         	goto	u50
  4607   00082C                     u51:
  4608   00082C  0E01               	movlw	1
  4609   00082E  EF1A  F004         	goto	u56
  4610   000832                     u50:
  4611   000832  0E00               	movlw	0
  4612   000834                     u56:
  4613   000834  1205               	iorwf	MFRC522_Rd@ucResult^0,f,c
  4614   000836                     
  4615                           ;TAD_RFID.c: 50:         LATCbits.LATC2 = 0;
  4616   000836  948B               	bcf	139,2,c	;volatile
  4617   000838                     
  4618                           ;TAD_RFID.c: 52:     }
  4619   000838  0606               	decf	MFRC522_Rd@i^0,f,c
  4620   00083A  5006               	movf	MFRC522_Rd@i^0,w,c
  4621   00083C  A4D8               	btfss	status,2,c
  4622   00083E  EF23  F004         	goto	u61
  4623   000842  EF25  F004         	goto	u60
  4624   000846                     u61:
  4625   000846  EF0E  F004         	goto	l199
  4626   00084A                     u60:
  4627   00084A                     
  4628                           ;TAD_RFID.c: 54:     LATCbits.LATC3 = 1;
  4629   00084A  868B               	bsf	139,3,c	;volatile
  4630                           
  4631                           ;TAD_RFID.c: 55:     LATCbits.LATC2 = 1;
  4632   00084C  848B               	bsf	139,2,c	;volatile
  4633   00084E                     
  4634                           ;TAD_RFID.c: 56:     return ucResult;
  4635   00084E  5005               	movf	MFRC522_Rd@ucResult^0,w,c
  4636   000850  0012               	return		;funcret
  4637   000852                     __end_of_MFRC522_Rd:
  4638                           	callstack 0
  4639                           
  4640 ;; *************** function _InitPortDirections *****************
  4641 ;; Defined at:
  4642 ;;		line 15 in file "TAD_RFID.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		None
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1
  4656 ;;      Params:         0       0       0
  4657 ;;      Locals:         0       0       0
  4658 ;;      Temps:          0       0       0
  4659 ;;      Totals:         0       0       0
  4660 ;;Total ram usage:        0 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; Hardware stack levels required when called: 3
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_initRFID
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text32
  4671   000C60                     __ptext32:
  4672                           	callstack 0
  4673   000C60                     _InitPortDirections:
  4674                           	callstack 26
  4675   000C60                     
  4676                           ;TAD_RFID.c: 16:     TRISCbits.TRISC0 = 1;
  4677   000C60  8094               	bsf	148,0,c	;volatile
  4678                           
  4679                           ;TAD_RFID.c: 17:     TRISCbits.TRISC1 = 0;
  4680   000C62  9294               	bcf	148,1,c	;volatile
  4681                           
  4682                           ;TAD_RFID.c: 18:     TRISCbits.TRISC2 = 0;
  4683   000C64  9494               	bcf	148,2,c	;volatile
  4684                           
  4685                           ;TAD_RFID.c: 19:     TRISCbits.TRISC3 = 0;
  4686   000C66  9694               	bcf	148,3,c	;volatile
  4687                           
  4688                           ;TAD_RFID.c: 20:     TRISCbits.TRISC4 = 0;
  4689   000C68  9894               	bcf	148,4,c	;volatile
  4690   000C6A  0012               	return		;funcret
  4691   000C6C                     __end_of_InitPortDirections:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function _Terminal_Init *****************
  4695 ;; Defined at:
  4696 ;;		line 26 in file "TAD_TERMINAL.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1
  4710 ;;      Params:         0       0       0
  4711 ;;      Locals:         0       0       0
  4712 ;;      Temps:          0       0       0
  4713 ;;      Totals:         0       0       0
  4714 ;;Total ram usage:        0 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; Hardware stack levels required when called: 3
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_main
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text33
  4725   000C36                     __ptext33:
  4726                           	callstack 0
  4727   000C36                     _Terminal_Init:
  4728                           	callstack 27
  4729   000C36                     
  4730                           ;TAD_TERMINAL.c: 27:  TXSTA = 0x24;
  4731   000C36  0E24               	movlw	36
  4732   000C38  6EAC               	movwf	172,c	;volatile
  4733                           
  4734                           ;TAD_TERMINAL.c: 28:  RCSTA = 0x90;
  4735   000C3A  0E90               	movlw	144
  4736   000C3C  6EAB               	movwf	171,c	;volatile
  4737                           
  4738                           ;TAD_TERMINAL.c: 29:  SPBRG = 64;
  4739   000C3E  0E40               	movlw	64
  4740   000C40  6EAF               	movwf	175,c	;volatile
  4741   000C42                     
  4742                           ;TAD_TERMINAL.c: 30:  BAUDCON = 0x00;
  4743   000C42  6AB8               	clrf	184,c	;volatile
  4744   000C44                     
  4745                           ;TAD_TERMINAL.c: 31:  hashtag_pressed = 0;
  4746   000C44  6A54               	clrf	_hashtag_pressed^0,c
  4747   000C46  0012               	return		;funcret
  4748   000C48                     __end_of_Terminal_Init:
  4749                           	callstack 0
  4750                           
  4751 ;; *************** function _TI_Init *****************
  4752 ;; Defined at:
  4753 ;;		line 32 in file "TAD_TIMER.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;		None
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  counter         1    1[COMRAM] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1
  4767 ;;      Params:         0       0       0
  4768 ;;      Locals:         1       0       0
  4769 ;;      Temps:          0       0       0
  4770 ;;      Totals:         1       0       0
  4771 ;;Total ram usage:        1 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 3
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_main
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text34
  4782   000AE0                     __ptext34:
  4783                           	callstack 0
  4784   000AE0                     _TI_Init:
  4785                           	callstack 27
  4786   000AE0                     
  4787                           ;TAD_TIMER.c: 33:  for (unsigned char counter=0; counter<4; counter++) {
  4788   000AE0  6A02               	clrf	TI_Init@counter^0,c
  4789   000AE2                     l1836:
  4790                           
  4791                           ;TAD_TIMER.c: 34:   Timers[counter].Busy=0;
  4792   000AE2  5002               	movf	TI_Init@counter^0,w,c
  4793   000AE4  0D05               	mullw	5
  4794   000AE6  50F3               	movf	243,w,c
  4795   000AE8  0F3A               	addlw	low (_Timers+4)
  4796   000AEA  6ED9               	movwf	fsr2l,c
  4797   000AEC  6ADA               	clrf	fsr2h,c
  4798   000AEE  6ADF               	clrf	indf2,c
  4799   000AF0                     
  4800                           ;TAD_TIMER.c: 35:  }
  4801   000AF0  2A02               	incf	TI_Init@counter^0,f,c
  4802   000AF2  0E03               	movlw	3
  4803   000AF4  6402               	cpfsgt	TI_Init@counter^0,c
  4804   000AF6  EF7F  F005         	goto	u771
  4805   000AFA  EF81  F005         	goto	u770
  4806   000AFE                     u771:
  4807   000AFE  EF71  F005         	goto	l1836
  4808   000B02                     u770:
  4809   000B02                     
  4810                           ;TAD_TIMER.c: 36:  T0CON=0x82;
  4811   000B02  0E82               	movlw	130
  4812   000B04  6ED5               	movwf	213,c	;volatile
  4813                           
  4814                           ;TAD_TIMER.c: 37:     TMR0=64911;
  4815   000B06  0EFD               	movlw	253
  4816   000B08  6ED7               	movwf	215,c	;volatile
  4817   000B0A  0E8F               	movlw	143
  4818   000B0C  6ED6               	movwf	214,c	;volatile
  4819   000B0E                     
  4820                           ;TAD_TIMER.c: 38:  INTCONbits.TMR0IF = 0;
  4821   000B0E  94F2               	bcf	242,2,c	;volatile
  4822   000B10                     
  4823                           ;TAD_TIMER.c: 39:  INTCONbits.TMR0IE = 1;
  4824   000B10  8AF2               	bsf	242,5,c	;volatile
  4825   000B12  0012               	return		;funcret
  4826   000B14                     __end_of_TI_Init:
  4827                           	callstack 0
  4828                           
  4829 ;; *************** function _LowRSI *****************
  4830 ;; Defined at:
  4831 ;;		line 31 in file "main.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		None
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1
  4845 ;;      Params:         0       0       0
  4846 ;;      Locals:         0       0       0
  4847 ;;      Temps:          1       0       0
  4848 ;;      Totals:         1       0       0
  4849 ;;Total ram usage:        1 bytes
  4850 ;; Hardware stack levels used: 1
  4851 ;; Hardware stack levels required when called: 2
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		Interrupt level 1
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	intcodelo
  4860   000018                     __pintcodelo:
  4861                           	callstack 0
  4862   000018                     _LowRSI:
  4863                           	callstack 22
  4864                           
  4865                           ;incstack = 0
  4866   000018  805F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4867   00001A  CFE0 F001          	movff	bsr,??_LowRSI
  4868   00001E  C001  FFE0         	movff	??_LowRSI,bsr
  4869   000022  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4870   000024  0010               	retfie	
  4871   000026                     __end_of_LowRSI:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function _HighRSI *****************
  4875 ;; Defined at:
  4876 ;;		line 27 in file "main.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1
  4890 ;;      Params:         0       0       0
  4891 ;;      Locals:         0       0       0
  4892 ;;      Temps:          0       0       0
  4893 ;;      Totals:         0       0       0
  4894 ;;Total ram usage:        0 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 1
  4897 ;; This function calls:
  4898 ;;		_RSI_Timer0
  4899 ;; This function is called by:
  4900 ;;		Interrupt level 2
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	intcode
  4905   000008                     __pintcode:
  4906                           	callstack 0
  4907   000008                     _HighRSI:
  4908                           	callstack 22
  4909                           
  4910                           ;incstack = 0
  4911   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4912   00000A  EF06  F006         	goto	int_func
  4913                           
  4914                           	psect	intcode_body
  4915   000C0C                     __pintcode_body:
  4916                           	callstack 22
  4917   000C0C                     int_func:
  4918                           	callstack 22
  4919   000C0C                     
  4920                           ;main.c: 29:  }
  4921   000C0C  A4F2               	btfss	242,2,c	;volatile
  4922   000C0E  EF0B  F006         	goto	i2u124_41
  4923   000C12  EF0D  F006         	goto	i2u124_40
  4924   000C16                     i2u124_41:
  4925   000C16  EF0F  F006         	goto	i2l22
  4926   000C1A                     i2u124_40:
  4927   000C1A  ECEF  F005         	call	_RSI_Timer0	;wreg free
  4928   000C1E                     i2l22:
  4929   000C1E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4930   000C20  0011               	retfie		f
  4931   000C22                     __end_of_HighRSI:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _RSI_Timer0 *****************
  4935 ;; Defined at:
  4936 ;;		line 25 in file "TAD_TIMER.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1
  4950 ;;      Params:         0       0       0
  4951 ;;      Locals:         0       0       0
  4952 ;;      Temps:          0       0       0
  4953 ;;      Totals:         0       0       0
  4954 ;;Total ram usage:        0 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_HighRSI
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text37
  4964   000BDE                     __ptext37:
  4965                           	callstack 0
  4966   000BDE                     _RSI_Timer0:
  4967                           	callstack 22
  4968   000BDE                     
  4969                           ;TAD_TIMER.c: 27:     TMR0=64911;
  4970   000BDE  0EFD               	movlw	253
  4971   000BE0  6ED7               	movwf	215,c	;volatile
  4972   000BE2  0E8F               	movlw	143
  4973   000BE4  6ED6               	movwf	214,c	;volatile
  4974   000BE6                     
  4975                           ;TAD_TIMER.c: 28:     TMR0IF=0;
  4976   000BE6  94F2               	bcf	4082,2,c	;volatile
  4977   000BE8                     
  4978                           ;TAD_TIMER.c: 29:     Tics++;
  4979   000BE8  0E01               	movlw	1
  4980   000BEA  264A               	addwf	_Tics^0,f,c	;volatile
  4981   000BEC  0E00               	movlw	0
  4982   000BEE  224B               	addwfc	(_Tics+1)^0,f,c	;volatile
  4983   000BF0  224C               	addwfc	(_Tics+2)^0,f,c	;volatile
  4984   000BF2  224D               	addwfc	(_Tics+3)^0,f,c	;volatile
  4985   000BF4  0012               	return		;funcret
  4986   000BF6                     __end_of_RSI_Timer0:
  4987                           	callstack 0
  4988                           
  4989                           	psect	rparam
  4990   000001                     ___rparam_used  equ	1
  4991   000000                     ___param_bank   equ	0
  4992   000000                     __Lparam        equ	__Lrparam
  4993   000000                     __Hparam        equ	__Hrparam
  4994                           
  4995                           	psect	temp
  4996   00005F                     btemp:
  4997                           	callstack 0
  4998   00005F                     	ds	1
  4999   00005F                     int$flags       set	btemp
  5000   000060                     wtemp8          set	btemp+1
  5001   000060                     ttemp5          set	btemp+1
  5002   000063                     ttemp6          set	btemp+4
  5003   000067                     ttemp7          set	btemp+8
  5004                           
  5005                           	psect	idloc
  5006                           
  5007                           ;Config register IDLOC0 @ 0x200000
  5008                           ;	unspecified, using default values
  5009   200000                     	org	2097152
  5010   200000  FF                 	db	255
  5011                           
  5012                           ;Config register IDLOC1 @ 0x200001
  5013                           ;	unspecified, using default values
  5014   200001                     	org	2097153
  5015   200001  FF                 	db	255
  5016                           
  5017                           ;Config register IDLOC2 @ 0x200002
  5018                           ;	unspecified, using default values
  5019   200002                     	org	2097154
  5020   200002  FF                 	db	255
  5021                           
  5022                           ;Config register IDLOC3 @ 0x200003
  5023                           ;	unspecified, using default values
  5024   200003                     	org	2097155
  5025   200003  FF                 	db	255
  5026                           
  5027                           ;Config register IDLOC4 @ 0x200004
  5028                           ;	unspecified, using default values
  5029   200004                     	org	2097156
  5030   200004  FF                 	db	255
  5031                           
  5032                           ;Config register IDLOC5 @ 0x200005
  5033                           ;	unspecified, using default values
  5034   200005                     	org	2097157
  5035   200005  FF                 	db	255
  5036                           
  5037                           ;Config register IDLOC6 @ 0x200006
  5038                           ;	unspecified, using default values
  5039   200006                     	org	2097158
  5040   200006  FF                 	db	255
  5041                           
  5042                           ;Config register IDLOC7 @ 0x200007
  5043                           ;	unspecified, using default values
  5044   200007                     	org	2097159
  5045   200007  FF                 	db	255
  5046                           
  5047                           	psect	config
  5048                           
  5049                           ; Padding undefined space
  5050   300000                     	org	3145728
  5051   300000  FF                 	db	255
  5052                           
  5053                           ;Config register CONFIG1H @ 0x300001
  5054                           ;	Oscillator
  5055                           ;	OSC = HS, HS Oscillator
  5056                           ;	Fail-Safe Clock Monitor Enable bit
  5057                           ;	FCMEN = 0x0, unprogrammed default
  5058                           ;	Internal/External Oscillator Switchover bit
  5059                           ;	IESO = 0x0, unprogrammed default
  5060   300001                     	org	3145729
  5061   300001  02                 	db	2
  5062                           
  5063                           ;Config register CONFIG2L @ 0x300002
  5064                           ;	Power-up Timer Enable bit
  5065                           ;	PWRT = OFF, PWRT disabled
  5066                           ;	Brown-out Reset Enable bits
  5067                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5068                           ;	Brown-out Reset Voltage bits
  5069                           ;	BORV = 0x3, unprogrammed default
  5070   300002                     	org	3145730
  5071   300002  19                 	db	25
  5072                           
  5073                           ;Config register CONFIG2H @ 0x300003
  5074                           ;	Watchdog Timer Enable bit
  5075                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5076                           ;	Watchdog Timer Postscale Select bits
  5077                           ;	WDTPS = 0xF, unprogrammed default
  5078   300003                     	org	3145731
  5079   300003  1E                 	db	30
  5080                           
  5081                           ; Padding undefined space
  5082   300004                     	org	3145732
  5083   300004  FF                 	db	255
  5084                           
  5085                           ;Config register CONFIG3H @ 0x300005
  5086                           ;	CCP2 MUX bit
  5087                           ;	CCP2MX = 0x1, unprogrammed default
  5088                           ;	PORTB A/D Enable bit
  5089                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5090                           ;	Low-Power Timer1 Oscillator Enable bit
  5091                           ;	LPT1OSC = 0x0, unprogrammed default
  5092                           ;	MCLR Pin Enable bit
  5093                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5094   300005                     	org	3145733
  5095   300005  01                 	db	1
  5096                           
  5097                           ;Config register CONFIG4L @ 0x300006
  5098                           ;	Stack Full/Underflow Reset Enable bit
  5099                           ;	STVREN = 0x1, unprogrammed default
  5100                           ;	Single-Supply ICSP Enable bit
  5101                           ;	LVP = OFF, Single-Supply ICSP disabled
  5102                           ;	Boot Block Size Select bits
  5103                           ;	BBSIZ = 0x0, unprogrammed default
  5104                           ;	Extended Instruction Set Enable bit
  5105                           ;	XINST = 0x0, unprogrammed default
  5106                           ;	Background Debugger Enable bit
  5107                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5108   300006                     	org	3145734
  5109   300006  81                 	db	129
  5110                           
  5111                           ; Padding undefined space
  5112   300007                     	org	3145735
  5113   300007  FF                 	db	255
  5114                           
  5115                           ;Config register CONFIG5L @ 0x300008
  5116                           ;	unspecified, using default values
  5117                           ;	Code Protection bit
  5118                           ;	CP0 = 0x1, unprogrammed default
  5119                           ;	Code Protection bit
  5120                           ;	CP1 = 0x1, unprogrammed default
  5121   300008                     	org	3145736
  5122   300008  03                 	db	3
  5123                           
  5124                           ;Config register CONFIG5H @ 0x300009
  5125                           ;	unspecified, using default values
  5126                           ;	Boot Block Code Protection bitProtect Boot
  5127                           ;	CPB = 0x1, unprogrammed default
  5128                           ;	Data EEPROM Code Protection bit
  5129                           ;	CPD = 0x1, unprogrammed default
  5130   300009                     	org	3145737
  5131   300009  C0                 	db	192
  5132                           
  5133                           ;Config register CONFIG6L @ 0x30000A
  5134                           ;	unspecified, using default values
  5135                           ;	Write Protection bit
  5136                           ;	WRT0 = 0x1, unprogrammed default
  5137                           ;	Write Protection bit
  5138                           ;	WRT1 = 0x1, unprogrammed default
  5139   30000A                     	org	3145738
  5140   30000A  03                 	db	3
  5141                           
  5142                           ;Config register CONFIG6H @ 0x30000B
  5143                           ;	unspecified, using default values
  5144                           ;	Configuration Register Write Protection bit
  5145                           ;	WRTC = 0x1, unprogrammed default
  5146                           ;	Boot Block Write Protection bit
  5147                           ;	WRTB = 0x1, unprogrammed default
  5148                           ;	Data EEPROM Write Protection bit
  5149                           ;	WRTD = 0x1, unprogrammed default
  5150   30000B                     	org	3145739
  5151   30000B  E0                 	db	224
  5152                           
  5153                           ;Config register CONFIG7L @ 0x30000C
  5154                           ;	unspecified, using default values
  5155                           ;	Table Read Protection bit
  5156                           ;	EBTR0 = 0x1, unprogrammed default
  5157                           ;	Table Read Protection bit
  5158                           ;	EBTR1 = 0x1, unprogrammed default
  5159   30000C                     	org	3145740
  5160   30000C  03                 	db	3
  5161                           
  5162                           ;Config register CONFIG7H @ 0x30000D
  5163                           ;	unspecified, using default values
  5164                           ;	Boot Block Table Read Protection bit
  5165                           ;	EBTRB = 0x1, unprogrammed default
  5166   30000D                     	org	3145741
  5167   30000D  40                 	db	64
  5168                           tosu	equ	0xFFF
  5169                           tosh	equ	0xFFE
  5170                           tosl	equ	0xFFD
  5171                           stkptr	equ	0xFFC
  5172                           pclatu	equ	0xFFB
  5173                           pclath	equ	0xFFA
  5174                           pcl	equ	0xFF9
  5175                           tblptru	equ	0xFF8
  5176                           tblptrh	equ	0xFF7
  5177                           tblptrl	equ	0xFF6
  5178                           tablat	equ	0xFF5
  5179                           prodh	equ	0xFF4
  5180                           prodl	equ	0xFF3
  5181                           indf0	equ	0xFEF
  5182                           postinc0	equ	0xFEE
  5183                           postdec0	equ	0xFED
  5184                           preinc0	equ	0xFEC
  5185                           plusw0	equ	0xFEB
  5186                           fsr0h	equ	0xFEA
  5187                           fsr0l	equ	0xFE9
  5188                           wreg	equ	0xFE8
  5189                           indf1	equ	0xFE7
  5190                           postinc1	equ	0xFE6
  5191                           postdec1	equ	0xFE5
  5192                           preinc1	equ	0xFE4
  5193                           plusw1	equ	0xFE3
  5194                           fsr1h	equ	0xFE2
  5195                           fsr1l	equ	0xFE1
  5196                           bsr	equ	0xFE0
  5197                           indf2	equ	0xFDF
  5198                           postinc2	equ	0xFDE
  5199                           postdec2	equ	0xFDD
  5200                           preinc2	equ	0xFDC
  5201                           plusw2	equ	0xFDB
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8

Data Sizes:
    Strings     251
    Constant    12
    Data        0
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     53      94
    BANK0           128     32      64
    BANK1           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> motorTeclado@buffer(BANK0[32]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> motorTeclado@buffer(BANK0[32]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S1276$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> motorTeclado@buffer(BANK0[32]), 

    S1276$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> motorTeclado@buffer(BANK0[32]), 

    Terminal_SendString@str	PTR const unsigned char  size(2) Largest target is 33
		 -> displayUID@hexString(COMRAM[11]), motorTeclado@buffer(BANK0[32]), STR_10(CODE[33]), STR_11(CODE[9]), 
		 -> STR_12(CODE[14]), STR_13(CODE[33]), STR_2(CODE[6]), STR_3(CODE[2]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[18]), STR_7(CODE[19]), 
		 -> STR_8(CODE[27]), STR_9(CODE[29]), 

    TI_NewTimer@TimerHandle	PTR unsigned char  size(1) Largest target is 1
		 -> timer(COMRAM[1]), Timer(COMRAM[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _motorTeclado->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Terminal_SendString->_Terminal_TXAvailable
    _initTeclado->_TI_NewTimer
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Wr->_MFRC522_Rd
    _MFRC522_Wr->_delay_us

Critical Paths under _LowRSI in COMRAM

    None.

Critical Paths under _HighRSI in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_motorTeclado

Critical Paths under _LowRSI in BANK0

    None.

Critical Paths under _HighRSI in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowRSI in BANK1

    None.

Critical Paths under _HighRSI in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4431
                            _TI_Init
                      _Terminal_Init
                           _initRFID
                        _initTeclado
                       _motorTeclado
 ---------------------------------------------------------------------------------
 (1) _motorTeclado                                        32    32      0    3002
                                              0 BANK0     32    32      0
                           _GetTecla
                          _ReadFilas
                         _TI_GetTics
                       _TI_ResetTics
                _Terminal_SendString
                  _hashtag_pressed3s
                            _sprintf
                      _writeColumnas
 ---------------------------------------------------------------------------------
 (2) _writeColumnas                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    14     11    2598
                                             30 COMRAM    23    12     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    2286
                                             24 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2086
                                             11 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     329
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _hashtag_pressed3s                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Terminal_SendString                                  2     0      2     136
                                              4 COMRAM     2     0      2
                  _Terminal_SendChar
               _Terminal_TXAvailable
 ---------------------------------------------------------------------------------
 (3) _Terminal_TXAvailable                                 3     1      2       0
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Terminal_SendChar                                    1     1      0      29
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TI_ResetTics                                         1     1      0      29
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TI_GetTics                                          13     9      4      81
                                              1 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _ReadFilas                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetTecla                                            16    16      0      78
                                              1 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0     113
                        _TI_NewTimer
                   _initPortsTeclado
 ---------------------------------------------------------------------------------
 (2) _initPortsTeclado                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TI_NewTimer                                          3     2      1     113
                                              1 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initRFID                                             0     0      0    1271
                 _InitPortDirections
                       _MFRC522_Init
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Init                                         0     0      0    1271
                 _MFRC522_AntennaOff
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Reset                                        0     0      0     245
                         _MFRC522_Wr
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntennaOn                                    0     0      0     404
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      2     1      1     404
                                             11 COMRAM     2     1      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntennaOff                                   0     0      0     407
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1     407
                                             11 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1     215
                                              6 COMRAM     5     4      1
                         _MFRC522_Rd (ARG)
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             5     5      0      30
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           5     5      0     105
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _InitPortDirections                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Terminal_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TI_Init                                              1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowRSI                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighRSI                                              0     0      0       0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (9) _RSI_Timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TI_Init
   _Terminal_Init
   _initRFID
     _InitPortDirections
     _MFRC522_Init
       _MFRC522_AntennaOff
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
             _delay_us (ARG)
       _MFRC522_AntennaOn
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
       _MFRC522_Reset
         _MFRC522_Wr
         _delay_us
       _MFRC522_Wr
   _initTeclado
     _TI_NewTimer
     _initPortsTeclado
   _motorTeclado
     _GetTecla
     _ReadFilas
     _TI_GetTics
     _TI_ResetTics
     _Terminal_SendString
       _Terminal_SendChar
       _Terminal_TXAvailable
     _hashtag_pressed3s
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
     _writeColumnas

 _LowRSI (ROOT)

 _HighRSI (ROOT)
   _RSI_Timer0

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128     32      64     50.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     53      94     74.6%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll          1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     158      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Mar 04 18:50:01 2025

       __end_ofGetTecla@F3224 1F03                    _RSI_Timer0 0BDE                   MFRC522_Rd@i 0006  
                 MFRC522_Wr@i 000B                            l71 09B4                            l64 091A  
                          l58 0B12                            l68 0B86                            u10 0AAA  
                          u11 0AA6                            u20 07F0                            u21 07E8  
                          u40 0818                            u41 0814                            u50 0832  
                          u51 082C                            u60 084A                            u61 0846  
                          u38 07F2                            u56 0834                  ___awdiv@sign 0007  
                  _TI_GetTics 096A                            bsr 0FE0          ??_InitPortDirections 0002  
                         l200 084A                           l120 0C84                           l201 0850  
                         l114 0C90                           l211 0BDC                           l220 0C52  
                         l117 0C0A                           l214 0C34                           l207 07C2  
                         l223 0C5E                           l208 07C6                           l217 0B3C  
                         l161 0448                           l226 0968                           l157 09FA  
                         l149 026C                           l167 0504                           l192 0A7E  
                         l169 0492                           l450 0C46                           l194 0AAA  
                         l188 0C6A                           l453 0BC2                           l199 081C  
                         l471 08C4                           l296 0C74                           l459 0C7C  
                         l477 0C8A                           l742 0674                           l729 05C6  
                         u770 0B02                           u771 0AFE                           _abs 0AAC  
                ___awmod@sign 0007                           wreg 0FE8                ??_MFRC522_Init 000F  
                        ?_abs 0008                          l1220 0A3C                          l1214 0440  
                        l1224 0AC6                          l1250 0C92                          l1227 0ADE  
                        l1260 07D4                          l1252 0A78                          l2300 072E  
                        l1262 07D6                          l1254 0A80                          l2310 0758  
                        l1239 071E                          l1280 0808                          l1272 07DE  
                        l1264 07D8                          l1256 0A82                          l2320 0778  
                        l2312 075E                          l3200 05C8                          l1176 0A74  
                        l1290 0838                          l1282 0818                          l1274 07FE  
                        l1266 07DA                          l1258 07CA                          l2330 07A8  
                        l2314 0760                          l2306 0732                          l3210 05F2  
                        l3202 05CA                          l1292 083A                          l1276 0804  
                        l2332 07AA                          l2324 077C                          l2316 0766  
                        l2308 0752                          l2500 0C54                          l3220 062A  
                        l3212 05FA                          l3204 05D8                          l1294 084E  
                        l1286 081E                          l1278 0806                          l2334 07B0  
                        l2326 079C                          l2318 0768                          l3230 0664  
                        l3222 0640                          l3214 060C                          l3206 05E0  
                        l3310 09FC                          l1288 0836                          l2336 07B2  
                        l2328 07A2                          l1640 0C82                          l3400 04DC  
                        l3320 0B66                          l3304 0BA8                          l3160 0516  
                        l3232 066C                          l3224 0648                          l3216 0614  
                        l3208 05E4                          l3240 0696                          l3312 0A08  
                        l2610 0900                          l2602 08C6                          l3402 04F4  
                        l3322 0B68                          l3410 0C86                          l3170 053C  
                        l3162 051E                          l3226 064E                          l3218 061C  
                        l3250 0AAC                          l3242 06A0                          l3314 0A18  
                        l2436 0BC6                          l2612 0910                          l2604 08CC  
                        l3332 0C8C                          l3324 0B84                          l3308 0C78  
                        l3180 0574                          l3172 0544                          l3164 0522  
                        l3156 0506                          l3228 0654                          l3252 0ABA  
                        l3244 06BC                          l3236 0676                          l3260 02A8  
                        l3316 0A34                          l3340 0A4E                          l1830 0AE0  
                        l1718 0C60                          l2294 0722                          l2438 0C24  
                        l1638 0C7E                          l3326 096C                          l3350 0856  
                        l3190 05A0                          l3182 057A                          l3174 0556  
                        l3166 0530                          l3158 0508                          l3246 06EE  
                        l3238 0686                          l3270 030A                          l3262 02AC  
                        l3254 026E                          l3342 0A56                          l3510 017A  
                        l3502 0130                          l1840 0AF2                          l2296 072A  
                        l2608 08E4                          l3328 0980                          l3352 086C  
                        l3184 0590                          l3176 055E                          l3192 05A6  
                        l3168 0538                          l3280 039A                          l3272 0324  
                        l3264 02BA                          l3256 0290                          l3344 0A6A  
                        l3336 0A3E                          l3360 09B8                          l3520 01CA  
                        l3512 018A                          l3504 0140                          l1842 0B02  
                        l2298 072C                          l2490 0B14                          l3354 0890  
                        l3194 05B6                          l3186 0598                          l3178 0566  
                        l3290 03F6                          l3282 03AA                          l3274 033C  
                        l3266 02D6                          l3258 029C                          l3338 0A46  
                        l3370 09F8                          l3362 09C8                          l3514 01AA  
                        l3506 0160                          l3450 0066                          l1844 0B0E  
                        l1836 0AE2                          l2492 0B16                          l2644 091C  
                        l3380 0466                          l3372 0442                          l3356 0894  
                        l3348 0852                          l3196 05BE                          l3188 059A  
                        l3284 03BA                          l3292 03F8                          l3276 036C  
                        l3268 02F2                          l3364 09CE                          l3532 0218  
                        l3524 01DE                          l3516 01BC                          l3508 0172  
                        l3460 0096                          l3452 0076                          l3444 002A  
                        l1846 0B10                          l1838 0AF0                          l2494 0B1C  
                        l2646 0920                          l2750 0BF6                          l3390 04A0  
                        l3374 044E                          l3286 03CA                          l3278 0388  
                        l3294 040E                          l3366 09E0                          l3358 09B6  
                        l3534 0228                          l3526 01EE                          l3518 01C2  
                        l3470 00BC                          l3462 009C                          l3454 007A  
                        l3542 0236                          l3446 0030                          l1864 0C36  
                        l2496 0B24                          l2760 0C02                          l2752 0BFA  
                        l3376 0456                          l3288 03DC                          l3368 09E6  
                        l3536 022A                          l3528 0210                          l3480 00EE  
                        l3472 00C4                          l3464 00A4                          l3456 007E  
                        l3448 0058                          l1866 0C42                          l2498 0C48  
                        l2762 0C6C                          l2754 0BFC                          l3378 045E  
                        l3386 046C                          l3298 041E                          l3538 022E  
                        l3490 0110                          l3474 00D4                          l3466 00B4  
                        l3458 0086                   _TI_NewTimer 08C6                          l1868 0C44  
                        l2764 0C70                          l2756 0BFE                          l3388 0498  
                        l3492 0116                          l3484 00F8                          l3468 00B8  
                        l2758 0C00                          l3398 04A8                          l3494 011C  
                        l3486 0108                          l3478 00DE                          l3590 0B98  
                        l3488 010C                          l3592 0B9A                          l3584 0B88  
                        l3594 0B9C                          l3586 0B90                          l3588 0B94  
                        l3782 04BE                          STR_1 1F03                          STR_2 1FF8  
                        STR_4 1FBD                          STR_5 1FCF                          STR_7 1FAA  
                        STR_8 1F8F                          STR_9 1F72                          u2000 08E0  
                        u2001 08DC                          u2010 0900                          u2011 08FC  
                        u3000 09E0                          u3001 09DC                          u3010 09F8  
                        u3011 09F4                          u3020 04EA                          u3100 00D4  
                        u3101 00D0                          u3110 00EE                          u3111 00EA  
                        _LATC 0F8B                          u1520 0744                          u3200 01DA  
                        u3120 0108                          _LATD 0F8C                          u1521 073C  
                        u3201 01D6                          u3121 0104                          u3210 01EE  
                        u3130 012C                          u3211 01EA                          u3131 0128  
                        u1540 0778                          u3220 0210                          u3140 0140  
                        u1541 0774                          u3221 020C                          u3141 013C  
                        u1550 078E                          u3230 0228                          u3150 0160  
                        u3070 0076                          u1551 0786                          u3231 0224  
                        u3151 015C                          u3071 0072                          u3160 0172  
                        u3080 0096                          u3161 016E                          u3081 0092  
                        u1570 07C2                          u1538 0746                          u3170 018A  
                        u3090 00B4                          u1571 07BE                          u3171 0186  
                        u3091 00B0                          u2700 0590                          u3180 01AA  
                        u2701 058C                          u3181 01A6                          u2710 05B6  
                        u3190 01BC                          u2711 05B2                          u3191 01B8  
                        u1568 0790                          u2720 05D8                          u2800 06BC  
                        u2721 05D4                          u2801 06B8                          u2730 05F2  
                        u2810 06EE                          u2731 05EE                          u2811 06EA  
                        u2660 0516                          u2740 060C                          u2820 0ABA  
                        u2900 03BA                          u2661 0512                          u2741 0608  
                        u2821 0AB6                          u2901 03B6                          u2670 0530  
                        u2750 062A                          u2910 03CA                          u2830 0290  
                        u2671 052C                          u2751 0626                          u2911 03C6  
                        u2831 028C                          u2680 0556                          u2760 0640  
                        u2920 040A                          u2840 02D6                          u2681 0552  
                        u2761 063C                          u2921 0406                          u2841 02D2  
                        u2930 0BBA                          u2690 0574                          u2770 0664  
                        u2850 02F2                          u2931 0BB2                          u2691 0570  
                        u2771 0660                          u2851 02EE                          u2780 0686  
                        u2860 0338                          u2940 0A34                          u2781 0682  
                        u2861 0332                          u2941 0A30                          u2950 086C  
                        u2790 0696                          u2870 033A                          u2951 0868  
                        u2791 0692                          u2960 088C                          u2880 039A  
                        u2881 0396                          u2938 0BBC                          u2970 08B4  
                        u2890 03AA                          i1l27 001E                          u2891 03A6  
                        u2980 08C4                          u2981 08C0                          i2l22 0C1E  
                        u2990 09C8                          u2967 0882                          u2991 09C4  
                        u2977 08AA                          i2l53 0BF4                          _TMR0 0FD6  
                        _Tics 004A                          _Rows 0058                          abs@a 0008  
                        _dbuf 0080                          _main 0B88                          _prec 0050  
                        fsr0h 0FEA                          fsr1h 0FE2                          indf0 0FEF  
                        fsr2h 0FDA                          fsr0l 0FE9                          indf2 0FDF  
                        fsr1l 0FE1                          fsr2l 0FD9                          btemp 005F  
             __end_of_TI_Init 0B14                          prodh 0FF4                          prodl 0FF3  
                        start 0026               __end_of_HighRSI 0C22                  ___param_bank 0000  
             ??_MFRC522_Reset 000C                         ??_abs 000A                  ?_initTeclado 0001  
                       ?_main 0001               __end_of___awdiv 05C8                         STR_10 1F51  
                       STR_11 1FEF                         STR_12 1FE1                         STR_13 1F30  
             __end_of___awmod 0676                         _T0CON 0FD5               ___awdiv@divisor 0004  
             ___awdiv@counter 0006                         _RCREG 0FAE                         _RCSTA 0FAB  
                vfpfcnvrt@fmt 000D                         _SPBRG 0FAF                         _PORTD 0F83  
                       _TRISD 0F95                         _TXREG 0FAD                         _TXSTA 0FAC  
                       _Filas 005C                         _Timer 005D                         _flags 0052  
                       _fputc 0676                  _TI_ResetTics 0B64                         _tecla 005A  
                       _timer 005E                         _width 004E                         _state 0059  
                       _putch 0C92                         tablat 0FF5             _MFRC522_Clear_Bit 0BC4  
                       ttemp5 0060                         ttemp6 0063                         ttemp7 0067  
                       status 0FD8                         wtemp8 0060               __end_of_sprintf 0A76  
          Terminal_SendChar@c 0002            ?_MFRC522_Clear_Bit 000C              __end_of_GetTecla 0506  
           _MFRC522_AntennaOn 0C48               __initialization 0B3E                  __end_of_main 0BA8  
          ?_MFRC522_AntennaOn 0001           ??_MFRC522_Clear_Bit 000D                   ?_RSI_Timer0 0001  
              TI_Init@counter 0002              _initPortsTeclado 0C7E                   ?_TI_GetTics 0002  
                      ??_main 0036           ??_MFRC522_AntennaOn 000E                 __activetblptr 0002  
          MFRC522_Rd@ucResult 0005               MFRC522_Wr@value 0007     __end_of_MFRC522_Clear_Bit 0BDE  
                      ?_fputc 0002              ___awdiv@dividend 0002                        ?_putch 0001  
                   ??_TI_Init 0002        Terminal_SendString@str 0005                        i2l2044 0C0C  
                      i2l2046 0C1A                        i2l1824 0BDE                        i2l1826 0BE6  
                      i2l1828 0BE8                 vfpfcnvrt@done 0011                        _TMR0IF 7F92  
                   ??_HighRSI 0001     __end_of_MFRC522_AntennaOn 0C54              __end_of_delay_us 0AAC  
                      _LowRSI 0018                        _RowAct 0056                        _Timers 0036  
                vfprintf@cfmt 001D                     ??___awdiv 0006          __end_of_MFRC522_Init 096A  
                   ??___awmod 0006              __end_of_initRFID 0C76            motorTerminal@state 0053  
                      clear_0 0B44                        clear_1 0B50              ___awdiv@quotient 0008  
             ___awmod@divisor 0004                        isa$std 0001               ___awmod@counter 0006  
                      fputc@c 0002                  __mediumconst 1EF6                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                        putch@c 0001  
            __end_of_vfprintf 0A3E         __end_of_Terminal_Init 0C48                     ??_sprintf 002A  
                  __accesstop 0080       __end_of__initialization 0B56               delay_us@howMany 0005  
               ___rparam_used 0001                  ??_MFRC522_Rd 0002                  ??_MFRC522_Wr 0008  
          _MFRC522_AntennaOff 0C54                __pcstackCOMRAM 0001           ?_MFRC522_AntennaOff 0001  
               __end_of_fputc 0720                 __end_of_putch 0C94          TI_NewTimer@Comptador 0004  
           __end_of_ReadFilas 0C92              MFRC522_Rd@ucAddr 0004             ??_MFRC522_Set_Bit 000D  
          __end_of_MFRC522_Rd 0852            __end_of_MFRC522_Wr 07C8                     ?_GetTecla 0001  
                     ??_fputc 0005          ??_MFRC522_AntennaOff 000F                  ?_TI_NewTimer 0002  
                     ??_putch 0002                    __pbssBANK0 0080        TI_NewTimer@TimerHandle 0002  
                     ?_LowRSI 0001              MFRC522_Wr@ucAddr 000A       TI_ResetTics@TimerHandle 0002  
               _writeColumnas 09B6                       _BAUDCON 0FB8                     ?_delay_us 0001  
                  ??_GetTecla 0002             _Terminal_SendChar 0C76                       _TI_Init 0AE0  
          ?_Terminal_SendChar 0001      __end_of_initPortsTeclado 0C86                     ?_initRFID 0001  
                     _HighRSI 0008                       _Columns 0057           ??_Terminal_SendChar 0002  
                     __Hparam 0000                       __Lparam 0000                  ??_RSI_Timer0 0001  
                     ___awdiv 0506                ?_writeColumnas 0001                       ___awmod 05C8  
                   ?_vfprintf 0019                  ??_TI_GetTics 0006                       __pcinit 0B3E  
       __end_of_MFRC522_Reset 0B3E                       __ramtop 0200                       __ptext0 0B88  
                     __ptext1 002A                       __ptext2 09B6                       __ptext3 0A3E  
                     __ptext4 09FC                       __ptext5 026E                       __ptext6 0676  
                     __ptext7 0C92                       __ptext8 0AAC                       __ptext9 05C8  
               ?_motorTeclado 0001     __end_of_Terminal_SendChar 0C7E              ___awmod@dividend 0002  
                  ??_delay_us 0002                       _sprintf 0A3E                  _MFRC522_Init 091C  
              __pintcode_body 0C0C          end_of_initialization 0B56                    ??_initRFID 000F  
          __end_of_RSI_Timer0 0BF6                       fputc@fp 0004                 __Lmediumconst 1EF6  
                     int_func 0C0C            __end_of_TI_GetTics 09B6             __end_of_vfpfcnvrt 0442  
                     postdec2 0FDD                       postinc0 0FEE                       postinc1 0FE6  
                     postinc2 0FDE              vfpfcnvrt@convarg 0014                 GetTecla@F3224 1EF7  
                  ??_vfprintf 001D                ??_motorTeclado 0036                     _PORTBbits 0F81  
                   _PORTCbits 0F82           _Terminal_SendString 0852         TI_GetTics@TimerHandle 000E  
                   _TRISBbits 0F93                     _TRISCbits 0F94          ?_Terminal_SendString 0005  
           MFRC522_Rd@Address 0003               ??_writeColumnas 0002                __end_of_LowRSI 0026  
             _MFRC522_Set_Bit 0C22                   vfpfcnvrt@ap 000E                   vfpfcnvrt@cp 0012  
                 vfpfcnvrt@fp 000C                     _ColumnAct 0055           start_initialization 0B3E  
                   _ReadFilas 0C8C                   __end_of_abs 0AE0  __end_of_Terminal_TXAvailable 0BC4  
          motorTeclado@buffer 00A0         ??_Terminal_SendString 0007                      ??_LowRSI 0001  
                 vfprintf@fmt 001A                 ??_initTeclado 0005                   __pbssCOMRAM 0036  
               __pcstackBANK0 00A0                    ?_ReadFilas 0001             MFRC522_Wr@Address 0009  
               ?_TI_ResetTics 0001                      ?_TI_Init 0001             ?_initPortsTeclado 0001  
                    ?_HighRSI 0001          __end_of_motorTeclado 026E            ??_initPortsTeclado 0002  
     __end_of_MFRC522_Set_Bit 0C36           MFRC522_Set_Bit@addr 000D           MFRC522_Set_Bit@mask 000C  
                   __pintcode 0008                 __pmediumconst 1EF6                      ?___awdiv 0002  
  __end_of_InitPortDirections 0C6C                      ?___awmod 0002                   __pintcodelo 0018  
                 __smallconst 1EF6           __end_of_initTeclado 0C0C                ??_TI_ResetTics 0002  
                    ?_sprintf 001F                 _Terminal_Init 0C36                      _LATBbits 0F8A  
                    _LATCbits 0F8B                     delay_us@x 0006               _hashtag_pressed 0054  
                    i2u124_40 0C1A                      i2u124_41 0C16                      _PIR1bits 0F9E  
                   _vfpfcnvrt 026E          _Terminal_TXAvailable 0BA8                  GetTecla@fila 0011  
                 ??_ReadFilas 0002                      _GetTecla 0442                    vfpfcnvrt@c 0018  
              ?_Terminal_Init 0001                      _Columnas 005B              ?_MFRC522_Set_Bit 000C  
                    __Hrparam 0000         MFRC522_Clear_Bit@addr 000E         MFRC522_Clear_Bit@mask 000C  
                  vfprintf@ap 001C                      __Lrparam 0000                    vfprintf@fp 0019  
                 _initTeclado 0BF6         ?_Terminal_TXAvailable 0002                    ?_vfpfcnvrt 000C  
                  sprintf@fmt 0020                      _delay_us 0A76                      __ptext10 0506  
                    __ptext11 0C86                      __ptext20 0C7E                      __ptext12 0852  
                    __ptext21 08C6                      __ptext13 0BA8                      __ptext30 0A76  
                    __ptext22 0C6C                      __ptext14 0C76                      __ptext31 07C8  
                    __ptext23 091C                      __ptext15 0B64                      __ptext32 0C60  
                    __ptext24 0B14                      __ptext16 096A                      __ptext33 0C36  
                    __ptext25 0C48                      __ptext17 0C8C                      __ptext34 0AE0  
                    __ptext26 0C22                      __ptext18 0442                      __ptext27 0C54  
                    __ptext19 0BF6                      __ptext28 0BC4                      __ptext37 0BDE  
                    __ptext29 0720                 ??_TI_NewTimer 0003                      _initRFID 0C6C  
                  _MFRC522_Rd 07C8                    _MFRC522_Wr 0720                      isa$xinst 0000  
        __end_of_TI_ResetTics 0B88                      int$flags 005F         __end_of_writeColumnas 09FC  
                    _vfprintf 09FC                 _MFRC522_Reset 0B14                  _motorTeclado 002A  
                  _INTCONbits 0FF2               ??_Terminal_Init 0002     TI_GetTics@CopiaTicsActual 000A  
           _hashtag_pressed3s 0C86   __end_of_Terminal_SendString 08C6                      intlevel1 0000  
                    intlevel2 0000                     sprintf@ap 002A            ?_hashtag_pressed3s 0001  
         __end_of_TI_NewTimer 091C           ??_hashtag_pressed3s 0002        ??_Terminal_TXAvailable 0004  
                 ??_vfpfcnvrt 000F                ?_MFRC522_Reset 0001                      sprintf@f 002B  
                    sprintf@s 001F     __end_of_hashtag_pressed3s 0C8C            _InitPortDirections 0C60  
  __end_of_MFRC522_AntennaOff 0C60                 ?_MFRC522_Init 0001           ?_InitPortDirections 0001  
             GetTecla@columna 0010                   ?_MFRC522_Rd 0001                   ?_MFRC522_Wr 0007  
              GetTecla@keymap 0004  
