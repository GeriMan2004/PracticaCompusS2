

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Feb 27 20:25:03 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 05/12/2024 GMT
    31                           ; 
    32                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4321 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000FE0                     bsr             equ	4064
    65   000FE9                     fsr0            equ	4073
    66   000FEA                     fsr0h           equ	4074
    67   000FE9                     fsr0l           equ	4073
    68   000FE1                     fsr1            equ	4065
    69   000FE2                     fsr1h           equ	4066
    70   000FE1                     fsr1l           equ	4065
    71   000FD9                     fsr2            equ	4057
    72   000FDA                     fsr2h           equ	4058
    73   000FD9                     fsr2l           equ	4057
    74   000FEF                     indf0           equ	4079
    75   000FE7                     indf1           equ	4071
    76   000FDF                     indf2           equ	4063
    77   000FF2                     intcon          equ	4082
    78   000000                     nvmcon          equ	0
    79   000FF9                     pcl             equ	4089
    80   000FFA                     pclath          equ	4090
    81   000FFB                     pclatu          equ	4091
    82   000FEB                     plusw0          equ	4075
    83   000FE3                     plusw1          equ	4067
    84   000FDB                     plusw2          equ	4059
    85   000FED                     postdec0        equ	4077
    86   000FE5                     postdec1        equ	4069
    87   000FDD                     postdec2        equ	4061
    88   000FEE                     postinc0        equ	4078
    89   000FE6                     postinc1        equ	4070
    90   000FDE                     postinc2        equ	4062
    91   000FEC                     preinc0         equ	4076
    92   000FE4                     preinc1         equ	4068
    93   000FDC                     preinc2         equ	4060
    94   000FF3                     prod            equ	4083
    95   000FF4                     prodh           equ	4084
    96   000FF3                     prodl           equ	4083
    97   000FD8                     status          equ	4056
    98   000FF5                     tablat          equ	4085
    99   000FF6                     tblptr          equ	4086
   100   000FF7                     tblptrh         equ	4087
   101   000FF6                     tblptrl         equ	4086
   102   000FF8                     tblptru         equ	4088
   103   000FFD                     tosl            equ	4093
   104   000FE8                     wreg            equ	4072
   105   000F80                     PORTA           equ	3968	;# 
   106   000F81                     PORTB           equ	3969	;# 
   107   000F82                     PORTC           equ	3970	;# 
   108   000F83                     PORTD           equ	3971	;# 
   109   000F84                     PORTE           equ	3972	;# 
   110   000F89                     LATA            equ	3977	;# 
   111   000F8A                     LATB            equ	3978	;# 
   112   000F8B                     LATC            equ	3979	;# 
   113   000F8C                     LATD            equ	3980	;# 
   114   000F8D                     LATE            equ	3981	;# 
   115   000F92                     TRISA           equ	3986	;# 
   116   000F92                     DDRA            equ	3986	;# 
   117   000F93                     TRISB           equ	3987	;# 
   118   000F93                     DDRB            equ	3987	;# 
   119   000F94                     TRISC           equ	3988	;# 
   120   000F94                     DDRC            equ	3988	;# 
   121   000F95                     TRISD           equ	3989	;# 
   122   000F95                     DDRD            equ	3989	;# 
   123   000F96                     TRISE           equ	3990	;# 
   124   000F96                     DDRE            equ	3990	;# 
   125   000F9B                     OSCTUNE         equ	3995	;# 
   126   000F9D                     PIE1            equ	3997	;# 
   127   000F9E                     PIR1            equ	3998	;# 
   128   000F9F                     IPR1            equ	3999	;# 
   129   000FA0                     PIE2            equ	4000	;# 
   130   000FA1                     PIR2            equ	4001	;# 
   131   000FA2                     IPR2            equ	4002	;# 
   132   000FA6                     EECON1          equ	4006	;# 
   133   000FA7                     EECON2          equ	4007	;# 
   134   000FA8                     EEDATA          equ	4008	;# 
   135   000FA9                     EEADR           equ	4009	;# 
   136   000FAB                     RCSTA           equ	4011	;# 
   137   000FAB                     RCSTA1          equ	4011	;# 
   138   000FAC                     TXSTA           equ	4012	;# 
   139   000FAC                     TXSTA1          equ	4012	;# 
   140   000FAD                     TXREG           equ	4013	;# 
   141   000FAD                     TXREG1          equ	4013	;# 
   142   000FAE                     RCREG           equ	4014	;# 
   143   000FAE                     RCREG1          equ	4014	;# 
   144   000FAF                     SPBRG           equ	4015	;# 
   145   000FAF                     SPBRG1          equ	4015	;# 
   146   000FB0                     SPBRGH          equ	4016	;# 
   147   000FB1                     T3CON           equ	4017	;# 
   148   000FB2                     TMR3            equ	4018	;# 
   149   000FB2                     TMR3L           equ	4018	;# 
   150   000FB3                     TMR3H           equ	4019	;# 
   151   000FB4                     CMCON           equ	4020	;# 
   152   000FB5                     CVRCON          equ	4021	;# 
   153   000FB6                     ECCP1AS         equ	4022	;# 
   154   000FB7                     ECCP1DEL        equ	4023	;# 
   155   000FB7                     PWM1CON         equ	4023	;# 
   156   000FB8                     BAUDCON         equ	4024	;# 
   157   000FB8                     BAUDCTL         equ	4024	;# 
   158   000FBA                     CCP2CON         equ	4026	;# 
   159   000FBB                     CCPR2           equ	4027	;# 
   160   000FBB                     CCPR2L          equ	4027	;# 
   161   000FBC                     CCPR2H          equ	4028	;# 
   162   000FBD                     CCP1CON         equ	4029	;# 
   163   000FBD                     ECCP1CON        equ	4029	;# 
   164   000FBE                     CCPR1           equ	4030	;# 
   165   000FBE                     CCPR1L          equ	4030	;# 
   166   000FBF                     CCPR1H          equ	4031	;# 
   167   000FC0                     ADCON2          equ	4032	;# 
   168   000FC1                     ADCON1          equ	4033	;# 
   169   000FC2                     ADCON0          equ	4034	;# 
   170   000FC3                     ADRES           equ	4035	;# 
   171   000FC3                     ADRESL          equ	4035	;# 
   172   000FC4                     ADRESH          equ	4036	;# 
   173   000FC5                     SSPCON2         equ	4037	;# 
   174   000FC6                     SSPCON1         equ	4038	;# 
   175   000FC7                     SSPSTAT         equ	4039	;# 
   176   000FC8                     SSPADD          equ	4040	;# 
   177   000FC9                     SSPBUF          equ	4041	;# 
   178   000FCA                     T2CON           equ	4042	;# 
   179   000FCB                     PR2             equ	4043	;# 
   180   000FCB                     MEMCON          equ	4043	;# 
   181   000FCC                     TMR2            equ	4044	;# 
   182   000FCD                     T1CON           equ	4045	;# 
   183   000FCE                     TMR1            equ	4046	;# 
   184   000FCE                     TMR1L           equ	4046	;# 
   185   000FCF                     TMR1H           equ	4047	;# 
   186   000FD0                     RCON            equ	4048	;# 
   187   000FD1                     WDTCON          equ	4049	;# 
   188   000FD2                     HLVDCON         equ	4050	;# 
   189   000FD2                     LVDCON          equ	4050	;# 
   190   000FD3                     OSCCON          equ	4051	;# 
   191   000FD5                     T0CON           equ	4053	;# 
   192   000FD6                     TMR0            equ	4054	;# 
   193   000FD6                     TMR0L           equ	4054	;# 
   194   000FD7                     TMR0H           equ	4055	;# 
   195   000FD8                     STATUS          equ	4056	;# 
   196   000FD9                     FSR2            equ	4057	;# 
   197   000FD9                     FSR2L           equ	4057	;# 
   198   000FDA                     FSR2H           equ	4058	;# 
   199   000FDB                     PLUSW2          equ	4059	;# 
   200   000FDC                     PREINC2         equ	4060	;# 
   201   000FDD                     POSTDEC2        equ	4061	;# 
   202   000FDE                     POSTINC2        equ	4062	;# 
   203   000FDF                     INDF2           equ	4063	;# 
   204   000FE0                     BSR             equ	4064	;# 
   205   000FE1                     FSR1            equ	4065	;# 
   206   000FE1                     FSR1L           equ	4065	;# 
   207   000FE2                     FSR1H           equ	4066	;# 
   208   000FE3                     PLUSW1          equ	4067	;# 
   209   000FE4                     PREINC1         equ	4068	;# 
   210   000FE5                     POSTDEC1        equ	4069	;# 
   211   000FE6                     POSTINC1        equ	4070	;# 
   212   000FE7                     INDF1           equ	4071	;# 
   213   000FE8                     WREG            equ	4072	;# 
   214   000FE9                     FSR0            equ	4073	;# 
   215   000FE9                     FSR0L           equ	4073	;# 
   216   000FEA                     FSR0H           equ	4074	;# 
   217   000FEB                     PLUSW0          equ	4075	;# 
   218   000FEC                     PREINC0         equ	4076	;# 
   219   000FED                     POSTDEC0        equ	4077	;# 
   220   000FEE                     POSTINC0        equ	4078	;# 
   221   000FEF                     INDF0           equ	4079	;# 
   222   000FF0                     INTCON3         equ	4080	;# 
   223   000FF1                     INTCON2         equ	4081	;# 
   224   000FF2                     INTCON          equ	4082	;# 
   225   000FF3                     PROD            equ	4083	;# 
   226   000FF3                     PRODL           equ	4083	;# 
   227   000FF4                     PRODH           equ	4084	;# 
   228   000FF5                     TABLAT          equ	4085	;# 
   229   000FF6                     TBLPTR          equ	4086	;# 
   230   000FF6                     TBLPTRL         equ	4086	;# 
   231   000FF7                     TBLPTRH         equ	4087	;# 
   232   000FF8                     TBLPTRU         equ	4088	;# 
   233   000FF9                     PCLAT           equ	4089	;# 
   234   000FF9                     PC              equ	4089	;# 
   235   000FF9                     PCL             equ	4089	;# 
   236   000FFA                     PCLATH          equ	4090	;# 
   237   000FFB                     PCLATU          equ	4091	;# 
   238   000FFC                     STKPTR          equ	4092	;# 
   239   000FFD                     TOS             equ	4093	;# 
   240   000FFD                     TOSL            equ	4093	;# 
   241   000FFE                     TOSH            equ	4094	;# 
   242   000FFF                     TOSU            equ	4095	;# 
   243   000F80                     PORTA           equ	3968	;# 
   244   000F81                     PORTB           equ	3969	;# 
   245   000F82                     PORTC           equ	3970	;# 
   246   000F83                     PORTD           equ	3971	;# 
   247   000F84                     PORTE           equ	3972	;# 
   248   000F89                     LATA            equ	3977	;# 
   249   000F8A                     LATB            equ	3978	;# 
   250   000F8B                     LATC            equ	3979	;# 
   251   000F8C                     LATD            equ	3980	;# 
   252   000F8D                     LATE            equ	3981	;# 
   253   000F92                     TRISA           equ	3986	;# 
   254   000F92                     DDRA            equ	3986	;# 
   255   000F93                     TRISB           equ	3987	;# 
   256   000F93                     DDRB            equ	3987	;# 
   257   000F94                     TRISC           equ	3988	;# 
   258   000F94                     DDRC            equ	3988	;# 
   259   000F95                     TRISD           equ	3989	;# 
   260   000F95                     DDRD            equ	3989	;# 
   261   000F96                     TRISE           equ	3990	;# 
   262   000F96                     DDRE            equ	3990	;# 
   263   000F9B                     OSCTUNE         equ	3995	;# 
   264   000F9D                     PIE1            equ	3997	;# 
   265   000F9E                     PIR1            equ	3998	;# 
   266   000F9F                     IPR1            equ	3999	;# 
   267   000FA0                     PIE2            equ	4000	;# 
   268   000FA1                     PIR2            equ	4001	;# 
   269   000FA2                     IPR2            equ	4002	;# 
   270   000FA6                     EECON1          equ	4006	;# 
   271   000FA7                     EECON2          equ	4007	;# 
   272   000FA8                     EEDATA          equ	4008	;# 
   273   000FA9                     EEADR           equ	4009	;# 
   274   000FAB                     RCSTA           equ	4011	;# 
   275   000FAB                     RCSTA1          equ	4011	;# 
   276   000FAC                     TXSTA           equ	4012	;# 
   277   000FAC                     TXSTA1          equ	4012	;# 
   278   000FAD                     TXREG           equ	4013	;# 
   279   000FAD                     TXREG1          equ	4013	;# 
   280   000FAE                     RCREG           equ	4014	;# 
   281   000FAE                     RCREG1          equ	4014	;# 
   282   000FAF                     SPBRG           equ	4015	;# 
   283   000FAF                     SPBRG1          equ	4015	;# 
   284   000FB0                     SPBRGH          equ	4016	;# 
   285   000FB1                     T3CON           equ	4017	;# 
   286   000FB2                     TMR3            equ	4018	;# 
   287   000FB2                     TMR3L           equ	4018	;# 
   288   000FB3                     TMR3H           equ	4019	;# 
   289   000FB4                     CMCON           equ	4020	;# 
   290   000FB5                     CVRCON          equ	4021	;# 
   291   000FB6                     ECCP1AS         equ	4022	;# 
   292   000FB7                     ECCP1DEL        equ	4023	;# 
   293   000FB7                     PWM1CON         equ	4023	;# 
   294   000FB8                     BAUDCON         equ	4024	;# 
   295   000FB8                     BAUDCTL         equ	4024	;# 
   296   000FBA                     CCP2CON         equ	4026	;# 
   297   000FBB                     CCPR2           equ	4027	;# 
   298   000FBB                     CCPR2L          equ	4027	;# 
   299   000FBC                     CCPR2H          equ	4028	;# 
   300   000FBD                     CCP1CON         equ	4029	;# 
   301   000FBD                     ECCP1CON        equ	4029	;# 
   302   000FBE                     CCPR1           equ	4030	;# 
   303   000FBE                     CCPR1L          equ	4030	;# 
   304   000FBF                     CCPR1H          equ	4031	;# 
   305   000FC0                     ADCON2          equ	4032	;# 
   306   000FC1                     ADCON1          equ	4033	;# 
   307   000FC2                     ADCON0          equ	4034	;# 
   308   000FC3                     ADRES           equ	4035	;# 
   309   000FC3                     ADRESL          equ	4035	;# 
   310   000FC4                     ADRESH          equ	4036	;# 
   311   000FC5                     SSPCON2         equ	4037	;# 
   312   000FC6                     SSPCON1         equ	4038	;# 
   313   000FC7                     SSPSTAT         equ	4039	;# 
   314   000FC8                     SSPADD          equ	4040	;# 
   315   000FC9                     SSPBUF          equ	4041	;# 
   316   000FCA                     T2CON           equ	4042	;# 
   317   000FCB                     PR2             equ	4043	;# 
   318   000FCB                     MEMCON          equ	4043	;# 
   319   000FCC                     TMR2            equ	4044	;# 
   320   000FCD                     T1CON           equ	4045	;# 
   321   000FCE                     TMR1            equ	4046	;# 
   322   000FCE                     TMR1L           equ	4046	;# 
   323   000FCF                     TMR1H           equ	4047	;# 
   324   000FD0                     RCON            equ	4048	;# 
   325   000FD1                     WDTCON          equ	4049	;# 
   326   000FD2                     HLVDCON         equ	4050	;# 
   327   000FD2                     LVDCON          equ	4050	;# 
   328   000FD3                     OSCCON          equ	4051	;# 
   329   000FD5                     T0CON           equ	4053	;# 
   330   000FD6                     TMR0            equ	4054	;# 
   331   000FD6                     TMR0L           equ	4054	;# 
   332   000FD7                     TMR0H           equ	4055	;# 
   333   000FD8                     STATUS          equ	4056	;# 
   334   000FD9                     FSR2            equ	4057	;# 
   335   000FD9                     FSR2L           equ	4057	;# 
   336   000FDA                     FSR2H           equ	4058	;# 
   337   000FDB                     PLUSW2          equ	4059	;# 
   338   000FDC                     PREINC2         equ	4060	;# 
   339   000FDD                     POSTDEC2        equ	4061	;# 
   340   000FDE                     POSTINC2        equ	4062	;# 
   341   000FDF                     INDF2           equ	4063	;# 
   342   000FE0                     BSR             equ	4064	;# 
   343   000FE1                     FSR1            equ	4065	;# 
   344   000FE1                     FSR1L           equ	4065	;# 
   345   000FE2                     FSR1H           equ	4066	;# 
   346   000FE3                     PLUSW1          equ	4067	;# 
   347   000FE4                     PREINC1         equ	4068	;# 
   348   000FE5                     POSTDEC1        equ	4069	;# 
   349   000FE6                     POSTINC1        equ	4070	;# 
   350   000FE7                     INDF1           equ	4071	;# 
   351   000FE8                     WREG            equ	4072	;# 
   352   000FE9                     FSR0            equ	4073	;# 
   353   000FE9                     FSR0L           equ	4073	;# 
   354   000FEA                     FSR0H           equ	4074	;# 
   355   000FEB                     PLUSW0          equ	4075	;# 
   356   000FEC                     PREINC0         equ	4076	;# 
   357   000FED                     POSTDEC0        equ	4077	;# 
   358   000FEE                     POSTINC0        equ	4078	;# 
   359   000FEF                     INDF0           equ	4079	;# 
   360   000FF0                     INTCON3         equ	4080	;# 
   361   000FF1                     INTCON2         equ	4081	;# 
   362   000FF2                     INTCON          equ	4082	;# 
   363   000FF3                     PROD            equ	4083	;# 
   364   000FF3                     PRODL           equ	4083	;# 
   365   000FF4                     PRODH           equ	4084	;# 
   366   000FF5                     TABLAT          equ	4085	;# 
   367   000FF6                     TBLPTR          equ	4086	;# 
   368   000FF6                     TBLPTRL         equ	4086	;# 
   369   000FF7                     TBLPTRH         equ	4087	;# 
   370   000FF8                     TBLPTRU         equ	4088	;# 
   371   000FF9                     PCLAT           equ	4089	;# 
   372   000FF9                     PC              equ	4089	;# 
   373   000FF9                     PCL             equ	4089	;# 
   374   000FFA                     PCLATH          equ	4090	;# 
   375   000FFB                     PCLATU          equ	4091	;# 
   376   000FFC                     STKPTR          equ	4092	;# 
   377   000FFD                     TOS             equ	4093	;# 
   378   000FFD                     TOSL            equ	4093	;# 
   379   000FFE                     TOSH            equ	4094	;# 
   380   000FFF                     TOSU            equ	4095	;# 
   381   000F80                     PORTA           equ	3968	;# 
   382   000F81                     PORTB           equ	3969	;# 
   383   000F82                     PORTC           equ	3970	;# 
   384   000F83                     PORTD           equ	3971	;# 
   385   000F84                     PORTE           equ	3972	;# 
   386   000F89                     LATA            equ	3977	;# 
   387   000F8A                     LATB            equ	3978	;# 
   388   000F8B                     LATC            equ	3979	;# 
   389   000F8C                     LATD            equ	3980	;# 
   390   000F8D                     LATE            equ	3981	;# 
   391   000F92                     TRISA           equ	3986	;# 
   392   000F92                     DDRA            equ	3986	;# 
   393   000F93                     TRISB           equ	3987	;# 
   394   000F93                     DDRB            equ	3987	;# 
   395   000F94                     TRISC           equ	3988	;# 
   396   000F94                     DDRC            equ	3988	;# 
   397   000F95                     TRISD           equ	3989	;# 
   398   000F95                     DDRD            equ	3989	;# 
   399   000F96                     TRISE           equ	3990	;# 
   400   000F96                     DDRE            equ	3990	;# 
   401   000F9B                     OSCTUNE         equ	3995	;# 
   402   000F9D                     PIE1            equ	3997	;# 
   403   000F9E                     PIR1            equ	3998	;# 
   404   000F9F                     IPR1            equ	3999	;# 
   405   000FA0                     PIE2            equ	4000	;# 
   406   000FA1                     PIR2            equ	4001	;# 
   407   000FA2                     IPR2            equ	4002	;# 
   408   000FA6                     EECON1          equ	4006	;# 
   409   000FA7                     EECON2          equ	4007	;# 
   410   000FA8                     EEDATA          equ	4008	;# 
   411   000FA9                     EEADR           equ	4009	;# 
   412   000FAB                     RCSTA           equ	4011	;# 
   413   000FAB                     RCSTA1          equ	4011	;# 
   414   000FAC                     TXSTA           equ	4012	;# 
   415   000FAC                     TXSTA1          equ	4012	;# 
   416   000FAD                     TXREG           equ	4013	;# 
   417   000FAD                     TXREG1          equ	4013	;# 
   418   000FAE                     RCREG           equ	4014	;# 
   419   000FAE                     RCREG1          equ	4014	;# 
   420   000FAF                     SPBRG           equ	4015	;# 
   421   000FAF                     SPBRG1          equ	4015	;# 
   422   000FB0                     SPBRGH          equ	4016	;# 
   423   000FB1                     T3CON           equ	4017	;# 
   424   000FB2                     TMR3            equ	4018	;# 
   425   000FB2                     TMR3L           equ	4018	;# 
   426   000FB3                     TMR3H           equ	4019	;# 
   427   000FB4                     CMCON           equ	4020	;# 
   428   000FB5                     CVRCON          equ	4021	;# 
   429   000FB6                     ECCP1AS         equ	4022	;# 
   430   000FB7                     ECCP1DEL        equ	4023	;# 
   431   000FB7                     PWM1CON         equ	4023	;# 
   432   000FB8                     BAUDCON         equ	4024	;# 
   433   000FB8                     BAUDCTL         equ	4024	;# 
   434   000FBA                     CCP2CON         equ	4026	;# 
   435   000FBB                     CCPR2           equ	4027	;# 
   436   000FBB                     CCPR2L          equ	4027	;# 
   437   000FBC                     CCPR2H          equ	4028	;# 
   438   000FBD                     CCP1CON         equ	4029	;# 
   439   000FBD                     ECCP1CON        equ	4029	;# 
   440   000FBE                     CCPR1           equ	4030	;# 
   441   000FBE                     CCPR1L          equ	4030	;# 
   442   000FBF                     CCPR1H          equ	4031	;# 
   443   000FC0                     ADCON2          equ	4032	;# 
   444   000FC1                     ADCON1          equ	4033	;# 
   445   000FC2                     ADCON0          equ	4034	;# 
   446   000FC3                     ADRES           equ	4035	;# 
   447   000FC3                     ADRESL          equ	4035	;# 
   448   000FC4                     ADRESH          equ	4036	;# 
   449   000FC5                     SSPCON2         equ	4037	;# 
   450   000FC6                     SSPCON1         equ	4038	;# 
   451   000FC7                     SSPSTAT         equ	4039	;# 
   452   000FC8                     SSPADD          equ	4040	;# 
   453   000FC9                     SSPBUF          equ	4041	;# 
   454   000FCA                     T2CON           equ	4042	;# 
   455   000FCB                     PR2             equ	4043	;# 
   456   000FCB                     MEMCON          equ	4043	;# 
   457   000FCC                     TMR2            equ	4044	;# 
   458   000FCD                     T1CON           equ	4045	;# 
   459   000FCE                     TMR1            equ	4046	;# 
   460   000FCE                     TMR1L           equ	4046	;# 
   461   000FCF                     TMR1H           equ	4047	;# 
   462   000FD0                     RCON            equ	4048	;# 
   463   000FD1                     WDTCON          equ	4049	;# 
   464   000FD2                     HLVDCON         equ	4050	;# 
   465   000FD2                     LVDCON          equ	4050	;# 
   466   000FD3                     OSCCON          equ	4051	;# 
   467   000FD5                     T0CON           equ	4053	;# 
   468   000FD6                     TMR0            equ	4054	;# 
   469   000FD6                     TMR0L           equ	4054	;# 
   470   000FD7                     TMR0H           equ	4055	;# 
   471   000FD8                     STATUS          equ	4056	;# 
   472   000FD9                     FSR2            equ	4057	;# 
   473   000FD9                     FSR2L           equ	4057	;# 
   474   000FDA                     FSR2H           equ	4058	;# 
   475   000FDB                     PLUSW2          equ	4059	;# 
   476   000FDC                     PREINC2         equ	4060	;# 
   477   000FDD                     POSTDEC2        equ	4061	;# 
   478   000FDE                     POSTINC2        equ	4062	;# 
   479   000FDF                     INDF2           equ	4063	;# 
   480   000FE0                     BSR             equ	4064	;# 
   481   000FE1                     FSR1            equ	4065	;# 
   482   000FE1                     FSR1L           equ	4065	;# 
   483   000FE2                     FSR1H           equ	4066	;# 
   484   000FE3                     PLUSW1          equ	4067	;# 
   485   000FE4                     PREINC1         equ	4068	;# 
   486   000FE5                     POSTDEC1        equ	4069	;# 
   487   000FE6                     POSTINC1        equ	4070	;# 
   488   000FE7                     INDF1           equ	4071	;# 
   489   000FE8                     WREG            equ	4072	;# 
   490   000FE9                     FSR0            equ	4073	;# 
   491   000FE9                     FSR0L           equ	4073	;# 
   492   000FEA                     FSR0H           equ	4074	;# 
   493   000FEB                     PLUSW0          equ	4075	;# 
   494   000FEC                     PREINC0         equ	4076	;# 
   495   000FED                     POSTDEC0        equ	4077	;# 
   496   000FEE                     POSTINC0        equ	4078	;# 
   497   000FEF                     INDF0           equ	4079	;# 
   498   000FF0                     INTCON3         equ	4080	;# 
   499   000FF1                     INTCON2         equ	4081	;# 
   500   000FF2                     INTCON          equ	4082	;# 
   501   000FF3                     PROD            equ	4083	;# 
   502   000FF3                     PRODL           equ	4083	;# 
   503   000FF4                     PRODH           equ	4084	;# 
   504   000FF5                     TABLAT          equ	4085	;# 
   505   000FF6                     TBLPTR          equ	4086	;# 
   506   000FF6                     TBLPTRL         equ	4086	;# 
   507   000FF7                     TBLPTRH         equ	4087	;# 
   508   000FF8                     TBLPTRU         equ	4088	;# 
   509   000FF9                     PCLAT           equ	4089	;# 
   510   000FF9                     PC              equ	4089	;# 
   511   000FF9                     PCL             equ	4089	;# 
   512   000FFA                     PCLATH          equ	4090	;# 
   513   000FFB                     PCLATU          equ	4091	;# 
   514   000FFC                     STKPTR          equ	4092	;# 
   515   000FFD                     TOS             equ	4093	;# 
   516   000FFD                     TOSL            equ	4093	;# 
   517   000FFE                     TOSH            equ	4094	;# 
   518   000FFF                     TOSU            equ	4095	;# 
   519   000F80                     PORTA           equ	3968	;# 
   520   000F81                     PORTB           equ	3969	;# 
   521   000F82                     PORTC           equ	3970	;# 
   522   000F83                     PORTD           equ	3971	;# 
   523   000F84                     PORTE           equ	3972	;# 
   524   000F89                     LATA            equ	3977	;# 
   525   000F8A                     LATB            equ	3978	;# 
   526   000F8B                     LATC            equ	3979	;# 
   527   000F8C                     LATD            equ	3980	;# 
   528   000F8D                     LATE            equ	3981	;# 
   529   000F92                     TRISA           equ	3986	;# 
   530   000F92                     DDRA            equ	3986	;# 
   531   000F93                     TRISB           equ	3987	;# 
   532   000F93                     DDRB            equ	3987	;# 
   533   000F94                     TRISC           equ	3988	;# 
   534   000F94                     DDRC            equ	3988	;# 
   535   000F95                     TRISD           equ	3989	;# 
   536   000F95                     DDRD            equ	3989	;# 
   537   000F96                     TRISE           equ	3990	;# 
   538   000F96                     DDRE            equ	3990	;# 
   539   000F9B                     OSCTUNE         equ	3995	;# 
   540   000F9D                     PIE1            equ	3997	;# 
   541   000F9E                     PIR1            equ	3998	;# 
   542   000F9F                     IPR1            equ	3999	;# 
   543   000FA0                     PIE2            equ	4000	;# 
   544   000FA1                     PIR2            equ	4001	;# 
   545   000FA2                     IPR2            equ	4002	;# 
   546   000FA6                     EECON1          equ	4006	;# 
   547   000FA7                     EECON2          equ	4007	;# 
   548   000FA8                     EEDATA          equ	4008	;# 
   549   000FA9                     EEADR           equ	4009	;# 
   550   000FAB                     RCSTA           equ	4011	;# 
   551   000FAB                     RCSTA1          equ	4011	;# 
   552   000FAC                     TXSTA           equ	4012	;# 
   553   000FAC                     TXSTA1          equ	4012	;# 
   554   000FAD                     TXREG           equ	4013	;# 
   555   000FAD                     TXREG1          equ	4013	;# 
   556   000FAE                     RCREG           equ	4014	;# 
   557   000FAE                     RCREG1          equ	4014	;# 
   558   000FAF                     SPBRG           equ	4015	;# 
   559   000FAF                     SPBRG1          equ	4015	;# 
   560   000FB0                     SPBRGH          equ	4016	;# 
   561   000FB1                     T3CON           equ	4017	;# 
   562   000FB2                     TMR3            equ	4018	;# 
   563   000FB2                     TMR3L           equ	4018	;# 
   564   000FB3                     TMR3H           equ	4019	;# 
   565   000FB4                     CMCON           equ	4020	;# 
   566   000FB5                     CVRCON          equ	4021	;# 
   567   000FB6                     ECCP1AS         equ	4022	;# 
   568   000FB7                     ECCP1DEL        equ	4023	;# 
   569   000FB7                     PWM1CON         equ	4023	;# 
   570   000FB8                     BAUDCON         equ	4024	;# 
   571   000FB8                     BAUDCTL         equ	4024	;# 
   572   000FBA                     CCP2CON         equ	4026	;# 
   573   000FBB                     CCPR2           equ	4027	;# 
   574   000FBB                     CCPR2L          equ	4027	;# 
   575   000FBC                     CCPR2H          equ	4028	;# 
   576   000FBD                     CCP1CON         equ	4029	;# 
   577   000FBD                     ECCP1CON        equ	4029	;# 
   578   000FBE                     CCPR1           equ	4030	;# 
   579   000FBE                     CCPR1L          equ	4030	;# 
   580   000FBF                     CCPR1H          equ	4031	;# 
   581   000FC0                     ADCON2          equ	4032	;# 
   582   000FC1                     ADCON1          equ	4033	;# 
   583   000FC2                     ADCON0          equ	4034	;# 
   584   000FC3                     ADRES           equ	4035	;# 
   585   000FC3                     ADRESL          equ	4035	;# 
   586   000FC4                     ADRESH          equ	4036	;# 
   587   000FC5                     SSPCON2         equ	4037	;# 
   588   000FC6                     SSPCON1         equ	4038	;# 
   589   000FC7                     SSPSTAT         equ	4039	;# 
   590   000FC8                     SSPADD          equ	4040	;# 
   591   000FC9                     SSPBUF          equ	4041	;# 
   592   000FCA                     T2CON           equ	4042	;# 
   593   000FCB                     PR2             equ	4043	;# 
   594   000FCB                     MEMCON          equ	4043	;# 
   595   000FCC                     TMR2            equ	4044	;# 
   596   000FCD                     T1CON           equ	4045	;# 
   597   000FCE                     TMR1            equ	4046	;# 
   598   000FCE                     TMR1L           equ	4046	;# 
   599   000FCF                     TMR1H           equ	4047	;# 
   600   000FD0                     RCON            equ	4048	;# 
   601   000FD1                     WDTCON          equ	4049	;# 
   602   000FD2                     HLVDCON         equ	4050	;# 
   603   000FD2                     LVDCON          equ	4050	;# 
   604   000FD3                     OSCCON          equ	4051	;# 
   605   000FD5                     T0CON           equ	4053	;# 
   606   000FD6                     TMR0            equ	4054	;# 
   607   000FD6                     TMR0L           equ	4054	;# 
   608   000FD7                     TMR0H           equ	4055	;# 
   609   000FD8                     STATUS          equ	4056	;# 
   610   000FD9                     FSR2            equ	4057	;# 
   611   000FD9                     FSR2L           equ	4057	;# 
   612   000FDA                     FSR2H           equ	4058	;# 
   613   000FDB                     PLUSW2          equ	4059	;# 
   614   000FDC                     PREINC2         equ	4060	;# 
   615   000FDD                     POSTDEC2        equ	4061	;# 
   616   000FDE                     POSTINC2        equ	4062	;# 
   617   000FDF                     INDF2           equ	4063	;# 
   618   000FE0                     BSR             equ	4064	;# 
   619   000FE1                     FSR1            equ	4065	;# 
   620   000FE1                     FSR1L           equ	4065	;# 
   621   000FE2                     FSR1H           equ	4066	;# 
   622   000FE3                     PLUSW1          equ	4067	;# 
   623   000FE4                     PREINC1         equ	4068	;# 
   624   000FE5                     POSTDEC1        equ	4069	;# 
   625   000FE6                     POSTINC1        equ	4070	;# 
   626   000FE7                     INDF1           equ	4071	;# 
   627   000FE8                     WREG            equ	4072	;# 
   628   000FE9                     FSR0            equ	4073	;# 
   629   000FE9                     FSR0L           equ	4073	;# 
   630   000FEA                     FSR0H           equ	4074	;# 
   631   000FEB                     PLUSW0          equ	4075	;# 
   632   000FEC                     PREINC0         equ	4076	;# 
   633   000FED                     POSTDEC0        equ	4077	;# 
   634   000FEE                     POSTINC0        equ	4078	;# 
   635   000FEF                     INDF0           equ	4079	;# 
   636   000FF0                     INTCON3         equ	4080	;# 
   637   000FF1                     INTCON2         equ	4081	;# 
   638   000FF2                     INTCON          equ	4082	;# 
   639   000FF3                     PROD            equ	4083	;# 
   640   000FF3                     PRODL           equ	4083	;# 
   641   000FF4                     PRODH           equ	4084	;# 
   642   000FF5                     TABLAT          equ	4085	;# 
   643   000FF6                     TBLPTR          equ	4086	;# 
   644   000FF6                     TBLPTRL         equ	4086	;# 
   645   000FF7                     TBLPTRH         equ	4087	;# 
   646   000FF8                     TBLPTRU         equ	4088	;# 
   647   000FF9                     PCLAT           equ	4089	;# 
   648   000FF9                     PC              equ	4089	;# 
   649   000FF9                     PCL             equ	4089	;# 
   650   000FFA                     PCLATH          equ	4090	;# 
   651   000FFB                     PCLATU          equ	4091	;# 
   652   000FFC                     STKPTR          equ	4092	;# 
   653   000FFD                     TOS             equ	4093	;# 
   654   000FFD                     TOSL            equ	4093	;# 
   655   000FFE                     TOSH            equ	4094	;# 
   656   000FFF                     TOSU            equ	4095	;# 
   657                           
   658                           	psect	smallconst
   659   000200                     __psmallconst:
   660                           	callstack 0
   661   000200  00                 	db	0
   662   000201                     GetTecla@F2717:
   663                           	callstack 0
   664   000201  01                 	db	1
   665   000202  02                 	db	2
   666   000203  03                 	db	3
   667   000204  04                 	db	4
   668   000205  05                 	db	5
   669   000206  06                 	db	6
   670   000207  07                 	db	7
   671   000208  08                 	db	8
   672   000209  09                 	db	9
   673   00020A  0A                 	db	10
   674   00020B  00                 	db	0
   675   00020C  0B                 	db	11
   676   00020D                     __end_ofGetTecla@F2717:
   677                           	callstack 0
   678   007F92                     _TMR0IF         set	32658
   679   000FD6                     _TMR0           set	4054
   680   000F82                     _PORTCbits      set	3970
   681   000F8B                     _LATCbits       set	3979
   682   000F94                     _TRISCbits      set	3988
   683   000F80                     _PORTA          set	3968
   684   000FD5                     _T0CON          set	4053
   685   000F8B                     _LATC           set	3979
   686   000F8C                     _LATD           set	3980
   687   000F95                     _TRISD          set	3989
   688   000F8A                     _LATB           set	3978
   689   000F93                     _TRISB          set	3987
   690   000FF1                     _INTCON2bits    set	4081
   691   000F89                     _LATAbits       set	3977
   692   000F92                     _TRISAbits      set	3986
   693   000F92                     _TRISA          set	3986
   694   000FC1                     _ADCON1         set	4033
   695   000FF2                     _INTCONbits     set	4082
   696   00020D  00                 	db	0	; dummy byte at the end
   697   000200                     __smallconst    set	__psmallconst
   698   000200                     __mediumconst   set	__psmallconst
   699   000002                     __activetblptr  equ	2
   700                           
   701                           ; #config settings
   702                           
   703                           	psect	cinit
   704   000610                     __pcinit:
   705                           	callstack 0
   706   000610                     start_initialization:
   707                           	callstack 0
   708   000610                     __initialization:
   709                           	callstack 0
   710                           
   711                           ; Clear objects allocated to COMRAM (29 bytes)
   712   000610  EE00  F001         	lfsr	0,__pbssCOMRAM
   713   000614  0E1D               	movlw	29
   714   000616                     clear_0:
   715   000616  6AEE               	clrf	postinc0,c
   716   000618  06E8               	decf	wreg,f,c
   717   00061A  E1FD               	bnz	clear_0
   718   00061C                     end_of_initialization:
   719                           	callstack 0
   720   00061C                     __end_of__initialization:
   721                           	callstack 0
   722   00061C  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   723   00061E  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   724   000620  0E00               	movlw	low (__Lmediumconst shr (0+16))
   725   000622  6EF8               	movwf	tblptru,c
   726   000624  0100               	movlb	0
   727   000626  EFFA  F002         	goto	_main	;jump to C main() function
   728                           
   729                           	psect	bssCOMRAM
   730   000001                     __pbssCOMRAM:
   731                           	callstack 0
   732   000001                     _Timers:
   733                           	callstack 0
   734   000001                     	ds	20
   735   000015                     _Tics:
   736                           	callstack 0
   737   000015                     	ds	4
   738   000019                     motorTeclado@state:
   739                           	callstack 0
   740   000019                     	ds	1
   741   00001A                     _tecla:
   742                           	callstack 0
   743   00001A                     	ds	1
   744   00001B                     _Columnas:
   745                           	callstack 0
   746   00001B                     	ds	1
   747   00001C                     _Filas:
   748                           	callstack 0
   749   00001C                     	ds	1
   750   00001D                     _timer:
   751                           	callstack 0
   752   00001D                     	ds	1
   753                           
   754                           	psect	cstackCOMRAM
   755   00001E                     __pcstackCOMRAM:
   756                           	callstack 0
   757   00001E                     ??_LowRSI:
   758                           
   759                           ; 1 bytes @ 0x0
   760   00001E                     	ds	1
   761   00001F                     ?_TI_GetTics:
   762                           	callstack 0
   763   00001F                     TI_Init@counter:
   764                           	callstack 0
   765   00001F                     TI_NewTimer@TimerHandle:
   766                           	callstack 0
   767   00001F                     TI_ResetTics@TimerHandle:
   768                           	callstack 0
   769   00001F                     ??_GetTecla:
   770   00001F                     
   771                           ; 1 bytes @ 0x1
   772   00001F                     	ds	1
   773   000020                     
   774                           ; 1 bytes @ 0x2
   775   000020                     	ds	1
   776   000021                     TI_NewTimer@Comptador:
   777                           	callstack 0
   778   000021                     GetTecla@keymap:
   779                           	callstack 0
   780                           
   781                           ; 12 bytes @ 0x3
   782   000021                     	ds	1
   783   000022                     
   784                           ; 1 bytes @ 0x4
   785   000022                     	ds	1
   786   000023                     ??_TI_GetTics:
   787                           
   788                           ; 1 bytes @ 0x5
   789   000023                     	ds	4
   790   000027                     TI_GetTics@CopiaTicsActual:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x9
   794   000027                     	ds	4
   795   00002B                     TI_GetTics@TimerHandle:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0xD
   799   00002B                     	ds	2
   800   00002D                     GetTecla@columna:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0xF
   804   00002D                     	ds	1
   805   00002E                     GetTecla@fila:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x10
   809   00002E                     	ds	1
   810   00002F                     ??_motorTeclado:
   811                           
   812                           ; 1 bytes @ 0x11
   813   00002F                     	ds	1
   814   000030                     
   815                           ; 1 bytes @ 0x12
   816 ;;
   817 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   818 ;;
   819 ;; *************** function _main *****************
   820 ;; Defined at:
   821 ;;		line 36 in file "main.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1
   835 ;;      Params:         0       0       0
   836 ;;      Locals:         0       0       0
   837 ;;      Temps:          0       0       0
   838 ;;      Totals:         0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels required when called: 5
   841 ;; This function calls:
   842 ;;		_InitPorts
   843 ;;		_TI_Init
   844 ;;		_initTeclado
   845 ;;		_motorTeclado
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text0
   852   0005F4                     __ptext0:
   853                           	callstack 0
   854   0005F4                     _main:
   855                           	callstack 26
   856   0005F4                     
   857                           ;main.c: 37:  TRISA |= 0x0F;
   858   0005F4  EC15  F003         	call	_InitPorts	;wreg free
   859   0005F8                     
   860                           ;main.c: 38:  TRISAbits.TRISA4 = 0;
   861   0005F8  ECCE  F002         	call	_TI_Init	;wreg free
   862   0005FC                     
   863                           ;main.c: 39:  LATAbits.LATA4 = 1;
   864   0005FC  EC39  F003         	call	_initTeclado	;wreg free
   865   000600                     
   866                           ;main.c: 42: 
   867   000600  8EF2               	bsf	242,7,c	;volatile
   868   000602                     
   869                           ;main.c: 43: 
   870   000602  8CF2               	bsf	242,6,c	;volatile
   871   000604                     l1670:
   872                           
   873                           ;main.c: 46: 
   874   000604  EC07  F001         	call	_motorTeclado	;wreg free
   875   000608  EF02  F003         	goto	l1670
   876   00060C  EF13  F000         	goto	start
   877   000610                     __end_of_main:
   878                           	callstack 0
   879                           
   880 ;; *************** function _motorTeclado *****************
   881 ;; Defined at:
   882 ;;		line 22 in file "TAD_TECLADO.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1
   896 ;;      Params:         0       0       0
   897 ;;      Locals:         0       0       0
   898 ;;      Temps:          1       0       0
   899 ;;      Totals:         1       0       0
   900 ;;Total ram usage:        1 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; Hardware stack levels required when called: 4
   903 ;; This function calls:
   904 ;;		_GetTecla
   905 ;;		_ReadFilas
   906 ;;		_TI_GetTics
   907 ;;		_TI_ResetTics
   908 ;;		_showTecla
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text1
   915   00020E                     __ptext1:
   916                           	callstack 0
   917   00020E                     _motorTeclado:
   918                           	callstack 26
   919   00020E                     
   920                           ;TAD_TECLADO.c: 23:  static char state = 0;;TAD_TECLADO.c: 24:  Filas = ReadFilas();
   921   00020E  EC44  F003         	call	_ReadFilas	;wreg free
   922   000212  6E1C               	movwf	_Filas^0,c
   923                           
   924                           ;TAD_TECLADO.c: 25:  switch(state) {
   925   000214  EFF6  F001         	goto	l1656
   926   000218                     l1566:
   927                           
   928                           ;TAD_TECLADO.c: 27:    if (Filas == 0x0) {
   929   000218  501C               	movf	_Filas^0,w,c
   930   00021A  A4D8               	btfss	status,2,c
   931   00021C  EF12  F001         	goto	u661
   932   000220  EF14  F001         	goto	u660
   933   000224                     u661:
   934   000224  EF1C  F001         	goto	l1572
   935   000228                     u660:
   936   000228                     
   937                           ;TAD_TECLADO.c: 28:     Columnas = (0x01);
   938   000228  0E01               	movlw	1
   939   00022A  6E1B               	movwf	_Columnas^0,c
   940   00022C                     
   941                           ;TAD_TECLADO.c: 29:     LATB = Columnas;
   942   00022C  C01B  FF8A         	movff	_Columnas,3978	;volatile
   943                           
   944                           ;TAD_TECLADO.c: 30:     state = 1;
   945   000230  0E01               	movlw	1
   946   000232  6E19               	movwf	motorTeclado@state^0,c
   947                           
   948                           ;TAD_TECLADO.c: 31:    }
   949   000234  EF11  F002         	goto	l1658
   950   000238                     l1572:
   951   000238  501C               	movf	_Filas^0,w,c
   952   00023A  B4D8               	btfsc	status,2,c
   953   00023C  EF22  F001         	goto	u671
   954   000240  EF24  F001         	goto	u670
   955   000244                     u671:
   956   000244  EF11  F002         	goto	l1658
   957   000248                     u670:
   958   000248                     
   959                           ;TAD_TECLADO.c: 33:     TI_ResetTics(timer);
   960   000248  501D               	movf	_timer^0,w,c
   961   00024A  ECE8  F002         	call	_TI_ResetTics
   962   00024E                     l1576:
   963                           
   964                           ;TAD_TECLADO.c: 34:     state = 3;
   965   00024E  0E03               	movlw	3
   966   000250  6E19               	movwf	motorTeclado@state^0,c
   967   000252  EF11  F002         	goto	l1658
   968   000256                     l1578:
   969                           
   970                           ;TAD_TECLADO.c: 38:    if (Filas == 0x0) {
   971   000256  501C               	movf	_Filas^0,w,c
   972   000258  A4D8               	btfss	status,2,c
   973   00025A  EF31  F001         	goto	u681
   974   00025E  EF33  F001         	goto	u680
   975   000262                     u681:
   976   000262  EF3B  F001         	goto	l1584
   977   000266                     u680:
   978   000266                     
   979                           ;TAD_TECLADO.c: 39:     Columnas = (0x02);
   980   000266  0E02               	movlw	2
   981   000268  6E1B               	movwf	_Columnas^0,c
   982   00026A                     
   983                           ;TAD_TECLADO.c: 40:     LATB = Columnas;
   984   00026A  C01B  FF8A         	movff	_Columnas,3978	;volatile
   985                           
   986                           ;TAD_TECLADO.c: 41:     state = 2;
   987   00026E  0E02               	movlw	2
   988   000270  6E19               	movwf	motorTeclado@state^0,c
   989                           
   990                           ;TAD_TECLADO.c: 42:    }
   991   000272  EF11  F002         	goto	l1658
   992   000276                     l1584:
   993   000276  501C               	movf	_Filas^0,w,c
   994   000278  B4D8               	btfsc	status,2,c
   995   00027A  EF41  F001         	goto	u691
   996   00027E  EF43  F001         	goto	u690
   997   000282                     u691:
   998   000282  EF11  F002         	goto	l1658
   999   000286                     u690:
  1000   000286                     
  1001                           ;TAD_TECLADO.c: 44:     TI_ResetTics(timer);
  1002   000286  501D               	movf	_timer^0,w,c
  1003   000288  ECE8  F002         	call	_TI_ResetTics
  1004   00028C  EF27  F001         	goto	l1576
  1005   000290                     l1590:
  1006                           
  1007                           ;TAD_TECLADO.c: 49:    if (Filas != 0x0) {
  1008   000290  501C               	movf	_Filas^0,w,c
  1009   000292  B4D8               	btfsc	status,2,c
  1010   000294  EF4E  F001         	goto	u701
  1011   000298  EF50  F001         	goto	u700
  1012   00029C                     u701:
  1013   00029C  EF55  F001         	goto	l1596
  1014   0002A0                     u700:
  1015   0002A0                     
  1016                           ;TAD_TECLADO.c: 50:     TI_ResetTics(timer);
  1017   0002A0  501D               	movf	_timer^0,w,c
  1018   0002A2  ECE8  F002         	call	_TI_ResetTics
  1019   0002A6  EF27  F001         	goto	l1576
  1020   0002AA                     l1596:
  1021   0002AA  501C               	movf	_Filas^0,w,c
  1022   0002AC  A4D8               	btfss	status,2,c
  1023   0002AE  EF5B  F001         	goto	u711
  1024   0002B2  EF5D  F001         	goto	u710
  1025   0002B6                     u711:
  1026   0002B6  EF11  F002         	goto	l1658
  1027   0002BA                     u710:
  1028   0002BA                     l1598:
  1029                           
  1030                           ;TAD_TECLADO.c: 54:     Columnas = (0x04);
  1031   0002BA  0E04               	movlw	4
  1032   0002BC  6E1B               	movwf	_Columnas^0,c
  1033   0002BE                     
  1034                           ;TAD_TECLADO.c: 55:     LATB = Columnas;
  1035   0002BE  C01B  FF8A         	movff	_Columnas,3978	;volatile
  1036   0002C2                     l1602:
  1037                           
  1038                           ;TAD_TECLADO.c: 56:     state = 0;
  1039   0002C2  6A19               	clrf	motorTeclado@state^0,c
  1040   0002C4  EF11  F002         	goto	l1658
  1041   0002C8                     l1604:
  1042                           
  1043                           ;TAD_TECLADO.c: 60:    tecla = GetTecla ();
  1044   0002C8  EC1B  F002         	call	_GetTecla	;wreg free
  1045   0002CC  6E1A               	movwf	_tecla^0,c
  1046   0002CE                     
  1047                           ;TAD_TECLADO.c: 61:    if (Filas == 0x0) {
  1048   0002CE  501C               	movf	_Filas^0,w,c
  1049   0002D0  A4D8               	btfss	status,2,c
  1050   0002D2  EF6D  F001         	goto	u721
  1051   0002D6  EF6F  F001         	goto	u720
  1052   0002DA                     u721:
  1053   0002DA  EF71  F001         	goto	l1614
  1054   0002DE                     u720:
  1055   0002DE  EF5D  F001         	goto	l1598
  1056   0002E2                     l1614:
  1057   0002E2  501C               	movf	_Filas^0,w,c
  1058   0002E4  B4D8               	btfsc	status,2,c
  1059   0002E6  EF77  F001         	goto	u731
  1060   0002EA  EF79  F001         	goto	u730
  1061   0002EE                     u731:
  1062   0002EE  EF9A  F001         	goto	l1626
  1063   0002F2                     u730:
  1064   0002F2  501D               	movf	_timer^0,w,c
  1065   0002F4  ECA8  F002         	call	_TI_GetTics
  1066   0002F8  5022               	movf	(?_TI_GetTics+3)^0,w,c
  1067   0002FA  1021               	iorwf	(?_TI_GetTics+2)^0,w,c
  1068   0002FC  1020               	iorwf	(?_TI_GetTics+1)^0,w,c
  1069   0002FE  E109               	bnz	u740
  1070   000300  0E09               	movlw	9
  1071   000302  5C1F               	subwf	?_TI_GetTics^0,w,c
  1072   000304  A0D8               	btfss	status,0,c
  1073   000306  EF87  F001         	goto	u741
  1074   00030A  EF89  F001         	goto	u740
  1075   00030E                     u741:
  1076   00030E  EF9A  F001         	goto	l1626
  1077   000312                     u740:
  1078   000312  0E0B               	movlw	11
  1079   000314  181A               	xorwf	_tecla^0,w,c
  1080   000316  B4D8               	btfsc	status,2,c
  1081   000318  EF90  F001         	goto	u751
  1082   00031C  EF92  F001         	goto	u750
  1083   000320                     u751:
  1084   000320  EF9A  F001         	goto	l1626
  1085   000324                     u750:
  1086   000324                     
  1087                           ;TAD_TECLADO.c: 67:     LATD = tecla;
  1088   000324  C01A  FF8C         	movff	_tecla,3980	;volatile
  1089   000328                     
  1090                           ;TAD_TECLADO.c: 68:     showTecla();
  1091   000328  EC41  F003         	call	_showTecla	;wreg free
  1092   00032C                     l1624:
  1093                           
  1094                           ;TAD_TECLADO.c: 69:     state = 5;
  1095   00032C  0E05               	movlw	5
  1096   00032E  6E19               	movwf	motorTeclado@state^0,c
  1097                           
  1098                           ;TAD_TECLADO.c: 70:    }
  1099   000330  EF11  F002         	goto	l1658
  1100   000334                     l1626:
  1101   000334  501C               	movf	_Filas^0,w,c
  1102   000336  B4D8               	btfsc	status,2,c
  1103   000338  EFA0  F001         	goto	u761
  1104   00033C  EFA2  F001         	goto	u760
  1105   000340                     u761:
  1106   000340  EF11  F002         	goto	l1658
  1107   000344                     u760:
  1108   000344  501D               	movf	_timer^0,w,c
  1109   000346  ECA8  F002         	call	_TI_GetTics
  1110   00034A  5022               	movf	(?_TI_GetTics+3)^0,w,c
  1111   00034C  1021               	iorwf	(?_TI_GetTics+2)^0,w,c
  1112   00034E  1020               	iorwf	(?_TI_GetTics+1)^0,w,c
  1113   000350  E109               	bnz	u770
  1114   000352  0E09               	movlw	9
  1115   000354  5C1F               	subwf	?_TI_GetTics^0,w,c
  1116   000356  A0D8               	btfss	status,0,c
  1117   000358  EFB0  F001         	goto	u771
  1118   00035C  EFB2  F001         	goto	u770
  1119   000360                     u771:
  1120   000360  EF11  F002         	goto	l1658
  1121   000364                     u770:
  1122   000364  0E0B               	movlw	11
  1123   000366  181A               	xorwf	_tecla^0,w,c
  1124   000368  A4D8               	btfss	status,2,c
  1125   00036A  EFB9  F001         	goto	u781
  1126   00036E  EFBB  F001         	goto	u780
  1127   000372                     u781:
  1128   000372  EF11  F002         	goto	l1658
  1129   000376                     u780:
  1130   000376                     
  1131                           ;TAD_TECLADO.c: 72:     TI_ResetTics(timer);
  1132   000376  501D               	movf	_timer^0,w,c
  1133   000378  ECE8  F002         	call	_TI_ResetTics
  1134   00037C                     
  1135                           ;TAD_TECLADO.c: 73:     state = 4;
  1136   00037C  0E04               	movlw	4
  1137   00037E  6E19               	movwf	motorTeclado@state^0,c
  1138   000380  EF11  F002         	goto	l1658
  1139   000384                     l1636:
  1140                           
  1141                           ;TAD_TECLADO.c: 77:    if (Filas == 0x0) {
  1142   000384  501C               	movf	_Filas^0,w,c
  1143   000386  A4D8               	btfss	status,2,c
  1144   000388  EFC8  F001         	goto	u791
  1145   00038C  EFCA  F001         	goto	u790
  1146   000390                     u791:
  1147   000390  EFCC  F001         	goto	l1640
  1148   000394                     u790:
  1149   000394  EF61  F001         	goto	l1602
  1150   000398                     l1640:
  1151   000398  501C               	movf	_Filas^0,w,c
  1152   00039A  B4D8               	btfsc	status,2,c
  1153   00039C  EFD2  F001         	goto	u801
  1154   0003A0  EFD4  F001         	goto	u800
  1155   0003A4                     u801:
  1156   0003A4  EF11  F002         	goto	l1658
  1157   0003A8                     u800:
  1158   0003A8  501D               	movf	_timer^0,w,c
  1159   0003AA  ECA8  F002         	call	_TI_GetTics
  1160   0003AE  5022               	movf	(?_TI_GetTics+3)^0,w,c
  1161   0003B0  1021               	iorwf	(?_TI_GetTics+2)^0,w,c
  1162   0003B2  E10B               	bnz	u810
  1163   0003B4  0EDD               	movlw	221
  1164   0003B6  5C1F               	subwf	?_TI_GetTics^0,w,c
  1165   0003B8  0E05               	movlw	5
  1166   0003BA  5820               	subwfb	(?_TI_GetTics+1)^0,w,c
  1167   0003BC  A0D8               	btfss	status,0,c
  1168   0003BE  EFE3  F001         	goto	u811
  1169   0003C2  EFE5  F001         	goto	u810
  1170   0003C6                     u811:
  1171   0003C6  EF11  F002         	goto	l1658
  1172   0003CA                     u810:
  1173   0003CA  EF96  F001         	goto	l1624
  1174   0003CE                     l1646:
  1175                           
  1176                           ;TAD_TECLADO.c: 86:    if (Filas == 0x0) {
  1177   0003CE  501C               	movf	_Filas^0,w,c
  1178   0003D0  A4D8               	btfss	status,2,c
  1179   0003D2  EFED  F001         	goto	u821
  1180   0003D6  EFEF  F001         	goto	u820
  1181   0003DA                     u821:
  1182   0003DA  EF11  F002         	goto	l1658
  1183   0003DE                     u820:
  1184   0003DE                     
  1185                           ;TAD_TECLADO.c: 87:     state = 0;
  1186   0003DE  6A19               	clrf	motorTeclado@state^0,c
  1187   0003E0                     
  1188                           ;TAD_TECLADO.c: 88:     Columnas = (0x04);
  1189   0003E0  0E04               	movlw	4
  1190   0003E2  6E1B               	movwf	_Columnas^0,c
  1191   0003E4                     
  1192                           ;TAD_TECLADO.c: 89:     LATB = Columnas;
  1193   0003E4  C01B  FF8A         	movff	_Columnas,3978	;volatile
  1194   0003E8  EF11  F002         	goto	l1658
  1195   0003EC                     l1656:
  1196   0003EC  5019               	movf	motorTeclado@state^0,w,c
  1197                           
  1198                           ; Switch size 1, requested type "simple"
  1199                           ; Number of cases is 6, Range of values is 0 to 5
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte           19    10 (average)
  1203                           ;	Chosen strategy is simple_byte
  1204   0003EE  0A00               	xorlw	0	; case 0
  1205   0003F0  B4D8               	btfsc	status,2,c
  1206   0003F2  EF0C  F001         	goto	l1566
  1207   0003F6  0A01               	xorlw	1	; case 1
  1208   0003F8  B4D8               	btfsc	status,2,c
  1209   0003FA  EF2B  F001         	goto	l1578
  1210   0003FE  0A03               	xorlw	3	; case 2
  1211   000400  B4D8               	btfsc	status,2,c
  1212   000402  EF48  F001         	goto	l1590
  1213   000406  0A01               	xorlw	1	; case 3
  1214   000408  B4D8               	btfsc	status,2,c
  1215   00040A  EF64  F001         	goto	l1604
  1216   00040E  0A07               	xorlw	7	; case 4
  1217   000410  B4D8               	btfsc	status,2,c
  1218   000412  EFC2  F001         	goto	l1636
  1219   000416  0A01               	xorlw	1	; case 5
  1220   000418  B4D8               	btfsc	status,2,c
  1221   00041A  EFE7  F001         	goto	l1646
  1222   00041E  EF11  F002         	goto	l1658
  1223   000422                     l1658:
  1224                           
  1225                           ;TAD_TECLADO.c: 93:  LATD = (LATD & 0x0F) | ((unsigned char)(state << 4));
  1226   000422  C019  F02F         	movff	motorTeclado@state,??_motorTeclado
  1227   000426  3A2F               	swapf	??_motorTeclado^0,f,c
  1228   000428  0EF0               	movlw	240
  1229   00042A  162F               	andwf	??_motorTeclado^0,f,c
  1230   00042C  508C               	movf	140,w,c	;volatile
  1231   00042E  0B0F               	andlw	15
  1232   000430  102F               	iorwf	??_motorTeclado^0,w,c
  1233   000432  6E8C               	movwf	140,c	;volatile
  1234   000434  0012               	return		;funcret
  1235   000436                     __end_of_motorTeclado:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function _showTecla *****************
  1239 ;; Defined at:
  1240 ;;		line 126 in file "TAD_TECLADO.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		None
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1
  1254 ;;      Params:         0       0       0
  1255 ;;      Locals:         0       0       0
  1256 ;;      Temps:          0       0       0
  1257 ;;      Totals:         0       0       0
  1258 ;;Total ram usage:        0 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 3
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_motorTeclado
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text2
  1269   000682                     __ptext2:
  1270                           	callstack 0
  1271   000682                     _showTecla:
  1272                           	callstack 26
  1273   000682                     
  1274                           ;TAD_TECLADO.c: 128:     LATD = tecla;
  1275   000682  C01A  FF8C         	movff	_tecla,3980	;volatile
  1276   000686  0012               	return		;funcret
  1277   000688                     __end_of_showTecla:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _TI_ResetTics *****************
  1281 ;; Defined at:
  1282 ;;		line 53 in file "TAD_TIMER.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  TimerHandle     1    wreg     unsigned char 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  TimerHandle     1    1[COMRAM] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1
  1296 ;;      Params:         0       0       0
  1297 ;;      Locals:         1       0       0
  1298 ;;      Temps:          0       0       0
  1299 ;;      Totals:         1       0       0
  1300 ;;Total ram usage:        1 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 3
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_motorTeclado
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text3
  1311   0005D0                     __ptext3:
  1312                           	callstack 0
  1313   0005D0                     _TI_ResetTics:
  1314                           	callstack 26
  1315                           
  1316                           ;incstack = 0
  1317                           ;TI_ResetTics@TimerHandle stored from wreg
  1318   0005D0  6E1F               	movwf	TI_ResetTics@TimerHandle^0,c
  1319   0005D2                     
  1320                           ;TAD_TIMER.c: 57:  (INTCONbits.GIE = 0); Timers[TimerHandle].TicsInicials=Tics; (INTCONb
      +                          its.GIE = 1);
  1321   0005D2  9EF2               	bcf	242,7,c	;volatile
  1322   0005D4  501F               	movf	TI_ResetTics@TimerHandle^0,w,c
  1323   0005D6  0D05               	mullw	5
  1324   0005D8  50F3               	movf	243,w,c
  1325   0005DA  0F01               	addlw	low _Timers
  1326   0005DC  6ED9               	movwf	fsr2l,c
  1327   0005DE  6ADA               	clrf	fsr2h,c
  1328   0005E0  C015  FFDE         	movff	_Tics,postinc2	;volatile
  1329   0005E4  C016  FFDE         	movff	_Tics+1,postinc2	;volatile
  1330   0005E8  C017  FFDE         	movff	_Tics+2,postinc2	;volatile
  1331   0005EC  C018  FFDE         	movff	_Tics+3,postinc2	;volatile
  1332   0005F0  8EF2               	bsf	242,7,c	;volatile
  1333   0005F2  0012               	return		;funcret
  1334   0005F4                     __end_of_TI_ResetTics:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _TI_GetTics *****************
  1338 ;; Defined at:
  1339 ;;		line 61 in file "TAD_TIMER.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  TimerHandle     1    wreg     unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  TimerHandle     1   13[COMRAM] unsigned char 
  1344 ;;  CopiaTicsAct    4    9[COMRAM] unsigned long 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  4    1[COMRAM] unsigned long 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1
  1354 ;;      Params:         4       0       0
  1355 ;;      Locals:         5       0       0
  1356 ;;      Temps:          4       0       0
  1357 ;;      Totals:        13       0       0
  1358 ;;Total ram usage:       13 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 3
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_motorTeclado
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text4
  1369   000550                     __ptext4:
  1370                           	callstack 0
  1371   000550                     _TI_GetTics:
  1372                           	callstack 26
  1373                           
  1374                           ;incstack = 0
  1375                           ;TI_GetTics@TimerHandle stored from wreg
  1376   000550  6E2B               	movwf	TI_GetTics@TimerHandle^0,c
  1377   000552                     
  1378                           ;TAD_TIMER.c: 62:     (INTCONbits.GIE = 0); unsigned long CopiaTicsActual=Tics; (INTCONb
      +                          its.GIE = 1);
  1379   000552  9EF2               	bcf	242,7,c	;volatile
  1380   000554  C015  F027         	movff	_Tics,TI_GetTics@CopiaTicsActual	;volatile
  1381   000558  C016  F028         	movff	_Tics+1,TI_GetTics@CopiaTicsActual+1	;volatile
  1382   00055C  C017  F029         	movff	_Tics+2,TI_GetTics@CopiaTicsActual+2	;volatile
  1383   000560  C018  F02A         	movff	_Tics+3,TI_GetTics@CopiaTicsActual+3	;volatile
  1384   000564  8EF2               	bsf	242,7,c	;volatile
  1385   000566                     
  1386                           ;TAD_TIMER.c: 63:  return (CopiaTicsActual-(Timers[TimerHandle].TicsInicials));
  1387   000566  502B               	movf	TI_GetTics@TimerHandle^0,w,c
  1388   000568  0D05               	mullw	5
  1389   00056A  50F3               	movf	243,w,c
  1390   00056C  0F01               	addlw	low _Timers
  1391   00056E  6ED9               	movwf	fsr2l,c
  1392   000570  6ADA               	clrf	fsr2h,c
  1393   000572  CFDE F023          	movff	postinc2,??_TI_GetTics
  1394   000576  CFDE F024          	movff	postinc2,??_TI_GetTics+1
  1395   00057A  CFDE F025          	movff	postinc2,??_TI_GetTics+2
  1396   00057E  CFDE F026          	movff	postinc2,??_TI_GetTics+3
  1397   000582  5023               	movf	??_TI_GetTics^0,w,c
  1398   000584  5C27               	subwf	TI_GetTics@CopiaTicsActual^0,w,c
  1399   000586  6E1F               	movwf	?_TI_GetTics^0,c
  1400   000588  5024               	movf	(??_TI_GetTics+1)^0,w,c
  1401   00058A  5828               	subwfb	(TI_GetTics@CopiaTicsActual+1)^0,w,c
  1402   00058C  6E20               	movwf	(?_TI_GetTics+1)^0,c
  1403   00058E  5025               	movf	(??_TI_GetTics+2)^0,w,c
  1404   000590  5829               	subwfb	(TI_GetTics@CopiaTicsActual+2)^0,w,c
  1405   000592  6E21               	movwf	(?_TI_GetTics+2)^0,c
  1406   000594  5026               	movf	(??_TI_GetTics+3)^0,w,c
  1407   000596  582A               	subwfb	(TI_GetTics@CopiaTicsActual+3)^0,w,c
  1408   000598  6E22               	movwf	(?_TI_GetTics+3)^0,c
  1409   00059A  0012               	return		;funcret
  1410   00059C                     __end_of_TI_GetTics:
  1411                           	callstack 0
  1412                           
  1413 ;; *************** function _ReadFilas *****************
  1414 ;; Defined at:
  1415 ;;		line 7 in file "TAD_TECLADO.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      unsigned char 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1
  1429 ;;      Params:         0       0       0
  1430 ;;      Locals:         0       0       0
  1431 ;;      Temps:          0       0       0
  1432 ;;      Totals:         0       0       0
  1433 ;;Total ram usage:        0 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 3
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_motorTeclado
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text5
  1444   000688                     __ptext5:
  1445                           	callstack 0
  1446   000688                     _ReadFilas:
  1447                           	callstack 26
  1448   000688                     
  1449                           ;TAD_TECLADO.c: 8:     return (PORTA & 0x0F);
  1450   000688  5080               	movf	128,w,c	;volatile
  1451   00068A  0B0F               	andlw	15
  1452   00068C  0012               	return		;funcret
  1453   00068E                     __end_of_ReadFilas:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _GetTecla *****************
  1457 ;; Defined at:
  1458 ;;		line 96 in file "TAD_TECLADO.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  keymap         12    3[COMRAM] const unsigned char [3][
  1463 ;;  fila            1   16[COMRAM] unsigned char 
  1464 ;;  columna         1   15[COMRAM] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      unsigned char 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1
  1474 ;;      Params:         0       0       0
  1475 ;;      Locals:        14       0       0
  1476 ;;      Temps:          2       0       0
  1477 ;;      Totals:        16       0       0
  1478 ;;Total ram usage:       16 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 3
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_motorTeclado
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text6
  1489   000436                     __ptext6:
  1490                           	callstack 0
  1491   000436                     _GetTecla:
  1492                           	callstack 26
  1493   000436                     
  1494                           ;TAD_TECLADO.c: 98:     unsigned char columna = 0;
  1495   000436  6A2D               	clrf	GetTecla@columna^0,c
  1496                           
  1497                           ;TAD_TECLADO.c: 100:     switch(Filas) {
  1498   000438  EF30  F002         	goto	l1202
  1499   00043C                     l161:
  1500   00043C  6A2E               	clrf	GetTecla@fila^0,c
  1501   00043E  EF4E  F002         	goto	l1214
  1502   000442                     l1190:
  1503   000442  0E01               	movlw	1
  1504   000444  6E2E               	movwf	GetTecla@fila^0,c
  1505   000446  EF4E  F002         	goto	l1214
  1506   00044A                     l1192:
  1507   00044A  0E02               	movlw	2
  1508   00044C  6E2E               	movwf	GetTecla@fila^0,c
  1509   00044E  EF4E  F002         	goto	l1214
  1510   000452                     l1194:
  1511   000452  0E03               	movlw	3
  1512   000454  6E2E               	movwf	GetTecla@fila^0,c
  1513   000456  EF4E  F002         	goto	l1214
  1514   00045A                     l1196:
  1515   00045A  0EFF               	movlw	255
  1516   00045C  EF7C  F002         	goto	l167
  1517   000460                     l1202:
  1518   000460  501C               	movf	_Filas^0,w,c
  1519                           
  1520                           ; Switch size 1, requested type "simple"
  1521                           ; Number of cases is 4, Range of values is 1 to 8
  1522                           ; switch strategies available:
  1523                           ; Name         Instructions Cycles
  1524                           ; simple_byte           13     7 (average)
  1525                           ;	Chosen strategy is simple_byte
  1526   000462  0A01               	xorlw	1	; case 1
  1527   000464  B4D8               	btfsc	status,2,c
  1528   000466  EF1E  F002         	goto	l161
  1529   00046A  0A03               	xorlw	3	; case 2
  1530   00046C  B4D8               	btfsc	status,2,c
  1531   00046E  EF21  F002         	goto	l1190
  1532   000472  0A06               	xorlw	6	; case 4
  1533   000474  B4D8               	btfsc	status,2,c
  1534   000476  EF25  F002         	goto	l1192
  1535   00047A  0A0C               	xorlw	12	; case 8
  1536   00047C  B4D8               	btfsc	status,2,c
  1537   00047E  EF29  F002         	goto	l1194
  1538   000482  EF2D  F002         	goto	l1196
  1539   000486                     l169:
  1540   000486  6A2D               	clrf	GetTecla@columna^0,c
  1541   000488  EF68  F002         	goto	l1216
  1542   00048C                     l1204:
  1543   00048C  0E01               	movlw	1
  1544   00048E  6E2D               	movwf	GetTecla@columna^0,c
  1545   000490  EF68  F002         	goto	l1216
  1546   000494                     l1206:
  1547   000494  0E02               	movlw	2
  1548   000496  6E2D               	movwf	GetTecla@columna^0,c
  1549   000498  EF68  F002         	goto	l1216
  1550   00049C                     l1214:
  1551   00049C  501B               	movf	_Columnas^0,w,c
  1552   00049E  0B07               	andlw	7
  1553   0004A0  6E1F               	movwf	??_GetTecla^0,c
  1554   0004A2  6A20               	clrf	(??_GetTecla+1)^0,c
  1555                           
  1556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1557                           ; Switch size 1, requested type "simple"
  1558                           ; Number of cases is 1, Range of values is 0 to 0
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte            4     3 (average)
  1562                           ;	Chosen strategy is simple_byte
  1563   0004A4  5020               	movf	(??_GetTecla+1)^0,w,c
  1564   0004A6  0A00               	xorlw	0	; case 0
  1565   0004A8  B4D8               	btfsc	status,2,c
  1566   0004AA  EF59  F002         	goto	l1676
  1567   0004AE  EF2D  F002         	goto	l1196
  1568   0004B2                     l1676:
  1569                           
  1570                           ; Switch size 1, requested type "simple"
  1571                           ; Number of cases is 3, Range of values is 1 to 4
  1572                           ; switch strategies available:
  1573                           ; Name         Instructions Cycles
  1574                           ; simple_byte           10     6 (average)
  1575                           ;	Chosen strategy is simple_byte
  1576   0004B2  501F               	movf	??_GetTecla^0,w,c
  1577   0004B4  0A01               	xorlw	1	; case 1
  1578   0004B6  B4D8               	btfsc	status,2,c
  1579   0004B8  EF43  F002         	goto	l169
  1580   0004BC  0A03               	xorlw	3	; case 2
  1581   0004BE  B4D8               	btfsc	status,2,c
  1582   0004C0  EF46  F002         	goto	l1204
  1583   0004C4  0A06               	xorlw	6	; case 4
  1584   0004C6  B4D8               	btfsc	status,2,c
  1585   0004C8  EF4A  F002         	goto	l1206
  1586   0004CC  EF2D  F002         	goto	l1196
  1587   0004D0                     l1216:
  1588                           
  1589                           ;TAD_TECLADO.c: 116:     const unsigned char keymap[4][3] = {
  1590   0004D0  0E01               	movlw	low GetTecla@F2717
  1591   0004D2  6EF6               	movwf	tblptrl,c
  1592   0004D4                     	if	1	;There is more than 1 active tblptr byte
  1593   0004D4  0E02               	movlw	high GetTecla@F2717
  1594   0004D6  6EF7               	movwf	tblptrh,c
  1595   0004D8                     	endif
  1596   0004D8                     	if	0	;There are less than 3 active tblptr bytes
  1597   0004D8                     	endif
  1598   0004D8  EE20  F021         	lfsr	2,GetTecla@keymap
  1599   0004DC  0E0B               	movlw	11
  1600   0004DE                     u280:
  1601   0004DE  0009               	tblrd		*+
  1602   0004E0  CFF5 FFDE          	movff	tablat,postinc2
  1603   0004E4  06E8               	decf	wreg,f,c
  1604   0004E6  E2FB               	bc	u280
  1605   0004E8                     
  1606                           ;TAD_TECLADO.c: 123:     return keymap[fila][columna];
  1607   0004E8  502E               	movf	GetTecla@fila^0,w,c
  1608   0004EA  0D03               	mullw	3
  1609   0004EC  50F3               	movf	243,w,c
  1610   0004EE  0F21               	addlw	low GetTecla@keymap
  1611   0004F0  242D               	addwf	GetTecla@columna^0,w,c
  1612   0004F2  6ED9               	movwf	fsr2l,c
  1613   0004F4  6ADA               	clrf	fsr2h,c
  1614   0004F6  50DF               	movf	indf2,w,c
  1615   0004F8                     l167:
  1616   0004F8  0012               	return		;funcret
  1617   0004FA                     __end_of_GetTecla:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _initTeclado *****************
  1621 ;; Defined at:
  1622 ;;		line 11 in file "TAD_TECLADO.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1
  1636 ;;      Params:         0       0       0
  1637 ;;      Locals:         0       0       0
  1638 ;;      Temps:          0       0       0
  1639 ;;      Totals:         0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 4
  1643 ;; This function calls:
  1644 ;;		_TI_NewTimer
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text7
  1651   000672                     __ptext7:
  1652                           	callstack 0
  1653   000672                     _initTeclado:
  1654                           	callstack 26
  1655   000672                     
  1656                           ;TAD_TECLADO.c: 12:     Filas = 0x00;
  1657   000672  6A1C               	clrf	_Filas^0,c
  1658                           
  1659                           ;TAD_TECLADO.c: 13:     Columnas = 0x00;
  1660   000674  6A1B               	clrf	_Columnas^0,c
  1661                           
  1662                           ;TAD_TECLADO.c: 14:     tecla = 0;
  1663   000676  6A1A               	clrf	_tecla^0,c
  1664   000678                     
  1665                           ;TAD_TECLADO.c: 15:     TI_NewTimer(&timer);
  1666   000678  0E1D               	movlw	low _timer
  1667   00067A  6E1F               	movwf	TI_NewTimer@TimerHandle^0,c
  1668   00067C  EC7D  F002         	call	_TI_NewTimer	;wreg free
  1669   000680  0012               	return		;funcret
  1670   000682                     __end_of_initTeclado:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _TI_NewTimer *****************
  1674 ;; Defined at:
  1675 ;;		line 43 in file "TAD_TIMER.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  TimerHandle     1    1[COMRAM] PTR unsigned char 
  1678 ;;		 -> timer(1), 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  Comptador       1    3[COMRAM] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      unsigned char 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1
  1690 ;;      Params:         1       0       0
  1691 ;;      Locals:         1       0       0
  1692 ;;      Temps:          1       0       0
  1693 ;;      Totals:         3       0       0
  1694 ;;Total ram usage:        3 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 3
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_initTeclado
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text8
  1705   0004FA                     __ptext8:
  1706                           	callstack 0
  1707   0004FA                     _TI_NewTimer:
  1708                           	callstack 26
  1709   0004FA                     
  1710                           ;TAD_TIMER.c: 44:  unsigned char Comptador=0;
  1711   0004FA  6A21               	clrf	TI_NewTimer@Comptador^0,c
  1712                           
  1713                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  1714   0004FC  EF8C  F002         	goto	l1546
  1715   000500                     l1542:
  1716                           
  1717                           ;TAD_TIMER.c: 46:   if (++Comptador == 4) return (0);
  1718   000500  2A21               	incf	TI_NewTimer@Comptador^0,f,c
  1719   000502  0E04               	movlw	4
  1720   000504  1821               	xorwf	TI_NewTimer@Comptador^0,w,c
  1721   000506  A4D8               	btfss	status,2,c
  1722   000508  EF88  F002         	goto	u641
  1723   00050C  EF8A  F002         	goto	u640
  1724   000510                     u641:
  1725   000510  EF8C  F002         	goto	l1546
  1726   000514                     u640:
  1727   000514  EFA7  F002         	goto	l83
  1728   000518                     l1546:
  1729                           
  1730                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  1731   000518  5021               	movf	TI_NewTimer@Comptador^0,w,c
  1732   00051A  0D05               	mullw	5
  1733   00051C  50F3               	movf	243,w,c
  1734   00051E  0F05               	addlw	low (_Timers+4)
  1735   000520  6ED9               	movwf	fsr2l,c
  1736   000522  6ADA               	clrf	fsr2h,c
  1737   000524  04DE               	decf	postinc2,w,c
  1738   000526  B4D8               	btfsc	status,2,c
  1739   000528  EF98  F002         	goto	u651
  1740   00052C  EF9A  F002         	goto	u650
  1741   000530                     u651:
  1742   000530  EF80  F002         	goto	l1542
  1743   000534                     u650:
  1744   000534                     
  1745                           ;TAD_TIMER.c: 48:  Timers[Comptador].Busy=1;
  1746   000534  5021               	movf	TI_NewTimer@Comptador^0,w,c
  1747   000536  0D05               	mullw	5
  1748   000538  50F3               	movf	243,w,c
  1749   00053A  0F05               	addlw	low (_Timers+4)
  1750   00053C  6ED9               	movwf	fsr2l,c
  1751   00053E  6ADA               	clrf	fsr2h,c
  1752   000540  0E01               	movlw	1
  1753   000542  6EDF               	movwf	indf2,c
  1754   000544                     
  1755                           ;TAD_TIMER.c: 49:  *TimerHandle=Comptador;
  1756   000544  501F               	movf	TI_NewTimer@TimerHandle^0,w,c
  1757   000546  6ED9               	movwf	fsr2l,c
  1758   000548  6ADA               	clrf	fsr2h,c
  1759   00054A  C021  FFDF         	movff	TI_NewTimer@Comptador,indf2
  1760   00054E                     l83:
  1761   00054E  0012               	return		;funcret
  1762   000550                     __end_of_TI_NewTimer:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _TI_Init *****************
  1766 ;; Defined at:
  1767 ;;		line 32 in file "TAD_TIMER.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  counter         1    1[COMRAM] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1
  1781 ;;      Params:         0       0       0
  1782 ;;      Locals:         1       0       0
  1783 ;;      Temps:          0       0       0
  1784 ;;      Totals:         1       0       0
  1785 ;;Total ram usage:        1 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 3
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text9
  1796   00059C                     __ptext9:
  1797                           	callstack 0
  1798   00059C                     _TI_Init:
  1799                           	callstack 27
  1800   00059C                     
  1801                           ;TAD_TIMER.c: 33:  for (unsigned char counter=0; counter<4; counter++) {
  1802   00059C  6A1F               	clrf	TI_Init@counter^0,c
  1803   00059E                     l1340:
  1804                           
  1805                           ;TAD_TIMER.c: 34:   Timers[counter].Busy=0;
  1806   00059E  501F               	movf	TI_Init@counter^0,w,c
  1807   0005A0  0D05               	mullw	5
  1808   0005A2  50F3               	movf	243,w,c
  1809   0005A4  0F05               	addlw	low (_Timers+4)
  1810   0005A6  6ED9               	movwf	fsr2l,c
  1811   0005A8  6ADA               	clrf	fsr2h,c
  1812   0005AA  6ADF               	clrf	indf2,c
  1813   0005AC                     
  1814                           ;TAD_TIMER.c: 35:  }
  1815   0005AC  2A1F               	incf	TI_Init@counter^0,f,c
  1816   0005AE  0E03               	movlw	3
  1817   0005B0  641F               	cpfsgt	TI_Init@counter^0,c
  1818   0005B2  EFDD  F002         	goto	u371
  1819   0005B6  EFDF  F002         	goto	u370
  1820   0005BA                     u371:
  1821   0005BA  EFCF  F002         	goto	l1340
  1822   0005BE                     u370:
  1823   0005BE                     
  1824                           ;TAD_TIMER.c: 36:  T0CON=0x82;
  1825   0005BE  0E82               	movlw	130
  1826   0005C0  6ED5               	movwf	213,c	;volatile
  1827                           
  1828                           ;TAD_TIMER.c: 37:     TMR0=64911;
  1829   0005C2  0EFD               	movlw	253
  1830   0005C4  6ED7               	movwf	215,c	;volatile
  1831   0005C6  0E8F               	movlw	143
  1832   0005C8  6ED6               	movwf	214,c	;volatile
  1833   0005CA                     
  1834                           ;TAD_TIMER.c: 38:  INTCONbits.TMR0IF = 0;
  1835   0005CA  94F2               	bcf	242,2,c	;volatile
  1836   0005CC                     
  1837                           ;TAD_TIMER.c: 39:  INTCONbits.TMR0IE = 1;
  1838   0005CC  8AF2               	bsf	242,5,c	;volatile
  1839   0005CE  0012               	return		;funcret
  1840   0005D0                     __end_of_TI_Init:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _InitPorts *****************
  1844 ;; Defined at:
  1845 ;;		line 51 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1
  1859 ;;      Params:         0       0       0
  1860 ;;      Locals:         0       0       0
  1861 ;;      Temps:          0       0       0
  1862 ;;      Totals:         0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 3
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text10
  1874   00062A                     __ptext10:
  1875                           	callstack 0
  1876   00062A                     _InitPorts:
  1877                           	callstack 27
  1878   00062A                     
  1879                           ;main.c: 53: void ProcessKey(unsigned char key) {
  1880   00062A  0E0F               	movlw	15
  1881   00062C  6EC1               	movwf	193,c	;volatile
  1882   00062E                     
  1883                           ;main.c: 56:  LATC = key;
  1884   00062E  0E0F               	movlw	15
  1885   000630  1292               	iorwf	146,f,c	;volatile
  1886   000632                     
  1887                           ;main.c: 57: }
  1888   000632  9892               	bcf	146,4,c	;volatile
  1889   000634  8889               	bsf	137,4,c	;volatile
  1890   000636  9EF1               	bcf	241,7,c	;volatile
  1891   000638  0EF8               	movlw	248
  1892   00063A  1693               	andwf	147,f,c	;volatile
  1893   00063C  508A               	movf	138,w,c	;volatile
  1894   00063E  6A95               	clrf	149,c	;volatile
  1895   000640  6A8C               	clrf	140,c	;volatile
  1896   000642  0012               	return		;funcret
  1897   000644                     __end_of_InitPorts:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _LowRSI *****************
  1901 ;; Defined at:
  1902 ;;		line 29 in file "main.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		None
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1
  1916 ;;      Params:         0       0       0
  1917 ;;      Locals:         0       0       0
  1918 ;;      Temps:          1       0       0
  1919 ;;      Totals:         1       0       0
  1920 ;;Total ram usage:        1 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 2
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		Interrupt level 1
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	intcodelo
  1931   000018                     __pintcodelo:
  1932                           	callstack 0
  1933   000018                     _LowRSI:
  1934                           	callstack 26
  1935                           
  1936                           ;incstack = 0
  1937   000018  8030               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1938   00001A  CFE0 F01E          	movff	bsr,??_LowRSI
  1939   00001E  C01E  FFE0         	movff	??_LowRSI,bsr
  1940   000022  9030               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1941   000024  0010               	retfie	
  1942   000026                     __end_of_LowRSI:
  1943                           	callstack 0
  1944                           
  1945 ;; *************** function _HighRSI *****************
  1946 ;; Defined at:
  1947 ;;		line 25 in file "main.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1
  1961 ;;      Params:         0       0       0
  1962 ;;      Locals:         0       0       0
  1963 ;;      Temps:          0       0       0
  1964 ;;      Totals:         0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; Hardware stack levels required when called: 1
  1968 ;; This function calls:
  1969 ;;		_RSI_Timer0
  1970 ;; This function is called by:
  1971 ;;		Interrupt level 2
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	intcode
  1976   000008                     __pintcode:
  1977                           	callstack 0
  1978   000008                     _HighRSI:
  1979                           	callstack 26
  1980                           
  1981                           ;incstack = 0
  1982   000008  8230               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1983   00000A  EF2E  F003         	goto	int_func
  1984                           
  1985                           	psect	intcode_body
  1986   00065C                     __pintcode_body:
  1987                           	callstack 26
  1988   00065C                     int_func:
  1989                           	callstack 26
  1990   00065C                     
  1991                           ;main.c: 27:   motorTeclado();
  1992   00065C  A4F2               	btfss	242,2,c	;volatile
  1993   00065E  EF33  F003         	goto	i2u59_41
  1994   000662  EF35  F003         	goto	i2u59_40
  1995   000666                     i2u59_41:
  1996   000666  EF37  F003         	goto	i2l38
  1997   00066A                     i2u59_40:
  1998   00066A  EC22  F003         	call	_RSI_Timer0	;wreg free
  1999   00066E                     i2l38:
  2000   00066E  9230               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2001   000670  0011               	retfie		f
  2002   000672                     __end_of_HighRSI:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _RSI_Timer0 *****************
  2006 ;; Defined at:
  2007 ;;		line 25 in file "TAD_TIMER.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1
  2021 ;;      Params:         0       0       0
  2022 ;;      Locals:         0       0       0
  2023 ;;      Temps:          0       0       0
  2024 ;;      Totals:         0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_HighRSI
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text13
  2035   000644                     __ptext13:
  2036                           	callstack 0
  2037   000644                     _RSI_Timer0:
  2038                           	callstack 26
  2039   000644                     
  2040                           ;TAD_TIMER.c: 27:     TMR0=64911;
  2041   000644  0EFD               	movlw	253
  2042   000646  6ED7               	movwf	215,c	;volatile
  2043   000648  0E8F               	movlw	143
  2044   00064A  6ED6               	movwf	214,c	;volatile
  2045   00064C                     
  2046                           ;TAD_TIMER.c: 28:     TMR0IF=0;
  2047   00064C  94F2               	bcf	4082,2,c	;volatile
  2048   00064E                     
  2049                           ;TAD_TIMER.c: 29:     Tics++;
  2050   00064E  0E01               	movlw	1
  2051   000650  2615               	addwf	_Tics^0,f,c	;volatile
  2052   000652  0E00               	movlw	0
  2053   000654  2216               	addwfc	(_Tics+1)^0,f,c	;volatile
  2054   000656  2217               	addwfc	(_Tics+2)^0,f,c	;volatile
  2055   000658  2218               	addwfc	(_Tics+3)^0,f,c	;volatile
  2056   00065A  0012               	return		;funcret
  2057   00065C                     __end_of_RSI_Timer0:
  2058                           	callstack 0
  2059                           
  2060                           	psect	rparam
  2061   000001                     ___rparam_used  equ	1
  2062   000000                     ___param_bank   equ	0
  2063   000000                     __Lparam        equ	__Lrparam
  2064   000000                     __Hparam        equ	__Hrparam
  2065                           
  2066                           	psect	temp
  2067   000030                     btemp:
  2068                           	callstack 0
  2069   000030                     	ds	1
  2070   000030                     int$flags       set	btemp
  2071   000031                     wtemp8          set	btemp+1
  2072   000031                     ttemp5          set	btemp+1
  2073   000034                     ttemp6          set	btemp+4
  2074   000038                     ttemp7          set	btemp+8
  2075                           
  2076                           	psect	idloc
  2077                           
  2078                           ;Config register IDLOC0 @ 0x200000
  2079                           ;	unspecified, using default values
  2080   200000                     	org	2097152
  2081   200000  FF                 	db	255
  2082                           
  2083                           ;Config register IDLOC1 @ 0x200001
  2084                           ;	unspecified, using default values
  2085   200001                     	org	2097153
  2086   200001  FF                 	db	255
  2087                           
  2088                           ;Config register IDLOC2 @ 0x200002
  2089                           ;	unspecified, using default values
  2090   200002                     	org	2097154
  2091   200002  FF                 	db	255
  2092                           
  2093                           ;Config register IDLOC3 @ 0x200003
  2094                           ;	unspecified, using default values
  2095   200003                     	org	2097155
  2096   200003  FF                 	db	255
  2097                           
  2098                           ;Config register IDLOC4 @ 0x200004
  2099                           ;	unspecified, using default values
  2100   200004                     	org	2097156
  2101   200004  FF                 	db	255
  2102                           
  2103                           ;Config register IDLOC5 @ 0x200005
  2104                           ;	unspecified, using default values
  2105   200005                     	org	2097157
  2106   200005  FF                 	db	255
  2107                           
  2108                           ;Config register IDLOC6 @ 0x200006
  2109                           ;	unspecified, using default values
  2110   200006                     	org	2097158
  2111   200006  FF                 	db	255
  2112                           
  2113                           ;Config register IDLOC7 @ 0x200007
  2114                           ;	unspecified, using default values
  2115   200007                     	org	2097159
  2116   200007  FF                 	db	255
  2117                           
  2118                           	psect	config
  2119                           
  2120                           ; Padding undefined space
  2121   300000                     	org	3145728
  2122   300000  FF                 	db	255
  2123                           
  2124                           ;Config register CONFIG1H @ 0x300001
  2125                           ;	Oscillator
  2126                           ;	OSC = HS, HS Oscillator
  2127                           ;	Fail-Safe Clock Monitor Enable bit
  2128                           ;	FCMEN = 0x0, unprogrammed default
  2129                           ;	Internal/External Oscillator Switchover bit
  2130                           ;	IESO = 0x0, unprogrammed default
  2131   300001                     	org	3145729
  2132   300001  02                 	db	2
  2133                           
  2134                           ;Config register CONFIG2L @ 0x300002
  2135                           ;	Power-up Timer Enable bit
  2136                           ;	PWRT = OFF, PWRT disabled
  2137                           ;	Brown-out Reset Enable bits
  2138                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2139                           ;	Brown-out Reset Voltage bits
  2140                           ;	BORV = 0x3, unprogrammed default
  2141   300002                     	org	3145730
  2142   300002  19                 	db	25
  2143                           
  2144                           ;Config register CONFIG2H @ 0x300003
  2145                           ;	Watchdog Timer Enable bit
  2146                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2147                           ;	Watchdog Timer Postscale Select bits
  2148                           ;	WDTPS = 0xF, unprogrammed default
  2149   300003                     	org	3145731
  2150   300003  1E                 	db	30
  2151                           
  2152                           ; Padding undefined space
  2153   300004                     	org	3145732
  2154   300004  FF                 	db	255
  2155                           
  2156                           ;Config register CONFIG3H @ 0x300005
  2157                           ;	CCP2 MUX bit
  2158                           ;	CCP2MX = 0x1, unprogrammed default
  2159                           ;	PORTB A/D Enable bit
  2160                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  2161                           ;	Low-Power Timer1 Oscillator Enable bit
  2162                           ;	LPT1OSC = 0x0, unprogrammed default
  2163                           ;	MCLR Pin Enable bit
  2164                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  2165   300005                     	org	3145733
  2166   300005  01                 	db	1
  2167                           
  2168                           ;Config register CONFIG4L @ 0x300006
  2169                           ;	Stack Full/Underflow Reset Enable bit
  2170                           ;	STVREN = 0x1, unprogrammed default
  2171                           ;	Single-Supply ICSP Enable bit
  2172                           ;	LVP = OFF, Single-Supply ICSP disabled
  2173                           ;	Boot Block Size Select bits
  2174                           ;	BBSIZ = 0x0, unprogrammed default
  2175                           ;	Extended Instruction Set Enable bit
  2176                           ;	XINST = 0x0, unprogrammed default
  2177                           ;	Background Debugger Enable bit
  2178                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2179   300006                     	org	3145734
  2180   300006  81                 	db	129
  2181                           
  2182                           ; Padding undefined space
  2183   300007                     	org	3145735
  2184   300007  FF                 	db	255
  2185                           
  2186                           ;Config register CONFIG5L @ 0x300008
  2187                           ;	unspecified, using default values
  2188                           ;	Code Protection bit
  2189                           ;	CP0 = 0x1, unprogrammed default
  2190                           ;	Code Protection bit
  2191                           ;	CP1 = 0x1, unprogrammed default
  2192   300008                     	org	3145736
  2193   300008  03                 	db	3
  2194                           
  2195                           ;Config register CONFIG5H @ 0x300009
  2196                           ;	unspecified, using default values
  2197                           ;	Boot Block Code Protection bitProtect Boot
  2198                           ;	CPB = 0x1, unprogrammed default
  2199                           ;	Data EEPROM Code Protection bit
  2200                           ;	CPD = 0x1, unprogrammed default
  2201   300009                     	org	3145737
  2202   300009  C0                 	db	192
  2203                           
  2204                           ;Config register CONFIG6L @ 0x30000A
  2205                           ;	unspecified, using default values
  2206                           ;	Write Protection bit
  2207                           ;	WRT0 = 0x1, unprogrammed default
  2208                           ;	Write Protection bit
  2209                           ;	WRT1 = 0x1, unprogrammed default
  2210   30000A                     	org	3145738
  2211   30000A  03                 	db	3
  2212                           
  2213                           ;Config register CONFIG6H @ 0x30000B
  2214                           ;	unspecified, using default values
  2215                           ;	Configuration Register Write Protection bit
  2216                           ;	WRTC = 0x1, unprogrammed default
  2217                           ;	Boot Block Write Protection bit
  2218                           ;	WRTB = 0x1, unprogrammed default
  2219                           ;	Data EEPROM Write Protection bit
  2220                           ;	WRTD = 0x1, unprogrammed default
  2221   30000B                     	org	3145739
  2222   30000B  E0                 	db	224
  2223                           
  2224                           ;Config register CONFIG7L @ 0x30000C
  2225                           ;	unspecified, using default values
  2226                           ;	Table Read Protection bit
  2227                           ;	EBTR0 = 0x1, unprogrammed default
  2228                           ;	Table Read Protection bit
  2229                           ;	EBTR1 = 0x1, unprogrammed default
  2230   30000C                     	org	3145740
  2231   30000C  03                 	db	3
  2232                           
  2233                           ;Config register CONFIG7H @ 0x30000D
  2234                           ;	unspecified, using default values
  2235                           ;	Boot Block Table Read Protection bit
  2236                           ;	EBTRB = 0x1, unprogrammed default
  2237   30000D                     	org	3145741
  2238   30000D  40                 	db	64
  2239                           tosu	equ	0xFFF
  2240                           tosh	equ	0xFFE
  2241                           tosl	equ	0xFFD
  2242                           stkptr	equ	0xFFC
  2243                           pclatu	equ	0xFFB
  2244                           pclath	equ	0xFFA
  2245                           pcl	equ	0xFF9
  2246                           tblptru	equ	0xFF8
  2247                           tblptrh	equ	0xFF7
  2248                           tblptrl	equ	0xFF6
  2249                           tablat	equ	0xFF5
  2250                           prodh	equ	0xFF4
  2251                           prodl	equ	0xFF3
  2252                           indf0	equ	0xFEF
  2253                           postinc0	equ	0xFEE
  2254                           postdec0	equ	0xFED
  2255                           preinc0	equ	0xFEC
  2256                           plusw0	equ	0xFEB
  2257                           fsr0h	equ	0xFEA
  2258                           fsr0l	equ	0xFE9
  2259                           wreg	equ	0xFE8
  2260                           indf1	equ	0xFE7
  2261                           postinc1	equ	0xFE6
  2262                           postdec1	equ	0xFE5
  2263                           preinc1	equ	0xFE4
  2264                           plusw1	equ	0xFE3
  2265                           fsr1h	equ	0xFE2
  2266                           fsr1l	equ	0xFE1
  2267                           bsr	equ	0xFE0
  2268                           indf2	equ	0xFDF
  2269                           postinc2	equ	0xFDE
  2270                           postdec2	equ	0xFDD
  2271                           preinc2	equ	0xFDC
  2272                           plusw2	equ	0xFDB
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     18      47
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    TI_NewTimer@TimerHandle	PTR unsigned char  size(1) Largest target is 1
		 -> timer(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_motorTeclado
    _motorTeclado->_GetTecla
    _initTeclado->_TI_NewTimer

Critical Paths under _LowRSI in COMRAM

    None.

Critical Paths under _HighRSI in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowRSI in BANK0

    None.

Critical Paths under _HighRSI in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowRSI in BANK1

    None.

Critical Paths under _HighRSI in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     269
                          _InitPorts
                            _TI_Init
                        _initTeclado
                       _motorTeclado
 ---------------------------------------------------------------------------------
 (1) _motorTeclado                                         1     1      0     112
                                             17 COMRAM     1     1      0
                           _GetTecla
                          _ReadFilas
                         _TI_GetTics
                       _TI_ResetTics
                          _showTecla
 ---------------------------------------------------------------------------------
 (2) _showTecla                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TI_ResetTics                                         1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TI_GetTics                                          13     9      4      52
                                              1 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _ReadFilas                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetTecla                                            16    16      0      45
                                              1 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0     112
                        _TI_NewTimer
 ---------------------------------------------------------------------------------
 (2) _TI_NewTimer                                          3     2      1     112
                                              1 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _TI_Init                                              1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _LowRSI                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighRSI                                              0     0      0       0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (5) _RSI_Timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPorts
   _TI_Init
   _initTeclado
     _TI_NewTimer
   _motorTeclado
     _GetTecla
     _ReadFilas
     _TI_GetTics
     _TI_ResetTics
     _showTecla

 _LowRSI (ROOT)

 _HighRSI (ROOT)
   _RSI_Timer0

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     18      47     37.3%
BITBIGSFRh         118      0       0      0.0%
BITBIGSFRlh          6      0       0      0.0%
BITBIGSFRll          1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      47      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Feb 27 20:25:03 2025

    __end_ofGetTecla@F2717 020D                 _RSI_Timer0 0644                         l54 0642  
                       l90 059A                         l83 054E                         l77 05CE  
                       l87 05F2                 _TI_GetTics 0550                         bsr 0FE0  
                      l123 068C                        l126 0680                        l161 043C  
                      l157 0434                        l167 04F8                        l169 0486  
                      l178 0686                        u280 04DE                        u370 05BE  
                      u371 05BA                        u700 02A0                        u701 029C  
                      u710 02BA                        u711 02B6                        u640 0514  
                      u800 03A8                        u720 02DE                        u641 0510  
                      u801 03A4                        u721 02DA                        u650 0534  
                      u810 03CA                        u730 02F2                        u651 0530  
                      u811 03C6                        u731 02EE                        u820 03DE  
                      u740 0312                        u660 0228                        u821 03DA  
                      u741 030E                        u661 0224                        u750 0324  
                      u670 0248                        u751 0320                        u671 0244  
                      u760 0344                        u680 0266                        u761 0340  
                      u681 0262                        u770 0364                        u690 0286  
                      u771 0360                        u691 0282                        u780 0376  
                      u781 0372                        u790 0394                        u791 0390  
                      wreg 0FE8                       l1202 0460                       l1204 048C  
                     l1206 0494                       l1214 049C                       l1320 0632  
                     l1216 04D0                       l1330 063E                       l1322 0634  
                     l1218 04E8                       l1226 0682                       l1332 0640  
                     l1324 0636                       l1316 062A                       l1340 059E  
                     l1172 05D2                       l1326 0638                       l1318 062E  
                     l1350 05CC                       l1342 05AC                       l1334 059C  
                     l1190 0442                       l1174 05D4                       l1328 063C  
                     l1344 05AE                       l1192 044A                       l1184 0688  
                     l1176 05F0                       l1600 02BE                       l1346 05BE  
                     l1194 0452                       l1602 02C2                       l1348 05CA  
                     l1540 04FA                       l1196 045A                       l1188 0436  
                     l1620 0324                       l1604 02C8                       l1550 0544  
                     l1542 0500                       l1630 0364                       l1622 0328  
                     l1614 02E2                       l1606 02CE                       l1560 0672  
                     l1640 0398                       l1632 0376                       l1624 032C  
                     l1616 02F2                       l1546 0518                       l1562 0678  
                     l1554 0552                       l1650 03E0                       l1642 03A8  
                     l1634 037C                       l1618 0312                       l1626 0334  
                     l1570 022C                       l1548 0534                       l1556 0566  
                     l1652 03E4                       l1636 0384                       l1628 0344  
                     l1580 0266                       l1572 0238                       l1564 020E  
                     l1660 05F4                       l1646 03CE                       l1590 0290  
                     l1582 026A                       l1574 0248                       l1566 0218  
                     l1670 0604                       l1662 05F8                       l1648 03DE  
                     l1592 02A0                       l1584 0276                       l1576 024E  
                     l1568 0228                       l1656 03EC                       l1664 05FC  
                     l1586 0286                       l1578 0256                       l1658 0422  
                     l1666 0600                       l1676 04B2                       l1596 02AA  
                     l1668 0602                       l1598 02BA                _TI_NewTimer 04FA  
                     _LATB 0F8A                       _LATC 0F8B                       _LATD 0F8C  
                     i1l43 001E                       i2l38 066E                       i2l72 065A  
                     _TMR0 0FD6                       _Tics 0015                       _main 05F4  
                     fsr2h 0FDA                       indf2 0FDF                       fsr2l 0FD9  
                     btemp 0030            __end_of_TI_Init 05D0                       prodl 0FF3  
                     start 0026            __end_of_HighRSI 0672               ___param_bank 0000  
             ?_initTeclado 001E                      ?_main 001E                      _T0CON 0FD5  
                    _PORTA 0F80                      _TRISA 0F92                      _TRISB 0F93  
                    _TRISD 0F95                      _Filas 001C               _TI_ResetTics 05D0  
                    _tecla 001A                      _timer 001D                      tablat 0FF5  
                    ttemp5 0031                      ttemp6 0034                      ttemp7 0038  
                    status 0FD8                      wtemp8 0031           __end_of_GetTecla 04FA  
          __initialization 0610               __end_of_main 0610                ?_RSI_Timer0 001E  
           TI_Init@counter 001F                ?_TI_GetTics 001F                     ??_main 0030  
            __activetblptr 0002                     _ADCON1 0FC1                  ??_TI_Init 001F  
                   i2l1310 0644                     i2l1312 064C                     i2l1314 064E  
                   i2l1482 065C                     i2l1484 066A                     _TMR0IF 7F92  
                ??_HighRSI 001E                     _LowRSI 0018                     _Timers 0001  
                   clear_0 0616                     isa$std 0001               __mediumconst 0200  
                   tblptrh 0FF7                     tblptrl 0FF6                     tblptru 0FF8  
               __accesstop 0080    __end_of__initialization 061C              ___rparam_used 0001  
           __pcstackCOMRAM 001E       TI_NewTimer@Comptador 0021          __end_of_ReadFilas 068E  
        __end_of_InitPorts 0644          motorTeclado@state 0019                  ?_GetTecla 001E  
             ?_TI_NewTimer 001F     TI_NewTimer@TimerHandle 001F                    ?_LowRSI 001E  
  TI_ResetTics@TimerHandle 001F                    i2u59_40 066A                    i2u59_41 0666  
               ??_GetTecla 001F                    _TI_Init 059C                    _HighRSI 0008  
                  __Hparam 0000                    __Lparam 0000               ??_RSI_Timer0 001E  
             __psmallconst 0200               ??_TI_GetTics 0023                    __pcinit 0610  
                  __ramtop 0200                    __ptext0 05F4                    __ptext1 020E  
                  __ptext2 0682                    __ptext3 05D0                    __ptext4 0550  
                  __ptext5 0688                    __ptext6 0436                    __ptext7 0672  
                  __ptext8 04FA                    __ptext9 059C              ?_motorTeclado 001E  
           __pintcode_body 065C       end_of_initialization 061C         __end_of_RSI_Timer0 065C  
            __Lmediumconst 0000                    int_func 065C         __end_of_TI_GetTics 059C  
        __end_of_showTecla 0688                    postinc0 0FEE                    postinc2 0FDE  
            GetTecla@F2717 0201             ??_motorTeclado 002F                  _PORTCbits 0F82  
    TI_GetTics@TimerHandle 002B                  _TRISAbits 0F92                  _TRISCbits 0F94  
           __end_of_LowRSI 0026        start_initialization 0610                  _ReadFilas 0688  
                _InitPorts 062A                   ??_LowRSI 001E              ??_initTeclado 0022  
              __pbssCOMRAM 0001                 ?_ReadFilas 001E                 ?_InitPorts 001E  
            ?_TI_ResetTics 001E                   ?_TI_Init 001E                   ?_HighRSI 001E  
     __end_of_motorTeclado 0436                  __pintcode 0008                __pintcodelo 0018  
              __smallconst 0200        __end_of_initTeclado 0682             ??_TI_ResetTics 001F  
                 _LATAbits 0F89                   _LATCbits 0F8B                  _showTecla 0682  
             GetTecla@fila 002E                ??_ReadFilas 001F                ??_InitPorts 001F  
                 _GetTecla 0436                _INTCON2bits 0FF1                   _Columnas 001B  
                 __Hrparam 0000                   __Lrparam 0000                 ?_showTecla 001E  
              _initTeclado 0672                   __ptext10 062A                   __ptext13 0644  
            ??_TI_NewTimer 0020                   isa$xinst 0000       __end_of_TI_ResetTics 05F4  
                 int$flags 0030               _motorTeclado 020E                 _INTCONbits 0FF2  
TI_GetTics@CopiaTicsActual 0027                   intlevel1 0000                   intlevel2 0000  
      __end_of_TI_NewTimer 0550                ??_showTecla 001F            GetTecla@columna 002D  
           GetTecla@keymap 0021  
