

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Feb 20 18:25:42 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 05/12/2024 GMT
    32                           ; 
    33                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4321 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000FE0                     bsr             equ	4064
    66   000FE9                     fsr0            equ	4073
    67   000FEA                     fsr0h           equ	4074
    68   000FE9                     fsr0l           equ	4073
    69   000FE1                     fsr1            equ	4065
    70   000FE2                     fsr1h           equ	4066
    71   000FE1                     fsr1l           equ	4065
    72   000FD9                     fsr2            equ	4057
    73   000FDA                     fsr2h           equ	4058
    74   000FD9                     fsr2l           equ	4057
    75   000FEF                     indf0           equ	4079
    76   000FE7                     indf1           equ	4071
    77   000FDF                     indf2           equ	4063
    78   000FF2                     intcon          equ	4082
    79   000000                     nvmcon          equ	0
    80   000FF9                     pcl             equ	4089
    81   000FFA                     pclath          equ	4090
    82   000FFB                     pclatu          equ	4091
    83   000FEB                     plusw0          equ	4075
    84   000FE3                     plusw1          equ	4067
    85   000FDB                     plusw2          equ	4059
    86   000FED                     postdec0        equ	4077
    87   000FE5                     postdec1        equ	4069
    88   000FDD                     postdec2        equ	4061
    89   000FEE                     postinc0        equ	4078
    90   000FE6                     postinc1        equ	4070
    91   000FDE                     postinc2        equ	4062
    92   000FEC                     preinc0         equ	4076
    93   000FE4                     preinc1         equ	4068
    94   000FDC                     preinc2         equ	4060
    95   000FF3                     prod            equ	4083
    96   000FF4                     prodh           equ	4084
    97   000FF3                     prodl           equ	4083
    98   000FD8                     status          equ	4056
    99   000FF5                     tablat          equ	4085
   100   000FF6                     tblptr          equ	4086
   101   000FF7                     tblptrh         equ	4087
   102   000FF6                     tblptrl         equ	4086
   103   000FF8                     tblptru         equ	4088
   104   000FFD                     tosl            equ	4093
   105   000FE8                     wreg            equ	4072
   106   000F80                     PORTA           equ	3968	;# 
   107   000F81                     PORTB           equ	3969	;# 
   108   000F82                     PORTC           equ	3970	;# 
   109   000F83                     PORTD           equ	3971	;# 
   110   000F84                     PORTE           equ	3972	;# 
   111   000F89                     LATA            equ	3977	;# 
   112   000F8A                     LATB            equ	3978	;# 
   113   000F8B                     LATC            equ	3979	;# 
   114   000F8C                     LATD            equ	3980	;# 
   115   000F8D                     LATE            equ	3981	;# 
   116   000F92                     TRISA           equ	3986	;# 
   117   000F92                     DDRA            equ	3986	;# 
   118   000F93                     TRISB           equ	3987	;# 
   119   000F93                     DDRB            equ	3987	;# 
   120   000F94                     TRISC           equ	3988	;# 
   121   000F94                     DDRC            equ	3988	;# 
   122   000F95                     TRISD           equ	3989	;# 
   123   000F95                     DDRD            equ	3989	;# 
   124   000F96                     TRISE           equ	3990	;# 
   125   000F96                     DDRE            equ	3990	;# 
   126   000F9B                     OSCTUNE         equ	3995	;# 
   127   000F9D                     PIE1            equ	3997	;# 
   128   000F9E                     PIR1            equ	3998	;# 
   129   000F9F                     IPR1            equ	3999	;# 
   130   000FA0                     PIE2            equ	4000	;# 
   131   000FA1                     PIR2            equ	4001	;# 
   132   000FA2                     IPR2            equ	4002	;# 
   133   000FA6                     EECON1          equ	4006	;# 
   134   000FA7                     EECON2          equ	4007	;# 
   135   000FA8                     EEDATA          equ	4008	;# 
   136   000FA9                     EEADR           equ	4009	;# 
   137   000FAB                     RCSTA           equ	4011	;# 
   138   000FAB                     RCSTA1          equ	4011	;# 
   139   000FAC                     TXSTA           equ	4012	;# 
   140   000FAC                     TXSTA1          equ	4012	;# 
   141   000FAD                     TXREG           equ	4013	;# 
   142   000FAD                     TXREG1          equ	4013	;# 
   143   000FAE                     RCREG           equ	4014	;# 
   144   000FAE                     RCREG1          equ	4014	;# 
   145   000FAF                     SPBRG           equ	4015	;# 
   146   000FAF                     SPBRG1          equ	4015	;# 
   147   000FB0                     SPBRGH          equ	4016	;# 
   148   000FB1                     T3CON           equ	4017	;# 
   149   000FB2                     TMR3            equ	4018	;# 
   150   000FB2                     TMR3L           equ	4018	;# 
   151   000FB3                     TMR3H           equ	4019	;# 
   152   000FB4                     CMCON           equ	4020	;# 
   153   000FB5                     CVRCON          equ	4021	;# 
   154   000FB6                     ECCP1AS         equ	4022	;# 
   155   000FB7                     ECCP1DEL        equ	4023	;# 
   156   000FB7                     PWM1CON         equ	4023	;# 
   157   000FB8                     BAUDCON         equ	4024	;# 
   158   000FB8                     BAUDCTL         equ	4024	;# 
   159   000FBA                     CCP2CON         equ	4026	;# 
   160   000FBB                     CCPR2           equ	4027	;# 
   161   000FBB                     CCPR2L          equ	4027	;# 
   162   000FBC                     CCPR2H          equ	4028	;# 
   163   000FBD                     CCP1CON         equ	4029	;# 
   164   000FBD                     ECCP1CON        equ	4029	;# 
   165   000FBE                     CCPR1           equ	4030	;# 
   166   000FBE                     CCPR1L          equ	4030	;# 
   167   000FBF                     CCPR1H          equ	4031	;# 
   168   000FC0                     ADCON2          equ	4032	;# 
   169   000FC1                     ADCON1          equ	4033	;# 
   170   000FC2                     ADCON0          equ	4034	;# 
   171   000FC3                     ADRES           equ	4035	;# 
   172   000FC3                     ADRESL          equ	4035	;# 
   173   000FC4                     ADRESH          equ	4036	;# 
   174   000FC5                     SSPCON2         equ	4037	;# 
   175   000FC6                     SSPCON1         equ	4038	;# 
   176   000FC7                     SSPSTAT         equ	4039	;# 
   177   000FC8                     SSPADD          equ	4040	;# 
   178   000FC9                     SSPBUF          equ	4041	;# 
   179   000FCA                     T2CON           equ	4042	;# 
   180   000FCB                     PR2             equ	4043	;# 
   181   000FCB                     MEMCON          equ	4043	;# 
   182   000FCC                     TMR2            equ	4044	;# 
   183   000FCD                     T1CON           equ	4045	;# 
   184   000FCE                     TMR1            equ	4046	;# 
   185   000FCE                     TMR1L           equ	4046	;# 
   186   000FCF                     TMR1H           equ	4047	;# 
   187   000FD0                     RCON            equ	4048	;# 
   188   000FD1                     WDTCON          equ	4049	;# 
   189   000FD2                     HLVDCON         equ	4050	;# 
   190   000FD2                     LVDCON          equ	4050	;# 
   191   000FD3                     OSCCON          equ	4051	;# 
   192   000FD5                     T0CON           equ	4053	;# 
   193   000FD6                     TMR0            equ	4054	;# 
   194   000FD6                     TMR0L           equ	4054	;# 
   195   000FD7                     TMR0H           equ	4055	;# 
   196   000FD8                     STATUS          equ	4056	;# 
   197   000FD9                     FSR2            equ	4057	;# 
   198   000FD9                     FSR2L           equ	4057	;# 
   199   000FDA                     FSR2H           equ	4058	;# 
   200   000FDB                     PLUSW2          equ	4059	;# 
   201   000FDC                     PREINC2         equ	4060	;# 
   202   000FDD                     POSTDEC2        equ	4061	;# 
   203   000FDE                     POSTINC2        equ	4062	;# 
   204   000FDF                     INDF2           equ	4063	;# 
   205   000FE0                     BSR             equ	4064	;# 
   206   000FE1                     FSR1            equ	4065	;# 
   207   000FE1                     FSR1L           equ	4065	;# 
   208   000FE2                     FSR1H           equ	4066	;# 
   209   000FE3                     PLUSW1          equ	4067	;# 
   210   000FE4                     PREINC1         equ	4068	;# 
   211   000FE5                     POSTDEC1        equ	4069	;# 
   212   000FE6                     POSTINC1        equ	4070	;# 
   213   000FE7                     INDF1           equ	4071	;# 
   214   000FE8                     WREG            equ	4072	;# 
   215   000FE9                     FSR0            equ	4073	;# 
   216   000FE9                     FSR0L           equ	4073	;# 
   217   000FEA                     FSR0H           equ	4074	;# 
   218   000FEB                     PLUSW0          equ	4075	;# 
   219   000FEC                     PREINC0         equ	4076	;# 
   220   000FED                     POSTDEC0        equ	4077	;# 
   221   000FEE                     POSTINC0        equ	4078	;# 
   222   000FEF                     INDF0           equ	4079	;# 
   223   000FF0                     INTCON3         equ	4080	;# 
   224   000FF1                     INTCON2         equ	4081	;# 
   225   000FF2                     INTCON          equ	4082	;# 
   226   000FF3                     PROD            equ	4083	;# 
   227   000FF3                     PRODL           equ	4083	;# 
   228   000FF4                     PRODH           equ	4084	;# 
   229   000FF5                     TABLAT          equ	4085	;# 
   230   000FF6                     TBLPTR          equ	4086	;# 
   231   000FF6                     TBLPTRL         equ	4086	;# 
   232   000FF7                     TBLPTRH         equ	4087	;# 
   233   000FF8                     TBLPTRU         equ	4088	;# 
   234   000FF9                     PCLAT           equ	4089	;# 
   235   000FF9                     PC              equ	4089	;# 
   236   000FF9                     PCL             equ	4089	;# 
   237   000FFA                     PCLATH          equ	4090	;# 
   238   000FFB                     PCLATU          equ	4091	;# 
   239   000FFC                     STKPTR          equ	4092	;# 
   240   000FFD                     TOS             equ	4093	;# 
   241   000FFD                     TOSL            equ	4093	;# 
   242   000FFE                     TOSH            equ	4094	;# 
   243   000FFF                     TOSU            equ	4095	;# 
   244   000F80                     PORTA           equ	3968	;# 
   245   000F81                     PORTB           equ	3969	;# 
   246   000F82                     PORTC           equ	3970	;# 
   247   000F83                     PORTD           equ	3971	;# 
   248   000F84                     PORTE           equ	3972	;# 
   249   000F89                     LATA            equ	3977	;# 
   250   000F8A                     LATB            equ	3978	;# 
   251   000F8B                     LATC            equ	3979	;# 
   252   000F8C                     LATD            equ	3980	;# 
   253   000F8D                     LATE            equ	3981	;# 
   254   000F92                     TRISA           equ	3986	;# 
   255   000F92                     DDRA            equ	3986	;# 
   256   000F93                     TRISB           equ	3987	;# 
   257   000F93                     DDRB            equ	3987	;# 
   258   000F94                     TRISC           equ	3988	;# 
   259   000F94                     DDRC            equ	3988	;# 
   260   000F95                     TRISD           equ	3989	;# 
   261   000F95                     DDRD            equ	3989	;# 
   262   000F96                     TRISE           equ	3990	;# 
   263   000F96                     DDRE            equ	3990	;# 
   264   000F9B                     OSCTUNE         equ	3995	;# 
   265   000F9D                     PIE1            equ	3997	;# 
   266   000F9E                     PIR1            equ	3998	;# 
   267   000F9F                     IPR1            equ	3999	;# 
   268   000FA0                     PIE2            equ	4000	;# 
   269   000FA1                     PIR2            equ	4001	;# 
   270   000FA2                     IPR2            equ	4002	;# 
   271   000FA6                     EECON1          equ	4006	;# 
   272   000FA7                     EECON2          equ	4007	;# 
   273   000FA8                     EEDATA          equ	4008	;# 
   274   000FA9                     EEADR           equ	4009	;# 
   275   000FAB                     RCSTA           equ	4011	;# 
   276   000FAB                     RCSTA1          equ	4011	;# 
   277   000FAC                     TXSTA           equ	4012	;# 
   278   000FAC                     TXSTA1          equ	4012	;# 
   279   000FAD                     TXREG           equ	4013	;# 
   280   000FAD                     TXREG1          equ	4013	;# 
   281   000FAE                     RCREG           equ	4014	;# 
   282   000FAE                     RCREG1          equ	4014	;# 
   283   000FAF                     SPBRG           equ	4015	;# 
   284   000FAF                     SPBRG1          equ	4015	;# 
   285   000FB0                     SPBRGH          equ	4016	;# 
   286   000FB1                     T3CON           equ	4017	;# 
   287   000FB2                     TMR3            equ	4018	;# 
   288   000FB2                     TMR3L           equ	4018	;# 
   289   000FB3                     TMR3H           equ	4019	;# 
   290   000FB4                     CMCON           equ	4020	;# 
   291   000FB5                     CVRCON          equ	4021	;# 
   292   000FB6                     ECCP1AS         equ	4022	;# 
   293   000FB7                     ECCP1DEL        equ	4023	;# 
   294   000FB7                     PWM1CON         equ	4023	;# 
   295   000FB8                     BAUDCON         equ	4024	;# 
   296   000FB8                     BAUDCTL         equ	4024	;# 
   297   000FBA                     CCP2CON         equ	4026	;# 
   298   000FBB                     CCPR2           equ	4027	;# 
   299   000FBB                     CCPR2L          equ	4027	;# 
   300   000FBC                     CCPR2H          equ	4028	;# 
   301   000FBD                     CCP1CON         equ	4029	;# 
   302   000FBD                     ECCP1CON        equ	4029	;# 
   303   000FBE                     CCPR1           equ	4030	;# 
   304   000FBE                     CCPR1L          equ	4030	;# 
   305   000FBF                     CCPR1H          equ	4031	;# 
   306   000FC0                     ADCON2          equ	4032	;# 
   307   000FC1                     ADCON1          equ	4033	;# 
   308   000FC2                     ADCON0          equ	4034	;# 
   309   000FC3                     ADRES           equ	4035	;# 
   310   000FC3                     ADRESL          equ	4035	;# 
   311   000FC4                     ADRESH          equ	4036	;# 
   312   000FC5                     SSPCON2         equ	4037	;# 
   313   000FC6                     SSPCON1         equ	4038	;# 
   314   000FC7                     SSPSTAT         equ	4039	;# 
   315   000FC8                     SSPADD          equ	4040	;# 
   316   000FC9                     SSPBUF          equ	4041	;# 
   317   000FCA                     T2CON           equ	4042	;# 
   318   000FCB                     PR2             equ	4043	;# 
   319   000FCB                     MEMCON          equ	4043	;# 
   320   000FCC                     TMR2            equ	4044	;# 
   321   000FCD                     T1CON           equ	4045	;# 
   322   000FCE                     TMR1            equ	4046	;# 
   323   000FCE                     TMR1L           equ	4046	;# 
   324   000FCF                     TMR1H           equ	4047	;# 
   325   000FD0                     RCON            equ	4048	;# 
   326   000FD1                     WDTCON          equ	4049	;# 
   327   000FD2                     HLVDCON         equ	4050	;# 
   328   000FD2                     LVDCON          equ	4050	;# 
   329   000FD3                     OSCCON          equ	4051	;# 
   330   000FD5                     T0CON           equ	4053	;# 
   331   000FD6                     TMR0            equ	4054	;# 
   332   000FD6                     TMR0L           equ	4054	;# 
   333   000FD7                     TMR0H           equ	4055	;# 
   334   000FD8                     STATUS          equ	4056	;# 
   335   000FD9                     FSR2            equ	4057	;# 
   336   000FD9                     FSR2L           equ	4057	;# 
   337   000FDA                     FSR2H           equ	4058	;# 
   338   000FDB                     PLUSW2          equ	4059	;# 
   339   000FDC                     PREINC2         equ	4060	;# 
   340   000FDD                     POSTDEC2        equ	4061	;# 
   341   000FDE                     POSTINC2        equ	4062	;# 
   342   000FDF                     INDF2           equ	4063	;# 
   343   000FE0                     BSR             equ	4064	;# 
   344   000FE1                     FSR1            equ	4065	;# 
   345   000FE1                     FSR1L           equ	4065	;# 
   346   000FE2                     FSR1H           equ	4066	;# 
   347   000FE3                     PLUSW1          equ	4067	;# 
   348   000FE4                     PREINC1         equ	4068	;# 
   349   000FE5                     POSTDEC1        equ	4069	;# 
   350   000FE6                     POSTINC1        equ	4070	;# 
   351   000FE7                     INDF1           equ	4071	;# 
   352   000FE8                     WREG            equ	4072	;# 
   353   000FE9                     FSR0            equ	4073	;# 
   354   000FE9                     FSR0L           equ	4073	;# 
   355   000FEA                     FSR0H           equ	4074	;# 
   356   000FEB                     PLUSW0          equ	4075	;# 
   357   000FEC                     PREINC0         equ	4076	;# 
   358   000FED                     POSTDEC0        equ	4077	;# 
   359   000FEE                     POSTINC0        equ	4078	;# 
   360   000FEF                     INDF0           equ	4079	;# 
   361   000FF0                     INTCON3         equ	4080	;# 
   362   000FF1                     INTCON2         equ	4081	;# 
   363   000FF2                     INTCON          equ	4082	;# 
   364   000FF3                     PROD            equ	4083	;# 
   365   000FF3                     PRODL           equ	4083	;# 
   366   000FF4                     PRODH           equ	4084	;# 
   367   000FF5                     TABLAT          equ	4085	;# 
   368   000FF6                     TBLPTR          equ	4086	;# 
   369   000FF6                     TBLPTRL         equ	4086	;# 
   370   000FF7                     TBLPTRH         equ	4087	;# 
   371   000FF8                     TBLPTRU         equ	4088	;# 
   372   000FF9                     PCLAT           equ	4089	;# 
   373   000FF9                     PC              equ	4089	;# 
   374   000FF9                     PCL             equ	4089	;# 
   375   000FFA                     PCLATH          equ	4090	;# 
   376   000FFB                     PCLATU          equ	4091	;# 
   377   000FFC                     STKPTR          equ	4092	;# 
   378   000FFD                     TOS             equ	4093	;# 
   379   000FFD                     TOSL            equ	4093	;# 
   380   000FFE                     TOSH            equ	4094	;# 
   381   000FFF                     TOSU            equ	4095	;# 
   382   000F80                     PORTA           equ	3968	;# 
   383   000F81                     PORTB           equ	3969	;# 
   384   000F82                     PORTC           equ	3970	;# 
   385   000F83                     PORTD           equ	3971	;# 
   386   000F84                     PORTE           equ	3972	;# 
   387   000F89                     LATA            equ	3977	;# 
   388   000F8A                     LATB            equ	3978	;# 
   389   000F8B                     LATC            equ	3979	;# 
   390   000F8C                     LATD            equ	3980	;# 
   391   000F8D                     LATE            equ	3981	;# 
   392   000F92                     TRISA           equ	3986	;# 
   393   000F92                     DDRA            equ	3986	;# 
   394   000F93                     TRISB           equ	3987	;# 
   395   000F93                     DDRB            equ	3987	;# 
   396   000F94                     TRISC           equ	3988	;# 
   397   000F94                     DDRC            equ	3988	;# 
   398   000F95                     TRISD           equ	3989	;# 
   399   000F95                     DDRD            equ	3989	;# 
   400   000F96                     TRISE           equ	3990	;# 
   401   000F96                     DDRE            equ	3990	;# 
   402   000F9B                     OSCTUNE         equ	3995	;# 
   403   000F9D                     PIE1            equ	3997	;# 
   404   000F9E                     PIR1            equ	3998	;# 
   405   000F9F                     IPR1            equ	3999	;# 
   406   000FA0                     PIE2            equ	4000	;# 
   407   000FA1                     PIR2            equ	4001	;# 
   408   000FA2                     IPR2            equ	4002	;# 
   409   000FA6                     EECON1          equ	4006	;# 
   410   000FA7                     EECON2          equ	4007	;# 
   411   000FA8                     EEDATA          equ	4008	;# 
   412   000FA9                     EEADR           equ	4009	;# 
   413   000FAB                     RCSTA           equ	4011	;# 
   414   000FAB                     RCSTA1          equ	4011	;# 
   415   000FAC                     TXSTA           equ	4012	;# 
   416   000FAC                     TXSTA1          equ	4012	;# 
   417   000FAD                     TXREG           equ	4013	;# 
   418   000FAD                     TXREG1          equ	4013	;# 
   419   000FAE                     RCREG           equ	4014	;# 
   420   000FAE                     RCREG1          equ	4014	;# 
   421   000FAF                     SPBRG           equ	4015	;# 
   422   000FAF                     SPBRG1          equ	4015	;# 
   423   000FB0                     SPBRGH          equ	4016	;# 
   424   000FB1                     T3CON           equ	4017	;# 
   425   000FB2                     TMR3            equ	4018	;# 
   426   000FB2                     TMR3L           equ	4018	;# 
   427   000FB3                     TMR3H           equ	4019	;# 
   428   000FB4                     CMCON           equ	4020	;# 
   429   000FB5                     CVRCON          equ	4021	;# 
   430   000FB6                     ECCP1AS         equ	4022	;# 
   431   000FB7                     ECCP1DEL        equ	4023	;# 
   432   000FB7                     PWM1CON         equ	4023	;# 
   433   000FB8                     BAUDCON         equ	4024	;# 
   434   000FB8                     BAUDCTL         equ	4024	;# 
   435   000FBA                     CCP2CON         equ	4026	;# 
   436   000FBB                     CCPR2           equ	4027	;# 
   437   000FBB                     CCPR2L          equ	4027	;# 
   438   000FBC                     CCPR2H          equ	4028	;# 
   439   000FBD                     CCP1CON         equ	4029	;# 
   440   000FBD                     ECCP1CON        equ	4029	;# 
   441   000FBE                     CCPR1           equ	4030	;# 
   442   000FBE                     CCPR1L          equ	4030	;# 
   443   000FBF                     CCPR1H          equ	4031	;# 
   444   000FC0                     ADCON2          equ	4032	;# 
   445   000FC1                     ADCON1          equ	4033	;# 
   446   000FC2                     ADCON0          equ	4034	;# 
   447   000FC3                     ADRES           equ	4035	;# 
   448   000FC3                     ADRESL          equ	4035	;# 
   449   000FC4                     ADRESH          equ	4036	;# 
   450   000FC5                     SSPCON2         equ	4037	;# 
   451   000FC6                     SSPCON1         equ	4038	;# 
   452   000FC7                     SSPSTAT         equ	4039	;# 
   453   000FC8                     SSPADD          equ	4040	;# 
   454   000FC9                     SSPBUF          equ	4041	;# 
   455   000FCA                     T2CON           equ	4042	;# 
   456   000FCB                     PR2             equ	4043	;# 
   457   000FCB                     MEMCON          equ	4043	;# 
   458   000FCC                     TMR2            equ	4044	;# 
   459   000FCD                     T1CON           equ	4045	;# 
   460   000FCE                     TMR1            equ	4046	;# 
   461   000FCE                     TMR1L           equ	4046	;# 
   462   000FCF                     TMR1H           equ	4047	;# 
   463   000FD0                     RCON            equ	4048	;# 
   464   000FD1                     WDTCON          equ	4049	;# 
   465   000FD2                     HLVDCON         equ	4050	;# 
   466   000FD2                     LVDCON          equ	4050	;# 
   467   000FD3                     OSCCON          equ	4051	;# 
   468   000FD5                     T0CON           equ	4053	;# 
   469   000FD6                     TMR0            equ	4054	;# 
   470   000FD6                     TMR0L           equ	4054	;# 
   471   000FD7                     TMR0H           equ	4055	;# 
   472   000FD8                     STATUS          equ	4056	;# 
   473   000FD9                     FSR2            equ	4057	;# 
   474   000FD9                     FSR2L           equ	4057	;# 
   475   000FDA                     FSR2H           equ	4058	;# 
   476   000FDB                     PLUSW2          equ	4059	;# 
   477   000FDC                     PREINC2         equ	4060	;# 
   478   000FDD                     POSTDEC2        equ	4061	;# 
   479   000FDE                     POSTINC2        equ	4062	;# 
   480   000FDF                     INDF2           equ	4063	;# 
   481   000FE0                     BSR             equ	4064	;# 
   482   000FE1                     FSR1            equ	4065	;# 
   483   000FE1                     FSR1L           equ	4065	;# 
   484   000FE2                     FSR1H           equ	4066	;# 
   485   000FE3                     PLUSW1          equ	4067	;# 
   486   000FE4                     PREINC1         equ	4068	;# 
   487   000FE5                     POSTDEC1        equ	4069	;# 
   488   000FE6                     POSTINC1        equ	4070	;# 
   489   000FE7                     INDF1           equ	4071	;# 
   490   000FE8                     WREG            equ	4072	;# 
   491   000FE9                     FSR0            equ	4073	;# 
   492   000FE9                     FSR0L           equ	4073	;# 
   493   000FEA                     FSR0H           equ	4074	;# 
   494   000FEB                     PLUSW0          equ	4075	;# 
   495   000FEC                     PREINC0         equ	4076	;# 
   496   000FED                     POSTDEC0        equ	4077	;# 
   497   000FEE                     POSTINC0        equ	4078	;# 
   498   000FEF                     INDF0           equ	4079	;# 
   499   000FF0                     INTCON3         equ	4080	;# 
   500   000FF1                     INTCON2         equ	4081	;# 
   501   000FF2                     INTCON          equ	4082	;# 
   502   000FF3                     PROD            equ	4083	;# 
   503   000FF3                     PRODL           equ	4083	;# 
   504   000FF4                     PRODH           equ	4084	;# 
   505   000FF5                     TABLAT          equ	4085	;# 
   506   000FF6                     TBLPTR          equ	4086	;# 
   507   000FF6                     TBLPTRL         equ	4086	;# 
   508   000FF7                     TBLPTRH         equ	4087	;# 
   509   000FF8                     TBLPTRU         equ	4088	;# 
   510   000FF9                     PCLAT           equ	4089	;# 
   511   000FF9                     PC              equ	4089	;# 
   512   000FF9                     PCL             equ	4089	;# 
   513   000FFA                     PCLATH          equ	4090	;# 
   514   000FFB                     PCLATU          equ	4091	;# 
   515   000FFC                     STKPTR          equ	4092	;# 
   516   000FFD                     TOS             equ	4093	;# 
   517   000FFD                     TOSL            equ	4093	;# 
   518   000FFE                     TOSH            equ	4094	;# 
   519   000FFF                     TOSU            equ	4095	;# 
   520                           
   521                           	psect	smallconst
   522   000200                     __psmallconst:
   523                           	callstack 0
   524   000200  00                 	db	0
   525   000201                     GetTecla@F2725:
   526                           	callstack 0
   527   000201  01                 	db	1
   528   000202  02                 	db	2
   529   000203  03                 	db	3
   530   000204  04                 	db	4
   531   000205  05                 	db	5
   532   000206  06                 	db	6
   533   000207  07                 	db	7
   534   000208  08                 	db	8
   535   000209  09                 	db	9
   536   00020A  0A                 	db	10
   537   00020B  00                 	db	0
   538   00020C  0B                 	db	11
   539   00020D                     __end_ofGetTecla@F2725:
   540                           	callstack 0
   541   007F92                     _TMR0IF         set	32658
   542   000FD6                     _TMR0           set	4054
   543   000F80                     _PORTA          set	3968
   544   000F8B                     _LATC           set	3979
   545   000F8C                     _LATD           set	3980
   546   000F95                     _TRISD          set	3989
   547   000F8A                     _LATB           set	3978
   548   000F93                     _TRISB          set	3987
   549   000FF1                     _INTCON2bits    set	4081
   550   000F92                     _TRISA          set	3986
   551   000FC1                     _ADCON1         set	4033
   552   000FF2                     _INTCONbits     set	4082
   553   000FD5                     _T0CON          set	4053
   554   00020D  00                 	db	0	; dummy byte at the end
   555   000200                     __smallconst    set	__psmallconst
   556   000200                     __mediumconst   set	__psmallconst
   557   000002                     __activetblptr  equ	2
   558                           
   559                           ; #config settings
   560                           
   561                           	psect	cinit
   562   000574                     __pcinit:
   563                           	callstack 0
   564   000574                     start_initialization:
   565                           	callstack 0
   566   000574                     __initialization:
   567                           	callstack 0
   568                           
   569                           ; Clear objects allocated to COMRAM (32 bytes)
   570   000574  EE00  F001         	lfsr	0,__pbssCOMRAM
   571   000578  0E20               	movlw	32
   572   00057A                     clear_0:
   573   00057A  6AEE               	clrf	postinc0,c
   574   00057C  06E8               	decf	wreg,f,c
   575   00057E  E1FD               	bnz	clear_0
   576   000580                     end_of_initialization:
   577                           	callstack 0
   578   000580                     __end_of__initialization:
   579                           	callstack 0
   580   000580  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   581   000582  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   582   000584  0E00               	movlw	low (__Lmediumconst shr (0+16))
   583   000586  6EF8               	movwf	tblptru,c
   584   000588  0100               	movlb	0
   585   00058A  EFAC  F002         	goto	_main	;jump to C main() function
   586                           
   587                           	psect	bssCOMRAM
   588   000001                     __pbssCOMRAM:
   589                           	callstack 0
   590   000001                     _Timers:
   591                           	callstack 0
   592   000001                     	ds	20
   593   000015                     _Tics:
   594                           	callstack 0
   595   000015                     	ds	4
   596   000019                     _tick_count:
   597                           	callstack 0
   598   000019                     	ds	2
   599   00001B                     _tecla:
   600                           	callstack 0
   601   00001B                     	ds	1
   602   00001C                     _HiHaTecla:
   603                           	callstack 0
   604   00001C                     	ds	1
   605   00001D                     _state:
   606                           	callstack 0
   607   00001D                     	ds	1
   608   00001E                     _Columnas:
   609                           	callstack 0
   610   00001E                     	ds	1
   611   00001F                     _Filas:
   612                           	callstack 0
   613   00001F                     	ds	1
   614   000020                     _timer:
   615                           	callstack 0
   616   000020                     	ds	1
   617                           
   618                           	psect	cstackCOMRAM
   619   000021                     __pcstackCOMRAM:
   620                           	callstack 0
   621   000021                     ??_LowRSI:
   622                           
   623                           ; 1 bytes @ 0x0
   624   000021                     	ds	1
   625   000022                     ?_TI_GetTics:
   626                           	callstack 0
   627   000022                     TI_Init@counter:
   628                           	callstack 0
   629   000022                     TI_NewTimer@TimerHandle:
   630                           	callstack 0
   631   000022                     TI_ResetTics@TimerHandle:
   632                           	callstack 0
   633   000022                     ProcessKey@key:
   634                           	callstack 0
   635   000022                     GetTecla@columnas:
   636                           	callstack 0
   637   000022                     
   638                           ; 1 bytes @ 0x1
   639   000022                     	ds	1
   640   000023                     ??_GetTecla:
   641   000023                     ??_StopRequest:
   642   000023                     
   643                           ; 1 bytes @ 0x2
   644   000023                     	ds	1
   645   000024                     TI_NewTimer@Comptador:
   646                           	callstack 0
   647   000024                     StopRequest@key:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x3
   651   000024                     	ds	1
   652   000025                     GetTecla@keymap:
   653                           	callstack 0
   654   000025                     
   655                           ; 1 bytes @ 0x4
   656   000025                     	ds	1
   657   000026                     ??_TI_GetTics:
   658                           
   659                           ; 1 bytes @ 0x5
   660   000026                     	ds	4
   661   00002A                     TI_GetTics@CopiaTicsActual:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x9
   665   00002A                     	ds	4
   666   00002E                     TI_GetTics@TimerHandle:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0xD
   670   00002E                     	ds	3
   671   000031                     GetTecla@filas:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x10
   675   000031                     	ds	1
   676   000032                     GetTecla@columna:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x11
   680   000032                     	ds	1
   681   000033                     GetTecla@fila:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x12
   685   000033                     	ds	1
   686   000034                     ??_motorTeclado:
   687                           
   688                           ; 1 bytes @ 0x13
   689   000034                     	ds	1
   690   000035                     
   691                           ; 1 bytes @ 0x14
   692 ;;
   693 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   694 ;;
   695 ;; *************** function _main *****************
   696 ;; Defined at:
   697 ;;		line 38 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1
   711 ;;      Params:         0       0       0
   712 ;;      Locals:         0       0       0
   713 ;;      Temps:          0       0       0
   714 ;;      Totals:         0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels required when called: 6
   717 ;; This function calls:
   718 ;;		_InitPorts
   719 ;;		_TI_Init
   720 ;;		_initTeclado
   721 ;;		_motorTeclado
   722 ;; This function is called by:
   723 ;;		Startup code after reset
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text0
   728   000558                     __ptext0:
   729                           	callstack 0
   730   000558                     _main:
   731                           	callstack 25
   732   000558                     
   733                           ;main.c: 39:  TRISA |= 0x0F;
   734   000558  ECEB  F002         	call	_InitPorts	;wreg free
   735   00055C                     
   736                           ;main.c: 40: 
   737   00055C  EC80  F002         	call	_TI_Init	;wreg free
   738   000560                     
   739                           ;main.c: 41:  INTCON2bits.RBPU = 0;
   740   000560  ECE0  F002         	call	_initTeclado	;wreg free
   741   000564                     
   742                           ;main.c: 44:  TRISB &= 0xF8;
   743   000564  8EF2               	bsf	242,7,c	;volatile
   744   000566                     
   745                           ;main.c: 45:  LATB |= 0x00;
   746   000566  8CF2               	bsf	242,6,c	;volatile
   747   000568                     l1210:
   748                           
   749                           ;main.c: 48:  TRISD = 0x00;
   750   000568  EC07  F001         	call	_motorTeclado	;wreg free
   751   00056C  EFB4  F002         	goto	l1210
   752   000570  EF13  F000         	goto	start
   753   000574                     __end_of_main:
   754                           	callstack 0
   755                           
   756 ;; *************** function _motorTeclado *****************
   757 ;; Defined at:
   758 ;;		line 27 in file "TAD_TECLADO.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1
   772 ;;      Params:         0       0       0
   773 ;;      Locals:         0       0       0
   774 ;;      Temps:          1       0       0
   775 ;;      Totals:         1       0       0
   776 ;;Total ram usage:        1 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; Hardware stack levels required when called: 5
   779 ;; This function calls:
   780 ;;		_GetTecla
   781 ;;		_ReadFilas
   782 ;;		_StopRequest
   783 ;;		_TI_GetTics
   784 ;;		_TI_ResetTics
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text1
   791   00020E                     __ptext1:
   792                           	callstack 0
   793   00020E                     _motorTeclado:
   794                           	callstack 25
   795   00020E                     
   796                           ;TAD_TECLADO.c: 28:     Filas = ReadFilas();
   797   00020E  EC05  F003         	call	_ReadFilas	;wreg free
   798   000212  6E1F               	movwf	_Filas^0,c
   799                           
   800                           ;TAD_TECLADO.c: 29:  switch(state) {
   801   000214  EFAB  F001         	goto	l1196
   802   000218                     l1134:
   803                           
   804                           ;TAD_TECLADO.c: 31:    if (Filas == 0x0) {
   805   000218  501F               	movf	_Filas^0,w,c
   806   00021A  A4D8               	btfss	status,2,c
   807   00021C  EF12  F001         	goto	u201
   808   000220  EF14  F001         	goto	u200
   809   000224                     u201:
   810   000224  EF1C  F001         	goto	l1140
   811   000228                     u200:
   812   000228                     
   813                           ;TAD_TECLADO.c: 32:     Columnas = (0x01);
   814   000228  0E01               	movlw	1
   815   00022A  6E1E               	movwf	_Columnas^0,c
   816   00022C                     
   817                           ;TAD_TECLADO.c: 33:                 LATB = Columnas;
   818   00022C  C01E  FF8A         	movff	_Columnas,3978	;volatile
   819                           
   820                           ;TAD_TECLADO.c: 34:     state = 1;
   821   000230  0E01               	movlw	1
   822   000232  6E1D               	movwf	_state^0,c
   823                           
   824                           ;TAD_TECLADO.c: 35:    }
   825   000234  EFC2  F001         	goto	l1198
   826   000238                     l1140:
   827   000238  501F               	movf	_Filas^0,w,c
   828   00023A  B4D8               	btfsc	status,2,c
   829   00023C  EF22  F001         	goto	u211
   830   000240  EF24  F001         	goto	u210
   831   000244                     u211:
   832   000244  EFC2  F001         	goto	l1198
   833   000248                     u210:
   834   000248                     
   835                           ;TAD_TECLADO.c: 37:                 TI_ResetTics(timer);
   836   000248  5020               	movf	_timer^0,w,c
   837   00024A  EC9A  F002         	call	_TI_ResetTics
   838   00024E                     l1144:
   839                           
   840                           ;TAD_TECLADO.c: 38:     state = 4;
   841   00024E  0E04               	movlw	4
   842   000250  6E1D               	movwf	_state^0,c
   843   000252  EFC2  F001         	goto	l1198
   844   000256                     l1146:
   845                           
   846                           ;TAD_TECLADO.c: 42:    if (Filas == 0x0) {
   847   000256  501F               	movf	_Filas^0,w,c
   848   000258  A4D8               	btfss	status,2,c
   849   00025A  EF31  F001         	goto	u221
   850   00025E  EF33  F001         	goto	u220
   851   000262                     u221:
   852   000262  EF3B  F001         	goto	l1152
   853   000266                     u220:
   854   000266                     
   855                           ;TAD_TECLADO.c: 43:     Columnas = (0x02);
   856   000266  0E02               	movlw	2
   857   000268  6E1E               	movwf	_Columnas^0,c
   858   00026A                     
   859                           ;TAD_TECLADO.c: 44:                 LATB = Columnas;
   860   00026A  C01E  FF8A         	movff	_Columnas,3978	;volatile
   861                           
   862                           ;TAD_TECLADO.c: 45:     state = 2;
   863   00026E  0E02               	movlw	2
   864   000270  6E1D               	movwf	_state^0,c
   865                           
   866                           ;TAD_TECLADO.c: 46:    }
   867   000272  EFC2  F001         	goto	l1198
   868   000276                     l1152:
   869   000276  501F               	movf	_Filas^0,w,c
   870   000278  B4D8               	btfsc	status,2,c
   871   00027A  EF41  F001         	goto	u231
   872   00027E  EF43  F001         	goto	u230
   873   000282                     u231:
   874   000282  EFC2  F001         	goto	l1198
   875   000286                     u230:
   876   000286                     
   877                           ;TAD_TECLADO.c: 48:                 TI_ResetTics(timer);
   878   000286  5020               	movf	_timer^0,w,c
   879   000288  EC9A  F002         	call	_TI_ResetTics
   880   00028C  EF27  F001         	goto	l1144
   881   000290                     l1158:
   882                           
   883                           ;TAD_TECLADO.c: 53:    if (Filas == 0x0) {
   884   000290  501F               	movf	_Filas^0,w,c
   885   000292  A4D8               	btfss	status,2,c
   886   000294  EF4E  F001         	goto	u241
   887   000298  EF50  F001         	goto	u240
   888   00029C                     u241:
   889   00029C  EF58  F001         	goto	l1164
   890   0002A0                     u240:
   891   0002A0                     
   892                           ;TAD_TECLADO.c: 54:     Columnas = (0x04);
   893   0002A0  0E04               	movlw	4
   894   0002A2  6E1E               	movwf	_Columnas^0,c
   895   0002A4                     
   896                           ;TAD_TECLADO.c: 55:                 LATB = Columnas;
   897   0002A4  C01E  FF8A         	movff	_Columnas,3978	;volatile
   898                           
   899                           ;TAD_TECLADO.c: 56:     state = 3;
   900   0002A8  0E03               	movlw	3
   901   0002AA  6E1D               	movwf	_state^0,c
   902                           
   903                           ;TAD_TECLADO.c: 57:    }
   904   0002AC  EFC2  F001         	goto	l1198
   905   0002B0                     l1164:
   906   0002B0  501F               	movf	_Filas^0,w,c
   907   0002B2  B4D8               	btfsc	status,2,c
   908   0002B4  EF5E  F001         	goto	u251
   909   0002B8  EF60  F001         	goto	u250
   910   0002BC                     u251:
   911   0002BC  EFC2  F001         	goto	l1198
   912   0002C0                     u250:
   913   0002C0                     
   914                           ;TAD_TECLADO.c: 59:                 TI_ResetTics(timer);
   915   0002C0  5020               	movf	_timer^0,w,c
   916   0002C2  EC9A  F002         	call	_TI_ResetTics
   917   0002C6  EF27  F001         	goto	l1144
   918   0002CA                     l1170:
   919                           
   920                           ;TAD_TECLADO.c: 64:    if (Filas != 0x0) {
   921   0002CA  501F               	movf	_Filas^0,w,c
   922   0002CC  B4D8               	btfsc	status,2,c
   923   0002CE  EF6B  F001         	goto	u261
   924   0002D2  EF6D  F001         	goto	u260
   925   0002D6                     u261:
   926   0002D6  EF72  F001         	goto	l1176
   927   0002DA                     u260:
   928   0002DA                     
   929                           ;TAD_TECLADO.c: 65:                 TI_ResetTics(timer);
   930   0002DA  5020               	movf	_timer^0,w,c
   931   0002DC  EC9A  F002         	call	_TI_ResetTics
   932   0002E0  EF27  F001         	goto	l1144
   933   0002E4                     l1176:
   934   0002E4  501F               	movf	_Filas^0,w,c
   935   0002E6  A4D8               	btfss	status,2,c
   936   0002E8  EF78  F001         	goto	u271
   937   0002EC  EF7A  F001         	goto	u270
   938   0002F0                     u271:
   939   0002F0  EFC2  F001         	goto	l1198
   940   0002F4                     u270:
   941   0002F4                     l1178:
   942                           
   943                           ;TAD_TECLADO.c: 69:     state = 0;
   944   0002F4  6A1D               	clrf	_state^0,c
   945   0002F6  EFC2  F001         	goto	l1198
   946   0002FA                     l1180:
   947                           
   948                           ;TAD_TECLADO.c: 73:    if (Filas == 0x0) {
   949   0002FA  501F               	movf	_Filas^0,w,c
   950   0002FC  A4D8               	btfss	status,2,c
   951   0002FE  EF83  F001         	goto	u281
   952   000302  EF85  F001         	goto	u280
   953   000306                     u281:
   954   000306  EF87  F001         	goto	l1184
   955   00030A                     u280:
   956   00030A  EF7A  F001         	goto	l1178
   957   00030E                     l1184:
   958   00030E  501F               	movf	_Filas^0,w,c
   959   000310  B4D8               	btfsc	status,2,c
   960   000312  EF8D  F001         	goto	u291
   961   000316  EF8F  F001         	goto	u290
   962   00031A                     u291:
   963   00031A  EFC2  F001         	goto	l1198
   964   00031E                     u290:
   965   00031E  5020               	movf	_timer^0,w,c
   966   000320  EC5A  F002         	call	_TI_GetTics
   967   000324  5025               	movf	(?_TI_GetTics+3)^0,w,c
   968   000326  1024               	iorwf	(?_TI_GetTics+2)^0,w,c
   969   000328  E10B               	bnz	u300
   970   00032A  0EF5               	movlw	245
   971   00032C  5C22               	subwf	?_TI_GetTics^0,w,c
   972   00032E  0E01               	movlw	1
   973   000330  5823               	subwfb	(?_TI_GetTics+1)^0,w,c
   974   000332  A0D8               	btfss	status,0,c
   975   000334  EF9E  F001         	goto	u301
   976   000338  EFA0  F001         	goto	u300
   977   00033C                     u301:
   978   00033C  EFC2  F001         	goto	l1198
   979   000340                     u300:
   980   000340                     
   981                           ;TAD_TECLADO.c: 77:     tecla = GetTecla(Filas, Columnas);
   982   000340  C01E  F022         	movff	_Columnas,GetTecla@columnas
   983   000344  501F               	movf	_Filas^0,w,c
   984   000346  ECCC  F001         	call	_GetTecla
   985   00034A  6E1B               	movwf	_tecla^0,c
   986   00034C                     
   987                           ;TAD_TECLADO.c: 78:                 StopRequest(tecla);
   988   00034C  501B               	movf	_tecla^0,w,c
   989   00034E  ECC7  F002         	call	_StopRequest
   990   000352  EF7A  F001         	goto	l1178
   991   000356                     l1196:
   992   000356  501D               	movf	_state^0,w,c
   993                           
   994                           ; Switch size 1, requested type "simple"
   995                           ; Number of cases is 5, Range of values is 0 to 4
   996                           ; switch strategies available:
   997                           ; Name         Instructions Cycles
   998                           ; simple_byte           16     9 (average)
   999                           ;	Chosen strategy is simple_byte
  1000   000358  0A00               	xorlw	0	; case 0
  1001   00035A  B4D8               	btfsc	status,2,c
  1002   00035C  EF0C  F001         	goto	l1134
  1003   000360  0A01               	xorlw	1	; case 1
  1004   000362  B4D8               	btfsc	status,2,c
  1005   000364  EF2B  F001         	goto	l1146
  1006   000368  0A03               	xorlw	3	; case 2
  1007   00036A  B4D8               	btfsc	status,2,c
  1008   00036C  EF48  F001         	goto	l1158
  1009   000370  0A01               	xorlw	1	; case 3
  1010   000372  B4D8               	btfsc	status,2,c
  1011   000374  EF65  F001         	goto	l1170
  1012   000378  0A07               	xorlw	7	; case 4
  1013   00037A  B4D8               	btfsc	status,2,c
  1014   00037C  EF7D  F001         	goto	l1180
  1015   000380  EFC2  F001         	goto	l1198
  1016   000384                     l1198:
  1017                           
  1018                           ;TAD_TECLADO.c: 83:     LATD = (LATD & 0x0F) | (state << 4);
  1019   000384  C01D  F034         	movff	_state,??_motorTeclado
  1020   000388  3A34               	swapf	??_motorTeclado^0,f,c
  1021   00038A  0EF0               	movlw	240
  1022   00038C  1634               	andwf	??_motorTeclado^0,f,c
  1023   00038E  508C               	movf	140,w,c	;volatile
  1024   000390  0B0F               	andlw	15
  1025   000392  1034               	iorwf	??_motorTeclado^0,w,c
  1026   000394  6E8C               	movwf	140,c	;volatile
  1027   000396  0012               	return		;funcret
  1028   000398                     __end_of_motorTeclado:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _TI_ResetTics *****************
  1032 ;; Defined at:
  1033 ;;		line 53 in file "TAD_TIMER.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  TimerHandle     1    wreg     unsigned char 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  TimerHandle     1    1[COMRAM] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1
  1047 ;;      Params:         0       0       0
  1048 ;;      Locals:         1       0       0
  1049 ;;      Temps:          0       0       0
  1050 ;;      Totals:         1       0       0
  1051 ;;Total ram usage:        1 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 3
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_motorTeclado
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text2
  1062   000534                     __ptext2:
  1063                           	callstack 0
  1064   000534                     _TI_ResetTics:
  1065                           	callstack 26
  1066                           
  1067                           ;incstack = 0
  1068                           ;TI_ResetTics@TimerHandle stored from wreg
  1069   000534  6E22               	movwf	TI_ResetTics@TimerHandle^0,c
  1070   000536                     
  1071                           ;TAD_TIMER.c: 57:  (INTCONbits.GIE = 0); Timers[TimerHandle].TicsInicials=Tics; (INTCONb
      +                          its.GIE = 1);
  1072   000536  9EF2               	bcf	242,7,c	;volatile
  1073   000538  5022               	movf	TI_ResetTics@TimerHandle^0,w,c
  1074   00053A  0D05               	mullw	5
  1075   00053C  50F3               	movf	243,w,c
  1076   00053E  0F01               	addlw	low _Timers
  1077   000540  6ED9               	movwf	fsr2l,c
  1078   000542  6ADA               	clrf	fsr2h,c
  1079   000544  C015  FFDE         	movff	_Tics,postinc2	;volatile
  1080   000548  C016  FFDE         	movff	_Tics+1,postinc2	;volatile
  1081   00054C  C017  FFDE         	movff	_Tics+2,postinc2	;volatile
  1082   000550  C018  FFDE         	movff	_Tics+3,postinc2	;volatile
  1083   000554  8EF2               	bsf	242,7,c	;volatile
  1084   000556  0012               	return		;funcret
  1085   000558                     __end_of_TI_ResetTics:
  1086                           	callstack 0
  1087                           
  1088 ;; *************** function _TI_GetTics *****************
  1089 ;; Defined at:
  1090 ;;		line 61 in file "TAD_TIMER.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  TimerHandle     1    wreg     unsigned char 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  TimerHandle     1   13[COMRAM] unsigned char 
  1095 ;;  CopiaTicsAct    4    9[COMRAM] unsigned long 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  4    1[COMRAM] unsigned long 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1
  1105 ;;      Params:         4       0       0
  1106 ;;      Locals:         5       0       0
  1107 ;;      Temps:          4       0       0
  1108 ;;      Totals:        13       0       0
  1109 ;;Total ram usage:       13 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; Hardware stack levels required when called: 3
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_motorTeclado
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text3
  1120   0004B4                     __ptext3:
  1121                           	callstack 0
  1122   0004B4                     _TI_GetTics:
  1123                           	callstack 26
  1124                           
  1125                           ;incstack = 0
  1126                           ;TI_GetTics@TimerHandle stored from wreg
  1127   0004B4  6E2E               	movwf	TI_GetTics@TimerHandle^0,c
  1128   0004B6                     
  1129                           ;TAD_TIMER.c: 62:     (INTCONbits.GIE = 0); unsigned long CopiaTicsActual=Tics; (INTCONb
      +                          its.GIE = 1);
  1130   0004B6  9EF2               	bcf	242,7,c	;volatile
  1131   0004B8  C015  F02A         	movff	_Tics,TI_GetTics@CopiaTicsActual	;volatile
  1132   0004BC  C016  F02B         	movff	_Tics+1,TI_GetTics@CopiaTicsActual+1	;volatile
  1133   0004C0  C017  F02C         	movff	_Tics+2,TI_GetTics@CopiaTicsActual+2	;volatile
  1134   0004C4  C018  F02D         	movff	_Tics+3,TI_GetTics@CopiaTicsActual+3	;volatile
  1135   0004C8  8EF2               	bsf	242,7,c	;volatile
  1136   0004CA                     
  1137                           ;TAD_TIMER.c: 63:  return (CopiaTicsActual-(Timers[TimerHandle].TicsInicials));
  1138   0004CA  502E               	movf	TI_GetTics@TimerHandle^0,w,c
  1139   0004CC  0D05               	mullw	5
  1140   0004CE  50F3               	movf	243,w,c
  1141   0004D0  0F01               	addlw	low _Timers
  1142   0004D2  6ED9               	movwf	fsr2l,c
  1143   0004D4  6ADA               	clrf	fsr2h,c
  1144   0004D6  CFDE F026          	movff	postinc2,??_TI_GetTics
  1145   0004DA  CFDE F027          	movff	postinc2,??_TI_GetTics+1
  1146   0004DE  CFDE F028          	movff	postinc2,??_TI_GetTics+2
  1147   0004E2  CFDE F029          	movff	postinc2,??_TI_GetTics+3
  1148   0004E6  5026               	movf	??_TI_GetTics^0,w,c
  1149   0004E8  5C2A               	subwf	TI_GetTics@CopiaTicsActual^0,w,c
  1150   0004EA  6E22               	movwf	?_TI_GetTics^0,c
  1151   0004EC  5027               	movf	(??_TI_GetTics+1)^0,w,c
  1152   0004EE  582B               	subwfb	(TI_GetTics@CopiaTicsActual+1)^0,w,c
  1153   0004F0  6E23               	movwf	(?_TI_GetTics+1)^0,c
  1154   0004F2  5028               	movf	(??_TI_GetTics+2)^0,w,c
  1155   0004F4  582C               	subwfb	(TI_GetTics@CopiaTicsActual+2)^0,w,c
  1156   0004F6  6E24               	movwf	(?_TI_GetTics+2)^0,c
  1157   0004F8  5029               	movf	(??_TI_GetTics+3)^0,w,c
  1158   0004FA  582D               	subwfb	(TI_GetTics@CopiaTicsActual+3)^0,w,c
  1159   0004FC  6E25               	movwf	(?_TI_GetTics+3)^0,c
  1160   0004FE  0012               	return		;funcret
  1161   000500                     __end_of_TI_GetTics:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _StopRequest *****************
  1165 ;; Defined at:
  1166 ;;		line 116 in file "TAD_TECLADO.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  key             1    wreg     unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  key             1    3[COMRAM] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1
  1180 ;;      Params:         0       0       0
  1181 ;;      Locals:         1       0       0
  1182 ;;      Temps:          1       0       0
  1183 ;;      Totals:         2       0       0
  1184 ;;Total ram usage:        2 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 4
  1187 ;; This function calls:
  1188 ;;		_ProcessKey
  1189 ;; This function is called by:
  1190 ;;		_motorTeclado
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text4
  1195   00058E                     __ptext4:
  1196                           	callstack 0
  1197   00058E                     _StopRequest:
  1198                           	callstack 25
  1199                           
  1200                           ;incstack = 0
  1201                           ;StopRequest@key stored from wreg
  1202   00058E  6E24               	movwf	StopRequest@key^0,c
  1203   000590                     
  1204                           ;TAD_TECLADO.c: 118:     LATD = (LATD & 0xF0) | (key & 0x0F);
  1205   000590  C024  F023         	movff	StopRequest@key,??_StopRequest
  1206   000594  0E0F               	movlw	15
  1207   000596  1623               	andwf	??_StopRequest^0,f,c
  1208   000598  508C               	movf	140,w,c	;volatile
  1209   00059A  0BF0               	andlw	240
  1210   00059C  1023               	iorwf	??_StopRequest^0,w,c
  1211   00059E  6E8C               	movwf	140,c	;volatile
  1212   0005A0                     
  1213                           ;TAD_TECLADO.c: 121:     ProcessKey(key);
  1214   0005A0  5024               	movf	StopRequest@key^0,w,c
  1215   0005A2  EC01  F003         	call	_ProcessKey
  1216   0005A6  0012               	return		;funcret
  1217   0005A8                     __end_of_StopRequest:
  1218                           	callstack 0
  1219                           
  1220 ;; *************** function _ProcessKey *****************
  1221 ;; Defined at:
  1222 ;;		line 72 in file "main.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  key             1    wreg     unsigned char 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  key             1    1[COMRAM] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1
  1236 ;;      Params:         0       0       0
  1237 ;;      Locals:         1       0       0
  1238 ;;      Temps:          0       0       0
  1239 ;;      Totals:         1       0       0
  1240 ;;Total ram usage:        1 bytes
  1241 ;; Hardware stack levels used: 1
  1242 ;; Hardware stack levels required when called: 3
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_StopRequest
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text5
  1251   000602                     __ptext5:
  1252                           	callstack 0
  1253   000602                     _ProcessKey:
  1254                           	callstack 25
  1255                           
  1256                           ;incstack = 0
  1257                           ;ProcessKey@key stored from wreg
  1258   000602  6E22               	movwf	ProcessKey@key^0,c
  1259   000604  C022  FF8B         	movff	ProcessKey@key,3979	;volatile
  1260   000608  0012               	return		;funcret
  1261   00060A                     __end_of_ProcessKey:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _ReadFilas *****************
  1265 ;; Defined at:
  1266 ;;		line 10 in file "TAD_TECLADO.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      unsigned char 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1
  1280 ;;      Params:         0       0       0
  1281 ;;      Locals:         0       0       0
  1282 ;;      Temps:          0       0       0
  1283 ;;      Totals:         0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 3
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_motorTeclado
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text6
  1295   00060A                     __ptext6:
  1296                           	callstack 0
  1297   00060A                     _ReadFilas:
  1298                           	callstack 26
  1299   00060A                     
  1300                           ;TAD_TECLADO.c: 11:     return (PORTA & 0x0F);
  1301   00060A  5080               	movf	128,w,c	;volatile
  1302   00060C  0B0F               	andlw	15
  1303   00060E  0012               	return		;funcret
  1304   000610                     __end_of_ReadFilas:
  1305                           	callstack 0
  1306                           
  1307 ;; *************** function _GetTecla *****************
  1308 ;; Defined at:
  1309 ;;		line 86 in file "TAD_TECLADO.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  filas           1    wreg     unsigned char 
  1312 ;;  columnas        1    1[COMRAM] unsigned char 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  filas           1   16[COMRAM] unsigned char 
  1315 ;;  keymap         12    4[COMRAM] const unsigned char [3][
  1316 ;;  fila            1   18[COMRAM] unsigned char 
  1317 ;;  columna         1   17[COMRAM] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      unsigned char 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1
  1327 ;;      Params:         1       0       0
  1328 ;;      Locals:        15       0       0
  1329 ;;      Temps:          2       0       0
  1330 ;;      Totals:        18       0       0
  1331 ;;Total ram usage:       18 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 3
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_motorTeclado
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text7
  1342   000398                     __ptext7:
  1343                           	callstack 0
  1344   000398                     _GetTecla:
  1345                           	callstack 26
  1346                           
  1347                           ;incstack = 0
  1348                           ;GetTecla@filas stored from wreg
  1349   000398  6E31               	movwf	GetTecla@filas^0,c
  1350   00039A                     
  1351                           ;TAD_TECLADO.c: 88:     unsigned char columna = 0;
  1352   00039A  6A32               	clrf	GetTecla@columna^0,c
  1353                           
  1354                           ;TAD_TECLADO.c: 90:     switch(filas) {
  1355   00039C  EFE2  F001         	goto	l1098
  1356   0003A0                     l159:
  1357   0003A0  6A33               	clrf	GetTecla@fila^0,c
  1358   0003A2  EF00  F002         	goto	l1110
  1359   0003A6                     l1086:
  1360   0003A6  0E01               	movlw	1
  1361   0003A8  6E33               	movwf	GetTecla@fila^0,c
  1362   0003AA  EF00  F002         	goto	l1110
  1363   0003AE                     l1088:
  1364   0003AE  0E02               	movlw	2
  1365   0003B0  6E33               	movwf	GetTecla@fila^0,c
  1366   0003B2  EF00  F002         	goto	l1110
  1367   0003B6                     l1090:
  1368   0003B6  0E03               	movlw	3
  1369   0003B8  6E33               	movwf	GetTecla@fila^0,c
  1370   0003BA  EF00  F002         	goto	l1110
  1371   0003BE                     l1092:
  1372   0003BE  0EFF               	movlw	255
  1373   0003C0  EF2E  F002         	goto	l165
  1374   0003C4                     l1098:
  1375   0003C4  5031               	movf	GetTecla@filas^0,w,c
  1376                           
  1377                           ; Switch size 1, requested type "simple"
  1378                           ; Number of cases is 4, Range of values is 1 to 8
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte           13     7 (average)
  1382                           ;	Chosen strategy is simple_byte
  1383   0003C6  0A01               	xorlw	1	; case 1
  1384   0003C8  B4D8               	btfsc	status,2,c
  1385   0003CA  EFD0  F001         	goto	l159
  1386   0003CE  0A03               	xorlw	3	; case 2
  1387   0003D0  B4D8               	btfsc	status,2,c
  1388   0003D2  EFD3  F001         	goto	l1086
  1389   0003D6  0A06               	xorlw	6	; case 4
  1390   0003D8  B4D8               	btfsc	status,2,c
  1391   0003DA  EFD7  F001         	goto	l1088
  1392   0003DE  0A0C               	xorlw	12	; case 8
  1393   0003E0  B4D8               	btfsc	status,2,c
  1394   0003E2  EFDB  F001         	goto	l1090
  1395   0003E6  EFDF  F001         	goto	l1092
  1396   0003EA                     l167:
  1397   0003EA  6A32               	clrf	GetTecla@columna^0,c
  1398   0003EC  EF1A  F002         	goto	l1112
  1399   0003F0                     l1100:
  1400   0003F0  0E01               	movlw	1
  1401   0003F2  6E32               	movwf	GetTecla@columna^0,c
  1402   0003F4  EF1A  F002         	goto	l1112
  1403   0003F8                     l1102:
  1404   0003F8  0E02               	movlw	2
  1405   0003FA  6E32               	movwf	GetTecla@columna^0,c
  1406   0003FC  EF1A  F002         	goto	l1112
  1407   000400                     l1110:
  1408   000400  5022               	movf	GetTecla@columnas^0,w,c
  1409   000402  0B07               	andlw	7
  1410   000404  6E23               	movwf	??_GetTecla^0,c
  1411   000406  6A24               	clrf	(??_GetTecla+1)^0,c
  1412                           
  1413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1414                           ; Switch size 1, requested type "simple"
  1415                           ; Number of cases is 1, Range of values is 0 to 0
  1416                           ; switch strategies available:
  1417                           ; Name         Instructions Cycles
  1418                           ; simple_byte            4     3 (average)
  1419                           ;	Chosen strategy is simple_byte
  1420   000408  5024               	movf	(??_GetTecla+1)^0,w,c
  1421   00040A  0A00               	xorlw	0	; case 0
  1422   00040C  B4D8               	btfsc	status,2,c
  1423   00040E  EF0B  F002         	goto	l1216
  1424   000412  EFDF  F001         	goto	l1092
  1425   000416                     l1216:
  1426                           
  1427                           ; Switch size 1, requested type "simple"
  1428                           ; Number of cases is 3, Range of values is 1 to 4
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte           10     6 (average)
  1432                           ;	Chosen strategy is simple_byte
  1433   000416  5023               	movf	??_GetTecla^0,w,c
  1434   000418  0A01               	xorlw	1	; case 1
  1435   00041A  B4D8               	btfsc	status,2,c
  1436   00041C  EFF5  F001         	goto	l167
  1437   000420  0A03               	xorlw	3	; case 2
  1438   000422  B4D8               	btfsc	status,2,c
  1439   000424  EFF8  F001         	goto	l1100
  1440   000428  0A06               	xorlw	6	; case 4
  1441   00042A  B4D8               	btfsc	status,2,c
  1442   00042C  EFFC  F001         	goto	l1102
  1443   000430  EFDF  F001         	goto	l1092
  1444   000434                     l1112:
  1445                           
  1446                           ;TAD_TECLADO.c: 106:     const unsigned char keymap[4][3] = {
  1447   000434  0E01               	movlw	low GetTecla@F2725
  1448   000436  6EF6               	movwf	tblptrl,c
  1449   000438                     	if	1	;There is more than 1 active tblptr byte
  1450   000438  0E02               	movlw	high GetTecla@F2725
  1451   00043A  6EF7               	movwf	tblptrh,c
  1452   00043C                     	endif
  1453   00043C                     	if	0	;There are less than 3 active tblptr bytes
  1454   00043C                     	endif
  1455   00043C  EE20  F025         	lfsr	2,GetTecla@keymap
  1456   000440  0E0B               	movlw	11
  1457   000442                     u190:
  1458   000442  0009               	tblrd		*+
  1459   000444  CFF5 FFDE          	movff	tablat,postinc2
  1460   000448  06E8               	decf	wreg,f,c
  1461   00044A  E2FB               	bc	u190
  1462   00044C                     
  1463                           ;TAD_TECLADO.c: 113:     return keymap[fila][columna];
  1464   00044C  5033               	movf	GetTecla@fila^0,w,c
  1465   00044E  0D03               	mullw	3
  1466   000450  50F3               	movf	243,w,c
  1467   000452  0F25               	addlw	low GetTecla@keymap
  1468   000454  2432               	addwf	GetTecla@columna^0,w,c
  1469   000456  6ED9               	movwf	fsr2l,c
  1470   000458  6ADA               	clrf	fsr2h,c
  1471   00045A  50DF               	movf	indf2,w,c
  1472   00045C                     l165:
  1473   00045C  0012               	return		;funcret
  1474   00045E                     __end_of_GetTecla:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _initTeclado *****************
  1478 ;; Defined at:
  1479 ;;		line 14 in file "TAD_TECLADO.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1
  1493 ;;      Params:         0       0       0
  1494 ;;      Locals:         0       0       0
  1495 ;;      Temps:          0       0       0
  1496 ;;      Totals:         0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 4
  1500 ;; This function calls:
  1501 ;;		_TI_NewTimer
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text8
  1508   0005C0                     __ptext8:
  1509                           	callstack 0
  1510   0005C0                     _initTeclado:
  1511                           	callstack 26
  1512   0005C0                     
  1513                           ;TAD_TECLADO.c: 15:     Filas = 0x00;
  1514   0005C0  6A1F               	clrf	_Filas^0,c
  1515                           
  1516                           ;TAD_TECLADO.c: 16:     Columnas = 0x00;
  1517   0005C2  6A1E               	clrf	_Columnas^0,c
  1518   0005C4                     
  1519                           ;TAD_TECLADO.c: 17:     state = 1;
  1520   0005C4  0E01               	movlw	1
  1521   0005C6  6E1D               	movwf	_state^0,c
  1522   0005C8                     
  1523                           ;TAD_TECLADO.c: 18:     HiHaTecla = 0;
  1524   0005C8  6A1C               	clrf	_HiHaTecla^0,c
  1525   0005CA                     
  1526                           ;TAD_TECLADO.c: 19:     tecla = 0;
  1527   0005CA  6A1B               	clrf	_tecla^0,c
  1528   0005CC                     
  1529                           ;TAD_TECLADO.c: 20:     TI_NewTimer(&timer);
  1530   0005CC  0E20               	movlw	low _timer
  1531   0005CE  6E22               	movwf	TI_NewTimer@TimerHandle^0,c
  1532   0005D0  EC2F  F002         	call	_TI_NewTimer	;wreg free
  1533   0005D4  0012               	return		;funcret
  1534   0005D6                     __end_of_initTeclado:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _TI_NewTimer *****************
  1538 ;; Defined at:
  1539 ;;		line 43 in file "TAD_TIMER.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  TimerHandle     1    1[COMRAM] PTR unsigned char 
  1542 ;;		 -> timer(1), 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  Comptador       1    3[COMRAM] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      unsigned char 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1
  1554 ;;      Params:         1       0       0
  1555 ;;      Locals:         1       0       0
  1556 ;;      Temps:          1       0       0
  1557 ;;      Totals:         3       0       0
  1558 ;;Total ram usage:        3 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 3
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_initTeclado
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text9
  1569   00045E                     __ptext9:
  1570                           	callstack 0
  1571   00045E                     _TI_NewTimer:
  1572                           	callstack 26
  1573   00045E                     
  1574                           ;TAD_TIMER.c: 44:  unsigned char Comptador=0;
  1575   00045E  6A24               	clrf	TI_NewTimer@Comptador^0,c
  1576                           
  1577                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  1578   000460  EF3E  F002         	goto	l1070
  1579   000464                     l1066:
  1580                           
  1581                           ;TAD_TIMER.c: 46:   if (++Comptador == 4) return (0);
  1582   000464  2A24               	incf	TI_NewTimer@Comptador^0,f,c
  1583   000466  0E04               	movlw	4
  1584   000468  1824               	xorwf	TI_NewTimer@Comptador^0,w,c
  1585   00046A  A4D8               	btfss	status,2,c
  1586   00046C  EF3A  F002         	goto	u171
  1587   000470  EF3C  F002         	goto	u170
  1588   000474                     u171:
  1589   000474  EF3E  F002         	goto	l1070
  1590   000478                     u170:
  1591   000478  EF59  F002         	goto	l26
  1592   00047C                     l1070:
  1593                           
  1594                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  1595   00047C  5024               	movf	TI_NewTimer@Comptador^0,w,c
  1596   00047E  0D05               	mullw	5
  1597   000480  50F3               	movf	243,w,c
  1598   000482  0F05               	addlw	low (_Timers+4)
  1599   000484  6ED9               	movwf	fsr2l,c
  1600   000486  6ADA               	clrf	fsr2h,c
  1601   000488  04DE               	decf	postinc2,w,c
  1602   00048A  B4D8               	btfsc	status,2,c
  1603   00048C  EF4A  F002         	goto	u181
  1604   000490  EF4C  F002         	goto	u180
  1605   000494                     u181:
  1606   000494  EF32  F002         	goto	l1066
  1607   000498                     u180:
  1608   000498                     
  1609                           ;TAD_TIMER.c: 48:  Timers[Comptador].Busy=1;
  1610   000498  5024               	movf	TI_NewTimer@Comptador^0,w,c
  1611   00049A  0D05               	mullw	5
  1612   00049C  50F3               	movf	243,w,c
  1613   00049E  0F05               	addlw	low (_Timers+4)
  1614   0004A0  6ED9               	movwf	fsr2l,c
  1615   0004A2  6ADA               	clrf	fsr2h,c
  1616   0004A4  0E01               	movlw	1
  1617   0004A6  6EDF               	movwf	indf2,c
  1618   0004A8                     
  1619                           ;TAD_TIMER.c: 49:  *TimerHandle=Comptador;
  1620   0004A8  5022               	movf	TI_NewTimer@TimerHandle^0,w,c
  1621   0004AA  6ED9               	movwf	fsr2l,c
  1622   0004AC  6ADA               	clrf	fsr2h,c
  1623   0004AE  C024  FFDF         	movff	TI_NewTimer@Comptador,indf2
  1624   0004B2                     l26:
  1625   0004B2  0012               	return		;funcret
  1626   0004B4                     __end_of_TI_NewTimer:
  1627                           	callstack 0
  1628                           
  1629 ;; *************** function _TI_Init *****************
  1630 ;; Defined at:
  1631 ;;		line 32 in file "TAD_TIMER.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  counter         1    1[COMRAM] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1
  1645 ;;      Params:         0       0       0
  1646 ;;      Locals:         1       0       0
  1647 ;;      Temps:          0       0       0
  1648 ;;      Totals:         1       0       0
  1649 ;;Total ram usage:        1 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 3
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text10
  1660   000500                     __ptext10:
  1661                           	callstack 0
  1662   000500                     _TI_Init:
  1663                           	callstack 27
  1664   000500                     
  1665                           ;TAD_TIMER.c: 33:  for (unsigned char counter=0; counter<4; counter++) {
  1666   000500  6A22               	clrf	TI_Init@counter^0,c
  1667   000502                     l938:
  1668                           
  1669                           ;TAD_TIMER.c: 34:   Timers[counter].Busy=0;
  1670   000502  5022               	movf	TI_Init@counter^0,w,c
  1671   000504  0D05               	mullw	5
  1672   000506  50F3               	movf	243,w,c
  1673   000508  0F05               	addlw	low (_Timers+4)
  1674   00050A  6ED9               	movwf	fsr2l,c
  1675   00050C  6ADA               	clrf	fsr2h,c
  1676   00050E  6ADF               	clrf	indf2,c
  1677   000510                     
  1678                           ;TAD_TIMER.c: 35:  }
  1679   000510  2A22               	incf	TI_Init@counter^0,f,c
  1680   000512  0E03               	movlw	3
  1681   000514  6422               	cpfsgt	TI_Init@counter^0,c
  1682   000516  EF8F  F002         	goto	u41
  1683   00051A  EF91  F002         	goto	u40
  1684   00051E                     u41:
  1685   00051E  EF81  F002         	goto	l938
  1686   000522                     u40:
  1687   000522                     
  1688                           ;TAD_TIMER.c: 36:  T0CON=0x82;
  1689   000522  0E82               	movlw	130
  1690   000524  6ED5               	movwf	213,c	;volatile
  1691                           
  1692                           ;TAD_TIMER.c: 37:     TMR0=64911;
  1693   000526  0EFD               	movlw	253
  1694   000528  6ED7               	movwf	215,c	;volatile
  1695   00052A  0E8F               	movlw	143
  1696   00052C  6ED6               	movwf	214,c	;volatile
  1697   00052E                     
  1698                           ;TAD_TIMER.c: 38:  INTCONbits.TMR0IF = 0;
  1699   00052E  94F2               	bcf	242,2,c	;volatile
  1700   000530                     
  1701                           ;TAD_TIMER.c: 39:  INTCONbits.TMR0IE = 1;
  1702   000530  8AF2               	bsf	242,5,c	;volatile
  1703   000532  0012               	return		;funcret
  1704   000534                     __end_of_TI_Init:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _InitPorts *****************
  1708 ;; Defined at:
  1709 ;;		line 53 in file "main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1
  1723 ;;      Params:         0       0       0
  1724 ;;      Locals:         0       0       0
  1725 ;;      Temps:          0       0       0
  1726 ;;      Totals:         0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 3
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text11
  1738   0005D6                     __ptext11:
  1739                           	callstack 0
  1740   0005D6                     _InitPorts:
  1741                           	callstack 27
  1742   0005D6                     
  1743                           ;main.c: 55: 
  1744   0005D6  0E0F               	movlw	15
  1745   0005D8  6EC1               	movwf	193,c	;volatile
  1746   0005DA  0E0F               	movlw	15
  1747   0005DC  1292               	iorwf	146,f,c	;volatile
  1748   0005DE  9EF1               	bcf	241,7,c	;volatile
  1749   0005E0  0EF8               	movlw	248
  1750   0005E2  1693               	andwf	147,f,c	;volatile
  1751   0005E4  508A               	movf	138,w,c	;volatile
  1752   0005E6  6A95               	clrf	149,c	;volatile
  1753   0005E8  6A8C               	clrf	140,c	;volatile
  1754   0005EA  0012               	return		;funcret
  1755   0005EC                     __end_of_InitPorts:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _LowRSI *****************
  1759 ;; Defined at:
  1760 ;;		line 31 in file "main.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		None
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1
  1774 ;;      Params:         0       0       0
  1775 ;;      Locals:         0       0       0
  1776 ;;      Temps:          1       0       0
  1777 ;;      Totals:         1       0       0
  1778 ;;Total ram usage:        1 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 2
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		Interrupt level 1
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	intcodelo
  1789   000018                     __pintcodelo:
  1790                           	callstack 0
  1791   000018                     _LowRSI:
  1792                           	callstack 25
  1793                           
  1794                           ;incstack = 0
  1795   000018  8035               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1796   00001A  CFE0 F021          	movff	bsr,??_LowRSI
  1797   00001E  C021  FFE0         	movff	??_LowRSI,bsr
  1798   000022  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1799   000024  0010               	retfie	
  1800   000026                     __end_of_LowRSI:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function _HighRSI *****************
  1804 ;; Defined at:
  1805 ;;		line 27 in file "main.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1
  1819 ;;      Params:         0       0       0
  1820 ;;      Locals:         0       0       0
  1821 ;;      Temps:          0       0       0
  1822 ;;      Totals:         0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 1
  1826 ;; This function calls:
  1827 ;;		_RSI_Timer0
  1828 ;; This function is called by:
  1829 ;;		Interrupt level 2
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	intcode
  1834   000008                     __pintcode:
  1835                           	callstack 0
  1836   000008                     _HighRSI:
  1837                           	callstack 25
  1838                           
  1839                           ;incstack = 0
  1840   000008  8235               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1841   00000A  EFF6  F002         	goto	int_func
  1842                           
  1843                           	psect	intcode_body
  1844   0005EC                     __pintcode_body:
  1845                           	callstack 25
  1846   0005EC                     int_func:
  1847                           	callstack 25
  1848   0005EC                     
  1849                           ;main.c: 29:   motorTeclado();
  1850   0005EC  A4F2               	btfss	242,2,c	;volatile
  1851   0005EE  EFFB  F002         	goto	i2u16_41
  1852   0005F2  EFFD  F002         	goto	i2u16_40
  1853   0005F6                     i2u16_41:
  1854   0005F6  EFFF  F002         	goto	i2l75
  1855   0005FA                     i2u16_40:
  1856   0005FA  ECD4  F002         	call	_RSI_Timer0	;wreg free
  1857   0005FE                     i2l75:
  1858   0005FE  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1859   000600  0011               	retfie		f
  1860   000602                     __end_of_HighRSI:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _RSI_Timer0 *****************
  1864 ;; Defined at:
  1865 ;;		line 25 in file "TAD_TIMER.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1
  1879 ;;      Params:         0       0       0
  1880 ;;      Locals:         0       0       0
  1881 ;;      Temps:          0       0       0
  1882 ;;      Totals:         0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_HighRSI
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text14
  1893   0005A8                     __ptext14:
  1894                           	callstack 0
  1895   0005A8                     _RSI_Timer0:
  1896                           	callstack 25
  1897   0005A8                     
  1898                           ;TAD_TIMER.c: 27:     TMR0=64911;
  1899   0005A8  0EFD               	movlw	253
  1900   0005AA  6ED7               	movwf	215,c	;volatile
  1901   0005AC  0E8F               	movlw	143
  1902   0005AE  6ED6               	movwf	214,c	;volatile
  1903   0005B0                     
  1904                           ;TAD_TIMER.c: 28:     TMR0IF=0;
  1905   0005B0  94F2               	bcf	4082,2,c	;volatile
  1906   0005B2                     
  1907                           ;TAD_TIMER.c: 29:     Tics++;
  1908   0005B2  0E01               	movlw	1
  1909   0005B4  2615               	addwf	_Tics^0,f,c	;volatile
  1910   0005B6  0E00               	movlw	0
  1911   0005B8  2216               	addwfc	(_Tics+1)^0,f,c	;volatile
  1912   0005BA  2217               	addwfc	(_Tics+2)^0,f,c	;volatile
  1913   0005BC  2218               	addwfc	(_Tics+3)^0,f,c	;volatile
  1914   0005BE  0012               	return		;funcret
  1915   0005C0                     __end_of_RSI_Timer0:
  1916                           	callstack 0
  1917                           
  1918                           	psect	rparam
  1919   000001                     ___rparam_used  equ	1
  1920   000000                     ___param_bank   equ	0
  1921   000000                     __Lparam        equ	__Lrparam
  1922   000000                     __Hparam        equ	__Hrparam
  1923                           
  1924                           	psect	temp
  1925   000035                     btemp:
  1926                           	callstack 0
  1927   000035                     	ds	1
  1928   000035                     int$flags       set	btemp
  1929   000036                     wtemp8          set	btemp+1
  1930   000036                     ttemp5          set	btemp+1
  1931   000039                     ttemp6          set	btemp+4
  1932   00003D                     ttemp7          set	btemp+8
  1933                           
  1934                           	psect	idloc
  1935                           
  1936                           ;Config register IDLOC0 @ 0x200000
  1937                           ;	unspecified, using default values
  1938   200000                     	org	2097152
  1939   200000  FF                 	db	255
  1940                           
  1941                           ;Config register IDLOC1 @ 0x200001
  1942                           ;	unspecified, using default values
  1943   200001                     	org	2097153
  1944   200001  FF                 	db	255
  1945                           
  1946                           ;Config register IDLOC2 @ 0x200002
  1947                           ;	unspecified, using default values
  1948   200002                     	org	2097154
  1949   200002  FF                 	db	255
  1950                           
  1951                           ;Config register IDLOC3 @ 0x200003
  1952                           ;	unspecified, using default values
  1953   200003                     	org	2097155
  1954   200003  FF                 	db	255
  1955                           
  1956                           ;Config register IDLOC4 @ 0x200004
  1957                           ;	unspecified, using default values
  1958   200004                     	org	2097156
  1959   200004  FF                 	db	255
  1960                           
  1961                           ;Config register IDLOC5 @ 0x200005
  1962                           ;	unspecified, using default values
  1963   200005                     	org	2097157
  1964   200005  FF                 	db	255
  1965                           
  1966                           ;Config register IDLOC6 @ 0x200006
  1967                           ;	unspecified, using default values
  1968   200006                     	org	2097158
  1969   200006  FF                 	db	255
  1970                           
  1971                           ;Config register IDLOC7 @ 0x200007
  1972                           ;	unspecified, using default values
  1973   200007                     	org	2097159
  1974   200007  FF                 	db	255
  1975                           
  1976                           	psect	config
  1977                           
  1978                           ; Padding undefined space
  1979   300000                     	org	3145728
  1980   300000  FF                 	db	255
  1981                           
  1982                           ;Config register CONFIG1H @ 0x300001
  1983                           ;	Oscillator
  1984                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  1985                           ;	Fail-Safe Clock Monitor Enable bit
  1986                           ;	FCMEN = 0x0, unprogrammed default
  1987                           ;	Internal/External Oscillator Switchover bit
  1988                           ;	IESO = 0x0, unprogrammed default
  1989   300001                     	org	3145729
  1990   300001  06                 	db	6
  1991                           
  1992                           ;Config register CONFIG2L @ 0x300002
  1993                           ;	Power-up Timer Enable bit
  1994                           ;	PWRT = OFF, PWRT disabled
  1995                           ;	Brown-out Reset Enable bits
  1996                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1997                           ;	Brown-out Reset Voltage bits
  1998                           ;	BORV = 0x3, unprogrammed default
  1999   300002                     	org	3145730
  2000   300002  19                 	db	25
  2001                           
  2002                           ;Config register CONFIG2H @ 0x300003
  2003                           ;	Watchdog Timer Enable bit
  2004                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2005                           ;	Watchdog Timer Postscale Select bits
  2006                           ;	WDTPS = 0xF, unprogrammed default
  2007   300003                     	org	3145731
  2008   300003  1E                 	db	30
  2009                           
  2010                           ; Padding undefined space
  2011   300004                     	org	3145732
  2012   300004  FF                 	db	255
  2013                           
  2014                           ;Config register CONFIG3H @ 0x300005
  2015                           ;	CCP2 MUX bit
  2016                           ;	CCP2MX = 0x1, unprogrammed default
  2017                           ;	PORTB A/D Enable bit
  2018                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  2019                           ;	Low-Power Timer1 Oscillator Enable bit
  2020                           ;	LPT1OSC = 0x0, unprogrammed default
  2021                           ;	MCLR Pin Enable bit
  2022                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  2023   300005                     	org	3145733
  2024   300005  01                 	db	1
  2025                           
  2026                           ;Config register CONFIG4L @ 0x300006
  2027                           ;	Stack Full/Underflow Reset Enable bit
  2028                           ;	STVREN = 0x1, unprogrammed default
  2029                           ;	Single-Supply ICSP Enable bit
  2030                           ;	LVP = OFF, Single-Supply ICSP disabled
  2031                           ;	Boot Block Size Select bits
  2032                           ;	BBSIZ = 0x0, unprogrammed default
  2033                           ;	Extended Instruction Set Enable bit
  2034                           ;	XINST = 0x0, unprogrammed default
  2035                           ;	Background Debugger Enable bit
  2036                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2037   300006                     	org	3145734
  2038   300006  81                 	db	129
  2039                           
  2040                           ; Padding undefined space
  2041   300007                     	org	3145735
  2042   300007  FF                 	db	255
  2043                           
  2044                           ;Config register CONFIG5L @ 0x300008
  2045                           ;	unspecified, using default values
  2046                           ;	Code Protection bit
  2047                           ;	CP0 = 0x1, unprogrammed default
  2048                           ;	Code Protection bit
  2049                           ;	CP1 = 0x1, unprogrammed default
  2050   300008                     	org	3145736
  2051   300008  03                 	db	3
  2052                           
  2053                           ;Config register CONFIG5H @ 0x300009
  2054                           ;	unspecified, using default values
  2055                           ;	Boot Block Code Protection bitProtect Boot
  2056                           ;	CPB = 0x1, unprogrammed default
  2057                           ;	Data EEPROM Code Protection bit
  2058                           ;	CPD = 0x1, unprogrammed default
  2059   300009                     	org	3145737
  2060   300009  C0                 	db	192
  2061                           
  2062                           ;Config register CONFIG6L @ 0x30000A
  2063                           ;	unspecified, using default values
  2064                           ;	Write Protection bit
  2065                           ;	WRT0 = 0x1, unprogrammed default
  2066                           ;	Write Protection bit
  2067                           ;	WRT1 = 0x1, unprogrammed default
  2068   30000A                     	org	3145738
  2069   30000A  03                 	db	3
  2070                           
  2071                           ;Config register CONFIG6H @ 0x30000B
  2072                           ;	unspecified, using default values
  2073                           ;	Configuration Register Write Protection bit
  2074                           ;	WRTC = 0x1, unprogrammed default
  2075                           ;	Boot Block Write Protection bit
  2076                           ;	WRTB = 0x1, unprogrammed default
  2077                           ;	Data EEPROM Write Protection bit
  2078                           ;	WRTD = 0x1, unprogrammed default
  2079   30000B                     	org	3145739
  2080   30000B  E0                 	db	224
  2081                           
  2082                           ;Config register CONFIG7L @ 0x30000C
  2083                           ;	unspecified, using default values
  2084                           ;	Table Read Protection bit
  2085                           ;	EBTR0 = 0x1, unprogrammed default
  2086                           ;	Table Read Protection bit
  2087                           ;	EBTR1 = 0x1, unprogrammed default
  2088   30000C                     	org	3145740
  2089   30000C  03                 	db	3
  2090                           
  2091                           ;Config register CONFIG7H @ 0x30000D
  2092                           ;	unspecified, using default values
  2093                           ;	Boot Block Table Read Protection bit
  2094                           ;	EBTRB = 0x1, unprogrammed default
  2095   30000D                     	org	3145741
  2096   30000D  40                 	db	64
  2097                           tosu	equ	0xFFF
  2098                           tosh	equ	0xFFE
  2099                           tosl	equ	0xFFD
  2100                           stkptr	equ	0xFFC
  2101                           pclatu	equ	0xFFB
  2102                           pclath	equ	0xFFA
  2103                           pcl	equ	0xFF9
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           prodh	equ	0xFF4
  2109                           prodl	equ	0xFF3
  2110                           indf0	equ	0xFEF
  2111                           postinc0	equ	0xFEE
  2112                           postdec0	equ	0xFED
  2113                           preinc0	equ	0xFEC
  2114                           plusw0	equ	0xFEB
  2115                           fsr0h	equ	0xFEA
  2116                           fsr0l	equ	0xFE9
  2117                           wreg	equ	0xFE8
  2118                           indf1	equ	0xFE7
  2119                           postinc1	equ	0xFE6
  2120                           postdec1	equ	0xFE5
  2121                           preinc1	equ	0xFE4
  2122                           plusw1	equ	0xFE3
  2123                           fsr1h	equ	0xFE2
  2124                           fsr1l	equ	0xFE1
  2125                           bsr	equ	0xFE0
  2126                           indf2	equ	0xFDF
  2127                           postinc2	equ	0xFDE
  2128                           postdec2	equ	0xFDD
  2129                           preinc2	equ	0xFDC
  2130                           plusw2	equ	0xFDB
  2131                           fsr2h	equ	0xFDA
  2132                           fsr2l	equ	0xFD9
  2133                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20      52
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    TI_NewTimer@TimerHandle	PTR unsigned char  size(1) Largest target is 1
		 -> timer(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_motorTeclado
    _motorTeclado->_GetTecla
    _StopRequest->_ProcessKey
    _initTeclado->_TI_NewTimer

Critical Paths under _LowRSI in COMRAM

    None.

Critical Paths under _HighRSI in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowRSI in BANK0

    None.

Critical Paths under _HighRSI in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowRSI in BANK1

    None.

Critical Paths under _HighRSI in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     399
                          _InitPorts
                            _TI_Init
                        _initTeclado
                       _motorTeclado
 ---------------------------------------------------------------------------------
 (1) _motorTeclado                                         1     1      0     242
                                             19 COMRAM     1     1      0
                           _GetTecla
                          _ReadFilas
                        _StopRequest
                         _TI_GetTics
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (2) _TI_ResetTics                                         1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TI_GetTics                                          13     9      4      52
                                              1 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _StopRequest                                          2     2      0      45
                                              2 COMRAM     2     2      0
                         _ProcessKey
 ---------------------------------------------------------------------------------
 (3) _ProcessKey                                           1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadFilas                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetTecla                                            18    17      1     130
                                              1 COMRAM    18    17      1
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0     112
                        _TI_NewTimer
 ---------------------------------------------------------------------------------
 (2) _TI_NewTimer                                          3     2      1     112
                                              1 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _TI_Init                                              1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowRSI                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighRSI                                              0     0      0       0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (6) _RSI_Timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPorts
   _TI_Init
   _initTeclado
     _TI_NewTimer
   _motorTeclado
     _GetTecla
     _ReadFilas
     _StopRequest
       _ProcessKey
     _TI_GetTics
     _TI_ResetTics

 _LowRSI (ROOT)

 _HighRSI (ROOT)
   _RSI_Timer0

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     20      52     41.3%
BITBIGSFRlh        103      0       0      0.0%
BITBIGSFRh          13      0       0      0.0%
BITBIGSFRll          9      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      52      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Feb 20 18:25:42 2025

    __end_ofGetTecla@F2725 020D                 _RSI_Timer0 05A8                         l20 0532  
                       l30 0556                         l33 04FE                         l26 04B2  
                       l91 05EA                         l94 0608                         u40 0522  
                       u41 051E                 _TI_GetTics 04B4                         bsr 0FE0  
                      l130 05D4                        l127 060E                        l155 0396  
                      l165 045C                        l167 03EA                        l159 03A0  
                      l176 05A6                        l922 0590                        l940 0510  
                      l932 0500                        l852 0604                        l924 05A0  
                      l950 05D6                        l942 0512                        l870 0538  
                      l960 05E6                        l952 05DA                        l944 0522  
                      l880 060A                        l872 0554                        l962 05E8  
                      l954 05DE                        l946 052E                        l938 0502  
                      l956 05E0                        l948 0530                        l868 0536  
                      l958 05E4                        u200 0228                        u201 0224  
                      u210 0248                        u211 0244                        u300 0340  
                      u220 0266                        u301 033C                        u221 0262  
                      u230 0286                        u231 0282                        u240 02A0  
                      u241 029C                        u170 0478                        u250 02C0  
                      u171 0474                        u251 02BC                        u180 0498  
                      u260 02DA                        u181 0494                        u261 02D6  
                      u190 0442                        u270 02F4                        u271 02F0  
                      u280 030A                        u281 0306                        u290 031E  
                      u291 031A                        wreg 0FE8                       l1100 03F0  
                     l1102 03F8                       l1110 0400                       l1112 0434  
                     l1200 0558                       l1130 05CC                       l1122 05C0  
                     l1114 044C                       l1210 0568                       l1202 055C  
                     l1124 05C4                       l1140 0238                       l1132 020E  
                     l1204 0560                       l1070 047C                       l1126 05C8  
                     l1150 026A                       l1142 0248                       l1134 0218  
                     l1206 0564                       l1072 0498                       l1064 045E  
                     l1128 05CA                       l1216 0416                       l1080 04CA  
                     l1160 02A0                       l1152 0276                       l1144 024E  
                     l1136 0228                       l1208 0566                       l1074 04A8  
                     l1066 0464                       l1090 03B6                       l1170 02CA  
                     l1162 02A4                       l1154 0286                       l1146 0256  
                     l1138 022C                       l1092 03BE                       l1084 039A  
                     l1180 02FA                       l1172 02DA                       l1164 02B0  
                     l1148 0266                       l1086 03A6                       l1078 04B6  
                     l1190 034C                       l1166 02C0                       l1158 0290  
                     l1088 03AE                       l1184 030E                       l1176 02E4  
                     l1098 03C4                       l1186 031E                       l1178 02F4  
                     l1188 0340                       l1196 0356                       l1198 0384  
              _TI_NewTimer 045E                       _LATB 0F8A                       _LATC 0F8B  
                     _LATD 0F8C                       i2l15 05BE                       i1l80 001E  
                     i2l75 05FE                       _TMR0 0FD6                       _Tics 0015  
                     _main 0558                       fsr2h 0FDA                       indf2 0FDF  
                     fsr2l 0FD9                       btemp 0035            __end_of_TI_Init 0534  
                     prodl 0FF3                       start 0026            __end_of_HighRSI 0602  
             ___param_bank 0000               ?_initTeclado 0021                      ?_main 0021  
                    _T0CON 0FD5                      i2l930 05B2                      i2l926 05A8  
                    i2l928 05B0                      _PORTA 0F80                      _TRISA 0F92  
                    _TRISB 0F93                      _TRISD 0F95                      _Filas 001F  
             _TI_ResetTics 0534                      _tecla 001B                      _timer 0020  
                    _state 001D                      tablat 0FF5                      ttemp5 0036  
                    ttemp6 0039                      ttemp7 003D                      status 0FD8  
                    wtemp8 0036           __end_of_GetTecla 045E            __initialization 0574  
             __end_of_main 0574                ?_RSI_Timer0 0021             TI_Init@counter 0022  
              ?_TI_GetTics 0022                     ??_main 0035              __activetblptr 0002  
                   _ADCON1 0FC1                  ??_TI_Init 0022                     i2l1044 05EC  
                   i2l1046 05FA                     _TMR0IF 7F92                  ??_HighRSI 0021  
                   _LowRSI 0018                     _Timers 0001                     clear_0 057A  
                   isa$std 0001                 _ProcessKey 0602               __mediumconst 0200  
                   tblptrh 0FF7                     tblptrl 0FF6                     tblptru 0FF8  
               __accesstop 0080    __end_of__initialization 0580              ___rparam_used 0001  
           __pcstackCOMRAM 0021       TI_NewTimer@Comptador 0024          __end_of_ReadFilas 0610  
        __end_of_InitPorts 05EC                  ?_GetTecla 0022              ??_StopRequest 0023  
             ?_TI_NewTimer 0022     TI_NewTimer@TimerHandle 0022                    ?_LowRSI 0021  
  TI_ResetTics@TimerHandle 0022                ?_ProcessKey 0021                    i2u16_40 05FA  
                  i2u16_41 05F6                 ??_GetTecla 0023                    _TI_Init 0500  
                  _HighRSI 0008        __end_of_StopRequest 05A8                    __Hparam 0000  
                  __Lparam 0000               ??_RSI_Timer0 0021               __psmallconst 0200  
             ??_TI_GetTics 0026                    __pcinit 0574                    __ramtop 0200  
                  __ptext0 0558                    __ptext1 020E                    __ptext2 0534  
                  __ptext3 04B4                    __ptext4 058E                    __ptext5 0602  
                  __ptext6 060A                    __ptext7 0398                    __ptext8 05C0  
                  __ptext9 045E              ?_motorTeclado 0021             __pintcode_body 05EC  
     end_of_initialization 0580         __end_of_RSI_Timer0 05C0              __Lmediumconst 0000  
                  int_func 05EC         __end_of_TI_GetTics 0500                 _tick_count 0019  
                  postinc0 0FEE                    postinc2 0FDE              GetTecla@F2725 0201  
           ??_motorTeclado 0034              GetTecla@filas 0031      TI_GetTics@TimerHandle 002E  
                _HiHaTecla 001C                _StopRequest 058E             __end_of_LowRSI 0026  
      start_initialization 0574                  _ReadFilas 060A                  _InitPorts 05D6  
                 ??_LowRSI 0021              ??_initTeclado 0025               ??_ProcessKey 0022  
              __pbssCOMRAM 0001                 ?_ReadFilas 0021                 ?_InitPorts 0021  
            ?_TI_ResetTics 0021                   ?_TI_Init 0021                   ?_HighRSI 0021  
     __end_of_motorTeclado 0398         __end_of_ProcessKey 060A                  __pintcode 0008  
              __pintcodelo 0018             StopRequest@key 0024                __smallconst 0200  
      __end_of_initTeclado 05D6             ??_TI_ResetTics 0022               GetTecla@fila 0033  
            ProcessKey@key 0022                ??_ReadFilas 0022                ??_InitPorts 0022  
                 _GetTecla 0398                _INTCON2bits 0FF1               ?_StopRequest 0021  
                 _Columnas 001E                   __Hrparam 0000                   __Lrparam 0000  
              _initTeclado 05C0                   __ptext10 0500                   __ptext11 05D6  
                 __ptext14 05A8              ??_TI_NewTimer 0023                   isa$xinst 0000  
     __end_of_TI_ResetTics 0558                   int$flags 0035               _motorTeclado 020E  
               _INTCONbits 0FF2  TI_GetTics@CopiaTicsActual 002A                   intlevel1 0000  
                 intlevel2 0000        __end_of_TI_NewTimer 04B4           GetTecla@columnas 0022  
          GetTecla@columna 0032             GetTecla@keymap 0025  
