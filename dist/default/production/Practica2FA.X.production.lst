

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Feb 28 23:14:26 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Generated 05/12/2024 GMT
    44                           ; 
    45                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4321 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000FE0                     bsr             equ	4064
    78   000FE9                     fsr0            equ	4073
    79   000FEA                     fsr0h           equ	4074
    80   000FE9                     fsr0l           equ	4073
    81   000FE1                     fsr1            equ	4065
    82   000FE2                     fsr1h           equ	4066
    83   000FE1                     fsr1l           equ	4065
    84   000FD9                     fsr2            equ	4057
    85   000FDA                     fsr2h           equ	4058
    86   000FD9                     fsr2l           equ	4057
    87   000FEF                     indf0           equ	4079
    88   000FE7                     indf1           equ	4071
    89   000FDF                     indf2           equ	4063
    90   000FF2                     intcon          equ	4082
    91   000000                     nvmcon          equ	0
    92   000FF9                     pcl             equ	4089
    93   000FFA                     pclath          equ	4090
    94   000FFB                     pclatu          equ	4091
    95   000FEB                     plusw0          equ	4075
    96   000FE3                     plusw1          equ	4067
    97   000FDB                     plusw2          equ	4059
    98   000FED                     postdec0        equ	4077
    99   000FE5                     postdec1        equ	4069
   100   000FDD                     postdec2        equ	4061
   101   000FEE                     postinc0        equ	4078
   102   000FE6                     postinc1        equ	4070
   103   000FDE                     postinc2        equ	4062
   104   000FEC                     preinc0         equ	4076
   105   000FE4                     preinc1         equ	4068
   106   000FDC                     preinc2         equ	4060
   107   000FF3                     prod            equ	4083
   108   000FF4                     prodh           equ	4084
   109   000FF3                     prodl           equ	4083
   110   000FD8                     status          equ	4056
   111   000FF5                     tablat          equ	4085
   112   000FF6                     tblptr          equ	4086
   113   000FF7                     tblptrh         equ	4087
   114   000FF6                     tblptrl         equ	4086
   115   000FF8                     tblptru         equ	4088
   116   000FFD                     tosl            equ	4093
   117   000FE8                     wreg            equ	4072
   118   000F80                     PORTA           equ	3968	;# 
   119   000F81                     PORTB           equ	3969	;# 
   120   000F82                     PORTC           equ	3970	;# 
   121   000F83                     PORTD           equ	3971	;# 
   122   000F84                     PORTE           equ	3972	;# 
   123   000F89                     LATA            equ	3977	;# 
   124   000F8A                     LATB            equ	3978	;# 
   125   000F8B                     LATC            equ	3979	;# 
   126   000F8C                     LATD            equ	3980	;# 
   127   000F8D                     LATE            equ	3981	;# 
   128   000F92                     TRISA           equ	3986	;# 
   129   000F92                     DDRA            equ	3986	;# 
   130   000F93                     TRISB           equ	3987	;# 
   131   000F93                     DDRB            equ	3987	;# 
   132   000F94                     TRISC           equ	3988	;# 
   133   000F94                     DDRC            equ	3988	;# 
   134   000F95                     TRISD           equ	3989	;# 
   135   000F95                     DDRD            equ	3989	;# 
   136   000F96                     TRISE           equ	3990	;# 
   137   000F96                     DDRE            equ	3990	;# 
   138   000F9B                     OSCTUNE         equ	3995	;# 
   139   000F9D                     PIE1            equ	3997	;# 
   140   000F9E                     PIR1            equ	3998	;# 
   141   000F9F                     IPR1            equ	3999	;# 
   142   000FA0                     PIE2            equ	4000	;# 
   143   000FA1                     PIR2            equ	4001	;# 
   144   000FA2                     IPR2            equ	4002	;# 
   145   000FA6                     EECON1          equ	4006	;# 
   146   000FA7                     EECON2          equ	4007	;# 
   147   000FA8                     EEDATA          equ	4008	;# 
   148   000FA9                     EEADR           equ	4009	;# 
   149   000FAB                     RCSTA           equ	4011	;# 
   150   000FAB                     RCSTA1          equ	4011	;# 
   151   000FAC                     TXSTA           equ	4012	;# 
   152   000FAC                     TXSTA1          equ	4012	;# 
   153   000FAD                     TXREG           equ	4013	;# 
   154   000FAD                     TXREG1          equ	4013	;# 
   155   000FAE                     RCREG           equ	4014	;# 
   156   000FAE                     RCREG1          equ	4014	;# 
   157   000FAF                     SPBRG           equ	4015	;# 
   158   000FAF                     SPBRG1          equ	4015	;# 
   159   000FB0                     SPBRGH          equ	4016	;# 
   160   000FB1                     T3CON           equ	4017	;# 
   161   000FB2                     TMR3            equ	4018	;# 
   162   000FB2                     TMR3L           equ	4018	;# 
   163   000FB3                     TMR3H           equ	4019	;# 
   164   000FB4                     CMCON           equ	4020	;# 
   165   000FB5                     CVRCON          equ	4021	;# 
   166   000FB6                     ECCP1AS         equ	4022	;# 
   167   000FB7                     ECCP1DEL        equ	4023	;# 
   168   000FB7                     PWM1CON         equ	4023	;# 
   169   000FB8                     BAUDCON         equ	4024	;# 
   170   000FB8                     BAUDCTL         equ	4024	;# 
   171   000FBA                     CCP2CON         equ	4026	;# 
   172   000FBB                     CCPR2           equ	4027	;# 
   173   000FBB                     CCPR2L          equ	4027	;# 
   174   000FBC                     CCPR2H          equ	4028	;# 
   175   000FBD                     CCP1CON         equ	4029	;# 
   176   000FBD                     ECCP1CON        equ	4029	;# 
   177   000FBE                     CCPR1           equ	4030	;# 
   178   000FBE                     CCPR1L          equ	4030	;# 
   179   000FBF                     CCPR1H          equ	4031	;# 
   180   000FC0                     ADCON2          equ	4032	;# 
   181   000FC1                     ADCON1          equ	4033	;# 
   182   000FC2                     ADCON0          equ	4034	;# 
   183   000FC3                     ADRES           equ	4035	;# 
   184   000FC3                     ADRESL          equ	4035	;# 
   185   000FC4                     ADRESH          equ	4036	;# 
   186   000FC5                     SSPCON2         equ	4037	;# 
   187   000FC6                     SSPCON1         equ	4038	;# 
   188   000FC7                     SSPSTAT         equ	4039	;# 
   189   000FC8                     SSPADD          equ	4040	;# 
   190   000FC9                     SSPBUF          equ	4041	;# 
   191   000FCA                     T2CON           equ	4042	;# 
   192   000FCB                     PR2             equ	4043	;# 
   193   000FCB                     MEMCON          equ	4043	;# 
   194   000FCC                     TMR2            equ	4044	;# 
   195   000FCD                     T1CON           equ	4045	;# 
   196   000FCE                     TMR1            equ	4046	;# 
   197   000FCE                     TMR1L           equ	4046	;# 
   198   000FCF                     TMR1H           equ	4047	;# 
   199   000FD0                     RCON            equ	4048	;# 
   200   000FD1                     WDTCON          equ	4049	;# 
   201   000FD2                     HLVDCON         equ	4050	;# 
   202   000FD2                     LVDCON          equ	4050	;# 
   203   000FD3                     OSCCON          equ	4051	;# 
   204   000FD5                     T0CON           equ	4053	;# 
   205   000FD6                     TMR0            equ	4054	;# 
   206   000FD6                     TMR0L           equ	4054	;# 
   207   000FD7                     TMR0H           equ	4055	;# 
   208   000FD8                     STATUS          equ	4056	;# 
   209   000FD9                     FSR2            equ	4057	;# 
   210   000FD9                     FSR2L           equ	4057	;# 
   211   000FDA                     FSR2H           equ	4058	;# 
   212   000FDB                     PLUSW2          equ	4059	;# 
   213   000FDC                     PREINC2         equ	4060	;# 
   214   000FDD                     POSTDEC2        equ	4061	;# 
   215   000FDE                     POSTINC2        equ	4062	;# 
   216   000FDF                     INDF2           equ	4063	;# 
   217   000FE0                     BSR             equ	4064	;# 
   218   000FE1                     FSR1            equ	4065	;# 
   219   000FE1                     FSR1L           equ	4065	;# 
   220   000FE2                     FSR1H           equ	4066	;# 
   221   000FE3                     PLUSW1          equ	4067	;# 
   222   000FE4                     PREINC1         equ	4068	;# 
   223   000FE5                     POSTDEC1        equ	4069	;# 
   224   000FE6                     POSTINC1        equ	4070	;# 
   225   000FE7                     INDF1           equ	4071	;# 
   226   000FE8                     WREG            equ	4072	;# 
   227   000FE9                     FSR0            equ	4073	;# 
   228   000FE9                     FSR0L           equ	4073	;# 
   229   000FEA                     FSR0H           equ	4074	;# 
   230   000FEB                     PLUSW0          equ	4075	;# 
   231   000FEC                     PREINC0         equ	4076	;# 
   232   000FED                     POSTDEC0        equ	4077	;# 
   233   000FEE                     POSTINC0        equ	4078	;# 
   234   000FEF                     INDF0           equ	4079	;# 
   235   000FF0                     INTCON3         equ	4080	;# 
   236   000FF1                     INTCON2         equ	4081	;# 
   237   000FF2                     INTCON          equ	4082	;# 
   238   000FF3                     PROD            equ	4083	;# 
   239   000FF3                     PRODL           equ	4083	;# 
   240   000FF4                     PRODH           equ	4084	;# 
   241   000FF5                     TABLAT          equ	4085	;# 
   242   000FF6                     TBLPTR          equ	4086	;# 
   243   000FF6                     TBLPTRL         equ	4086	;# 
   244   000FF7                     TBLPTRH         equ	4087	;# 
   245   000FF8                     TBLPTRU         equ	4088	;# 
   246   000FF9                     PCLAT           equ	4089	;# 
   247   000FF9                     PC              equ	4089	;# 
   248   000FF9                     PCL             equ	4089	;# 
   249   000FFA                     PCLATH          equ	4090	;# 
   250   000FFB                     PCLATU          equ	4091	;# 
   251   000FFC                     STKPTR          equ	4092	;# 
   252   000FFD                     TOS             equ	4093	;# 
   253   000FFD                     TOSL            equ	4093	;# 
   254   000FFE                     TOSH            equ	4094	;# 
   255   000FFF                     TOSU            equ	4095	;# 
   256   000F80                     PORTA           equ	3968	;# 
   257   000F81                     PORTB           equ	3969	;# 
   258   000F82                     PORTC           equ	3970	;# 
   259   000F83                     PORTD           equ	3971	;# 
   260   000F84                     PORTE           equ	3972	;# 
   261   000F89                     LATA            equ	3977	;# 
   262   000F8A                     LATB            equ	3978	;# 
   263   000F8B                     LATC            equ	3979	;# 
   264   000F8C                     LATD            equ	3980	;# 
   265   000F8D                     LATE            equ	3981	;# 
   266   000F92                     TRISA           equ	3986	;# 
   267   000F92                     DDRA            equ	3986	;# 
   268   000F93                     TRISB           equ	3987	;# 
   269   000F93                     DDRB            equ	3987	;# 
   270   000F94                     TRISC           equ	3988	;# 
   271   000F94                     DDRC            equ	3988	;# 
   272   000F95                     TRISD           equ	3989	;# 
   273   000F95                     DDRD            equ	3989	;# 
   274   000F96                     TRISE           equ	3990	;# 
   275   000F96                     DDRE            equ	3990	;# 
   276   000F9B                     OSCTUNE         equ	3995	;# 
   277   000F9D                     PIE1            equ	3997	;# 
   278   000F9E                     PIR1            equ	3998	;# 
   279   000F9F                     IPR1            equ	3999	;# 
   280   000FA0                     PIE2            equ	4000	;# 
   281   000FA1                     PIR2            equ	4001	;# 
   282   000FA2                     IPR2            equ	4002	;# 
   283   000FA6                     EECON1          equ	4006	;# 
   284   000FA7                     EECON2          equ	4007	;# 
   285   000FA8                     EEDATA          equ	4008	;# 
   286   000FA9                     EEADR           equ	4009	;# 
   287   000FAB                     RCSTA           equ	4011	;# 
   288   000FAB                     RCSTA1          equ	4011	;# 
   289   000FAC                     TXSTA           equ	4012	;# 
   290   000FAC                     TXSTA1          equ	4012	;# 
   291   000FAD                     TXREG           equ	4013	;# 
   292   000FAD                     TXREG1          equ	4013	;# 
   293   000FAE                     RCREG           equ	4014	;# 
   294   000FAE                     RCREG1          equ	4014	;# 
   295   000FAF                     SPBRG           equ	4015	;# 
   296   000FAF                     SPBRG1          equ	4015	;# 
   297   000FB0                     SPBRGH          equ	4016	;# 
   298   000FB1                     T3CON           equ	4017	;# 
   299   000FB2                     TMR3            equ	4018	;# 
   300   000FB2                     TMR3L           equ	4018	;# 
   301   000FB3                     TMR3H           equ	4019	;# 
   302   000FB4                     CMCON           equ	4020	;# 
   303   000FB5                     CVRCON          equ	4021	;# 
   304   000FB6                     ECCP1AS         equ	4022	;# 
   305   000FB7                     ECCP1DEL        equ	4023	;# 
   306   000FB7                     PWM1CON         equ	4023	;# 
   307   000FB8                     BAUDCON         equ	4024	;# 
   308   000FB8                     BAUDCTL         equ	4024	;# 
   309   000FBA                     CCP2CON         equ	4026	;# 
   310   000FBB                     CCPR2           equ	4027	;# 
   311   000FBB                     CCPR2L          equ	4027	;# 
   312   000FBC                     CCPR2H          equ	4028	;# 
   313   000FBD                     CCP1CON         equ	4029	;# 
   314   000FBD                     ECCP1CON        equ	4029	;# 
   315   000FBE                     CCPR1           equ	4030	;# 
   316   000FBE                     CCPR1L          equ	4030	;# 
   317   000FBF                     CCPR1H          equ	4031	;# 
   318   000FC0                     ADCON2          equ	4032	;# 
   319   000FC1                     ADCON1          equ	4033	;# 
   320   000FC2                     ADCON0          equ	4034	;# 
   321   000FC3                     ADRES           equ	4035	;# 
   322   000FC3                     ADRESL          equ	4035	;# 
   323   000FC4                     ADRESH          equ	4036	;# 
   324   000FC5                     SSPCON2         equ	4037	;# 
   325   000FC6                     SSPCON1         equ	4038	;# 
   326   000FC7                     SSPSTAT         equ	4039	;# 
   327   000FC8                     SSPADD          equ	4040	;# 
   328   000FC9                     SSPBUF          equ	4041	;# 
   329   000FCA                     T2CON           equ	4042	;# 
   330   000FCB                     PR2             equ	4043	;# 
   331   000FCB                     MEMCON          equ	4043	;# 
   332   000FCC                     TMR2            equ	4044	;# 
   333   000FCD                     T1CON           equ	4045	;# 
   334   000FCE                     TMR1            equ	4046	;# 
   335   000FCE                     TMR1L           equ	4046	;# 
   336   000FCF                     TMR1H           equ	4047	;# 
   337   000FD0                     RCON            equ	4048	;# 
   338   000FD1                     WDTCON          equ	4049	;# 
   339   000FD2                     HLVDCON         equ	4050	;# 
   340   000FD2                     LVDCON          equ	4050	;# 
   341   000FD3                     OSCCON          equ	4051	;# 
   342   000FD5                     T0CON           equ	4053	;# 
   343   000FD6                     TMR0            equ	4054	;# 
   344   000FD6                     TMR0L           equ	4054	;# 
   345   000FD7                     TMR0H           equ	4055	;# 
   346   000FD8                     STATUS          equ	4056	;# 
   347   000FD9                     FSR2            equ	4057	;# 
   348   000FD9                     FSR2L           equ	4057	;# 
   349   000FDA                     FSR2H           equ	4058	;# 
   350   000FDB                     PLUSW2          equ	4059	;# 
   351   000FDC                     PREINC2         equ	4060	;# 
   352   000FDD                     POSTDEC2        equ	4061	;# 
   353   000FDE                     POSTINC2        equ	4062	;# 
   354   000FDF                     INDF2           equ	4063	;# 
   355   000FE0                     BSR             equ	4064	;# 
   356   000FE1                     FSR1            equ	4065	;# 
   357   000FE1                     FSR1L           equ	4065	;# 
   358   000FE2                     FSR1H           equ	4066	;# 
   359   000FE3                     PLUSW1          equ	4067	;# 
   360   000FE4                     PREINC1         equ	4068	;# 
   361   000FE5                     POSTDEC1        equ	4069	;# 
   362   000FE6                     POSTINC1        equ	4070	;# 
   363   000FE7                     INDF1           equ	4071	;# 
   364   000FE8                     WREG            equ	4072	;# 
   365   000FE9                     FSR0            equ	4073	;# 
   366   000FE9                     FSR0L           equ	4073	;# 
   367   000FEA                     FSR0H           equ	4074	;# 
   368   000FEB                     PLUSW0          equ	4075	;# 
   369   000FEC                     PREINC0         equ	4076	;# 
   370   000FED                     POSTDEC0        equ	4077	;# 
   371   000FEE                     POSTINC0        equ	4078	;# 
   372   000FEF                     INDF0           equ	4079	;# 
   373   000FF0                     INTCON3         equ	4080	;# 
   374   000FF1                     INTCON2         equ	4081	;# 
   375   000FF2                     INTCON          equ	4082	;# 
   376   000FF3                     PROD            equ	4083	;# 
   377   000FF3                     PRODL           equ	4083	;# 
   378   000FF4                     PRODH           equ	4084	;# 
   379   000FF5                     TABLAT          equ	4085	;# 
   380   000FF6                     TBLPTR          equ	4086	;# 
   381   000FF6                     TBLPTRL         equ	4086	;# 
   382   000FF7                     TBLPTRH         equ	4087	;# 
   383   000FF8                     TBLPTRU         equ	4088	;# 
   384   000FF9                     PCLAT           equ	4089	;# 
   385   000FF9                     PC              equ	4089	;# 
   386   000FF9                     PCL             equ	4089	;# 
   387   000FFA                     PCLATH          equ	4090	;# 
   388   000FFB                     PCLATU          equ	4091	;# 
   389   000FFC                     STKPTR          equ	4092	;# 
   390   000FFD                     TOS             equ	4093	;# 
   391   000FFD                     TOSL            equ	4093	;# 
   392   000FFE                     TOSH            equ	4094	;# 
   393   000FFF                     TOSU            equ	4095	;# 
   394   000F80                     PORTA           equ	3968	;# 
   395   000F81                     PORTB           equ	3969	;# 
   396   000F82                     PORTC           equ	3970	;# 
   397   000F83                     PORTD           equ	3971	;# 
   398   000F84                     PORTE           equ	3972	;# 
   399   000F89                     LATA            equ	3977	;# 
   400   000F8A                     LATB            equ	3978	;# 
   401   000F8B                     LATC            equ	3979	;# 
   402   000F8C                     LATD            equ	3980	;# 
   403   000F8D                     LATE            equ	3981	;# 
   404   000F92                     TRISA           equ	3986	;# 
   405   000F92                     DDRA            equ	3986	;# 
   406   000F93                     TRISB           equ	3987	;# 
   407   000F93                     DDRB            equ	3987	;# 
   408   000F94                     TRISC           equ	3988	;# 
   409   000F94                     DDRC            equ	3988	;# 
   410   000F95                     TRISD           equ	3989	;# 
   411   000F95                     DDRD            equ	3989	;# 
   412   000F96                     TRISE           equ	3990	;# 
   413   000F96                     DDRE            equ	3990	;# 
   414   000F9B                     OSCTUNE         equ	3995	;# 
   415   000F9D                     PIE1            equ	3997	;# 
   416   000F9E                     PIR1            equ	3998	;# 
   417   000F9F                     IPR1            equ	3999	;# 
   418   000FA0                     PIE2            equ	4000	;# 
   419   000FA1                     PIR2            equ	4001	;# 
   420   000FA2                     IPR2            equ	4002	;# 
   421   000FA6                     EECON1          equ	4006	;# 
   422   000FA7                     EECON2          equ	4007	;# 
   423   000FA8                     EEDATA          equ	4008	;# 
   424   000FA9                     EEADR           equ	4009	;# 
   425   000FAB                     RCSTA           equ	4011	;# 
   426   000FAB                     RCSTA1          equ	4011	;# 
   427   000FAC                     TXSTA           equ	4012	;# 
   428   000FAC                     TXSTA1          equ	4012	;# 
   429   000FAD                     TXREG           equ	4013	;# 
   430   000FAD                     TXREG1          equ	4013	;# 
   431   000FAE                     RCREG           equ	4014	;# 
   432   000FAE                     RCREG1          equ	4014	;# 
   433   000FAF                     SPBRG           equ	4015	;# 
   434   000FAF                     SPBRG1          equ	4015	;# 
   435   000FB0                     SPBRGH          equ	4016	;# 
   436   000FB1                     T3CON           equ	4017	;# 
   437   000FB2                     TMR3            equ	4018	;# 
   438   000FB2                     TMR3L           equ	4018	;# 
   439   000FB3                     TMR3H           equ	4019	;# 
   440   000FB4                     CMCON           equ	4020	;# 
   441   000FB5                     CVRCON          equ	4021	;# 
   442   000FB6                     ECCP1AS         equ	4022	;# 
   443   000FB7                     ECCP1DEL        equ	4023	;# 
   444   000FB7                     PWM1CON         equ	4023	;# 
   445   000FB8                     BAUDCON         equ	4024	;# 
   446   000FB8                     BAUDCTL         equ	4024	;# 
   447   000FBA                     CCP2CON         equ	4026	;# 
   448   000FBB                     CCPR2           equ	4027	;# 
   449   000FBB                     CCPR2L          equ	4027	;# 
   450   000FBC                     CCPR2H          equ	4028	;# 
   451   000FBD                     CCP1CON         equ	4029	;# 
   452   000FBD                     ECCP1CON        equ	4029	;# 
   453   000FBE                     CCPR1           equ	4030	;# 
   454   000FBE                     CCPR1L          equ	4030	;# 
   455   000FBF                     CCPR1H          equ	4031	;# 
   456   000FC0                     ADCON2          equ	4032	;# 
   457   000FC1                     ADCON1          equ	4033	;# 
   458   000FC2                     ADCON0          equ	4034	;# 
   459   000FC3                     ADRES           equ	4035	;# 
   460   000FC3                     ADRESL          equ	4035	;# 
   461   000FC4                     ADRESH          equ	4036	;# 
   462   000FC5                     SSPCON2         equ	4037	;# 
   463   000FC6                     SSPCON1         equ	4038	;# 
   464   000FC7                     SSPSTAT         equ	4039	;# 
   465   000FC8                     SSPADD          equ	4040	;# 
   466   000FC9                     SSPBUF          equ	4041	;# 
   467   000FCA                     T2CON           equ	4042	;# 
   468   000FCB                     PR2             equ	4043	;# 
   469   000FCB                     MEMCON          equ	4043	;# 
   470   000FCC                     TMR2            equ	4044	;# 
   471   000FCD                     T1CON           equ	4045	;# 
   472   000FCE                     TMR1            equ	4046	;# 
   473   000FCE                     TMR1L           equ	4046	;# 
   474   000FCF                     TMR1H           equ	4047	;# 
   475   000FD0                     RCON            equ	4048	;# 
   476   000FD1                     WDTCON          equ	4049	;# 
   477   000FD2                     HLVDCON         equ	4050	;# 
   478   000FD2                     LVDCON          equ	4050	;# 
   479   000FD3                     OSCCON          equ	4051	;# 
   480   000FD5                     T0CON           equ	4053	;# 
   481   000FD6                     TMR0            equ	4054	;# 
   482   000FD6                     TMR0L           equ	4054	;# 
   483   000FD7                     TMR0H           equ	4055	;# 
   484   000FD8                     STATUS          equ	4056	;# 
   485   000FD9                     FSR2            equ	4057	;# 
   486   000FD9                     FSR2L           equ	4057	;# 
   487   000FDA                     FSR2H           equ	4058	;# 
   488   000FDB                     PLUSW2          equ	4059	;# 
   489   000FDC                     PREINC2         equ	4060	;# 
   490   000FDD                     POSTDEC2        equ	4061	;# 
   491   000FDE                     POSTINC2        equ	4062	;# 
   492   000FDF                     INDF2           equ	4063	;# 
   493   000FE0                     BSR             equ	4064	;# 
   494   000FE1                     FSR1            equ	4065	;# 
   495   000FE1                     FSR1L           equ	4065	;# 
   496   000FE2                     FSR1H           equ	4066	;# 
   497   000FE3                     PLUSW1          equ	4067	;# 
   498   000FE4                     PREINC1         equ	4068	;# 
   499   000FE5                     POSTDEC1        equ	4069	;# 
   500   000FE6                     POSTINC1        equ	4070	;# 
   501   000FE7                     INDF1           equ	4071	;# 
   502   000FE8                     WREG            equ	4072	;# 
   503   000FE9                     FSR0            equ	4073	;# 
   504   000FE9                     FSR0L           equ	4073	;# 
   505   000FEA                     FSR0H           equ	4074	;# 
   506   000FEB                     PLUSW0          equ	4075	;# 
   507   000FEC                     PREINC0         equ	4076	;# 
   508   000FED                     POSTDEC0        equ	4077	;# 
   509   000FEE                     POSTINC0        equ	4078	;# 
   510   000FEF                     INDF0           equ	4079	;# 
   511   000FF0                     INTCON3         equ	4080	;# 
   512   000FF1                     INTCON2         equ	4081	;# 
   513   000FF2                     INTCON          equ	4082	;# 
   514   000FF3                     PROD            equ	4083	;# 
   515   000FF3                     PRODL           equ	4083	;# 
   516   000FF4                     PRODH           equ	4084	;# 
   517   000FF5                     TABLAT          equ	4085	;# 
   518   000FF6                     TBLPTR          equ	4086	;# 
   519   000FF6                     TBLPTRL         equ	4086	;# 
   520   000FF7                     TBLPTRH         equ	4087	;# 
   521   000FF8                     TBLPTRU         equ	4088	;# 
   522   000FF9                     PCLAT           equ	4089	;# 
   523   000FF9                     PC              equ	4089	;# 
   524   000FF9                     PCL             equ	4089	;# 
   525   000FFA                     PCLATH          equ	4090	;# 
   526   000FFB                     PCLATU          equ	4091	;# 
   527   000FFC                     STKPTR          equ	4092	;# 
   528   000FFD                     TOS             equ	4093	;# 
   529   000FFD                     TOSL            equ	4093	;# 
   530   000FFE                     TOSH            equ	4094	;# 
   531   000FFF                     TOSU            equ	4095	;# 
   532   000F80                     PORTA           equ	3968	;# 
   533   000F81                     PORTB           equ	3969	;# 
   534   000F82                     PORTC           equ	3970	;# 
   535   000F83                     PORTD           equ	3971	;# 
   536   000F84                     PORTE           equ	3972	;# 
   537   000F89                     LATA            equ	3977	;# 
   538   000F8A                     LATB            equ	3978	;# 
   539   000F8B                     LATC            equ	3979	;# 
   540   000F8C                     LATD            equ	3980	;# 
   541   000F8D                     LATE            equ	3981	;# 
   542   000F92                     TRISA           equ	3986	;# 
   543   000F92                     DDRA            equ	3986	;# 
   544   000F93                     TRISB           equ	3987	;# 
   545   000F93                     DDRB            equ	3987	;# 
   546   000F94                     TRISC           equ	3988	;# 
   547   000F94                     DDRC            equ	3988	;# 
   548   000F95                     TRISD           equ	3989	;# 
   549   000F95                     DDRD            equ	3989	;# 
   550   000F96                     TRISE           equ	3990	;# 
   551   000F96                     DDRE            equ	3990	;# 
   552   000F9B                     OSCTUNE         equ	3995	;# 
   553   000F9D                     PIE1            equ	3997	;# 
   554   000F9E                     PIR1            equ	3998	;# 
   555   000F9F                     IPR1            equ	3999	;# 
   556   000FA0                     PIE2            equ	4000	;# 
   557   000FA1                     PIR2            equ	4001	;# 
   558   000FA2                     IPR2            equ	4002	;# 
   559   000FA6                     EECON1          equ	4006	;# 
   560   000FA7                     EECON2          equ	4007	;# 
   561   000FA8                     EEDATA          equ	4008	;# 
   562   000FA9                     EEADR           equ	4009	;# 
   563   000FAB                     RCSTA           equ	4011	;# 
   564   000FAB                     RCSTA1          equ	4011	;# 
   565   000FAC                     TXSTA           equ	4012	;# 
   566   000FAC                     TXSTA1          equ	4012	;# 
   567   000FAD                     TXREG           equ	4013	;# 
   568   000FAD                     TXREG1          equ	4013	;# 
   569   000FAE                     RCREG           equ	4014	;# 
   570   000FAE                     RCREG1          equ	4014	;# 
   571   000FAF                     SPBRG           equ	4015	;# 
   572   000FAF                     SPBRG1          equ	4015	;# 
   573   000FB0                     SPBRGH          equ	4016	;# 
   574   000FB1                     T3CON           equ	4017	;# 
   575   000FB2                     TMR3            equ	4018	;# 
   576   000FB2                     TMR3L           equ	4018	;# 
   577   000FB3                     TMR3H           equ	4019	;# 
   578   000FB4                     CMCON           equ	4020	;# 
   579   000FB5                     CVRCON          equ	4021	;# 
   580   000FB6                     ECCP1AS         equ	4022	;# 
   581   000FB7                     ECCP1DEL        equ	4023	;# 
   582   000FB7                     PWM1CON         equ	4023	;# 
   583   000FB8                     BAUDCON         equ	4024	;# 
   584   000FB8                     BAUDCTL         equ	4024	;# 
   585   000FBA                     CCP2CON         equ	4026	;# 
   586   000FBB                     CCPR2           equ	4027	;# 
   587   000FBB                     CCPR2L          equ	4027	;# 
   588   000FBC                     CCPR2H          equ	4028	;# 
   589   000FBD                     CCP1CON         equ	4029	;# 
   590   000FBD                     ECCP1CON        equ	4029	;# 
   591   000FBE                     CCPR1           equ	4030	;# 
   592   000FBE                     CCPR1L          equ	4030	;# 
   593   000FBF                     CCPR1H          equ	4031	;# 
   594   000FC0                     ADCON2          equ	4032	;# 
   595   000FC1                     ADCON1          equ	4033	;# 
   596   000FC2                     ADCON0          equ	4034	;# 
   597   000FC3                     ADRES           equ	4035	;# 
   598   000FC3                     ADRESL          equ	4035	;# 
   599   000FC4                     ADRESH          equ	4036	;# 
   600   000FC5                     SSPCON2         equ	4037	;# 
   601   000FC6                     SSPCON1         equ	4038	;# 
   602   000FC7                     SSPSTAT         equ	4039	;# 
   603   000FC8                     SSPADD          equ	4040	;# 
   604   000FC9                     SSPBUF          equ	4041	;# 
   605   000FCA                     T2CON           equ	4042	;# 
   606   000FCB                     PR2             equ	4043	;# 
   607   000FCB                     MEMCON          equ	4043	;# 
   608   000FCC                     TMR2            equ	4044	;# 
   609   000FCD                     T1CON           equ	4045	;# 
   610   000FCE                     TMR1            equ	4046	;# 
   611   000FCE                     TMR1L           equ	4046	;# 
   612   000FCF                     TMR1H           equ	4047	;# 
   613   000FD0                     RCON            equ	4048	;# 
   614   000FD1                     WDTCON          equ	4049	;# 
   615   000FD2                     HLVDCON         equ	4050	;# 
   616   000FD2                     LVDCON          equ	4050	;# 
   617   000FD3                     OSCCON          equ	4051	;# 
   618   000FD5                     T0CON           equ	4053	;# 
   619   000FD6                     TMR0            equ	4054	;# 
   620   000FD6                     TMR0L           equ	4054	;# 
   621   000FD7                     TMR0H           equ	4055	;# 
   622   000FD8                     STATUS          equ	4056	;# 
   623   000FD9                     FSR2            equ	4057	;# 
   624   000FD9                     FSR2L           equ	4057	;# 
   625   000FDA                     FSR2H           equ	4058	;# 
   626   000FDB                     PLUSW2          equ	4059	;# 
   627   000FDC                     PREINC2         equ	4060	;# 
   628   000FDD                     POSTDEC2        equ	4061	;# 
   629   000FDE                     POSTINC2        equ	4062	;# 
   630   000FDF                     INDF2           equ	4063	;# 
   631   000FE0                     BSR             equ	4064	;# 
   632   000FE1                     FSR1            equ	4065	;# 
   633   000FE1                     FSR1L           equ	4065	;# 
   634   000FE2                     FSR1H           equ	4066	;# 
   635   000FE3                     PLUSW1          equ	4067	;# 
   636   000FE4                     PREINC1         equ	4068	;# 
   637   000FE5                     POSTDEC1        equ	4069	;# 
   638   000FE6                     POSTINC1        equ	4070	;# 
   639   000FE7                     INDF1           equ	4071	;# 
   640   000FE8                     WREG            equ	4072	;# 
   641   000FE9                     FSR0            equ	4073	;# 
   642   000FE9                     FSR0L           equ	4073	;# 
   643   000FEA                     FSR0H           equ	4074	;# 
   644   000FEB                     PLUSW0          equ	4075	;# 
   645   000FEC                     PREINC0         equ	4076	;# 
   646   000FED                     POSTDEC0        equ	4077	;# 
   647   000FEE                     POSTINC0        equ	4078	;# 
   648   000FEF                     INDF0           equ	4079	;# 
   649   000FF0                     INTCON3         equ	4080	;# 
   650   000FF1                     INTCON2         equ	4081	;# 
   651   000FF2                     INTCON          equ	4082	;# 
   652   000FF3                     PROD            equ	4083	;# 
   653   000FF3                     PRODL           equ	4083	;# 
   654   000FF4                     PRODH           equ	4084	;# 
   655   000FF5                     TABLAT          equ	4085	;# 
   656   000FF6                     TBLPTR          equ	4086	;# 
   657   000FF6                     TBLPTRL         equ	4086	;# 
   658   000FF7                     TBLPTRH         equ	4087	;# 
   659   000FF8                     TBLPTRU         equ	4088	;# 
   660   000FF9                     PCLAT           equ	4089	;# 
   661   000FF9                     PC              equ	4089	;# 
   662   000FF9                     PCL             equ	4089	;# 
   663   000FFA                     PCLATH          equ	4090	;# 
   664   000FFB                     PCLATU          equ	4091	;# 
   665   000FFC                     STKPTR          equ	4092	;# 
   666   000FFD                     TOS             equ	4093	;# 
   667   000FFD                     TOSL            equ	4093	;# 
   668   000FFE                     TOSH            equ	4094	;# 
   669   000FFF                     TOSU            equ	4095	;# 
   670   000F80                     PORTA           equ	3968	;# 
   671   000F81                     PORTB           equ	3969	;# 
   672   000F82                     PORTC           equ	3970	;# 
   673   000F83                     PORTD           equ	3971	;# 
   674   000F84                     PORTE           equ	3972	;# 
   675   000F89                     LATA            equ	3977	;# 
   676   000F8A                     LATB            equ	3978	;# 
   677   000F8B                     LATC            equ	3979	;# 
   678   000F8C                     LATD            equ	3980	;# 
   679   000F8D                     LATE            equ	3981	;# 
   680   000F92                     TRISA           equ	3986	;# 
   681   000F92                     DDRA            equ	3986	;# 
   682   000F93                     TRISB           equ	3987	;# 
   683   000F93                     DDRB            equ	3987	;# 
   684   000F94                     TRISC           equ	3988	;# 
   685   000F94                     DDRC            equ	3988	;# 
   686   000F95                     TRISD           equ	3989	;# 
   687   000F95                     DDRD            equ	3989	;# 
   688   000F96                     TRISE           equ	3990	;# 
   689   000F96                     DDRE            equ	3990	;# 
   690   000F9B                     OSCTUNE         equ	3995	;# 
   691   000F9D                     PIE1            equ	3997	;# 
   692   000F9E                     PIR1            equ	3998	;# 
   693   000F9F                     IPR1            equ	3999	;# 
   694   000FA0                     PIE2            equ	4000	;# 
   695   000FA1                     PIR2            equ	4001	;# 
   696   000FA2                     IPR2            equ	4002	;# 
   697   000FA6                     EECON1          equ	4006	;# 
   698   000FA7                     EECON2          equ	4007	;# 
   699   000FA8                     EEDATA          equ	4008	;# 
   700   000FA9                     EEADR           equ	4009	;# 
   701   000FAB                     RCSTA           equ	4011	;# 
   702   000FAB                     RCSTA1          equ	4011	;# 
   703   000FAC                     TXSTA           equ	4012	;# 
   704   000FAC                     TXSTA1          equ	4012	;# 
   705   000FAD                     TXREG           equ	4013	;# 
   706   000FAD                     TXREG1          equ	4013	;# 
   707   000FAE                     RCREG           equ	4014	;# 
   708   000FAE                     RCREG1          equ	4014	;# 
   709   000FAF                     SPBRG           equ	4015	;# 
   710   000FAF                     SPBRG1          equ	4015	;# 
   711   000FB0                     SPBRGH          equ	4016	;# 
   712   000FB1                     T3CON           equ	4017	;# 
   713   000FB2                     TMR3            equ	4018	;# 
   714   000FB2                     TMR3L           equ	4018	;# 
   715   000FB3                     TMR3H           equ	4019	;# 
   716   000FB4                     CMCON           equ	4020	;# 
   717   000FB5                     CVRCON          equ	4021	;# 
   718   000FB6                     ECCP1AS         equ	4022	;# 
   719   000FB7                     ECCP1DEL        equ	4023	;# 
   720   000FB7                     PWM1CON         equ	4023	;# 
   721   000FB8                     BAUDCON         equ	4024	;# 
   722   000FB8                     BAUDCTL         equ	4024	;# 
   723   000FBA                     CCP2CON         equ	4026	;# 
   724   000FBB                     CCPR2           equ	4027	;# 
   725   000FBB                     CCPR2L          equ	4027	;# 
   726   000FBC                     CCPR2H          equ	4028	;# 
   727   000FBD                     CCP1CON         equ	4029	;# 
   728   000FBD                     ECCP1CON        equ	4029	;# 
   729   000FBE                     CCPR1           equ	4030	;# 
   730   000FBE                     CCPR1L          equ	4030	;# 
   731   000FBF                     CCPR1H          equ	4031	;# 
   732   000FC0                     ADCON2          equ	4032	;# 
   733   000FC1                     ADCON1          equ	4033	;# 
   734   000FC2                     ADCON0          equ	4034	;# 
   735   000FC3                     ADRES           equ	4035	;# 
   736   000FC3                     ADRESL          equ	4035	;# 
   737   000FC4                     ADRESH          equ	4036	;# 
   738   000FC5                     SSPCON2         equ	4037	;# 
   739   000FC6                     SSPCON1         equ	4038	;# 
   740   000FC7                     SSPSTAT         equ	4039	;# 
   741   000FC8                     SSPADD          equ	4040	;# 
   742   000FC9                     SSPBUF          equ	4041	;# 
   743   000FCA                     T2CON           equ	4042	;# 
   744   000FCB                     PR2             equ	4043	;# 
   745   000FCB                     MEMCON          equ	4043	;# 
   746   000FCC                     TMR2            equ	4044	;# 
   747   000FCD                     T1CON           equ	4045	;# 
   748   000FCE                     TMR1            equ	4046	;# 
   749   000FCE                     TMR1L           equ	4046	;# 
   750   000FCF                     TMR1H           equ	4047	;# 
   751   000FD0                     RCON            equ	4048	;# 
   752   000FD1                     WDTCON          equ	4049	;# 
   753   000FD2                     HLVDCON         equ	4050	;# 
   754   000FD2                     LVDCON          equ	4050	;# 
   755   000FD3                     OSCCON          equ	4051	;# 
   756   000FD5                     T0CON           equ	4053	;# 
   757   000FD6                     TMR0            equ	4054	;# 
   758   000FD6                     TMR0L           equ	4054	;# 
   759   000FD7                     TMR0H           equ	4055	;# 
   760   000FD8                     STATUS          equ	4056	;# 
   761   000FD9                     FSR2            equ	4057	;# 
   762   000FD9                     FSR2L           equ	4057	;# 
   763   000FDA                     FSR2H           equ	4058	;# 
   764   000FDB                     PLUSW2          equ	4059	;# 
   765   000FDC                     PREINC2         equ	4060	;# 
   766   000FDD                     POSTDEC2        equ	4061	;# 
   767   000FDE                     POSTINC2        equ	4062	;# 
   768   000FDF                     INDF2           equ	4063	;# 
   769   000FE0                     BSR             equ	4064	;# 
   770   000FE1                     FSR1            equ	4065	;# 
   771   000FE1                     FSR1L           equ	4065	;# 
   772   000FE2                     FSR1H           equ	4066	;# 
   773   000FE3                     PLUSW1          equ	4067	;# 
   774   000FE4                     PREINC1         equ	4068	;# 
   775   000FE5                     POSTDEC1        equ	4069	;# 
   776   000FE6                     POSTINC1        equ	4070	;# 
   777   000FE7                     INDF1           equ	4071	;# 
   778   000FE8                     WREG            equ	4072	;# 
   779   000FE9                     FSR0            equ	4073	;# 
   780   000FE9                     FSR0L           equ	4073	;# 
   781   000FEA                     FSR0H           equ	4074	;# 
   782   000FEB                     PLUSW0          equ	4075	;# 
   783   000FEC                     PREINC0         equ	4076	;# 
   784   000FED                     POSTDEC0        equ	4077	;# 
   785   000FEE                     POSTINC0        equ	4078	;# 
   786   000FEF                     INDF0           equ	4079	;# 
   787   000FF0                     INTCON3         equ	4080	;# 
   788   000FF1                     INTCON2         equ	4081	;# 
   789   000FF2                     INTCON          equ	4082	;# 
   790   000FF3                     PROD            equ	4083	;# 
   791   000FF3                     PRODL           equ	4083	;# 
   792   000FF4                     PRODH           equ	4084	;# 
   793   000FF5                     TABLAT          equ	4085	;# 
   794   000FF6                     TBLPTR          equ	4086	;# 
   795   000FF6                     TBLPTRL         equ	4086	;# 
   796   000FF7                     TBLPTRH         equ	4087	;# 
   797   000FF8                     TBLPTRU         equ	4088	;# 
   798   000FF9                     PCLAT           equ	4089	;# 
   799   000FF9                     PC              equ	4089	;# 
   800   000FF9                     PCL             equ	4089	;# 
   801   000FFA                     PCLATH          equ	4090	;# 
   802   000FFB                     PCLATU          equ	4091	;# 
   803   000FFC                     STKPTR          equ	4092	;# 
   804   000FFD                     TOS             equ	4093	;# 
   805   000FFD                     TOSL            equ	4093	;# 
   806   000FFE                     TOSH            equ	4094	;# 
   807   000FFF                     TOSU            equ	4095	;# 
   808   000F80                     PORTA           equ	3968	;# 
   809   000F81                     PORTB           equ	3969	;# 
   810   000F82                     PORTC           equ	3970	;# 
   811   000F83                     PORTD           equ	3971	;# 
   812   000F84                     PORTE           equ	3972	;# 
   813   000F89                     LATA            equ	3977	;# 
   814   000F8A                     LATB            equ	3978	;# 
   815   000F8B                     LATC            equ	3979	;# 
   816   000F8C                     LATD            equ	3980	;# 
   817   000F8D                     LATE            equ	3981	;# 
   818   000F92                     TRISA           equ	3986	;# 
   819   000F92                     DDRA            equ	3986	;# 
   820   000F93                     TRISB           equ	3987	;# 
   821   000F93                     DDRB            equ	3987	;# 
   822   000F94                     TRISC           equ	3988	;# 
   823   000F94                     DDRC            equ	3988	;# 
   824   000F95                     TRISD           equ	3989	;# 
   825   000F95                     DDRD            equ	3989	;# 
   826   000F96                     TRISE           equ	3990	;# 
   827   000F96                     DDRE            equ	3990	;# 
   828   000F9B                     OSCTUNE         equ	3995	;# 
   829   000F9D                     PIE1            equ	3997	;# 
   830   000F9E                     PIR1            equ	3998	;# 
   831   000F9F                     IPR1            equ	3999	;# 
   832   000FA0                     PIE2            equ	4000	;# 
   833   000FA1                     PIR2            equ	4001	;# 
   834   000FA2                     IPR2            equ	4002	;# 
   835   000FA6                     EECON1          equ	4006	;# 
   836   000FA7                     EECON2          equ	4007	;# 
   837   000FA8                     EEDATA          equ	4008	;# 
   838   000FA9                     EEADR           equ	4009	;# 
   839   000FAB                     RCSTA           equ	4011	;# 
   840   000FAB                     RCSTA1          equ	4011	;# 
   841   000FAC                     TXSTA           equ	4012	;# 
   842   000FAC                     TXSTA1          equ	4012	;# 
   843   000FAD                     TXREG           equ	4013	;# 
   844   000FAD                     TXREG1          equ	4013	;# 
   845   000FAE                     RCREG           equ	4014	;# 
   846   000FAE                     RCREG1          equ	4014	;# 
   847   000FAF                     SPBRG           equ	4015	;# 
   848   000FAF                     SPBRG1          equ	4015	;# 
   849   000FB0                     SPBRGH          equ	4016	;# 
   850   000FB1                     T3CON           equ	4017	;# 
   851   000FB2                     TMR3            equ	4018	;# 
   852   000FB2                     TMR3L           equ	4018	;# 
   853   000FB3                     TMR3H           equ	4019	;# 
   854   000FB4                     CMCON           equ	4020	;# 
   855   000FB5                     CVRCON          equ	4021	;# 
   856   000FB6                     ECCP1AS         equ	4022	;# 
   857   000FB7                     ECCP1DEL        equ	4023	;# 
   858   000FB7                     PWM1CON         equ	4023	;# 
   859   000FB8                     BAUDCON         equ	4024	;# 
   860   000FB8                     BAUDCTL         equ	4024	;# 
   861   000FBA                     CCP2CON         equ	4026	;# 
   862   000FBB                     CCPR2           equ	4027	;# 
   863   000FBB                     CCPR2L          equ	4027	;# 
   864   000FBC                     CCPR2H          equ	4028	;# 
   865   000FBD                     CCP1CON         equ	4029	;# 
   866   000FBD                     ECCP1CON        equ	4029	;# 
   867   000FBE                     CCPR1           equ	4030	;# 
   868   000FBE                     CCPR1L          equ	4030	;# 
   869   000FBF                     CCPR1H          equ	4031	;# 
   870   000FC0                     ADCON2          equ	4032	;# 
   871   000FC1                     ADCON1          equ	4033	;# 
   872   000FC2                     ADCON0          equ	4034	;# 
   873   000FC3                     ADRES           equ	4035	;# 
   874   000FC3                     ADRESL          equ	4035	;# 
   875   000FC4                     ADRESH          equ	4036	;# 
   876   000FC5                     SSPCON2         equ	4037	;# 
   877   000FC6                     SSPCON1         equ	4038	;# 
   878   000FC7                     SSPSTAT         equ	4039	;# 
   879   000FC8                     SSPADD          equ	4040	;# 
   880   000FC9                     SSPBUF          equ	4041	;# 
   881   000FCA                     T2CON           equ	4042	;# 
   882   000FCB                     PR2             equ	4043	;# 
   883   000FCB                     MEMCON          equ	4043	;# 
   884   000FCC                     TMR2            equ	4044	;# 
   885   000FCD                     T1CON           equ	4045	;# 
   886   000FCE                     TMR1            equ	4046	;# 
   887   000FCE                     TMR1L           equ	4046	;# 
   888   000FCF                     TMR1H           equ	4047	;# 
   889   000FD0                     RCON            equ	4048	;# 
   890   000FD1                     WDTCON          equ	4049	;# 
   891   000FD2                     HLVDCON         equ	4050	;# 
   892   000FD2                     LVDCON          equ	4050	;# 
   893   000FD3                     OSCCON          equ	4051	;# 
   894   000FD5                     T0CON           equ	4053	;# 
   895   000FD6                     TMR0            equ	4054	;# 
   896   000FD6                     TMR0L           equ	4054	;# 
   897   000FD7                     TMR0H           equ	4055	;# 
   898   000FD8                     STATUS          equ	4056	;# 
   899   000FD9                     FSR2            equ	4057	;# 
   900   000FD9                     FSR2L           equ	4057	;# 
   901   000FDA                     FSR2H           equ	4058	;# 
   902   000FDB                     PLUSW2          equ	4059	;# 
   903   000FDC                     PREINC2         equ	4060	;# 
   904   000FDD                     POSTDEC2        equ	4061	;# 
   905   000FDE                     POSTINC2        equ	4062	;# 
   906   000FDF                     INDF2           equ	4063	;# 
   907   000FE0                     BSR             equ	4064	;# 
   908   000FE1                     FSR1            equ	4065	;# 
   909   000FE1                     FSR1L           equ	4065	;# 
   910   000FE2                     FSR1H           equ	4066	;# 
   911   000FE3                     PLUSW1          equ	4067	;# 
   912   000FE4                     PREINC1         equ	4068	;# 
   913   000FE5                     POSTDEC1        equ	4069	;# 
   914   000FE6                     POSTINC1        equ	4070	;# 
   915   000FE7                     INDF1           equ	4071	;# 
   916   000FE8                     WREG            equ	4072	;# 
   917   000FE9                     FSR0            equ	4073	;# 
   918   000FE9                     FSR0L           equ	4073	;# 
   919   000FEA                     FSR0H           equ	4074	;# 
   920   000FEB                     PLUSW0          equ	4075	;# 
   921   000FEC                     PREINC0         equ	4076	;# 
   922   000FED                     POSTDEC0        equ	4077	;# 
   923   000FEE                     POSTINC0        equ	4078	;# 
   924   000FEF                     INDF0           equ	4079	;# 
   925   000FF0                     INTCON3         equ	4080	;# 
   926   000FF1                     INTCON2         equ	4081	;# 
   927   000FF2                     INTCON          equ	4082	;# 
   928   000FF3                     PROD            equ	4083	;# 
   929   000FF3                     PRODL           equ	4083	;# 
   930   000FF4                     PRODH           equ	4084	;# 
   931   000FF5                     TABLAT          equ	4085	;# 
   932   000FF6                     TBLPTR          equ	4086	;# 
   933   000FF6                     TBLPTRL         equ	4086	;# 
   934   000FF7                     TBLPTRH         equ	4087	;# 
   935   000FF8                     TBLPTRU         equ	4088	;# 
   936   000FF9                     PCLAT           equ	4089	;# 
   937   000FF9                     PC              equ	4089	;# 
   938   000FF9                     PCL             equ	4089	;# 
   939   000FFA                     PCLATH          equ	4090	;# 
   940   000FFB                     PCLATU          equ	4091	;# 
   941   000FFC                     STKPTR          equ	4092	;# 
   942   000FFD                     TOS             equ	4093	;# 
   943   000FFD                     TOSL            equ	4093	;# 
   944   000FFE                     TOSH            equ	4094	;# 
   945   000FFF                     TOSU            equ	4095	;# 
   946                           
   947                           	psect	smallconst
   948   000200                     __psmallconst:
   949                           	callstack 0
   950   000200  00                 	db	0
   951   000201                     GetTecla@F2722:
   952                           	callstack 0
   953   000201  01                 	db	1
   954   000202  02                 	db	2
   955   000203  03                 	db	3
   956   000204  04                 	db	4
   957   000205  05                 	db	5
   958   000206  06                 	db	6
   959   000207  07                 	db	7
   960   000208  08                 	db	8
   961   000209  09                 	db	9
   962   00020A  0A                 	db	10
   963   00020B  00                 	db	0
   964   00020C  0B                 	db	11
   965   00020D                     __end_ofGetTecla@F2722:
   966                           	callstack 0
   967   007F92                     _TMR0IF         set	32658
   968   000FD6                     _TMR0           set	4054
   969   000FAE                     _RCREG          set	4014
   970   000FAD                     _TXREG          set	4013
   971   000F9E                     _PIR1bits       set	3998
   972   000FB8                     _BAUDCON        set	4024
   973   000FAF                     _SPBRG          set	4015
   974   000FAB                     _RCSTA          set	4011
   975   000FAC                     _TXSTA          set	4012
   976   000F81                     _PORTBbits      set	3969
   977   000F8A                     _LATBbits       set	3978
   978   000F93                     _TRISBbits      set	3987
   979   000F82                     _PORTCbits      set	3970
   980   000F8B                     _LATCbits       set	3979
   981   000F94                     _TRISCbits      set	3988
   982   000F8A                     _LATB           set	3978
   983   000F93                     _TRISB          set	3987
   984   000F8C                     _LATD           set	3980
   985   000F95                     _TRISD          set	3989
   986   000F83                     _PORTD          set	3971
   987   000FD5                     _T0CON          set	4053
   988   000F8B                     _LATC           set	3979
   989   000FF2                     _INTCONbits     set	4082
   990   00020D  09                 	db	9
   991   00020E  33                 	db	51	;'3'
   992   00020F  2E                 	db	46
   993   000210  20                 	db	32
   994   000211  4D                 	db	77	;'M'
   995   000212  6F                 	db	111	;'o'
   996   000213  64                 	db	100	;'d'
   997   000214  69                 	db	105	;'i'
   998   000215  66                 	db	102	;'f'
   999   000216  69                 	db	105	;'i'
  1000   000217  63                 	db	99	;'c'
  1001   000218  61                 	db	97	;'a'
  1002   000219  72                 	db	114	;'r'
  1003   00021A  20                 	db	32
  1004   00021B  68                 	db	104	;'h'
  1005   00021C  6F                 	db	111	;'o'
  1006   00021D  72                 	db	114	;'r'
  1007   00021E  61                 	db	97	;'a'
  1008   00021F  20                 	db	32
  1009   000220  64                 	db	100	;'d'
  1010   000221  65                 	db	101	;'e'
  1011   000222  6C                 	db	108	;'l'
  1012   000223  20                 	db	32
  1013   000224  73                 	db	115	;'s'
  1014   000225  69                 	db	105	;'i'
  1015   000226  73                 	db	115	;'s'
  1016   000227  74                 	db	116	;'t'
  1017   000228  65                 	db	101	;'e'
  1018   000229  6D                 	db	109	;'m'
  1019   00022A  61                 	db	97	;'a'
  1020   00022B  0A                 	db	10
  1021   00022C  00                 	db	0
  1022   00022D  45                 	db	69	;'E'
  1023   00022E  52                 	db	82	;'R'
  1024   00022F  52                 	db	82	;'R'
  1025   000230  4F                 	db	79	;'O'
  1026   000231  52                 	db	82	;'R'
  1027   000232  2E                 	db	46
  1028   000233  20                 	db	32
  1029   000234  56                 	db	86	;'V'
  1030   000235  61                 	db	97	;'a'
  1031   000236  6C                 	db	108	;'l'
  1032   000237  6F                 	db	111	;'o'
  1033   000238  72                 	db	114	;'r'
  1034   000239  20                 	db	32
  1035   00023A  69                 	db	105	;'i'
  1036   00023B  6E                 	db	110	;'n'
  1037   00023C  74                 	db	116	;'t'
  1038   00023D  72                 	db	114	;'r'
  1039   00023E  6F                 	db	111	;'o'
  1040   00023F  64                 	db	100	;'d'
  1041   000240  75                 	db	117	;'u'
  1042   000241  69                 	db	105	;'i'
  1043   000242  74                 	db	116	;'t'
  1044   000243  20                 	db	32
  1045   000244  65                 	db	101	;'e'
  1046   000245  72                 	db	114	;'r'
  1047   000246  72                 	db	114	;'r'
  1048   000247  6F                 	db	111	;'o'
  1049   000248  6E                 	db	110	;'n'
  1050   000249  69                 	db	105	;'i'
  1051   00024A  2E                 	db	46
  1052   00024B  00                 	db	0
  1053   00024C  09                 	db	9
  1054   00024D  32                 	db	50	;'2'
  1055   00024E  2E                 	db	46
  1056   00024F  20                 	db	32
  1057   000250  4D                 	db	77	;'M'
  1058   000251  6F                 	db	111	;'o'
  1059   000252  73                 	db	115	;'s'
  1060   000253  74                 	db	116	;'t'
  1061   000254  72                 	db	114	;'r'
  1062   000255  61                 	db	97	;'a'
  1063   000256  72                 	db	114	;'r'
  1064   000257  20                 	db	32
  1065   000258  63                 	db	99	;'c'
  1066   000259  6F                 	db	111	;'o'
  1067   00025A  6E                 	db	110	;'n'
  1068   00025B  66                 	db	102	;'f'
  1069   00025C  69                 	db	105	;'i'
  1070   00025D  67                 	db	103	;'g'
  1071   00025E  75                 	db	117	;'u'
  1072   00025F  72                 	db	114	;'r'
  1073   000260  61                 	db	97	;'a'
  1074   000261  63                 	db	99	;'c'
  1075   000262  69                 	db	105	;'i'
  1076   000263  6F                 	db	111	;'o'
  1077   000264  6E                 	db	110	;'n'
  1078   000265  73                 	db	115	;'s'
  1079   000266  00                 	db	0
  1080   000267  09                 	db	9
  1081   000268  31                 	db	49	;'1'
  1082   000269  2E                 	db	46
  1083   00026A  20                 	db	32
  1084   00026B  51                 	db	81	;'Q'
  1085   00026C  75                 	db	117	;'u'
  1086   00026D  69                 	db	105	;'i'
  1087   00026E  20                 	db	32
  1088   00026F  68                 	db	104	;'h'
  1089   000270  69                 	db	105	;'i'
  1090   000271  20                 	db	32
  1091   000272  68                 	db	104	;'h'
  1092   000273  61                 	db	97	;'a'
  1093   000274  20                 	db	32
  1094   000275  61                 	db	97	;'a'
  1095   000276  20                 	db	32
  1096   000277  6C                 	db	108	;'l'
  1097   000278  61                 	db	97	;'a'
  1098   000279  20                 	db	32
  1099   00027A  73                 	db	115	;'s'
  1100   00027B  61                 	db	97	;'a'
  1101   00027C  6C                 	db	108	;'l'
  1102   00027D  61                 	db	97	;'a'
  1103   00027E  3F                 	db	63	;'?'
  1104   00027F  00                 	db	0
  1105   000280                     STR_6:
  1106   000280  54                 	db	84	;'T'
  1107   000281  72                 	db	114	;'r'
  1108   000282  69                 	db	105	;'i'
  1109   000283  61                 	db	97	;'a'
  1110   000284  20                 	db	32
  1111   000285  75                 	db	117	;'u'
  1112   000286  6E                 	db	110	;'n'
  1113   000287  61                 	db	97	;'a'
  1114   000288  20                 	db	32
  1115   000289  6F                 	db	111	;'o'
  1116   00028A  70                 	db	112	;'p'
  1117   00028B  63                 	db	99	;'c'
  1118   00028C  69                 	db	105	;'i'
  1119   00028D  C3                 	db	-61
  1120   00028E  B3                 	db	-77
  1121   00028F  3A                 	db	58	;':'
  1122   000290  0A                 	db	10
  1123   000291  00                 	db	0
  1124   000292                     STR_3:
  1125   000292  2D                 	db	45
  1126   000293  2D                 	db	45
  1127   000294  2D                 	db	45
  1128   000295  2D                 	db	45
  1129   000296  2D                 	db	45
  1130   000297  2D                 	db	45
  1131   000298  2D                 	db	45
  1132   000299  2D                 	db	45
  1133   00029A  2D                 	db	45
  1134   00029B  2D                 	db	45
  1135   00029C  2D                 	db	45
  1136   00029D  2D                 	db	45
  1137   00029E  2D                 	db	45
  1138   00029F  2D                 	db	45
  1139   0002A0  2D                 	db	45
  1140   0002A1  00                 	db	0
  1141   0002A2  4D                 	db	77	;'M'
  1142   0002A3  65                 	db	101	;'e'
  1143   0002A4  6E                 	db	110	;'n'
  1144   0002A5  C3                 	db	-61
  1145   0002A6  BA                 	db	-70
  1146   0002A7  20                 	db	32
  1147   0002A8  70                 	db	112	;'p'
  1148   0002A9  72                 	db	114	;'r'
  1149   0002AA  69                 	db	105	;'i'
  1150   0002AB  6E                 	db	110	;'n'
  1151   0002AC  63                 	db	99	;'c'
  1152   0002AD  69                 	db	105	;'i'
  1153   0002AE  70                 	db	112	;'p'
  1154   0002AF  61                 	db	97	;'a'
  1155   0002B0  6C                 	db	108	;'l'
  1156   0002B1  00                 	db	0
  1157   0002B2  4F                 	db	79	;'O'
  1158   0002B3  70                 	db	112	;'p'
  1159   0002B4  63                 	db	99	;'c'
  1160   0002B5  69                 	db	105	;'i'
  1161   0002B6  C3                 	db	-61
  1162   0002B7  B3                 	db	-77
  1163   0002B8  3A                 	db	58	;':'
  1164   0002B9  20                 	db	32
  1165   0002BA  00                 	db	0
  1166   0002BB  55                 	db	85	;'U'
  1167   0002BC  49                 	db	73	;'I'
  1168   0002BD  44                 	db	68	;'D'
  1169   0002BE  3A                 	db	58	;':'
  1170   0002BF  20                 	db	32
  1171   0002C0  00                 	db	0
  1172   000292                     STR_5           equ	STR_3
  1173   000290                     STR_2           equ	STR_6+16
  1174   0002C1  00                 	db	0	; dummy byte at the end
  1175   000200                     __smallconst    set	__psmallconst
  1176   000200                     __mediumconst   set	__psmallconst
  1177   000002                     __activetblptr  equ	2
  1178                           
  1179                           ; #config settings
  1180                           
  1181                           	psect	cinit
  1182   000904                     __pcinit:
  1183                           	callstack 0
  1184   000904                     start_initialization:
  1185                           	callstack 0
  1186   000904                     __initialization:
  1187                           	callstack 0
  1188                           
  1189                           ; Clear objects allocated to COMRAM (36 bytes)
  1190   000904  EE00  F001         	lfsr	0,__pbssCOMRAM
  1191   000908  0E24               	movlw	36
  1192   00090A                     clear_0:
  1193   00090A  6AEE               	clrf	postinc0,c
  1194   00090C  06E8               	decf	wreg,f,c
  1195   00090E  E1FD               	bnz	clear_0
  1196   000910                     end_of_initialization:
  1197                           	callstack 0
  1198   000910                     __end_of__initialization:
  1199                           	callstack 0
  1200   000910  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1201   000912  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1202   000914  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1203   000916  6EF8               	movwf	tblptru,c
  1204   000918  0100               	movlb	0
  1205   00091A  EF72  F004         	goto	_main	;jump to C main() function
  1206                           
  1207                           	psect	bssCOMRAM
  1208   000001                     __pbssCOMRAM:
  1209                           	callstack 0
  1210   000001                     _Timers:
  1211                           	callstack 0
  1212   000001                     	ds	20
  1213   000015                     _Tics:
  1214                           	callstack 0
  1215   000015                     	ds	4
  1216   000019                     motorTerminal@state:
  1217                           	callstack 0
  1218   000019                     	ds	1
  1219   00001A                     _hashtag_pressed:
  1220                           	callstack 0
  1221   00001A                     	ds	1
  1222   00001B                     _ColumnAct:
  1223                           	callstack 0
  1224   00001B                     	ds	1
  1225   00001C                     _RowAct:
  1226                           	callstack 0
  1227   00001C                     	ds	1
  1228   00001D                     _Columns:
  1229                           	callstack 0
  1230   00001D                     	ds	1
  1231   00001E                     _Rows:
  1232                           	callstack 0
  1233   00001E                     	ds	1
  1234   00001F                     motorTeclado@state:
  1235                           	callstack 0
  1236   00001F                     	ds	1
  1237   000020                     _tecla:
  1238                           	callstack 0
  1239   000020                     	ds	1
  1240   000021                     _Columnas:
  1241                           	callstack 0
  1242   000021                     	ds	1
  1243   000022                     _Filas:
  1244                           	callstack 0
  1245   000022                     	ds	1
  1246   000023                     _Timer:
  1247                           	callstack 0
  1248   000023                     	ds	1
  1249   000024                     _timer:
  1250                           	callstack 0
  1251   000024                     	ds	1
  1252                           
  1253                           	psect	cstackCOMRAM
  1254   000025                     __pcstackCOMRAM:
  1255                           	callstack 0
  1256   000025                     ??_LowRSI:
  1257                           
  1258                           ; 1 bytes @ 0x0
  1259   000025                     	ds	1
  1260   000026                     ?_TI_GetTics:
  1261                           	callstack 0
  1262   000026                     TI_Init@counter:
  1263                           	callstack 0
  1264   000026                     TI_NewTimer@TimerHandle:
  1265                           	callstack 0
  1266   000026                     TI_ResetTics@TimerHandle:
  1267                           	callstack 0
  1268   000026                     ??_writeColumnas:
  1269   000026                     ??_GetTecla:
  1270   000026                     ??_delay_us:
  1271   000026                     ??_MFRC522_Rd:
  1272                           
  1273                           ; 1 bytes @ 0x1
  1274   000026                     	ds	1
  1275   000027                     writeColumnas@out:
  1276                           	callstack 0
  1277   000027                     MFRC522_Rd@Address:
  1278                           	callstack 0
  1279   000027                     
  1280                           ; 1 bytes @ 0x2
  1281   000027                     	ds	1
  1282   000028                     TI_NewTimer@Comptador:
  1283                           	callstack 0
  1284   000028                     MFRC522_Rd@ucAddr:
  1285                           	callstack 0
  1286   000028                     GetTecla@keymap:
  1287                           	callstack 0
  1288                           
  1289                           ; 12 bytes @ 0x3
  1290   000028                     	ds	1
  1291   000029                     delay_us@howMany:
  1292                           	callstack 0
  1293   000029                     MFRC522_Rd@ucResult:
  1294                           	callstack 0
  1295   000029                     
  1296                           ; 1 bytes @ 0x4
  1297   000029                     	ds	1
  1298   00002A                     delay_us@x:
  1299                           	callstack 0
  1300   00002A                     MFRC522_Rd@i:
  1301                           	callstack 0
  1302   00002A                     ??_TI_GetTics:
  1303                           
  1304                           ; 1 bytes @ 0x5
  1305   00002A                     	ds	1
  1306   00002B                     MFRC522_Wr@value:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x6
  1310   00002B                     	ds	1
  1311   00002C                     ??_MFRC522_Wr:
  1312                           
  1313                           ; 1 bytes @ 0x7
  1314   00002C                     	ds	1
  1315   00002D                     MFRC522_Wr@Address:
  1316                           	callstack 0
  1317                           
  1318                           ; 1 bytes @ 0x8
  1319   00002D                     	ds	1
  1320   00002E                     MFRC522_Wr@ucAddr:
  1321                           	callstack 0
  1322   00002E                     TI_GetTics@CopiaTicsActual:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x9
  1326   00002E                     	ds	1
  1327   00002F                     MFRC522_Wr@i:
  1328                           	callstack 0
  1329                           
  1330                           ; 1 bytes @ 0xA
  1331   00002F                     	ds	1
  1332   000030                     MFRC522_Clear_Bit@mask:
  1333                           	callstack 0
  1334   000030                     MFRC522_Set_Bit@mask:
  1335                           	callstack 0
  1336   000030                     
  1337                           ; 1 bytes @ 0xB
  1338   000030                     	ds	1
  1339   000031                     MFRC522_Set_Bit@addr:
  1340                           	callstack 0
  1341   000031                     ??_MFRC522_Clear_Bit:
  1342   000031                     
  1343                           ; 1 bytes @ 0xC
  1344   000031                     	ds	1
  1345   000032                     TI_GetTics@TimerHandle:
  1346                           	callstack 0
  1347   000032                     MFRC522_Clear_Bit@addr:
  1348                           	callstack 0
  1349   000032                     
  1350                           ; 1 bytes @ 0xD
  1351   000032                     	ds	1
  1352   000033                     
  1353                           ; 1 bytes @ 0xE
  1354   000033                     	ds	1
  1355   000034                     GetTecla@columna:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0xF
  1359   000034                     	ds	1
  1360   000035                     GetTecla@fila:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x10
  1364   000035                     	ds	1
  1365   000036                     ??_motorTeclado:
  1366                           
  1367                           ; 1 bytes @ 0x11
  1368   000036                     	ds	1
  1369   000037                     
  1370                           ; 1 bytes @ 0x12
  1371 ;;
  1372 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1373 ;;
  1374 ;; *************** function _main *****************
  1375 ;; Defined at:
  1376 ;;		line 36 in file "main.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1
  1390 ;;      Params:         0       0       0
  1391 ;;      Locals:         0       0       0
  1392 ;;      Temps:          0       0       0
  1393 ;;      Totals:         0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels required when called: 9
  1396 ;; This function calls:
  1397 ;;		_TI_Init
  1398 ;;		_Terminal_Init
  1399 ;;		_initRFID
  1400 ;;		_initTeclado
  1401 ;;		_motorTeclado
  1402 ;; This function is called by:
  1403 ;;		Startup code after reset
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text0
  1408   0008E4                     __ptext0:
  1409                           	callstack 0
  1410   0008E4                     _main:
  1411                           	callstack 22
  1412   0008E4                     
  1413                           ;main.c: 37: }
  1414   0008E4  EC31  F004         	call	_TI_Init	;wreg free
  1415   0008E8  ECB3  F004         	call	_initTeclado	;wreg free
  1416   0008EC  ECE8  F004         	call	_initRFID	;wreg free
  1417   0008F0  ECC7  F004         	call	_Terminal_Init	;wreg free
  1418   0008F4  8EF2               	bsf	242,7,c	;volatile
  1419   0008F6  8CF2               	bsf	242,6,c	;volatile
  1420   0008F8                     l2512:
  1421   0008F8  EC61  F001         	call	_motorTeclado	;wreg free
  1422   0008FC  EF7C  F004         	goto	l2512
  1423   000900  EF13  F000         	goto	start
  1424   000904                     __end_of_main:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _motorTeclado *****************
  1428 ;; Defined at:
  1429 ;;		line 30 in file "TAD_TECLADO.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1
  1443 ;;      Params:         0       0       0
  1444 ;;      Locals:         0       0       0
  1445 ;;      Temps:          1       0       0
  1446 ;;      Totals:         1       0       0
  1447 ;;Total ram usage:        1 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 4
  1450 ;; This function calls:
  1451 ;;		_GetTecla
  1452 ;;		_ReadFilas
  1453 ;;		_TI_GetTics
  1454 ;;		_TI_ResetTics
  1455 ;;		_showTecla
  1456 ;;		_writeColumnas
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text1
  1463   0002C2                     __ptext1:
  1464                           	callstack 0
  1465   0002C2                     _motorTeclado:
  1466                           	callstack 26
  1467   0002C2                     
  1468                           ;TAD_TECLADO.c: 31:  static char state = 0;;TAD_TECLADO.c: 32:  Filas = ReadFilas();
  1469   0002C2  ECF0  F004         	call	_ReadFilas	;wreg free
  1470   0002C6  6E22               	movwf	_Filas^0,c
  1471                           
  1472                           ;TAD_TECLADO.c: 33:  switch(state) {
  1473   0002C8  EF50  F002         	goto	l2436
  1474   0002CC                     l2342:
  1475                           
  1476                           ;TAD_TECLADO.c: 35:    if (Filas == 0x0) {
  1477   0002CC  5022               	movf	_Filas^0,w,c
  1478   0002CE  A4D8               	btfss	status,2,c
  1479   0002D0  EF6C  F001         	goto	u1571
  1480   0002D4  EF6E  F001         	goto	u1570
  1481   0002D8                     u1571:
  1482   0002D8  EF76  F001         	goto	l2350
  1483   0002DC                     u1570:
  1484   0002DC                     
  1485                           ;TAD_TECLADO.c: 36:     Columnas = (0x01);
  1486   0002DC  0E01               	movlw	1
  1487   0002DE  6E21               	movwf	_Columnas^0,c
  1488   0002E0                     
  1489                           ;TAD_TECLADO.c: 37:     writeColumnas();
  1490   0002E0  EC70  F003         	call	_writeColumnas	;wreg free
  1491   0002E4                     
  1492                           ;TAD_TECLADO.c: 38:     state = 1;
  1493   0002E4  0E01               	movlw	1
  1494   0002E6  6E1F               	movwf	motorTeclado@state^0,c
  1495                           
  1496                           ;TAD_TECLADO.c: 39:    }
  1497   0002E8  EF6B  F002         	goto	l2438
  1498   0002EC                     l2350:
  1499   0002EC  5022               	movf	_Filas^0,w,c
  1500   0002EE  B4D8               	btfsc	status,2,c
  1501   0002F0  EF7C  F001         	goto	u1581
  1502   0002F4  EF7E  F001         	goto	u1580
  1503   0002F8                     u1581:
  1504   0002F8  EF6B  F002         	goto	l2438
  1505   0002FC                     u1580:
  1506   0002FC                     
  1507                           ;TAD_TECLADO.c: 41:     TI_ResetTics(timer);
  1508   0002FC  5024               	movf	_timer^0,w,c
  1509   0002FE  EC60  F004         	call	_TI_ResetTics
  1510   000302                     l2354:
  1511                           
  1512                           ;TAD_TECLADO.c: 42:     state = 3;
  1513   000302  0E03               	movlw	3
  1514   000304  6E1F               	movwf	motorTeclado@state^0,c
  1515   000306  EF6B  F002         	goto	l2438
  1516   00030A                     l2356:
  1517                           
  1518                           ;TAD_TECLADO.c: 46:    if (Filas == 0x0) {
  1519   00030A  5022               	movf	_Filas^0,w,c
  1520   00030C  A4D8               	btfss	status,2,c
  1521   00030E  EF8B  F001         	goto	u1591
  1522   000312  EF8D  F001         	goto	u1590
  1523   000316                     u1591:
  1524   000316  EF95  F001         	goto	l2364
  1525   00031A                     u1590:
  1526   00031A                     
  1527                           ;TAD_TECLADO.c: 47:     Columnas = (0x02);
  1528   00031A  0E02               	movlw	2
  1529   00031C  6E21               	movwf	_Columnas^0,c
  1530   00031E                     
  1531                           ;TAD_TECLADO.c: 48:     writeColumnas();
  1532   00031E  EC70  F003         	call	_writeColumnas	;wreg free
  1533   000322                     
  1534                           ;TAD_TECLADO.c: 49:     state = 2;
  1535   000322  0E02               	movlw	2
  1536   000324  6E1F               	movwf	motorTeclado@state^0,c
  1537                           
  1538                           ;TAD_TECLADO.c: 50:    }
  1539   000326  EF6B  F002         	goto	l2438
  1540   00032A                     l2364:
  1541   00032A  5022               	movf	_Filas^0,w,c
  1542   00032C  B4D8               	btfsc	status,2,c
  1543   00032E  EF9B  F001         	goto	u1601
  1544   000332  EF9D  F001         	goto	u1600
  1545   000336                     u1601:
  1546   000336  EF6B  F002         	goto	l2438
  1547   00033A                     u1600:
  1548   00033A                     
  1549                           ;TAD_TECLADO.c: 52:     TI_ResetTics(timer);
  1550   00033A  5024               	movf	_timer^0,w,c
  1551   00033C  EC60  F004         	call	_TI_ResetTics
  1552   000340  EF81  F001         	goto	l2354
  1553   000344                     l2370:
  1554                           
  1555                           ;TAD_TECLADO.c: 57:    if (Filas != 0x0) {
  1556   000344  5022               	movf	_Filas^0,w,c
  1557   000346  B4D8               	btfsc	status,2,c
  1558   000348  EFA8  F001         	goto	u1611
  1559   00034C  EFAA  F001         	goto	u1610
  1560   000350                     u1611:
  1561   000350  EFAF  F001         	goto	l2376
  1562   000354                     u1610:
  1563   000354                     
  1564                           ;TAD_TECLADO.c: 58:     TI_ResetTics(timer);
  1565   000354  5024               	movf	_timer^0,w,c
  1566   000356  EC60  F004         	call	_TI_ResetTics
  1567   00035A  EF81  F001         	goto	l2354
  1568   00035E                     l2376:
  1569   00035E  5022               	movf	_Filas^0,w,c
  1570   000360  A4D8               	btfss	status,2,c
  1571   000362  EFB5  F001         	goto	u1621
  1572   000366  EFB7  F001         	goto	u1620
  1573   00036A                     u1621:
  1574   00036A  EF6B  F002         	goto	l2438
  1575   00036E                     u1620:
  1576   00036E                     l2378:
  1577                           
  1578                           ;TAD_TECLADO.c: 62:     Columnas = (0x04);
  1579   00036E  0E04               	movlw	4
  1580   000370  6E21               	movwf	_Columnas^0,c
  1581   000372                     
  1582                           ;TAD_TECLADO.c: 63:     writeColumnas();
  1583   000372  EC70  F003         	call	_writeColumnas	;wreg free
  1584   000376                     l2382:
  1585                           
  1586                           ;TAD_TECLADO.c: 64:     state = 0;
  1587   000376  6A1F               	clrf	motorTeclado@state^0,c
  1588   000378  EF6B  F002         	goto	l2438
  1589   00037C                     l2384:
  1590                           
  1591                           ;TAD_TECLADO.c: 68:    tecla = GetTecla ();
  1592   00037C  EC75  F002         	call	_GetTecla	;wreg free
  1593   000380  6E20               	movwf	_tecla^0,c
  1594   000382                     
  1595                           ;TAD_TECLADO.c: 69:    if (Filas == 0x0) {
  1596   000382  5022               	movf	_Filas^0,w,c
  1597   000384  A4D8               	btfss	status,2,c
  1598   000386  EFC7  F001         	goto	u1631
  1599   00038A  EFC9  F001         	goto	u1630
  1600   00038E                     u1631:
  1601   00038E  EFCB  F001         	goto	l2394
  1602   000392                     u1630:
  1603   000392  EFB7  F001         	goto	l2378
  1604   000396                     l2394:
  1605   000396  5022               	movf	_Filas^0,w,c
  1606   000398  B4D8               	btfsc	status,2,c
  1607   00039A  EFD1  F001         	goto	u1641
  1608   00039E  EFD3  F001         	goto	u1640
  1609   0003A2                     u1641:
  1610   0003A2  EFF4  F001         	goto	l2406
  1611   0003A6                     u1640:
  1612   0003A6  5024               	movf	_timer^0,w,c
  1613   0003A8  ECF0  F003         	call	_TI_GetTics
  1614   0003AC  5029               	movf	(?_TI_GetTics+3)^0,w,c
  1615   0003AE  1028               	iorwf	(?_TI_GetTics+2)^0,w,c
  1616   0003B0  1027               	iorwf	(?_TI_GetTics+1)^0,w,c
  1617   0003B2  E109               	bnz	u1650
  1618   0003B4  0E09               	movlw	9
  1619   0003B6  5C26               	subwf	?_TI_GetTics^0,w,c
  1620   0003B8  A0D8               	btfss	status,0,c
  1621   0003BA  EFE1  F001         	goto	u1651
  1622   0003BE  EFE3  F001         	goto	u1650
  1623   0003C2                     u1651:
  1624   0003C2  EFF4  F001         	goto	l2406
  1625   0003C6                     u1650:
  1626   0003C6  0E0B               	movlw	11
  1627   0003C8  1820               	xorwf	_tecla^0,w,c
  1628   0003CA  B4D8               	btfsc	status,2,c
  1629   0003CC  EFEA  F001         	goto	u1661
  1630   0003D0  EFEC  F001         	goto	u1660
  1631   0003D4                     u1661:
  1632   0003D4  EFF4  F001         	goto	l2406
  1633   0003D8                     u1660:
  1634   0003D8                     
  1635                           ;TAD_TECLADO.c: 75:     LATD = tecla;
  1636   0003D8  C020  FF8C         	movff	_tecla,3980	;volatile
  1637   0003DC                     
  1638                           ;TAD_TECLADO.c: 76:     showTecla();
  1639   0003DC  ECED  F004         	call	_showTecla	;wreg free
  1640   0003E0                     l2404:
  1641                           
  1642                           ;TAD_TECLADO.c: 77:     state = 5;
  1643   0003E0  0E05               	movlw	5
  1644   0003E2  6E1F               	movwf	motorTeclado@state^0,c
  1645                           
  1646                           ;TAD_TECLADO.c: 78:    }
  1647   0003E4  EF6B  F002         	goto	l2438
  1648   0003E8                     l2406:
  1649   0003E8  5022               	movf	_Filas^0,w,c
  1650   0003EA  B4D8               	btfsc	status,2,c
  1651   0003EC  EFFA  F001         	goto	u1671
  1652   0003F0  EFFC  F001         	goto	u1670
  1653   0003F4                     u1671:
  1654   0003F4  EF6B  F002         	goto	l2438
  1655   0003F8                     u1670:
  1656   0003F8  5024               	movf	_timer^0,w,c
  1657   0003FA  ECF0  F003         	call	_TI_GetTics
  1658   0003FE  5029               	movf	(?_TI_GetTics+3)^0,w,c
  1659   000400  1028               	iorwf	(?_TI_GetTics+2)^0,w,c
  1660   000402  1027               	iorwf	(?_TI_GetTics+1)^0,w,c
  1661   000404  E109               	bnz	u1680
  1662   000406  0E09               	movlw	9
  1663   000408  5C26               	subwf	?_TI_GetTics^0,w,c
  1664   00040A  A0D8               	btfss	status,0,c
  1665   00040C  EF0A  F002         	goto	u1681
  1666   000410  EF0C  F002         	goto	u1680
  1667   000414                     u1681:
  1668   000414  EF6B  F002         	goto	l2438
  1669   000418                     u1680:
  1670   000418  0E0B               	movlw	11
  1671   00041A  1820               	xorwf	_tecla^0,w,c
  1672   00041C  A4D8               	btfss	status,2,c
  1673   00041E  EF13  F002         	goto	u1691
  1674   000422  EF15  F002         	goto	u1690
  1675   000426                     u1691:
  1676   000426  EF6B  F002         	goto	l2438
  1677   00042A                     u1690:
  1678   00042A                     
  1679                           ;TAD_TECLADO.c: 80:     TI_ResetTics(timer);
  1680   00042A  5024               	movf	_timer^0,w,c
  1681   00042C  EC60  F004         	call	_TI_ResetTics
  1682   000430                     
  1683                           ;TAD_TECLADO.c: 81:     state = 4;
  1684   000430  0E04               	movlw	4
  1685   000432  6E1F               	movwf	motorTeclado@state^0,c
  1686   000434  EF6B  F002         	goto	l2438
  1687   000438                     l2416:
  1688                           
  1689                           ;TAD_TECLADO.c: 85:    if (Filas == 0x0) {
  1690   000438  5022               	movf	_Filas^0,w,c
  1691   00043A  A4D8               	btfss	status,2,c
  1692   00043C  EF22  F002         	goto	u1701
  1693   000440  EF24  F002         	goto	u1700
  1694   000444                     u1701:
  1695   000444  EF26  F002         	goto	l2420
  1696   000448                     u1700:
  1697   000448  EFBB  F001         	goto	l2382
  1698   00044C                     l2420:
  1699   00044C  5022               	movf	_Filas^0,w,c
  1700   00044E  B4D8               	btfsc	status,2,c
  1701   000450  EF2C  F002         	goto	u1711
  1702   000454  EF2E  F002         	goto	u1710
  1703   000458                     u1711:
  1704   000458  EF6B  F002         	goto	l2438
  1705   00045C                     u1710:
  1706   00045C  5024               	movf	_timer^0,w,c
  1707   00045E  ECF0  F003         	call	_TI_GetTics
  1708   000462  5029               	movf	(?_TI_GetTics+3)^0,w,c
  1709   000464  1028               	iorwf	(?_TI_GetTics+2)^0,w,c
  1710   000466  E10B               	bnz	u1720
  1711   000468  0EDD               	movlw	221
  1712   00046A  5C26               	subwf	?_TI_GetTics^0,w,c
  1713   00046C  0E05               	movlw	5
  1714   00046E  5827               	subwfb	(?_TI_GetTics+1)^0,w,c
  1715   000470  A0D8               	btfss	status,0,c
  1716   000472  EF3D  F002         	goto	u1721
  1717   000476  EF3F  F002         	goto	u1720
  1718   00047A                     u1721:
  1719   00047A  EF6B  F002         	goto	l2438
  1720   00047E                     u1720:
  1721   00047E  EFF0  F001         	goto	l2404
  1722   000482                     l2426:
  1723                           
  1724                           ;TAD_TECLADO.c: 94:    if (Filas == 0x0) {
  1725   000482  5022               	movf	_Filas^0,w,c
  1726   000484  A4D8               	btfss	status,2,c
  1727   000486  EF47  F002         	goto	u1731
  1728   00048A  EF49  F002         	goto	u1730
  1729   00048E                     u1731:
  1730   00048E  EF6B  F002         	goto	l2438
  1731   000492                     u1730:
  1732   000492                     
  1733                           ;TAD_TECLADO.c: 95:     state = 0;
  1734   000492  6A1F               	clrf	motorTeclado@state^0,c
  1735   000494                     
  1736                           ;TAD_TECLADO.c: 96:     Columnas = (0x04);
  1737   000494  0E04               	movlw	4
  1738   000496  6E21               	movwf	_Columnas^0,c
  1739   000498                     
  1740                           ;TAD_TECLADO.c: 97:     writeColumnas();
  1741   000498  EC70  F003         	call	_writeColumnas	;wreg free
  1742   00049C  EF6B  F002         	goto	l2438
  1743   0004A0                     l2436:
  1744   0004A0  501F               	movf	motorTeclado@state^0,w,c
  1745                           
  1746                           ; Switch size 1, requested type "simple"
  1747                           ; Number of cases is 6, Range of values is 0 to 5
  1748                           ; switch strategies available:
  1749                           ; Name         Instructions Cycles
  1750                           ; simple_byte           19    10 (average)
  1751                           ;	Chosen strategy is simple_byte
  1752   0004A2  0A00               	xorlw	0	; case 0
  1753   0004A4  B4D8               	btfsc	status,2,c
  1754   0004A6  EF66  F001         	goto	l2342
  1755   0004AA  0A01               	xorlw	1	; case 1
  1756   0004AC  B4D8               	btfsc	status,2,c
  1757   0004AE  EF85  F001         	goto	l2356
  1758   0004B2  0A03               	xorlw	3	; case 2
  1759   0004B4  B4D8               	btfsc	status,2,c
  1760   0004B6  EFA2  F001         	goto	l2370
  1761   0004BA  0A01               	xorlw	1	; case 3
  1762   0004BC  B4D8               	btfsc	status,2,c
  1763   0004BE  EFBE  F001         	goto	l2384
  1764   0004C2  0A07               	xorlw	7	; case 4
  1765   0004C4  B4D8               	btfsc	status,2,c
  1766   0004C6  EF1C  F002         	goto	l2416
  1767   0004CA  0A01               	xorlw	1	; case 5
  1768   0004CC  B4D8               	btfsc	status,2,c
  1769   0004CE  EF41  F002         	goto	l2426
  1770   0004D2  EF6B  F002         	goto	l2438
  1771   0004D6                     l2438:
  1772                           
  1773                           ;TAD_TECLADO.c: 101:  LATB = (LATB & 0x0F) | ((unsigned char)(state << 4));
  1774   0004D6  C01F  F036         	movff	motorTeclado@state,??_motorTeclado
  1775   0004DA  3A36               	swapf	??_motorTeclado^0,f,c
  1776   0004DC  0EF0               	movlw	240
  1777   0004DE  1636               	andwf	??_motorTeclado^0,f,c
  1778   0004E0  508A               	movf	138,w,c	;volatile
  1779   0004E2  0B0F               	andlw	15
  1780   0004E4  1036               	iorwf	??_motorTeclado^0,w,c
  1781   0004E6  6E8A               	movwf	138,c	;volatile
  1782   0004E8  0012               	return		;funcret
  1783   0004EA                     __end_of_motorTeclado:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _writeColumnas *****************
  1787 ;; Defined at:
  1788 ;;		line 108 in file "TAD_TECLADO.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  out             1    2[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1
  1802 ;;      Params:         0       0       0
  1803 ;;      Locals:         1       0       0
  1804 ;;      Temps:          1       0       0
  1805 ;;      Totals:         2       0       0
  1806 ;;Total ram usage:        2 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 3
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_motorTeclado
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text2
  1817   0006E0                     __ptext2:
  1818                           	callstack 0
  1819   0006E0                     _writeColumnas:
  1820                           	callstack 26
  1821   0006E0                     
  1822                           ;TAD_TECLADO.c: 109:  unsigned char out = 0x00;
  1823   0006E0  6A27               	clrf	writeColumnas@out^0,c
  1824   0006E2                     
  1825                           ;TAD_TECLADO.c: 110:     if (Columnas == 0x01)
  1826   0006E2  0421               	decf	_Columnas^0,w,c
  1827   0006E4  A4D8               	btfss	status,2,c
  1828   0006E6  EF77  F003         	goto	u291
  1829   0006EA  EF79  F003         	goto	u290
  1830   0006EE                     u291:
  1831   0006EE  EF7D  F003         	goto	l1418
  1832   0006F2                     u290:
  1833   0006F2                     
  1834                           ;TAD_TECLADO.c: 111:         out = 0x20;
  1835   0006F2  0E20               	movlw	32
  1836   0006F4  6E27               	movwf	writeColumnas@out^0,c
  1837   0006F6  EF95  F003         	goto	l1426
  1838   0006FA                     l1418:
  1839   0006FA  0E02               	movlw	2
  1840   0006FC  1821               	xorwf	_Columnas^0,w,c
  1841   0006FE  A4D8               	btfss	status,2,c
  1842   000700  EF84  F003         	goto	u301
  1843   000704  EF86  F003         	goto	u300
  1844   000708                     u301:
  1845   000708  EF8A  F003         	goto	l1422
  1846   00070C                     u300:
  1847   00070C                     
  1848                           ;TAD_TECLADO.c: 113:         out = 0x40;
  1849   00070C  0E40               	movlw	64
  1850   00070E  6E27               	movwf	writeColumnas@out^0,c
  1851   000710  EF95  F003         	goto	l1426
  1852   000714                     l1422:
  1853   000714  0E04               	movlw	4
  1854   000716  1821               	xorwf	_Columnas^0,w,c
  1855   000718  A4D8               	btfss	status,2,c
  1856   00071A  EF91  F003         	goto	u311
  1857   00071E  EF93  F003         	goto	u310
  1858   000722                     u311:
  1859   000722  EF95  F003         	goto	l1426
  1860   000726                     u310:
  1861   000726                     
  1862                           ;TAD_TECLADO.c: 115:         out = 0x10;
  1863   000726  0E10               	movlw	16
  1864   000728  6E27               	movwf	writeColumnas@out^0,c
  1865   00072A                     l1426:
  1866                           
  1867                           ;TAD_TECLADO.c: 118:     LATD = (LATD & 0x8F) | (out & 0x70);
  1868   00072A  C027  F026         	movff	writeColumnas@out,??_writeColumnas
  1869   00072E  0E70               	movlw	112
  1870   000730  1626               	andwf	??_writeColumnas^0,f,c
  1871   000732  508C               	movf	140,w,c	;volatile
  1872   000734  0B8F               	andlw	143
  1873   000736  1026               	iorwf	??_writeColumnas^0,w,c
  1874   000738  6E8C               	movwf	140,c	;volatile
  1875   00073A  0012               	return		;funcret
  1876   00073C                     __end_of_writeColumnas:
  1877                           	callstack 0
  1878                           
  1879 ;; *************** function _showTecla *****************
  1880 ;; Defined at:
  1881 ;;		line 151 in file "TAD_TECLADO.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		None
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1
  1895 ;;      Params:         0       0       0
  1896 ;;      Locals:         0       0       0
  1897 ;;      Temps:          0       0       0
  1898 ;;      Totals:         0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 3
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_motorTeclado
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text3
  1910   0009DA                     __ptext3:
  1911                           	callstack 0
  1912   0009DA                     _showTecla:
  1913                           	callstack 26
  1914   0009DA                     
  1915                           ;TAD_TECLADO.c: 153:     LATB = tecla;
  1916   0009DA  C020  FF8A         	movff	_tecla,3978	;volatile
  1917   0009DE  0012               	return		;funcret
  1918   0009E0                     __end_of_showTecla:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _TI_ResetTics *****************
  1922 ;; Defined at:
  1923 ;;		line 53 in file "TAD_TIMER.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  TimerHandle     1    wreg     unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  TimerHandle     1    1[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1
  1937 ;;      Params:         0       0       0
  1938 ;;      Locals:         1       0       0
  1939 ;;      Temps:          0       0       0
  1940 ;;      Totals:         1       0       0
  1941 ;;Total ram usage:        1 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 3
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_motorTeclado
  1948 ;;		_Espera
  1949 ;;		_WaitForBusy
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text4
  1954   0008C0                     __ptext4:
  1955                           	callstack 0
  1956   0008C0                     _TI_ResetTics:
  1957                           	callstack 26
  1958                           
  1959                           ;incstack = 0
  1960                           ;TI_ResetTics@TimerHandle stored from wreg
  1961   0008C0  6E26               	movwf	TI_ResetTics@TimerHandle^0,c
  1962   0008C2                     
  1963                           ;TAD_TIMER.c: 57:  (INTCONbits.GIE = 0); Timers[TimerHandle].TicsInicials=Tics; (INTCONb
      +                          its.GIE = 1);
  1964   0008C2  9EF2               	bcf	242,7,c	;volatile
  1965   0008C4  5026               	movf	TI_ResetTics@TimerHandle^0,w,c
  1966   0008C6  0D05               	mullw	5
  1967   0008C8  50F3               	movf	243,w,c
  1968   0008CA  0F01               	addlw	low _Timers
  1969   0008CC  6ED9               	movwf	fsr2l,c
  1970   0008CE  6ADA               	clrf	fsr2h,c
  1971   0008D0  C015  FFDE         	movff	_Tics,postinc2	;volatile
  1972   0008D4  C016  FFDE         	movff	_Tics+1,postinc2	;volatile
  1973   0008D8  C017  FFDE         	movff	_Tics+2,postinc2	;volatile
  1974   0008DC  C018  FFDE         	movff	_Tics+3,postinc2	;volatile
  1975   0008E0  8EF2               	bsf	242,7,c	;volatile
  1976   0008E2  0012               	return		;funcret
  1977   0008E4                     __end_of_TI_ResetTics:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _TI_GetTics *****************
  1981 ;; Defined at:
  1982 ;;		line 61 in file "TAD_TIMER.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  TimerHandle     1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  TimerHandle     1   13[COMRAM] unsigned char 
  1987 ;;  CopiaTicsAct    4    9[COMRAM] unsigned long 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  4    1[COMRAM] unsigned long 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1
  1997 ;;      Params:         4       0       0
  1998 ;;      Locals:         5       0       0
  1999 ;;      Temps:          4       0       0
  2000 ;;      Totals:        13       0       0
  2001 ;;Total ram usage:       13 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 3
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_motorTeclado
  2008 ;;		_Espera
  2009 ;;		_WaitForBusy
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text5
  2014   0007E0                     __ptext5:
  2015                           	callstack 0
  2016   0007E0                     _TI_GetTics:
  2017                           	callstack 26
  2018                           
  2019                           ;incstack = 0
  2020                           ;TI_GetTics@TimerHandle stored from wreg
  2021   0007E0  6E32               	movwf	TI_GetTics@TimerHandle^0,c
  2022   0007E2                     
  2023                           ;TAD_TIMER.c: 62:     (INTCONbits.GIE = 0); unsigned long CopiaTicsActual=Tics; (INTCONb
      +                          its.GIE = 1);
  2024   0007E2  9EF2               	bcf	242,7,c	;volatile
  2025   0007E4  C015  F02E         	movff	_Tics,TI_GetTics@CopiaTicsActual	;volatile
  2026   0007E8  C016  F02F         	movff	_Tics+1,TI_GetTics@CopiaTicsActual+1	;volatile
  2027   0007EC  C017  F030         	movff	_Tics+2,TI_GetTics@CopiaTicsActual+2	;volatile
  2028   0007F0  C018  F031         	movff	_Tics+3,TI_GetTics@CopiaTicsActual+3	;volatile
  2029   0007F4  8EF2               	bsf	242,7,c	;volatile
  2030   0007F6                     
  2031                           ;TAD_TIMER.c: 63:  return (CopiaTicsActual-(Timers[TimerHandle].TicsInicials));
  2032   0007F6  5032               	movf	TI_GetTics@TimerHandle^0,w,c
  2033   0007F8  0D05               	mullw	5
  2034   0007FA  50F3               	movf	243,w,c
  2035   0007FC  0F01               	addlw	low _Timers
  2036   0007FE  6ED9               	movwf	fsr2l,c
  2037   000800  6ADA               	clrf	fsr2h,c
  2038   000802  CFDE F02A          	movff	postinc2,??_TI_GetTics
  2039   000806  CFDE F02B          	movff	postinc2,??_TI_GetTics+1
  2040   00080A  CFDE F02C          	movff	postinc2,??_TI_GetTics+2
  2041   00080E  CFDE F02D          	movff	postinc2,??_TI_GetTics+3
  2042   000812  502A               	movf	??_TI_GetTics^0,w,c
  2043   000814  5C2E               	subwf	TI_GetTics@CopiaTicsActual^0,w,c
  2044   000816  6E26               	movwf	?_TI_GetTics^0,c
  2045   000818  502B               	movf	(??_TI_GetTics+1)^0,w,c
  2046   00081A  582F               	subwfb	(TI_GetTics@CopiaTicsActual+1)^0,w,c
  2047   00081C  6E27               	movwf	(?_TI_GetTics+1)^0,c
  2048   00081E  502C               	movf	(??_TI_GetTics+2)^0,w,c
  2049   000820  5830               	subwfb	(TI_GetTics@CopiaTicsActual+2)^0,w,c
  2050   000822  6E28               	movwf	(?_TI_GetTics+2)^0,c
  2051   000824  502D               	movf	(??_TI_GetTics+3)^0,w,c
  2052   000826  5831               	subwfb	(TI_GetTics@CopiaTicsActual+3)^0,w,c
  2053   000828  6E29               	movwf	(?_TI_GetTics+3)^0,c
  2054   00082A  0012               	return		;funcret
  2055   00082C                     __end_of_TI_GetTics:
  2056                           	callstack 0
  2057                           
  2058 ;; *************** function _ReadFilas *****************
  2059 ;; Defined at:
  2060 ;;		line 7 in file "TAD_TECLADO.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      unsigned char 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1
  2074 ;;      Params:         0       0       0
  2075 ;;      Locals:         0       0       0
  2076 ;;      Temps:          0       0       0
  2077 ;;      Totals:         0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 3
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_motorTeclado
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text6
  2089   0009E0                     __ptext6:
  2090                           	callstack 0
  2091   0009E0                     _ReadFilas:
  2092                           	callstack 26
  2093   0009E0                     
  2094                           ;TAD_TECLADO.c: 8:     return (PORTD & 0x0F);
  2095   0009E0  5083               	movf	131,w,c	;volatile
  2096   0009E2  0B0F               	andlw	15
  2097   0009E4  0012               	return		;funcret
  2098   0009E6                     __end_of_ReadFilas:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _GetTecla *****************
  2102 ;; Defined at:
  2103 ;;		line 121 in file "TAD_TECLADO.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  keymap         12    3[COMRAM] const unsigned char [3][
  2108 ;;  fila            1   16[COMRAM] unsigned char 
  2109 ;;  columna         1   15[COMRAM] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      unsigned char 
  2112 ;; Registers used:
  2113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1
  2119 ;;      Params:         0       0       0
  2120 ;;      Locals:        14       0       0
  2121 ;;      Temps:          2       0       0
  2122 ;;      Totals:        16       0       0
  2123 ;;Total ram usage:       16 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 3
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_motorTeclado
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text7
  2134   0004EA                     __ptext7:
  2135                           	callstack 0
  2136   0004EA                     _GetTecla:
  2137                           	callstack 26
  2138   0004EA                     
  2139                           ;TAD_TECLADO.c: 123:     unsigned char columna = 0;
  2140   0004EA  6A34               	clrf	GetTecla@columna^0,c
  2141                           
  2142                           ;TAD_TECLADO.c: 125:     switch(Filas) {
  2143   0004EC  EF8A  F002         	goto	l1442
  2144   0004F0                     l161:
  2145   0004F0  6A35               	clrf	GetTecla@fila^0,c
  2146   0004F2  EFA8  F002         	goto	l1454
  2147   0004F6                     l1430:
  2148   0004F6  0E01               	movlw	1
  2149   0004F8  6E35               	movwf	GetTecla@fila^0,c
  2150   0004FA  EFA8  F002         	goto	l1454
  2151   0004FE                     l1432:
  2152   0004FE  0E02               	movlw	2
  2153   000500  6E35               	movwf	GetTecla@fila^0,c
  2154   000502  EFA8  F002         	goto	l1454
  2155   000506                     l1434:
  2156   000506  0E03               	movlw	3
  2157   000508  6E35               	movwf	GetTecla@fila^0,c
  2158   00050A  EFA8  F002         	goto	l1454
  2159   00050E                     l1436:
  2160   00050E  0EFF               	movlw	255
  2161   000510  EFD6  F002         	goto	l167
  2162   000514                     l1442:
  2163   000514  5022               	movf	_Filas^0,w,c
  2164                           
  2165                           ; Switch size 1, requested type "simple"
  2166                           ; Number of cases is 4, Range of values is 1 to 8
  2167                           ; switch strategies available:
  2168                           ; Name         Instructions Cycles
  2169                           ; simple_byte           13     7 (average)
  2170                           ;	Chosen strategy is simple_byte
  2171   000516  0A01               	xorlw	1	; case 1
  2172   000518  B4D8               	btfsc	status,2,c
  2173   00051A  EF78  F002         	goto	l161
  2174   00051E  0A03               	xorlw	3	; case 2
  2175   000520  B4D8               	btfsc	status,2,c
  2176   000522  EF7B  F002         	goto	l1430
  2177   000526  0A06               	xorlw	6	; case 4
  2178   000528  B4D8               	btfsc	status,2,c
  2179   00052A  EF7F  F002         	goto	l1432
  2180   00052E  0A0C               	xorlw	12	; case 8
  2181   000530  B4D8               	btfsc	status,2,c
  2182   000532  EF83  F002         	goto	l1434
  2183   000536  EF87  F002         	goto	l1436
  2184   00053A                     l169:
  2185   00053A  6A34               	clrf	GetTecla@columna^0,c
  2186   00053C  EFC2  F002         	goto	l1456
  2187   000540                     l1444:
  2188   000540  0E01               	movlw	1
  2189   000542  6E34               	movwf	GetTecla@columna^0,c
  2190   000544  EFC2  F002         	goto	l1456
  2191   000548                     l1446:
  2192   000548  0E02               	movlw	2
  2193   00054A  6E34               	movwf	GetTecla@columna^0,c
  2194   00054C  EFC2  F002         	goto	l1456
  2195   000550                     l1454:
  2196   000550  5021               	movf	_Columnas^0,w,c
  2197   000552  0B07               	andlw	7
  2198   000554  6E26               	movwf	??_GetTecla^0,c
  2199   000556  6A27               	clrf	(??_GetTecla+1)^0,c
  2200                           
  2201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2202                           ; Switch size 1, requested type "simple"
  2203                           ; Number of cases is 1, Range of values is 0 to 0
  2204                           ; switch strategies available:
  2205                           ; Name         Instructions Cycles
  2206                           ; simple_byte            4     3 (average)
  2207                           ;	Chosen strategy is simple_byte
  2208   000558  5027               	movf	(??_GetTecla+1)^0,w,c
  2209   00055A  0A00               	xorlw	0	; case 0
  2210   00055C  B4D8               	btfsc	status,2,c
  2211   00055E  EFB3  F002         	goto	l2656
  2212   000562  EF87  F002         	goto	l1436
  2213   000566                     l2656:
  2214                           
  2215                           ; Switch size 1, requested type "simple"
  2216                           ; Number of cases is 3, Range of values is 1 to 4
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte           10     6 (average)
  2220                           ;	Chosen strategy is simple_byte
  2221   000566  5026               	movf	??_GetTecla^0,w,c
  2222   000568  0A01               	xorlw	1	; case 1
  2223   00056A  B4D8               	btfsc	status,2,c
  2224   00056C  EF9D  F002         	goto	l169
  2225   000570  0A03               	xorlw	3	; case 2
  2226   000572  B4D8               	btfsc	status,2,c
  2227   000574  EFA0  F002         	goto	l1444
  2228   000578  0A06               	xorlw	6	; case 4
  2229   00057A  B4D8               	btfsc	status,2,c
  2230   00057C  EFA4  F002         	goto	l1446
  2231   000580  EF87  F002         	goto	l1436
  2232   000584                     l1456:
  2233                           
  2234                           ;TAD_TECLADO.c: 141:     const unsigned char keymap[4][3] = {
  2235   000584  0E01               	movlw	low GetTecla@F2722
  2236   000586  6EF6               	movwf	tblptrl,c
  2237   000588                     	if	1	;There is more than 1 active tblptr byte
  2238   000588  0E02               	movlw	high GetTecla@F2722
  2239   00058A  6EF7               	movwf	tblptrh,c
  2240   00058C                     	endif
  2241   00058C                     	if	0	;There are less than 3 active tblptr bytes
  2242   00058C                     	endif
  2243   00058C  EE20  F028         	lfsr	2,GetTecla@keymap
  2244   000590  0E0B               	movlw	11
  2245   000592                     u320:
  2246   000592  0009               	tblrd		*+
  2247   000594  CFF5 FFDE          	movff	tablat,postinc2
  2248   000598  06E8               	decf	wreg,f,c
  2249   00059A  E2FB               	bc	u320
  2250   00059C                     
  2251                           ;TAD_TECLADO.c: 148:     return keymap[fila][columna];
  2252   00059C  5035               	movf	GetTecla@fila^0,w,c
  2253   00059E  0D03               	mullw	3
  2254   0005A0  50F3               	movf	243,w,c
  2255   0005A2  0F28               	addlw	low GetTecla@keymap
  2256   0005A4  2434               	addwf	GetTecla@columna^0,w,c
  2257   0005A6  6ED9               	movwf	fsr2l,c
  2258   0005A8  6ADA               	clrf	fsr2h,c
  2259   0005AA  50DF               	movf	indf2,w,c
  2260   0005AC                     l167:
  2261   0005AC  0012               	return		;funcret
  2262   0005AE                     __end_of_GetTecla:
  2263                           	callstack 0
  2264                           
  2265 ;; *************** function _initTeclado *****************
  2266 ;; Defined at:
  2267 ;;		line 11 in file "TAD_TECLADO.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1
  2281 ;;      Params:         0       0       0
  2282 ;;      Locals:         0       0       0
  2283 ;;      Temps:          0       0       0
  2284 ;;      Totals:         0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 4
  2288 ;; This function calls:
  2289 ;;		_TI_NewTimer
  2290 ;;		_initPortsTeclado
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text8
  2297   000966                     __ptext8:
  2298                           	callstack 0
  2299   000966                     _initTeclado:
  2300                           	callstack 26
  2301   000966                     
  2302                           ;TAD_TECLADO.c: 12:  initPortsTeclado();
  2303   000966  ECD0  F004         	call	_initPortsTeclado	;wreg free
  2304   00096A                     
  2305                           ;TAD_TECLADO.c: 13:     Filas = 0x00;
  2306   00096A  6A22               	clrf	_Filas^0,c
  2307   00096C                     
  2308                           ;TAD_TECLADO.c: 14:     Columnas = 0x00;
  2309   00096C  6A21               	clrf	_Columnas^0,c
  2310   00096E                     
  2311                           ;TAD_TECLADO.c: 15:     tecla = 0;
  2312   00096E  6A20               	clrf	_tecla^0,c
  2313   000970                     
  2314                           ;TAD_TECLADO.c: 16:     TI_NewTimer(&timer);
  2315   000970  0E24               	movlw	low _timer
  2316   000972  6E26               	movwf	TI_NewTimer@TimerHandle^0,c
  2317   000974  EC9E  F003         	call	_TI_NewTimer	;wreg free
  2318   000978  0012               	return		;funcret
  2319   00097A                     __end_of_initTeclado:
  2320                           	callstack 0
  2321                           
  2322 ;; *************** function _initPortsTeclado *****************
  2323 ;; Defined at:
  2324 ;;		line 19 in file "TAD_TECLADO.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1
  2338 ;;      Params:         0       0       0
  2339 ;;      Locals:         0       0       0
  2340 ;;      Temps:          0       0       0
  2341 ;;      Totals:         0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 3
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_initTeclado
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text9
  2353   0009A0                     __ptext9:
  2354                           	callstack 0
  2355   0009A0                     _initPortsTeclado:
  2356                           	callstack 26
  2357   0009A0                     
  2358                           ;TAD_TECLADO.c: 20:  TRISD = 0x0F;
  2359   0009A0  0E0F               	movlw	15
  2360   0009A2  6E95               	movwf	149,c	;volatile
  2361   0009A4                     
  2362                           ;TAD_TECLADO.c: 21:  LATD = 0x00;
  2363   0009A4  6A8C               	clrf	140,c	;volatile
  2364   0009A6                     
  2365                           ;TAD_TECLADO.c: 22:  TRISB = 0x00;
  2366   0009A6  6A93               	clrf	147,c	;volatile
  2367   0009A8                     
  2368                           ;TAD_TECLADO.c: 23:  LATB = 0x00;
  2369   0009A8  6A8A               	clrf	138,c	;volatile
  2370   0009AA  0012               	return		;funcret
  2371   0009AC                     __end_of_initPortsTeclado:
  2372                           	callstack 0
  2373                           
  2374 ;; *************** function _TI_NewTimer *****************
  2375 ;; Defined at:
  2376 ;;		line 43 in file "TAD_TIMER.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  TimerHandle     1    1[COMRAM] PTR unsigned char 
  2379 ;;		 -> Timer(1), timer(1), 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  Comptador       1    3[COMRAM] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      unsigned char 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1
  2391 ;;      Params:         1       0       0
  2392 ;;      Locals:         1       0       0
  2393 ;;      Temps:          1       0       0
  2394 ;;      Totals:         3       0       0
  2395 ;;Total ram usage:        3 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 3
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_initTeclado
  2402 ;;		_LcInit
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text10
  2407   00073C                     __ptext10:
  2408                           	callstack 0
  2409   00073C                     _TI_NewTimer:
  2410                           	callstack 26
  2411   00073C                     
  2412                           ;TAD_TIMER.c: 44:  unsigned char Comptador=0;
  2413   00073C  6A28               	clrf	TI_NewTimer@Comptador^0,c
  2414                           
  2415                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  2416   00073E  EFAD  F003         	goto	l2206
  2417   000742                     l2202:
  2418                           
  2419                           ;TAD_TIMER.c: 46:   if (++Comptador == 4) return (0);
  2420   000742  2A28               	incf	TI_NewTimer@Comptador^0,f,c
  2421   000744  0E04               	movlw	4
  2422   000746  1828               	xorwf	TI_NewTimer@Comptador^0,w,c
  2423   000748  A4D8               	btfss	status,2,c
  2424   00074A  EFA9  F003         	goto	u1431
  2425   00074E  EFAB  F003         	goto	u1430
  2426   000752                     u1431:
  2427   000752  EFAD  F003         	goto	l2206
  2428   000756                     u1430:
  2429   000756  EFC8  F003         	goto	l64
  2430   00075A                     l2206:
  2431                           
  2432                           ;TAD_TIMER.c: 45:  while (Timers[Comptador].Busy==1) {
  2433   00075A  5028               	movf	TI_NewTimer@Comptador^0,w,c
  2434   00075C  0D05               	mullw	5
  2435   00075E  50F3               	movf	243,w,c
  2436   000760  0F05               	addlw	low (_Timers+4)
  2437   000762  6ED9               	movwf	fsr2l,c
  2438   000764  6ADA               	clrf	fsr2h,c
  2439   000766  04DE               	decf	postinc2,w,c
  2440   000768  B4D8               	btfsc	status,2,c
  2441   00076A  EFB9  F003         	goto	u1441
  2442   00076E  EFBB  F003         	goto	u1440
  2443   000772                     u1441:
  2444   000772  EFA1  F003         	goto	l2202
  2445   000776                     u1440:
  2446   000776                     
  2447                           ;TAD_TIMER.c: 48:  Timers[Comptador].Busy=1;
  2448   000776  5028               	movf	TI_NewTimer@Comptador^0,w,c
  2449   000778  0D05               	mullw	5
  2450   00077A  50F3               	movf	243,w,c
  2451   00077C  0F05               	addlw	low (_Timers+4)
  2452   00077E  6ED9               	movwf	fsr2l,c
  2453   000780  6ADA               	clrf	fsr2h,c
  2454   000782  0E01               	movlw	1
  2455   000784  6EDF               	movwf	indf2,c
  2456   000786                     
  2457                           ;TAD_TIMER.c: 49:  *TimerHandle=Comptador;
  2458   000786  5026               	movf	TI_NewTimer@TimerHandle^0,w,c
  2459   000788  6ED9               	movwf	fsr2l,c
  2460   00078A  6ADA               	clrf	fsr2h,c
  2461   00078C  C028  FFDF         	movff	TI_NewTimer@Comptador,indf2
  2462   000790                     l64:
  2463   000790  0012               	return		;funcret
  2464   000792                     __end_of_TI_NewTimer:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _initRFID *****************
  2468 ;; Defined at:
  2469 ;;		line 295 in file "TAD_RFID.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1
  2483 ;;      Params:         0       0       0
  2484 ;;      Locals:         0       0       0
  2485 ;;      Temps:          0       0       0
  2486 ;;      Totals:         0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 8
  2490 ;; This function calls:
  2491 ;;		_InitPortDirections
  2492 ;;		_MFRC522_Init
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text11
  2499   0009D0                     __ptext11:
  2500                           	callstack 0
  2501   0009D0                     _initRFID:
  2502                           	callstack 22
  2503   0009D0                     
  2504                           ;TAD_RFID.c: 296:     InitPortDirections();
  2505   0009D0  ECE2  F004         	call	_InitPortDirections	;wreg free
  2506   0009D4                     
  2507                           ;TAD_RFID.c: 297:     MFRC522_Init();
  2508   0009D4  ECC9  F003         	call	_MFRC522_Init	;wreg free
  2509   0009D8  0012               	return		;funcret
  2510   0009DA                     __end_of_initRFID:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _MFRC522_Init *****************
  2514 ;; Defined at:
  2515 ;;		line 115 in file "TAD_RFID.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1
  2529 ;;      Params:         0       0       0
  2530 ;;      Locals:         0       0       0
  2531 ;;      Temps:          0       0       0
  2532 ;;      Totals:         0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 7
  2536 ;; This function calls:
  2537 ;;		_MFRC522_AntennaOff
  2538 ;;		_MFRC522_AntennaOn
  2539 ;;		_MFRC522_Reset
  2540 ;;		_MFRC522_Wr
  2541 ;; This function is called by:
  2542 ;;		_initRFID
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text12
  2547   000792                     __ptext12:
  2548                           	callstack 0
  2549   000792                     _MFRC522_Init:
  2550                           	callstack 22
  2551   000792                     
  2552                           ;TAD_RFID.c: 116:     LATCbits.LATC3 = 1;
  2553   000792  868B               	bsf	139,3,c	;volatile
  2554                           
  2555                           ;TAD_RFID.c: 117:     LATCbits.LATC4 = 1;
  2556   000794  888B               	bsf	139,4,c	;volatile
  2557   000796                     
  2558                           ;TAD_RFID.c: 119:     MFRC522_Reset();
  2559   000796  EC4B  F004         	call	_MFRC522_Reset	;wreg free
  2560                           
  2561                           ;TAD_RFID.c: 120:     MFRC522_Wr(0x2A, 0x8D);
  2562   00079A  0E8D               	movlw	141
  2563   00079C  6E2B               	movwf	MFRC522_Wr@value^0,c
  2564   00079E  0E2A               	movlw	42
  2565   0007A0  ECD7  F002         	call	_MFRC522_Wr
  2566                           
  2567                           ;TAD_RFID.c: 121:     MFRC522_Wr(0x2B, 0x3E);
  2568   0007A4  0E3E               	movlw	62
  2569   0007A6  6E2B               	movwf	MFRC522_Wr@value^0,c
  2570   0007A8  0E2B               	movlw	43
  2571   0007AA  ECD7  F002         	call	_MFRC522_Wr
  2572                           
  2573                           ;TAD_RFID.c: 122:     MFRC522_Wr(0x2D, 30);
  2574   0007AE  0E1E               	movlw	30
  2575   0007B0  6E2B               	movwf	MFRC522_Wr@value^0,c
  2576   0007B2  0E2D               	movlw	45
  2577   0007B4  ECD7  F002         	call	_MFRC522_Wr
  2578                           
  2579                           ;TAD_RFID.c: 123:     MFRC522_Wr(0x2C, 0);
  2580   0007B8  0E00               	movlw	0
  2581   0007BA  6E2B               	movwf	MFRC522_Wr@value^0,c
  2582   0007BC  0E2C               	movlw	44
  2583   0007BE  ECD7  F002         	call	_MFRC522_Wr
  2584                           
  2585                           ;TAD_RFID.c: 124:     MFRC522_Wr(0x15, 0x40);
  2586   0007C2  0E40               	movlw	64
  2587   0007C4  6E2B               	movwf	MFRC522_Wr@value^0,c
  2588   0007C6  0E15               	movlw	21
  2589   0007C8  ECD7  F002         	call	_MFRC522_Wr
  2590                           
  2591                           ;TAD_RFID.c: 125:     MFRC522_Wr(0x11, 0x3D);
  2592   0007CC  0E3D               	movlw	61
  2593   0007CE  6E2B               	movwf	MFRC522_Wr@value^0,c
  2594   0007D0  0E11               	movlw	17
  2595   0007D2  ECD7  F002         	call	_MFRC522_Wr
  2596                           
  2597                           ;TAD_RFID.c: 127:     MFRC522_AntennaOff();
  2598   0007D6  ECDC  F004         	call	_MFRC522_AntennaOff	;wreg free
  2599                           
  2600                           ;TAD_RFID.c: 128:     MFRC522_AntennaOn();
  2601   0007DA  ECD6  F004         	call	_MFRC522_AntennaOn	;wreg free
  2602   0007DE  0012               	return		;funcret
  2603   0007E0                     __end_of_MFRC522_Init:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _MFRC522_Reset *****************
  2607 ;; Defined at:
  2608 ;;		line 96 in file "TAD_RFID.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1
  2622 ;;      Params:         0       0       0
  2623 ;;      Locals:         0       0       0
  2624 ;;      Temps:          0       0       0
  2625 ;;      Totals:         0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 5
  2629 ;; This function calls:
  2630 ;;		_MFRC522_Wr
  2631 ;;		_delay_us
  2632 ;; This function is called by:
  2633 ;;		_MFRC522_Init
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text13
  2638   000896                     __ptext13:
  2639                           	callstack 0
  2640   000896                     _MFRC522_Reset:
  2641                           	callstack 23
  2642   000896                     
  2643                           ;TAD_RFID.c: 97:     LATCbits.LATC4 = 1;
  2644   000896  888B               	bsf	139,4,c	;volatile
  2645   000898                     
  2646                           ;TAD_RFID.c: 98:     delay_us (1);
  2647   000898  0E01               	movlw	1
  2648   00089A  EC16  F004         	call	_delay_us
  2649   00089E                     
  2650                           ;TAD_RFID.c: 99:     LATCbits.LATC4 = 0;
  2651   00089E  988B               	bcf	139,4,c	;volatile
  2652                           
  2653                           ;TAD_RFID.c: 100:     delay_us (1);
  2654   0008A0  0E01               	movlw	1
  2655   0008A2  EC16  F004         	call	_delay_us
  2656   0008A6                     
  2657                           ;TAD_RFID.c: 101:     LATCbits.LATC4 = 1;
  2658   0008A6  888B               	bsf	139,4,c	;volatile
  2659                           
  2660                           ;TAD_RFID.c: 102:     delay_us (1);
  2661   0008A8  0E01               	movlw	1
  2662   0008AA  EC16  F004         	call	_delay_us
  2663                           
  2664                           ;TAD_RFID.c: 103:     MFRC522_Wr(0x01, 0x0F);
  2665   0008AE  0E0F               	movlw	15
  2666   0008B0  6E2B               	movwf	MFRC522_Wr@value^0,c
  2667   0008B2  0E01               	movlw	1
  2668   0008B4  ECD7  F002         	call	_MFRC522_Wr
  2669                           
  2670                           ;TAD_RFID.c: 104:     delay_us (1);
  2671   0008B8  0E01               	movlw	1
  2672   0008BA  EC16  F004         	call	_delay_us
  2673   0008BE  0012               	return		;funcret
  2674   0008C0                     __end_of_MFRC522_Reset:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _MFRC522_AntennaOn *****************
  2678 ;; Defined at:
  2679 ;;		line 107 in file "TAD_RFID.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1
  2693 ;;      Params:         0       0       0
  2694 ;;      Locals:         0       0       0
  2695 ;;      Temps:          0       0       0
  2696 ;;      Totals:         0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 6
  2700 ;; This function calls:
  2701 ;;		_MFRC522_Set_Bit
  2702 ;; This function is called by:
  2703 ;;		_MFRC522_Init
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text14
  2708   0009AC                     __ptext14:
  2709                           	callstack 0
  2710   0009AC                     _MFRC522_AntennaOn:
  2711                           	callstack 22
  2712   0009AC                     
  2713                           ;TAD_RFID.c: 108:     MFRC522_Set_Bit(0x14, 0x03);
  2714   0009AC  0E03               	movlw	3
  2715   0009AE  6E30               	movwf	MFRC522_Set_Bit@mask^0,c
  2716   0009B0  0E14               	movlw	20
  2717   0009B2  ECBD  F004         	call	_MFRC522_Set_Bit
  2718   0009B6  0012               	return		;funcret
  2719   0009B8                     __end_of_MFRC522_AntennaOn:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _MFRC522_Set_Bit *****************
  2723 ;; Defined at:
  2724 ;;		line 92 in file "TAD_RFID.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  addr            1    wreg     unsigned char 
  2727 ;;  mask            1   11[COMRAM] unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  addr            1   12[COMRAM] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1
  2739 ;;      Params:         1       0       0
  2740 ;;      Locals:         1       0       0
  2741 ;;      Temps:          0       0       0
  2742 ;;      Totals:         2       0       0
  2743 ;;Total ram usage:        2 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 5
  2746 ;; This function calls:
  2747 ;;		_MFRC522_Rd
  2748 ;;		_MFRC522_Wr
  2749 ;; This function is called by:
  2750 ;;		_MFRC522_AntennaOn
  2751 ;;		_MFRC522_ToCard
  2752 ;;		_MFRC522_CRC
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text15
  2757   00097A                     __ptext15:
  2758                           	callstack 0
  2759   00097A                     _MFRC522_Set_Bit:
  2760                           	callstack 22
  2761                           
  2762                           ;incstack = 0
  2763                           ;MFRC522_Set_Bit@addr stored from wreg
  2764   00097A  6E31               	movwf	MFRC522_Set_Bit@addr^0,c
  2765   00097C                     
  2766                           ;TAD_RFID.c: 93:     MFRC522_Wr(addr, MFRC522_Rd(addr) | mask);
  2767   00097C  5031               	movf	MFRC522_Set_Bit@addr^0,w,c
  2768   00097E  EC2B  F003         	call	_MFRC522_Rd
  2769   000982  1030               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  2770   000984  6E2B               	movwf	MFRC522_Wr@value^0,c
  2771   000986  5031               	movf	MFRC522_Set_Bit@addr^0,w,c
  2772   000988  ECD7  F002         	call	_MFRC522_Wr
  2773   00098C  0012               	return		;funcret
  2774   00098E                     __end_of_MFRC522_Set_Bit:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function _MFRC522_AntennaOff *****************
  2778 ;; Defined at:
  2779 ;;		line 111 in file "TAD_RFID.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1
  2793 ;;      Params:         0       0       0
  2794 ;;      Locals:         0       0       0
  2795 ;;      Temps:          0       0       0
  2796 ;;      Totals:         0       0       0
  2797 ;;Total ram usage:        0 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 6
  2800 ;; This function calls:
  2801 ;;		_MFRC522_Clear_Bit
  2802 ;; This function is called by:
  2803 ;;		_MFRC522_Init
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text16
  2808   0009B8                     __ptext16:
  2809                           	callstack 0
  2810   0009B8                     _MFRC522_AntennaOff:
  2811                           	callstack 22
  2812   0009B8                     
  2813                           ;TAD_RFID.c: 112:     MFRC522_Clear_Bit(0x14, 0x03);
  2814   0009B8  0E03               	movlw	3
  2815   0009BA  6E30               	movwf	MFRC522_Clear_Bit@mask^0,c
  2816   0009BC  0E14               	movlw	20
  2817   0009BE  EC8F  F004         	call	_MFRC522_Clear_Bit
  2818   0009C2  0012               	return		;funcret
  2819   0009C4                     __end_of_MFRC522_AntennaOff:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _MFRC522_Clear_Bit *****************
  2823 ;; Defined at:
  2824 ;;		line 88 in file "TAD_RFID.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  addr            1    wreg     unsigned char 
  2827 ;;  mask            1   11[COMRAM] unsigned char 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  addr            1   13[COMRAM] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1
  2839 ;;      Params:         1       0       0
  2840 ;;      Locals:         1       0       0
  2841 ;;      Temps:          1       0       0
  2842 ;;      Totals:         3       0       0
  2843 ;;Total ram usage:        3 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 5
  2846 ;; This function calls:
  2847 ;;		_MFRC522_Rd
  2848 ;;		_MFRC522_Wr
  2849 ;; This function is called by:
  2850 ;;		_MFRC522_AntennaOff
  2851 ;;		_MFRC522_ToCard
  2852 ;;		_MFRC522_CRC
  2853 ;;		_MFRC522_Halt
  2854 ;;		_MFRC522_AntiColl
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text17
  2859   00091E                     __ptext17:
  2860                           	callstack 0
  2861   00091E                     _MFRC522_Clear_Bit:
  2862                           	callstack 22
  2863                           
  2864                           ;incstack = 0
  2865                           ;MFRC522_Clear_Bit@addr stored from wreg
  2866   00091E  6E32               	movwf	MFRC522_Clear_Bit@addr^0,c
  2867   000920                     
  2868                           ;TAD_RFID.c: 89:     MFRC522_Wr(addr, MFRC522_Rd(addr) & ~mask);
  2869   000920  5030               	movf	MFRC522_Clear_Bit@mask^0,w,c
  2870   000922  0AFF               	xorlw	255
  2871   000924  6E31               	movwf	??_MFRC522_Clear_Bit^0,c
  2872   000926  5032               	movf	MFRC522_Clear_Bit@addr^0,w,c
  2873   000928  EC2B  F003         	call	_MFRC522_Rd
  2874   00092C  1431               	andwf	??_MFRC522_Clear_Bit^0,w,c
  2875   00092E  6E2B               	movwf	MFRC522_Wr@value^0,c
  2876   000930  5032               	movf	MFRC522_Clear_Bit@addr^0,w,c
  2877   000932  ECD7  F002         	call	_MFRC522_Wr
  2878   000936  0012               	return		;funcret
  2879   000938                     __end_of_MFRC522_Clear_Bit:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _MFRC522_Wr *****************
  2883 ;; Defined at:
  2884 ;;		line 60 in file "TAD_RFID.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  Address         1    wreg     unsigned char 
  2887 ;;  value           1    6[COMRAM] unsigned char 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  Address         1    8[COMRAM] unsigned char 
  2890 ;;  i               1   10[COMRAM] unsigned char 
  2891 ;;  ucAddr          1    9[COMRAM] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1
  2901 ;;      Params:         1       0       0
  2902 ;;      Locals:         3       0       0
  2903 ;;      Temps:          1       0       0
  2904 ;;      Totals:         5       0       0
  2905 ;;Total ram usage:        5 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 4
  2908 ;; This function calls:
  2909 ;;		_delay_us
  2910 ;; This function is called by:
  2911 ;;		_MFRC522_Clear_Bit
  2912 ;;		_MFRC522_Set_Bit
  2913 ;;		_MFRC522_Reset
  2914 ;;		_MFRC522_Init
  2915 ;;		_MFRC522_ToCard
  2916 ;;		_MFRC522_Request
  2917 ;;		_MFRC522_CRC
  2918 ;;		_MFRC522_AntiColl
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text18
  2923   0005AE                     __ptext18:
  2924                           	callstack 0
  2925   0005AE                     _MFRC522_Wr:
  2926                           	callstack 24
  2927                           
  2928                           ;incstack = 0
  2929                           ;MFRC522_Wr@Address stored from wreg
  2930   0005AE  6E2D               	movwf	MFRC522_Wr@Address^0,c
  2931   0005B0                     
  2932                           ;TAD_RFID.c: 61:     unsigned char i, ucAddr = ((Address << 1) & 0x7E);
  2933   0005B0  502D               	movf	MFRC522_Wr@Address^0,w,c
  2934   0005B2  242D               	addwf	MFRC522_Wr@Address^0,w,c
  2935   0005B4  0B7E               	andlw	126
  2936   0005B6  6E2E               	movwf	MFRC522_Wr@ucAddr^0,c
  2937   0005B8                     
  2938                           ;TAD_RFID.c: 62:     LATCbits.LATC2 = 0;
  2939   0005B8  948B               	bcf	139,2,c	;volatile
  2940   0005BA                     
  2941                           ;TAD_RFID.c: 63:     LATCbits.LATC3 = 0;
  2942   0005BA  968B               	bcf	139,3,c	;volatile
  2943   0005BC                     
  2944                           ;TAD_RFID.c: 64:     for (i = 8; i > 0; i--) {
  2945   0005BC  0E08               	movlw	8
  2946   0005BE  6E2F               	movwf	MFRC522_Wr@i^0,c
  2947   0005C0                     l2066:
  2948                           
  2949                           ;TAD_RFID.c: 65:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
  2950   0005C0  BE2E               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  2951   0005C2  EFE5  F002         	goto	u1241
  2952   0005C6  EFE9  F002         	goto	u1240
  2953   0005CA                     u1241:
  2954   0005CA  6A2C               	clrf	??_MFRC522_Wr^0,c
  2955   0005CC  2A2C               	incf	??_MFRC522_Wr^0,f,c
  2956   0005CE  EFEA  F002         	goto	u1258
  2957   0005D2                     u1240:
  2958   0005D2  6A2C               	clrf	??_MFRC522_Wr^0,c
  2959   0005D4                     u1258:
  2960   0005D4  462C               	rlncf	??_MFRC522_Wr^0,f,c
  2961   0005D6  508B               	movf	139,w,c	;volatile
  2962   0005D8  182C               	xorwf	??_MFRC522_Wr^0,w,c
  2963   0005DA  0BFD               	andlw	-3
  2964   0005DC  182C               	xorwf	??_MFRC522_Wr^0,w,c
  2965   0005DE  6E8B               	movwf	139,c	;volatile
  2966   0005E0                     
  2967                           ;TAD_RFID.c: 66:         LATCbits.LATC2 = 1;
  2968   0005E0  848B               	bsf	139,2,c	;volatile
  2969                           
  2970                           ;TAD_RFID.c: 67:         ucAddr <<= 1;
  2971   0005E2  90D8               	bcf	status,0,c
  2972   0005E4  362E               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  2973   0005E6                     
  2974                           ;TAD_RFID.c: 68:         delay_us(5);
  2975   0005E6  0E05               	movlw	5
  2976   0005E8  EC16  F004         	call	_delay_us
  2977   0005EC                     
  2978                           ;TAD_RFID.c: 69:         LATCbits.LATC2 = 0;
  2979   0005EC  948B               	bcf	139,2,c	;volatile
  2980   0005EE                     
  2981                           ;TAD_RFID.c: 70:         delay_us(5);
  2982   0005EE  0E05               	movlw	5
  2983   0005F0  EC16  F004         	call	_delay_us
  2984   0005F4                     
  2985                           ;TAD_RFID.c: 71:     }
  2986   0005F4  062F               	decf	MFRC522_Wr@i^0,f,c
  2987   0005F6  502F               	movf	MFRC522_Wr@i^0,w,c
  2988   0005F8  A4D8               	btfss	status,2,c
  2989   0005FA  EF01  F003         	goto	u1261
  2990   0005FE  EF03  F003         	goto	u1260
  2991   000602                     u1261:
  2992   000602  EFE0  F002         	goto	l2066
  2993   000606                     u1260:
  2994   000606                     
  2995                           ;TAD_RFID.c: 73:     for (i = 8; i > 0; i--) {
  2996   000606  0E08               	movlw	8
  2997   000608  6E2F               	movwf	MFRC522_Wr@i^0,c
  2998   00060A                     l2084:
  2999                           
  3000                           ;TAD_RFID.c: 74:         LATCbits.LATC1 = ((value & 0x80) == 0x80);
  3001   00060A  BE2B               	btfsc	MFRC522_Wr@value^0,7,c
  3002   00060C  EF0A  F003         	goto	u1271
  3003   000610  EF0E  F003         	goto	u1270
  3004   000614                     u1271:
  3005   000614  6A2C               	clrf	??_MFRC522_Wr^0,c
  3006   000616  2A2C               	incf	??_MFRC522_Wr^0,f,c
  3007   000618  EF0F  F003         	goto	u1288
  3008   00061C                     u1270:
  3009   00061C  6A2C               	clrf	??_MFRC522_Wr^0,c
  3010   00061E                     u1288:
  3011   00061E  462C               	rlncf	??_MFRC522_Wr^0,f,c
  3012   000620  508B               	movf	139,w,c	;volatile
  3013   000622  182C               	xorwf	??_MFRC522_Wr^0,w,c
  3014   000624  0BFD               	andlw	-3
  3015   000626  182C               	xorwf	??_MFRC522_Wr^0,w,c
  3016   000628  6E8B               	movwf	139,c	;volatile
  3017   00062A                     
  3018                           ;TAD_RFID.c: 75:         LATCbits.LATC2 = 1;
  3019   00062A  848B               	bsf	139,2,c	;volatile
  3020                           
  3021                           ;TAD_RFID.c: 76:         value <<= 1;
  3022   00062C  90D8               	bcf	status,0,c
  3023   00062E  362B               	rlcf	MFRC522_Wr@value^0,f,c
  3024   000630                     
  3025                           ;TAD_RFID.c: 77:         delay_us(5);
  3026   000630  0E05               	movlw	5
  3027   000632  EC16  F004         	call	_delay_us
  3028   000636                     
  3029                           ;TAD_RFID.c: 78:         LATCbits.LATC2 = 0;
  3030   000636  948B               	bcf	139,2,c	;volatile
  3031   000638                     
  3032                           ;TAD_RFID.c: 79:         delay_us(5);
  3033   000638  0E05               	movlw	5
  3034   00063A  EC16  F004         	call	_delay_us
  3035   00063E                     
  3036                           ;TAD_RFID.c: 80:     }
  3037   00063E  062F               	decf	MFRC522_Wr@i^0,f,c
  3038   000640  502F               	movf	MFRC522_Wr@i^0,w,c
  3039   000642  A4D8               	btfss	status,2,c
  3040   000644  EF26  F003         	goto	u1291
  3041   000648  EF28  F003         	goto	u1290
  3042   00064C                     u1291:
  3043   00064C  EF05  F003         	goto	l2084
  3044   000650                     u1290:
  3045   000650                     
  3046                           ;TAD_RFID.c: 82:     LATCbits.LATC3 = 1;
  3047   000650  868B               	bsf	139,3,c	;volatile
  3048                           
  3049                           ;TAD_RFID.c: 83:     LATCbits.LATC2 = 1;
  3050   000652  848B               	bsf	139,2,c	;volatile
  3051   000654  0012               	return		;funcret
  3052   000656                     __end_of_MFRC522_Wr:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _delay_us *****************
  3056 ;; Defined at:
  3057 ;;		line 23 in file "TAD_RFID.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  howMany         1    wreg     unsigned char 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  howMany         1    4[COMRAM] unsigned char 
  3062 ;;  x               1    5[COMRAM] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, prodl, prodh
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1
  3072 ;;      Params:         0       0       0
  3073 ;;      Locals:         2       0       0
  3074 ;;      Temps:          3       0       0
  3075 ;;      Totals:         5       0       0
  3076 ;;Total ram usage:        5 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 3
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_MFRC522_Wr
  3083 ;;		_MFRC522_Reset
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text19
  3088   00082C                     __ptext19:
  3089                           	callstack 0
  3090   00082C                     _delay_us:
  3091                           	callstack 24
  3092                           
  3093                           ;incstack = 0
  3094                           ;delay_us@howMany stored from wreg
  3095   00082C  6E29               	movwf	delay_us@howMany^0,c
  3096   00082E                     
  3097                           ;TAD_RFID.c: 25:     char x;;TAD_RFID.c: 26:     for (x = 0; x < howMany * 3; x++) __nop
      +                          ();
  3098   00082E  6A2A               	clrf	delay_us@x^0,c
  3099   000830  EF1C  F004         	goto	l1180
  3100   000834                     l195:
  3101   000834  0000               	nop	
  3102   000836  2A2A               	incf	delay_us@x^0,f,c
  3103   000838                     l1180:
  3104   000838  5029               	movf	delay_us@howMany^0,w,c
  3105   00083A  0D03               	mullw	3
  3106   00083C  502A               	movf	delay_us@x^0,w,c
  3107   00083E  6E26               	movwf	??_delay_us^0,c
  3108   000840  6A27               	clrf	(??_delay_us+1)^0,c
  3109   000842  50F3               	movf	243,w,c
  3110   000844  5C26               	subwf	??_delay_us^0,w,c
  3111   000846  5027               	movf	(??_delay_us+1)^0,w,c
  3112   000848  0A80               	xorlw	128
  3113   00084A  6E28               	movwf	(??_delay_us+2)^0,c
  3114   00084C  50F4               	movf	244,w,c
  3115   00084E  0A80               	xorlw	128
  3116   000850  5828               	subwfb	(??_delay_us+2)^0,w,c
  3117   000852  A0D8               	btfss	status,0,c
  3118   000854  EF2E  F004         	goto	u11
  3119   000858  EF30  F004         	goto	u10
  3120   00085C                     u11:
  3121   00085C  EF1A  F004         	goto	l195
  3122   000860                     u10:
  3123   000860  0012               	return		;funcret
  3124   000862                     __end_of_delay_us:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _MFRC522_Rd *****************
  3128 ;; Defined at:
  3129 ;;		line 29 in file "TAD_RFID.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  Address         1    wreg     unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  Address         1    2[COMRAM] unsigned char 
  3134 ;;  i               1    5[COMRAM] unsigned char 
  3135 ;;  ucResult        1    4[COMRAM] unsigned char 
  3136 ;;  ucAddr          1    3[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      unsigned char 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1
  3146 ;;      Params:         0       0       0
  3147 ;;      Locals:         4       0       0
  3148 ;;      Temps:          1       0       0
  3149 ;;      Totals:         5       0       0
  3150 ;;Total ram usage:        5 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 3
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_MFRC522_Clear_Bit
  3157 ;;		_MFRC522_Set_Bit
  3158 ;;		_MFRC522_ToCard
  3159 ;;		_MFRC522_CRC
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text20
  3164   000656                     __ptext20:
  3165                           	callstack 0
  3166   000656                     _MFRC522_Rd:
  3167                           	callstack 23
  3168                           
  3169                           ;incstack = 0
  3170                           ;MFRC522_Rd@Address stored from wreg
  3171   000656  6E27               	movwf	MFRC522_Rd@Address^0,c
  3172   000658                     
  3173                           ;TAD_RFID.c: 30:     unsigned char i, ucAddr = ((Address<<1) & 0x7E) | 0x80;
  3174   000658  5027               	movf	MFRC522_Rd@Address^0,w,c
  3175   00065A  2427               	addwf	MFRC522_Rd@Address^0,w,c
  3176   00065C  0B7E               	andlw	126
  3177   00065E  0980               	iorlw	128
  3178   000660  6E28               	movwf	MFRC522_Rd@ucAddr^0,c
  3179   000662                     
  3180                           ;TAD_RFID.c: 31:     unsigned char ucResult = 0;
  3181   000662  6A29               	clrf	MFRC522_Rd@ucResult^0,c
  3182   000664                     
  3183                           ;TAD_RFID.c: 33:     LATCbits.LATC2 = 0;
  3184   000664  948B               	bcf	139,2,c	;volatile
  3185   000666                     
  3186                           ;TAD_RFID.c: 34:     LATCbits.LATC3 = 0;
  3187   000666  968B               	bcf	139,3,c	;volatile
  3188   000668                     
  3189                           ;TAD_RFID.c: 36:     for (i = 8; i > 0; i--) {
  3190   000668  0E08               	movlw	8
  3191   00066A  6E2A               	movwf	MFRC522_Rd@i^0,c
  3192   00066C                     l1196:
  3193                           
  3194                           ;TAD_RFID.c: 37:         LATCbits.LATC1 = ((ucAddr & 0x80) == 0x80);
  3195   00066C  BE28               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  3196   00066E  EF3B  F003         	goto	u21
  3197   000672  EF3F  F003         	goto	u20
  3198   000676                     u21:
  3199   000676  6A26               	clrf	??_MFRC522_Rd^0,c
  3200   000678  2A26               	incf	??_MFRC522_Rd^0,f,c
  3201   00067A  EF40  F003         	goto	u38
  3202   00067E                     u20:
  3203   00067E  6A26               	clrf	??_MFRC522_Rd^0,c
  3204   000680                     u38:
  3205   000680  4626               	rlncf	??_MFRC522_Rd^0,f,c
  3206   000682  508B               	movf	139,w,c	;volatile
  3207   000684  1826               	xorwf	??_MFRC522_Rd^0,w,c
  3208   000686  0BFD               	andlw	-3
  3209   000688  1826               	xorwf	??_MFRC522_Rd^0,w,c
  3210   00068A  6E8B               	movwf	139,c	;volatile
  3211   00068C                     
  3212                           ;TAD_RFID.c: 38:         LATCbits.LATC2 = 1;
  3213   00068C  848B               	bsf	139,2,c	;volatile
  3214                           
  3215                           ;TAD_RFID.c: 40:         ucAddr <<= 1;
  3216   00068E  90D8               	bcf	status,0,c
  3217   000690  3628               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  3218   000692                     
  3219                           ;TAD_RFID.c: 41:         LATCbits.LATC2 = 0;
  3220   000692  948B               	bcf	139,2,c	;volatile
  3221   000694                     
  3222                           ;TAD_RFID.c: 43:     }
  3223   000694  062A               	decf	MFRC522_Rd@i^0,f,c
  3224   000696  502A               	movf	MFRC522_Rd@i^0,w,c
  3225   000698  A4D8               	btfss	status,2,c
  3226   00069A  EF51  F003         	goto	u41
  3227   00069E  EF53  F003         	goto	u40
  3228   0006A2                     u41:
  3229   0006A2  EF36  F003         	goto	l1196
  3230   0006A6                     u40:
  3231   0006A6                     
  3232                           ;TAD_RFID.c: 45:     for (i = 8; i > 0; i--) {
  3233   0006A6  0E08               	movlw	8
  3234   0006A8  6E2A               	movwf	MFRC522_Rd@i^0,c
  3235   0006AA                     l202:
  3236                           
  3237                           ;TAD_RFID.c: 46:         LATCbits.LATC2 = 1;
  3238   0006AA  848B               	bsf	139,2,c	;volatile
  3239   0006AC                     
  3240                           ;TAD_RFID.c: 48:         ucResult <<= 1;
  3241   0006AC  90D8               	bcf	status,0,c
  3242   0006AE  3629               	rlcf	MFRC522_Rd@ucResult^0,f,c
  3243                           
  3244                           ;TAD_RFID.c: 49:         ucResult|= PORTCbits.RC0;
  3245   0006B0  B082               	btfsc	130,0,c	;volatile
  3246   0006B2  EF5D  F003         	goto	u51
  3247   0006B6  EF60  F003         	goto	u50
  3248   0006BA                     u51:
  3249   0006BA  0E01               	movlw	1
  3250   0006BC  EF61  F003         	goto	u56
  3251   0006C0                     u50:
  3252   0006C0  0E00               	movlw	0
  3253   0006C2                     u56:
  3254   0006C2  1229               	iorwf	MFRC522_Rd@ucResult^0,f,c
  3255   0006C4                     
  3256                           ;TAD_RFID.c: 50:         LATCbits.LATC2 = 0;
  3257   0006C4  948B               	bcf	139,2,c	;volatile
  3258   0006C6                     
  3259                           ;TAD_RFID.c: 52:     }
  3260   0006C6  062A               	decf	MFRC522_Rd@i^0,f,c
  3261   0006C8  502A               	movf	MFRC522_Rd@i^0,w,c
  3262   0006CA  A4D8               	btfss	status,2,c
  3263   0006CC  EF6A  F003         	goto	u61
  3264   0006D0  EF6C  F003         	goto	u60
  3265   0006D4                     u61:
  3266   0006D4  EF55  F003         	goto	l202
  3267   0006D8                     u60:
  3268   0006D8                     
  3269                           ;TAD_RFID.c: 54:     LATCbits.LATC3 = 1;
  3270   0006D8  868B               	bsf	139,3,c	;volatile
  3271                           
  3272                           ;TAD_RFID.c: 55:     LATCbits.LATC2 = 1;
  3273   0006DA  848B               	bsf	139,2,c	;volatile
  3274   0006DC                     
  3275                           ;TAD_RFID.c: 56:     return ucResult;
  3276   0006DC  5029               	movf	MFRC522_Rd@ucResult^0,w,c
  3277   0006DE  0012               	return		;funcret
  3278   0006E0                     __end_of_MFRC522_Rd:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function _InitPortDirections *****************
  3282 ;; Defined at:
  3283 ;;		line 15 in file "TAD_RFID.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		None
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1
  3297 ;;      Params:         0       0       0
  3298 ;;      Locals:         0       0       0
  3299 ;;      Temps:          0       0       0
  3300 ;;      Totals:         0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 3
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_initRFID
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text21
  3312   0009C4                     __ptext21:
  3313                           	callstack 0
  3314   0009C4                     _InitPortDirections:
  3315                           	callstack 26
  3316   0009C4                     
  3317                           ;TAD_RFID.c: 16:     TRISCbits.TRISC0 = 1;
  3318   0009C4  8094               	bsf	148,0,c	;volatile
  3319                           
  3320                           ;TAD_RFID.c: 17:     TRISCbits.TRISC1 = 0;
  3321   0009C6  9294               	bcf	148,1,c	;volatile
  3322                           
  3323                           ;TAD_RFID.c: 18:     TRISCbits.TRISC2 = 0;
  3324   0009C8  9494               	bcf	148,2,c	;volatile
  3325                           
  3326                           ;TAD_RFID.c: 19:     TRISCbits.TRISC3 = 0;
  3327   0009CA  9694               	bcf	148,3,c	;volatile
  3328                           
  3329                           ;TAD_RFID.c: 20:     TRISCbits.TRISC4 = 0;
  3330   0009CC  9894               	bcf	148,4,c	;volatile
  3331   0009CE  0012               	return		;funcret
  3332   0009D0                     __end_of_InitPortDirections:
  3333                           	callstack 0
  3334                           
  3335 ;; *************** function _Terminal_Init *****************
  3336 ;; Defined at:
  3337 ;;		line 23 in file "TAD_TERMINAL.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1
  3351 ;;      Params:         0       0       0
  3352 ;;      Locals:         0       0       0
  3353 ;;      Temps:          0       0       0
  3354 ;;      Totals:         0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 3
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text22
  3366   00098E                     __ptext22:
  3367                           	callstack 0
  3368   00098E                     _Terminal_Init:
  3369                           	callstack 27
  3370   00098E                     
  3371                           ;TAD_TERMINAL.c: 24:  TXSTA = 0x24;
  3372   00098E  0E24               	movlw	36
  3373   000990  6EAC               	movwf	172,c	;volatile
  3374                           
  3375                           ;TAD_TERMINAL.c: 25:  RCSTA = 0x90;
  3376   000992  0E90               	movlw	144
  3377   000994  6EAB               	movwf	171,c	;volatile
  3378                           
  3379                           ;TAD_TERMINAL.c: 26:  SPBRG = 64;
  3380   000996  0E40               	movlw	64
  3381   000998  6EAF               	movwf	175,c	;volatile
  3382   00099A                     
  3383                           ;TAD_TERMINAL.c: 27:  BAUDCON = 0x00;
  3384   00099A  6AB8               	clrf	184,c	;volatile
  3385   00099C                     
  3386                           ;TAD_TERMINAL.c: 28:  hashtag_pressed = 0;
  3387   00099C  6A1A               	clrf	_hashtag_pressed^0,c
  3388   00099E  0012               	return		;funcret
  3389   0009A0                     __end_of_Terminal_Init:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _TI_Init *****************
  3393 ;; Defined at:
  3394 ;;		line 32 in file "TAD_TIMER.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  counter         1    1[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1
  3408 ;;      Params:         0       0       0
  3409 ;;      Locals:         1       0       0
  3410 ;;      Temps:          0       0       0
  3411 ;;      Totals:         1       0       0
  3412 ;;Total ram usage:        1 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 3
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text23
  3423   000862                     __ptext23:
  3424                           	callstack 0
  3425   000862                     _TI_Init:
  3426                           	callstack 27
  3427   000862                     
  3428                           ;TAD_TIMER.c: 33:  for (unsigned char counter=0; counter<4; counter++) {
  3429   000862  6A26               	clrf	TI_Init@counter^0,c
  3430   000864                     l1596:
  3431                           
  3432                           ;TAD_TIMER.c: 34:   Timers[counter].Busy=0;
  3433   000864  5026               	movf	TI_Init@counter^0,w,c
  3434   000866  0D05               	mullw	5
  3435   000868  50F3               	movf	243,w,c
  3436   00086A  0F05               	addlw	low (_Timers+4)
  3437   00086C  6ED9               	movwf	fsr2l,c
  3438   00086E  6ADA               	clrf	fsr2h,c
  3439   000870  6ADF               	clrf	indf2,c
  3440   000872                     
  3441                           ;TAD_TIMER.c: 35:  }
  3442   000872  2A26               	incf	TI_Init@counter^0,f,c
  3443   000874  0E03               	movlw	3
  3444   000876  6426               	cpfsgt	TI_Init@counter^0,c
  3445   000878  EF40  F004         	goto	u491
  3446   00087C  EF42  F004         	goto	u490
  3447   000880                     u491:
  3448   000880  EF32  F004         	goto	l1596
  3449   000884                     u490:
  3450   000884                     
  3451                           ;TAD_TIMER.c: 36:  T0CON=0x82;
  3452   000884  0E82               	movlw	130
  3453   000886  6ED5               	movwf	213,c	;volatile
  3454                           
  3455                           ;TAD_TIMER.c: 37:     TMR0=64911;
  3456   000888  0EFD               	movlw	253
  3457   00088A  6ED7               	movwf	215,c	;volatile
  3458   00088C  0E8F               	movlw	143
  3459   00088E  6ED6               	movwf	214,c	;volatile
  3460   000890                     
  3461                           ;TAD_TIMER.c: 38:  INTCONbits.TMR0IF = 0;
  3462   000890  94F2               	bcf	242,2,c	;volatile
  3463   000892                     
  3464                           ;TAD_TIMER.c: 39:  INTCONbits.TMR0IE = 1;
  3465   000892  8AF2               	bsf	242,5,c	;volatile
  3466   000894  0012               	return		;funcret
  3467   000896                     __end_of_TI_Init:
  3468                           	callstack 0
  3469                           
  3470 ;; *************** function _LowRSI *****************
  3471 ;; Defined at:
  3472 ;;		line 31 in file "main.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		None
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1
  3486 ;;      Params:         0       0       0
  3487 ;;      Locals:         0       0       0
  3488 ;;      Temps:          1       0       0
  3489 ;;      Totals:         1       0       0
  3490 ;;Total ram usage:        1 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; Hardware stack levels required when called: 2
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		Interrupt level 1
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	intcodelo
  3501   000018                     __pintcodelo:
  3502                           	callstack 0
  3503   000018                     _LowRSI:
  3504                           	callstack 22
  3505                           
  3506                           ;incstack = 0
  3507   000018  8037               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3508   00001A  CFE0 F025          	movff	bsr,??_LowRSI
  3509   00001E  C025  FFE0         	movff	??_LowRSI,bsr
  3510   000022  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3511   000024  0010               	retfie	
  3512   000026                     __end_of_LowRSI:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _HighRSI *****************
  3516 ;; Defined at:
  3517 ;;		line 27 in file "main.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1
  3531 ;;      Params:         0       0       0
  3532 ;;      Locals:         0       0       0
  3533 ;;      Temps:          0       0       0
  3534 ;;      Totals:         0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; Hardware stack levels required when called: 1
  3538 ;; This function calls:
  3539 ;;		_RSI_Timer0
  3540 ;; This function is called by:
  3541 ;;		Interrupt level 2
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	intcode
  3546   000008                     __pintcode:
  3547                           	callstack 0
  3548   000008                     _HighRSI:
  3549                           	callstack 22
  3550                           
  3551                           ;incstack = 0
  3552   000008  8237               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3553   00000A  EFA8  F004         	goto	int_func
  3554                           
  3555                           	psect	intcode_body
  3556   000950                     __pintcode_body:
  3557                           	callstack 22
  3558   000950                     int_func:
  3559                           	callstack 22
  3560   000950                     
  3561                           ;main.c: 29: }
  3562   000950  A4F2               	btfss	242,2,c	;volatile
  3563   000952  EFAD  F004         	goto	i2u96_41
  3564   000956  EFAF  F004         	goto	i2u96_40
  3565   00095A                     i2u96_41:
  3566   00095A  EFB1  F004         	goto	i2l22
  3567   00095E                     i2u96_40:
  3568   00095E  EC9C  F004         	call	_RSI_Timer0	;wreg free
  3569   000962                     i2l22:
  3570   000962  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3571   000964  0011               	retfie		f
  3572   000966                     __end_of_HighRSI:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _RSI_Timer0 *****************
  3576 ;; Defined at:
  3577 ;;		line 25 in file "TAD_TIMER.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1
  3591 ;;      Params:         0       0       0
  3592 ;;      Locals:         0       0       0
  3593 ;;      Temps:          0       0       0
  3594 ;;      Totals:         0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_HighRSI
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text26
  3605   000938                     __ptext26:
  3606                           	callstack 0
  3607   000938                     _RSI_Timer0:
  3608                           	callstack 22
  3609   000938                     
  3610                           ;TAD_TIMER.c: 27:     TMR0=64911;
  3611   000938  0EFD               	movlw	253
  3612   00093A  6ED7               	movwf	215,c	;volatile
  3613   00093C  0E8F               	movlw	143
  3614   00093E  6ED6               	movwf	214,c	;volatile
  3615   000940                     
  3616                           ;TAD_TIMER.c: 28:     TMR0IF=0;
  3617   000940  94F2               	bcf	4082,2,c	;volatile
  3618   000942                     
  3619                           ;TAD_TIMER.c: 29:     Tics++;
  3620   000942  0E01               	movlw	1
  3621   000944  2615               	addwf	_Tics^0,f,c	;volatile
  3622   000946  0E00               	movlw	0
  3623   000948  2216               	addwfc	(_Tics+1)^0,f,c	;volatile
  3624   00094A  2217               	addwfc	(_Tics+2)^0,f,c	;volatile
  3625   00094C  2218               	addwfc	(_Tics+3)^0,f,c	;volatile
  3626   00094E  0012               	return		;funcret
  3627   000950                     __end_of_RSI_Timer0:
  3628                           	callstack 0
  3629                           
  3630                           	psect	rparam
  3631   000001                     ___rparam_used  equ	1
  3632   000000                     ___param_bank   equ	0
  3633   000000                     __Lparam        equ	__Lrparam
  3634   000000                     __Hparam        equ	__Hrparam
  3635                           
  3636                           	psect	temp
  3637   000037                     btemp:
  3638                           	callstack 0
  3639   000037                     	ds	1
  3640   000037                     int$flags       set	btemp
  3641   000038                     wtemp8          set	btemp+1
  3642   000038                     ttemp5          set	btemp+1
  3643   00003B                     ttemp6          set	btemp+4
  3644   00003F                     ttemp7          set	btemp+8
  3645                           
  3646                           	psect	idloc
  3647                           
  3648                           ;Config register IDLOC0 @ 0x200000
  3649                           ;	unspecified, using default values
  3650   200000                     	org	2097152
  3651   200000  FF                 	db	255
  3652                           
  3653                           ;Config register IDLOC1 @ 0x200001
  3654                           ;	unspecified, using default values
  3655   200001                     	org	2097153
  3656   200001  FF                 	db	255
  3657                           
  3658                           ;Config register IDLOC2 @ 0x200002
  3659                           ;	unspecified, using default values
  3660   200002                     	org	2097154
  3661   200002  FF                 	db	255
  3662                           
  3663                           ;Config register IDLOC3 @ 0x200003
  3664                           ;	unspecified, using default values
  3665   200003                     	org	2097155
  3666   200003  FF                 	db	255
  3667                           
  3668                           ;Config register IDLOC4 @ 0x200004
  3669                           ;	unspecified, using default values
  3670   200004                     	org	2097156
  3671   200004  FF                 	db	255
  3672                           
  3673                           ;Config register IDLOC5 @ 0x200005
  3674                           ;	unspecified, using default values
  3675   200005                     	org	2097157
  3676   200005  FF                 	db	255
  3677                           
  3678                           ;Config register IDLOC6 @ 0x200006
  3679                           ;	unspecified, using default values
  3680   200006                     	org	2097158
  3681   200006  FF                 	db	255
  3682                           
  3683                           ;Config register IDLOC7 @ 0x200007
  3684                           ;	unspecified, using default values
  3685   200007                     	org	2097159
  3686   200007  FF                 	db	255
  3687                           
  3688                           	psect	config
  3689                           
  3690                           ; Padding undefined space
  3691   300000                     	org	3145728
  3692   300000  FF                 	db	255
  3693                           
  3694                           ;Config register CONFIG1H @ 0x300001
  3695                           ;	Oscillator
  3696                           ;	OSC = HS, HS Oscillator
  3697                           ;	Fail-Safe Clock Monitor Enable bit
  3698                           ;	FCMEN = 0x0, unprogrammed default
  3699                           ;	Internal/External Oscillator Switchover bit
  3700                           ;	IESO = 0x0, unprogrammed default
  3701   300001                     	org	3145729
  3702   300001  02                 	db	2
  3703                           
  3704                           ;Config register CONFIG2L @ 0x300002
  3705                           ;	Power-up Timer Enable bit
  3706                           ;	PWRT = OFF, PWRT disabled
  3707                           ;	Brown-out Reset Enable bits
  3708                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3709                           ;	Brown-out Reset Voltage bits
  3710                           ;	BORV = 0x3, unprogrammed default
  3711   300002                     	org	3145730
  3712   300002  19                 	db	25
  3713                           
  3714                           ;Config register CONFIG2H @ 0x300003
  3715                           ;	Watchdog Timer Enable bit
  3716                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3717                           ;	Watchdog Timer Postscale Select bits
  3718                           ;	WDTPS = 0xF, unprogrammed default
  3719   300003                     	org	3145731
  3720   300003  1E                 	db	30
  3721                           
  3722                           ; Padding undefined space
  3723   300004                     	org	3145732
  3724   300004  FF                 	db	255
  3725                           
  3726                           ;Config register CONFIG3H @ 0x300005
  3727                           ;	CCP2 MUX bit
  3728                           ;	CCP2MX = 0x1, unprogrammed default
  3729                           ;	PORTB A/D Enable bit
  3730                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  3731                           ;	Low-Power Timer1 Oscillator Enable bit
  3732                           ;	LPT1OSC = 0x0, unprogrammed default
  3733                           ;	MCLR Pin Enable bit
  3734                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  3735   300005                     	org	3145733
  3736   300005  01                 	db	1
  3737                           
  3738                           ;Config register CONFIG4L @ 0x300006
  3739                           ;	Stack Full/Underflow Reset Enable bit
  3740                           ;	STVREN = 0x1, unprogrammed default
  3741                           ;	Single-Supply ICSP Enable bit
  3742                           ;	LVP = OFF, Single-Supply ICSP disabled
  3743                           ;	Boot Block Size Select bits
  3744                           ;	BBSIZ = 0x0, unprogrammed default
  3745                           ;	Extended Instruction Set Enable bit
  3746                           ;	XINST = 0x0, unprogrammed default
  3747                           ;	Background Debugger Enable bit
  3748                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3749   300006                     	org	3145734
  3750   300006  81                 	db	129
  3751                           
  3752                           ; Padding undefined space
  3753   300007                     	org	3145735
  3754   300007  FF                 	db	255
  3755                           
  3756                           ;Config register CONFIG5L @ 0x300008
  3757                           ;	unspecified, using default values
  3758                           ;	Code Protection bit
  3759                           ;	CP0 = 0x1, unprogrammed default
  3760                           ;	Code Protection bit
  3761                           ;	CP1 = 0x1, unprogrammed default
  3762   300008                     	org	3145736
  3763   300008  03                 	db	3
  3764                           
  3765                           ;Config register CONFIG5H @ 0x300009
  3766                           ;	unspecified, using default values
  3767                           ;	Boot Block Code Protection bitProtect Boot
  3768                           ;	CPB = 0x1, unprogrammed default
  3769                           ;	Data EEPROM Code Protection bit
  3770                           ;	CPD = 0x1, unprogrammed default
  3771   300009                     	org	3145737
  3772   300009  C0                 	db	192
  3773                           
  3774                           ;Config register CONFIG6L @ 0x30000A
  3775                           ;	unspecified, using default values
  3776                           ;	Write Protection bit
  3777                           ;	WRT0 = 0x1, unprogrammed default
  3778                           ;	Write Protection bit
  3779                           ;	WRT1 = 0x1, unprogrammed default
  3780   30000A                     	org	3145738
  3781   30000A  03                 	db	3
  3782                           
  3783                           ;Config register CONFIG6H @ 0x30000B
  3784                           ;	unspecified, using default values
  3785                           ;	Configuration Register Write Protection bit
  3786                           ;	WRTC = 0x1, unprogrammed default
  3787                           ;	Boot Block Write Protection bit
  3788                           ;	WRTB = 0x1, unprogrammed default
  3789                           ;	Data EEPROM Write Protection bit
  3790                           ;	WRTD = 0x1, unprogrammed default
  3791   30000B                     	org	3145739
  3792   30000B  E0                 	db	224
  3793                           
  3794                           ;Config register CONFIG7L @ 0x30000C
  3795                           ;	unspecified, using default values
  3796                           ;	Table Read Protection bit
  3797                           ;	EBTR0 = 0x1, unprogrammed default
  3798                           ;	Table Read Protection bit
  3799                           ;	EBTR1 = 0x1, unprogrammed default
  3800   30000C                     	org	3145740
  3801   30000C  03                 	db	3
  3802                           
  3803                           ;Config register CONFIG7H @ 0x30000D
  3804                           ;	unspecified, using default values
  3805                           ;	Boot Block Table Read Protection bit
  3806                           ;	EBTRB = 0x1, unprogrammed default
  3807   30000D                     	org	3145741
  3808   30000D  40                 	db	64
  3809                           tosu	equ	0xFFF
  3810                           tosh	equ	0xFFE
  3811                           tosl	equ	0xFFD
  3812                           stkptr	equ	0xFFC
  3813                           pclatu	equ	0xFFB
  3814                           pclath	equ	0xFFA
  3815                           pcl	equ	0xFF9
  3816                           tblptru	equ	0xFF8
  3817                           tblptrh	equ	0xFF7
  3818                           tblptrl	equ	0xFF6
  3819                           tablat	equ	0xFF5
  3820                           prodh	equ	0xFF4
  3821                           prodl	equ	0xFF3
  3822                           indf0	equ	0xFEF
  3823                           postinc0	equ	0xFEE
  3824                           postdec0	equ	0xFED
  3825                           preinc0	equ	0xFEC
  3826                           plusw0	equ	0xFEB
  3827                           fsr0h	equ	0xFEA
  3828                           fsr0l	equ	0xFE9
  3829                           wreg	equ	0xFE8
  3830                           indf1	equ	0xFE7
  3831                           postinc1	equ	0xFE6
  3832                           postdec1	equ	0xFE5
  3833                           preinc1	equ	0xFE4
  3834                           plusw1	equ	0xFE3
  3835                           fsr1h	equ	0xFE2
  3836                           fsr1l	equ	0xFE1
  3837                           bsr	equ	0xFE0
  3838                           indf2	equ	0xFDF
  3839                           postinc2	equ	0xFDE
  3840                           postdec2	equ	0xFDD
  3841                           preinc2	equ	0xFDC
  3842                           plusw2	equ	0xFDB
  3843                           fsr2h	equ	0xFDA
  3844                           fsr2l	equ	0xFD9
  3845                           status	equ	0xFD8

Data Sizes:
    Strings     180
    Constant    12
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     18      54
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    TI_NewTimer@TimerHandle	PTR unsigned char  size(1) Largest target is 1
		 -> timer(COMRAM[1]), Timer(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_motorTeclado
    _motorTeclado->_GetTecla
    _initTeclado->_TI_NewTimer
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Wr->_MFRC522_Rd
    _MFRC522_Wr->_delay_us

Critical Paths under _LowRSI in COMRAM

    None.

Critical Paths under _HighRSI in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowRSI in BANK0

    None.

Critical Paths under _HighRSI in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowRSI in BANK1

    None.

Critical Paths under _HighRSI in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1556
                            _TI_Init
                      _Terminal_Init
                           _initRFID
                        _initTeclado
                       _motorTeclado
 ---------------------------------------------------------------------------------
 (1) _motorTeclado                                         1     1      0     127
                                             17 COMRAM     1     1      0
                           _GetTecla
                          _ReadFilas
                         _TI_GetTics
                       _TI_ResetTics
                          _showTecla
                      _writeColumnas
 ---------------------------------------------------------------------------------
 (2) _writeColumnas                                        2     2      0      15
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _showTecla                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TI_ResetTics                                         1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TI_GetTics                                          13     9      4      52
                                              1 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _ReadFilas                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetTecla                                            16    16      0      45
                                              1 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (1) _initTeclado                                          0     0      0     113
                        _TI_NewTimer
                   _initPortsTeclado
 ---------------------------------------------------------------------------------
 (2) _initPortsTeclado                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TI_NewTimer                                          3     2      1     113
                                              1 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initRFID                                             0     0      0    1271
                 _InitPortDirections
                       _MFRC522_Init
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Init                                         0     0      0    1271
                 _MFRC522_AntennaOff
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Reset                                        0     0      0     245
                         _MFRC522_Wr
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntennaOn                                    0     0      0     404
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      2     1      1     404
                                             11 COMRAM     2     1      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_AntennaOff                                   0     0      0     407
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1     407
                                             11 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1     215
                                              6 COMRAM     5     4      1
                         _MFRC522_Rd (ARG)
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             5     5      0      30
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           5     5      0     105
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _InitPortDirections                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Terminal_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TI_Init                                              1     1      0      45
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowRSI                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighRSI                                              0     0      0       0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (9) _RSI_Timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TI_Init
   _Terminal_Init
   _initRFID
     _InitPortDirections
     _MFRC522_Init
       _MFRC522_AntennaOff
         _MFRC522_Clear_Bit
           _MFRC522_Rd
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
             _delay_us (ARG)
       _MFRC522_AntennaOn
         _MFRC522_Set_Bit
           _MFRC522_Rd
           _MFRC522_Wr
       _MFRC522_Reset
         _MFRC522_Wr
         _delay_us
       _MFRC522_Wr
   _initTeclado
     _TI_NewTimer
     _initPortsTeclado
   _motorTeclado
     _GetTecla
     _ReadFilas
     _TI_GetTics
     _TI_ResetTics
     _showTecla
     _writeColumnas

 _LowRSI (ROOT)

 _HighRSI (ROOT)
   _RSI_Timer0

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             511      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     18      54     42.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll          1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      54      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Feb 28 23:14:26 2025

     __end_ofGetTecla@F2722 020D                  _RSI_Timer0 0938                 MFRC522_Rd@i 002A  
               MFRC522_Wr@i 002F                          l71 082A                          l64 0790  
                        l58 0894                          l68 08E2                          u10 0860  
                        u11 085C                          u20 067E                          u21 0676  
                        u40 06A6                          u41 06A2                          u50 06C0  
                        u51 06BA                          u60 06D8                          u61 06D4  
                        u38 0680                          u56 06C2                  _TI_GetTics 07E0  
                        bsr 0FE0        ??_InitPortDirections 0026                         l112 09E4  
                       l202 06AA                         l210 0650                         l203 06D8  
                       l211 0654                         l115 0978                         l204 06DE  
                       l220 08BE                         l214 0936                         l118 09AA  
                       l223 09B6                         l217 098C                         l161 04F0  
                       l226 09C2                         l229 07DE                         l157 073A  
                       l149 04E8                         l191 09CE                         l167 05AC  
                       l169 053A                         l178 09DE                         l195 0834  
                       l197 0860                         l455 099E                         l299 09D8  
                       u300 070C                         u301 0708                         u310 0726  
                       u311 0722                         u320 0592                         u290 06F2  
                       u291 06EE                         u490 0884                         u491 0880  
                       wreg 0FE8              ??_MFRC522_Init 0033                        l1200 0692  
                      l1210 06AC                        l1202 0694                        l1212 06C4  
                      l1204 0696                        l2100 097C                        l1214 06C6  
                      l1206 06A6                        l2110 09AC                        l2102 0896  
                      l1216 06C8                        l2112 09B8                        l2104 0898  
                      l2200 073C                        l1400 09E0                        l1218 06DC  
                      l2106 089E                        l2210 0786                        l2202 0742  
                      l1410 09A8                        l1180 0838                        l2060 05BC  
                      l2108 08A6                        l2220 0792                        l1404 09A0  
                      l1420 070C                        l1412 06E0                        l1190 0668  
                      l1182 0658                        l2070 05E6                        l2054 05B0  
                      l2222 0796                        l2206 075A                        l1406 09A4  
                      l1430 04F6                        l2214 07E2                        l1422 0714  
                      l1414 06E2                        l1600 0874                        l1184 0662  
                      l1176 082E                        l2080 0606                        l2072 05EC  
                      l2056 05B8                        l2208 0776                        l1408 09A6  
                      l1432 04FE                        l2216 07F6                        l1424 0726  
                      l1416 06F2                        l2400 03D8                        l1602 0884  
                      l1186 0664                        l1178 0836                        l2090 0636  
                      l2074 05EE                        l2066 05C0                        l2058 05BA  
                      l2330 096C                        l1434 0506                        l1442 0514  
                      l1426 072A                        l1418 06FA                        l2410 0418  
                      l2402 03DC                        l1604 0890                        l1196 066C  
                      l1188 0666                        l2092 0638                        l2084 060A  
                      l2076 05F4                        l2068 05E0                        l2332 096E  
                      l1444 0540                        l1436 050E                        l1428 04EA  
                      l2420 044C                        l2412 042A                        l2404 03E0  
                      l2340 02C2                        l1606 0892                        l1622 098E  
                      l1198 068C                        l2094 063E                        l2086 062A  
                      l2078 05F6                        l2334 0970                        l2326 0966  
                      l1446 0548                        l1454 0550                        l1390 08C4  
                      l2430 0494                        l2422 045C                        l2414 0430  
                      l2406 03E8                        l2350 02EC                        l2342 02CC  
                      l2510 08F6                        l2502 08E4                        l1624 099A  
                      l2096 0640                        l2088 0630                        l2336 09D0  
                      l2328 096A                        l1456 0584                        l1392 08E0  
                      l2432 0498                        l2416 0438                        l2408 03F8  
                      l2360 031E                        l2352 02FC                        l2344 02DC  
                      l2512 08F8                        l2504 08EC                        l1626 099C  
                      l2098 0920                        l2338 09D4                        l1458 059C  
                      l1466 09DA                        l2426 0482                        l2370 0344  
                      l2362 0322                        l2354 0302                        l2346 02E0  
                      l2506 08F0                        l1468 09C4                        l1388 08C2  
                      l2428 0492                        l2380 0372                        l2372 0354  
                      l2364 032A                        l2356 030A                        l2348 02E4  
                      l2436 04A0                        l2508 08F4                        l1590 0862  
                      l2382 0376                        l2366 033A                        l2358 031A  
                      l2438 04D6                        l2384 037C                        l2376 035E  
                      l2394 0396                        l2386 0382                        l2378 036E  
                      l1596 0864                        l2396 03A6                        l1598 0872  
                      l2398 03C6                        l2656 0566                 _TI_NewTimer 073C  
                      STR_1 02BB                        STR_3 0292                        STR_4 02A2  
                      STR_6 0280                        STR_7 0267                        STR_8 024C  
                      STR_9 020D                        u1240 05D2                        u1241 05CA  
                      u1260 0606                        u1261 0602                        u1270 061C  
                      u1430 0756                        _LATB 0F8A                        u1271 0614  
                      u1431 0752                        _LATC 0F8B                        u1440 0776  
                      u1600 033A                        _LATD 0F8C                        u1441 0772  
                      u1601 0336                        u1290 0650                        u1258 05D4  
                      u1610 0354                        u1291 064C                        u1611 0350  
                      u1700 0448                        u1620 036E                        u1701 0444  
                      u1621 036A                        u1710 045C                        u1630 0392  
                      u1711 0458                        u1631 038E                        u1288 061E  
                      u1720 047E                        u1640 03A6                        u1721 047A  
                      u1641 03A2                        u1730 0492                        u1650 03C6  
                      u1570 02DC                        u1731 048E                        u1651 03C2  
                      u1571 02D8                        u1660 03D8                        u1580 02FC  
                      u1661 03D4                        u1581 02F8                        u1670 03F8  
                      u1590 031A                        u1671 03F4                        u1591 0316  
                      u1680 0418                        u1681 0414                        u1690 042A  
                      u1691 0426                        i1l27 001E                        i2l22 0962  
                      i2l53 094E                        _TMR0 0FD6                        _Tics 0015  
                      _Rows 001E                        _main 08E4                        fsr2h 0FDA  
                      indf2 0FDF                        fsr2l 0FD9                        btemp 0037  
           __end_of_TI_Init 0896                        prodh 0FF4                        prodl 0FF3  
                      start 0026             __end_of_HighRSI 0966                ___param_bank 0000  
           ??_MFRC522_Reset 0030                ?_initTeclado 0025                       ?_main 0025  
                     STR_10 02B2                       STR_11 022D                       _T0CON 0FD5  
                     _RCREG 0FAE                       _RCSTA 0FAB                       _SPBRG 0FAF  
                     _PORTD 0F83                       _TRISB 0F93                       _TRISD 0F95  
                     _TXREG 0FAD                       _TXSTA 0FAC                       _Filas 0022  
                     _Timer 0023                _TI_ResetTics 08C0                       _tecla 0020  
                     _timer 0024                       tablat 0FF5           _MFRC522_Clear_Bit 091E  
                     ttemp5 0038                       ttemp6 003B                       ttemp7 003F  
                     status 0FD8                       wtemp8 0038          ?_MFRC522_Clear_Bit 0030  
          __end_of_GetTecla 05AE           _MFRC522_AntennaOn 09AC             __initialization 0904  
              __end_of_main 0904          ?_MFRC522_AntennaOn 0025         ??_MFRC522_Clear_Bit 0031  
               ?_RSI_Timer0 0025              TI_Init@counter 0026            _initPortsTeclado 09A0  
               ?_TI_GetTics 0026                      ??_main 0037         ??_MFRC522_AntennaOn 0032  
             __activetblptr 0002          MFRC522_Rd@ucResult 0029             MFRC522_Wr@value 002B  
 __end_of_MFRC522_Clear_Bit 0938                   ??_TI_Init 0026                      i2l1802 0950  
                    i2l1804 095E                      i2l1584 0938                      i2l1586 0940  
                    i2l1588 0942                      _TMR0IF 7F92                   ??_HighRSI 0025  
 __end_of_MFRC522_AntennaOn 09B8            __end_of_delay_us 0862                      _LowRSI 0018  
                    _RowAct 001C                      _Timers 0001        __end_of_MFRC522_Init 07E0  
          __end_of_initRFID 09DA          motorTerminal@state 0019                      clear_0 090A  
                    isa$std 0001                __mediumconst 0200                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8       __end_of_Terminal_Init 09A0  
                __accesstop 0080     __end_of__initialization 0910             delay_us@howMany 0029  
             ___rparam_used 0001                ??_MFRC522_Rd 0026                ??_MFRC522_Wr 002C  
        _MFRC522_AntennaOff 09B8              __pcstackCOMRAM 0025         ?_MFRC522_AntennaOff 0025  
      TI_NewTimer@Comptador 0028           __end_of_ReadFilas 09E6            MFRC522_Rd@ucAddr 0028  
         motorTeclado@state 001F           ??_MFRC522_Set_Bit 0031          __end_of_MFRC522_Rd 06E0  
        __end_of_MFRC522_Wr 0656                   ?_GetTecla 0025        ??_MFRC522_AntennaOff 0033  
              ?_TI_NewTimer 0026      TI_NewTimer@TimerHandle 0026                     ?_LowRSI 0025  
          MFRC522_Wr@ucAddr 002E     TI_ResetTics@TimerHandle 0026               _writeColumnas 06E0  
                   _BAUDCON 0FB8                   ?_delay_us 0025                  ??_GetTecla 0026  
                   i2u96_40 095E                     i2u96_41 095A                     _TI_Init 0862  
  __end_of_initPortsTeclado 09AC                   ?_initRFID 0025                     _HighRSI 0008  
                   _Columns 001D                     __Hparam 0000                     __Lparam 0000  
              ??_RSI_Timer0 0025              ?_writeColumnas 0025                __psmallconst 0200  
              ??_TI_GetTics 002A                     __pcinit 0904       __end_of_MFRC522_Reset 08C0  
                   __ramtop 0200                     __ptext0 08E4                     __ptext1 02C2  
                   __ptext2 06E0                     __ptext3 09DA                     __ptext4 08C0  
                   __ptext5 07E0                     __ptext6 09E0                     __ptext7 04EA  
                   __ptext8 0966                     __ptext9 09A0               ?_motorTeclado 0025  
                ??_delay_us 0026                _MFRC522_Init 0792              __pintcode_body 0950  
      end_of_initialization 0910                  ??_initRFID 0033          __end_of_RSI_Timer0 0950  
             __Lmediumconst 0000                     int_func 0950          __end_of_TI_GetTics 082C  
         __end_of_showTecla 09E0                     postinc0 0FEE                     postinc2 0FDE  
             GetTecla@F2722 0201              ??_motorTeclado 0036                   _PORTBbits 0F81  
                 _PORTCbits 0F82       TI_GetTics@TimerHandle 0032                   _TRISBbits 0F93  
                 _TRISCbits 0F94           MFRC522_Rd@Address 0027             ??_writeColumnas 0026  
            __end_of_LowRSI 0026             _MFRC522_Set_Bit 097A                   _ColumnAct 001B  
       start_initialization 0904                   _ReadFilas 09E0                    ??_LowRSI 0025  
             ??_initTeclado 0029                 __pbssCOMRAM 0001                  ?_ReadFilas 0025  
         MFRC522_Wr@Address 002D               ?_TI_ResetTics 0025                    ?_TI_Init 0025  
         ?_initPortsTeclado 0025                    ?_HighRSI 0025        __end_of_motorTeclado 04EA  
        ??_initPortsTeclado 0026     __end_of_MFRC522_Set_Bit 098E         MFRC522_Set_Bit@addr 0031  
          writeColumnas@out 0027         MFRC522_Set_Bit@mask 0030                   __pintcode 0008  
__end_of_InitPortDirections 09D0                 __pintcodelo 0018                 __smallconst 0200  
       __end_of_initTeclado 097A              ??_TI_ResetTics 0026               _Terminal_Init 098E  
                  _LATBbits 0F8A                    _LATCbits 0F8B                   delay_us@x 002A  
           _hashtag_pressed 001A                    _PIR1bits 0F9E                   _showTecla 09DA  
              GetTecla@fila 0035                 ??_ReadFilas 0026                    _GetTecla 04EA  
            ?_Terminal_Init 0025                    _Columnas 0021            ?_MFRC522_Set_Bit 0030  
                  __Hrparam 0000       MFRC522_Clear_Bit@addr 0032       MFRC522_Clear_Bit@mask 0030  
                  __Lrparam 0000                  ?_showTecla 0025                 _initTeclado 0966  
                  _delay_us 082C                    __ptext10 073C                    __ptext11 09D0  
                  __ptext20 0656                    __ptext12 0792                    __ptext21 09C4  
                  __ptext13 0896                    __ptext22 098E                    __ptext14 09AC  
                  __ptext23 0862                    __ptext15 097A                    __ptext16 09B8  
                  __ptext17 091E                    __ptext26 0938                    __ptext18 05AE  
                  __ptext19 082C               ??_TI_NewTimer 0027                    _initRFID 09D0  
                _MFRC522_Rd 0656                  _MFRC522_Wr 05AE                    isa$xinst 0000  
      __end_of_TI_ResetTics 08E4                    int$flags 0037       __end_of_writeColumnas 073C  
             _MFRC522_Reset 0896                _motorTeclado 02C2                  _INTCONbits 0FF2  
           ??_Terminal_Init 0026   TI_GetTics@CopiaTicsActual 002E                    intlevel1 0000  
                  intlevel2 0000         __end_of_TI_NewTimer 0792                 ??_showTecla 0026  
            ?_MFRC522_Reset 0025          _InitPortDirections 09C4  __end_of_MFRC522_AntennaOff 09C4  
             ?_MFRC522_Init 0025         ?_InitPortDirections 0025             GetTecla@columna 0034  
               ?_MFRC522_Rd 0025                 ?_MFRC522_Wr 002B              GetTecla@keymap 0028  
