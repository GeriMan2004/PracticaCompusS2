Version 4.0 HI-TECH Software Intermediate Code
"8 C:\Program Files\Microchip\xc8\v3.00\pic\include/builtins.h
[v ___nop `(v ~T0 @X0 0 ef ]
[p i ___nop ]
"1216 C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1216:     struct {
[s S49 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S49 . LATC0 LATC1 LATC2 LATC3 LATC4 LATC5 LATC6 LATC7 ]
"1226
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1226:     struct {
[s S50 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S50 . LC0 LC1 LC2 LC3 LC4 LC5 LC6 LC7 ]
"1215
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1215: typedef union {
[u S48 `S49 1 `S50 1 ]
[n S48 . . . ]
"1237
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1237: extern volatile LATCbits_t LATCbits __attribute__((address(0xF8B)));
[v _LATCbits `VS48 ~T0 @X0 0 e@3979 ]
"467
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 467:     struct {
[s S21 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S21 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"477
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 477:     struct {
[s S22 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S22 . T1OSO T1OSI CCP1 SCK SDI SDO TX RX ]
"487
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 487:     struct {
[s S23 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S23 . T13CKI CCP2 P1A SCL SDA . CK DT ]
"497
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 497:     struct {
[s S24 :1 `uc 1 ]
[n S24 . T1CKI ]
"500
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 500:     struct {
[s S25 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S25 . . PA2 PA1 ]
"466
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 466: typedef union {
[u S20 `S21 1 `S22 1 `S23 1 `S24 1 `S25 1 ]
[n S20 . . . . . . ]
"506
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 506: extern volatile PORTCbits_t PORTCbits __attribute__((address(0xF82)));
[v _PORTCbits `VS20 ~T0 @X0 0 e@3970 ]
"1941
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1941:     struct {
[s S70 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S70 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1951
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1951:     struct {
[s S71 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S71 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"1940
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1940: typedef union {
[u S69 `S70 1 `S71 1 ]
[n S69 . . . ]
"1962
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1962: extern volatile TRISCbits_t TRISCbits __attribute__((address(0xF94)));
[v _TRISCbits `VS69 ~T0 @X0 0 e@3988 ]
"10 ./TAD_DATOS.h
[; ;./TAD_DATOS.h: 10: void getActualUID(unsigned char* UID, unsigned char userIndex);
[v _getActualUID `(v ~T0 @X0 0 ef2`*uc`uc ]
"14
[; ;./TAD_DATOS.h: 14: void setCurrentUser(char UID0, char UID1, char UID2, char UID3, char UID4);
[v _setCurrentUser `(v ~T0 @X0 0 ef5`uc`uc`uc`uc`uc ]
"52 C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 52: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"284
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 284: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"463
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 463: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"643
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 643: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"785
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 785: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"988
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 988: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"1100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1100: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"1212
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1212: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1324
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1324: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1436
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1436: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1488
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1488: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1493
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1493: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1710
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1710: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1715
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1715: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1932
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1932: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1937
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 1937: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"2154
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2154: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"2159
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2159: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2376
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2376: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2381
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2381: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2540
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2540: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"2605
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2605: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2682
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2682: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2759
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2759: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2836
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2836: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2902
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2902: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2968
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 2968: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"3034
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3034: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"3100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3100: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"3107
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3107: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"3114
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3114: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"3121
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3121: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"3126
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3126: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"3331
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3331: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"3336
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3336: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3587
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3587: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3592
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3592: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3599
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3599: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3604
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3604: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3611
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3611: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3616
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3616: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3623
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3623: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"3630
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3630: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3742
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3742: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3749
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3749: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3756
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3756: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3763
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3763: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"3853
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3853: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"3932
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 3932: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"4014
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4014: __asm("ECCP1DEL equ 0FB7h");
[; <" ECCP1DEL equ 0FB7h ;# ">
"4019
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4019: __asm("PWM1CON equ 0FB7h");
[; <" PWM1CON equ 0FB7h ;# ">
"4152
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4152: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"4157
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4157: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"4332
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4332: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"4411
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4411: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"4418
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4418: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"4425
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4425: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"4432
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4432: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"4437
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4437: __asm("ECCP1CON equ 0FBDh");
[; <" ECCP1CON equ 0FBDh ;# ">
"4624
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4624: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"4631
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4631: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"4638
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4638: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"4645
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4645: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"4716
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4716: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"4801
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4801: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"4920
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4920: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"4927
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4927: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"4934
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4934: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"4941
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 4941: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"5036
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5036: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"5106
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5106: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"5327
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5327: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"5334
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5334: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"5341
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5341: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"5439
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5439: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"5444
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5444: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"5549
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5549: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"5556
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5556: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"5659
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5659: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"5666
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5666: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"5673
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5673: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"5680
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5680: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"5814
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5814: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"5842
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5842: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"5847
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 5847: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"6100
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6100: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"6183
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6183: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"6260
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6260: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"6267
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6267: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"6274
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6274: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"6281
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6281: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"6352
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6352: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"6359
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6359: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"6366
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6366: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"6373
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6373: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"6380
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6380: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"6387
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6387: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"6394
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6394: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"6401
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6401: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"6408
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6408: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"6415
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6415: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"6422
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6422: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"6429
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6429: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"6436
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6436: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"6443
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6443: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"6450
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6450: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"6457
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6457: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"6464
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6464: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"6471
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6471: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"6483
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6483: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"6490
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6490: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"6497
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6497: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"6504
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6504: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"6511
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6511: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"6518
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6518: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"6525
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6525: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"6532
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6532: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"6539
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6539: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"6631
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6631: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"6701
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6701: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"6818
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6818: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"6825
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6825: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"6832
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6832: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"6839
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6839: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"6848
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6848: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"6855
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6855: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"6862
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6862: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"6869
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6869: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"6878
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6878: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"6885
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6885: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"6892
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6892: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"6899
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6899: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"6906
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6906: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"6913
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6913: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"6987
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6987: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"6994
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 6994: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"7001
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 7001: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"7008
[; ;C:\Program Files\Microchip\xc8\v3.00\pic\include\proc/pic18f4321.h: 7008: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"17 TAD_RFID.c
[; ;TAD_RFID.c: 17: static char state_read = 0;
[v _state_read `uc ~T0 @X0 1 s ]
[i _state_read
-> -> 0 `i `uc
]
"18
[; ;TAD_RFID.c: 18: static char state_write = 0;
[v _state_write `uc ~T0 @X0 1 s ]
[i _state_write
-> -> 0 `i `uc
]
"23
[; ;TAD_RFID.c: 23: void delay_us (char howMany) {
[v _delay_us `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _delay_us ]
[v _howMany `uc ~T0 @X0 1 r1 ]
[f ]
"24
[; ;TAD_RFID.c: 24:     char x = howMany * 8;
[v _x `uc ~T0 @X0 1 a ]
[e = _x -> * -> _howMany `i -> 8 `i `uc ]
"25
[; ;TAD_RFID.c: 25:     while(x--) __nop();
[e $U 303  ]
[e :U 304 ]
[e ( ___nop ..  ]
[e :U 303 ]
[e $ != -> -- _x -> -> 1 `i `uc `i -> 0 `i 304  ]
[e :U 305 ]
"26
[; ;TAD_RFID.c: 26: }
[e :UE 302 ]
}
"29
[; ;TAD_RFID.c: 29: void processBit(unsigned char *val, char *bit_count, char *state, char next_state) {
[v _processBit `(v ~T0 @X0 1 ef4`*uc`*uc`*uc`uc ]
{
[e :U _processBit ]
[v _val `*uc ~T0 @X0 1 r1 ]
[v _bit_count `*uc ~T0 @X0 1 r2 ]
[v _state `*uc ~T0 @X0 1 r3 ]
[v _next_state `uc ~T0 @X0 1 r4 ]
[f ]
"30
[; ;TAD_RFID.c: 30:     LATCbits.LATC1 = ((*val & 0x80) != 0);
[e = . . _LATCbits 0 1 -> -> != & -> *U _val `i -> 128 `i -> 0 `i `i `uc ]
"31
[; ;TAD_RFID.c: 31:     LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"32
[; ;TAD_RFID.c: 32:     *val <<= 1;
[e =<< *U _val -> -> 1 `i `uc ]
"33
[; ;TAD_RFID.c: 33:     delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"34
[; ;TAD_RFID.c: 34:     LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"35
[; ;TAD_RFID.c: 35:     delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"36
[; ;TAD_RFID.c: 36:     if (++(*bit_count) == 8) {
[e $ ! == -> =+ *U _bit_count -> -> 1 `i `uc `i -> 8 `i 307  ]
{
"37
[; ;TAD_RFID.c: 37:         *bit_count = 0;
[e = *U _bit_count -> -> 0 `i `uc ]
"38
[; ;TAD_RFID.c: 38:         *state = next_state;
[e = *U _state _next_state ]
"39
[; ;TAD_RFID.c: 39:     }
}
[e :U 307 ]
"40
[; ;TAD_RFID.c: 40: }
[e :UE 306 ]
}
"43
[; ;TAD_RFID.c: 43: char motor_Write(char addr, char value) {
[v _motor_Write `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _motor_Write ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
[f ]
"44
[; ;TAD_RFID.c: 44:     static char bit_count = 0;
[v F2731 `uc ~T0 @X0 1 s bit_count ]
[i F2731
-> -> 0 `i `uc
]
"45
[; ;TAD_RFID.c: 45:     static unsigned char ucAddr;
[v F2732 `uc ~T0 @X0 1 s ucAddr ]
"46
[; ;TAD_RFID.c: 46:     static unsigned char ucValue;
[v F2733 `uc ~T0 @X0 1 s ucValue ]
"48
[; ;TAD_RFID.c: 48:     switch (state_write) {
[e $U 310  ]
{
"49
[; ;TAD_RFID.c: 49:         case 0:
[e :U 311 ]
"50
[; ;TAD_RFID.c: 50:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"51
[; ;TAD_RFID.c: 51:             LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"52
[; ;TAD_RFID.c: 52:             ucAddr = ((addr << 1) & 0x7E);
[e = F2732 -> & << -> _addr `i -> 1 `i -> 126 `i `uc ]
"53
[; ;TAD_RFID.c: 53:             ucValue = value;
[e = F2733 -> _value `uc ]
"54
[; ;TAD_RFID.c: 54:             bit_count = 0;
[e = F2731 -> -> 0 `i `uc ]
"55
[; ;TAD_RFID.c: 55:             state_write = 1;
[e = _state_write -> -> 1 `i `uc ]
"56
[; ;TAD_RFID.c: 56:             break;
[e $U 309  ]
"58
[; ;TAD_RFID.c: 58:         case 1:
[e :U 312 ]
"59
[; ;TAD_RFID.c: 59:             processBit(&ucAddr, &bit_count, &state_write, 2);
[e ( _processBit (4 , , , &U F2732 &U F2731 &U _state_write -> -> 2 `i `uc ]
"60
[; ;TAD_RFID.c: 60:             break;
[e $U 309  ]
"62
[; ;TAD_RFID.c: 62:         case 2:
[e :U 313 ]
"63
[; ;TAD_RFID.c: 63:             processBit(&ucValue, &bit_count, &state_write, 0);
[e ( _processBit (4 , , , &U F2733 &U F2731 &U _state_write -> -> 0 `i `uc ]
"64
[; ;TAD_RFID.c: 64:             if (state_write == 0) {
[e $ ! == -> _state_write `i -> 0 `i 314  ]
{
"65
[; ;TAD_RFID.c: 65:                 LATCbits.LATC3 = 1;
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
"66
[; ;TAD_RFID.c: 66:                 LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"67
[; ;TAD_RFID.c: 67:                 return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 308  ]
"68
[; ;TAD_RFID.c: 68:             }
}
[e :U 314 ]
"69
[; ;TAD_RFID.c: 69:             break;
[e $U 309  ]
"70
[; ;TAD_RFID.c: 70:     }
}
[e $U 309  ]
[e :U 310 ]
[e [\ _state_write , $ -> 0 `i 311
 , $ -> 1 `i 312
 , $ -> 2 `i 313
 309 ]
[e :U 309 ]
"71
[; ;TAD_RFID.c: 71:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 308  ]
"72
[; ;TAD_RFID.c: 72: }
[e :UE 308 ]
}
"75
[; ;TAD_RFID.c: 75: char motor_Read(char addr) {
[v _motor_Read `(uc ~T0 @X0 1 ef1`uc ]
{
[e :U _motor_Read ]
[v _addr `uc ~T0 @X0 1 r1 ]
[f ]
"76
[; ;TAD_RFID.c: 76:     static char bit_count = 0;
[v F2736 `uc ~T0 @X0 1 s bit_count ]
[i F2736
-> -> 0 `i `uc
]
"77
[; ;TAD_RFID.c: 77:     static unsigned char ucAddr;
[v F2737 `uc ~T0 @X0 1 s ucAddr ]
"78
[; ;TAD_RFID.c: 78:     static unsigned char ucResult;
[v F2738 `uc ~T0 @X0 1 s ucResult ]
"79
[; ;TAD_RFID.c: 79:     static unsigned int timeout_counter = 0;
[v F2739 `ui ~T0 @X0 1 s timeout_counter ]
[i F2739
-> -> 0 `i `ui
]
"80
[; ;TAD_RFID.c: 80:     static unsigned int MAX_TIMEOUT = 1000;
[v F2740 `ui ~T0 @X0 1 s MAX_TIMEOUT ]
[i F2740
-> -> 1000 `i `ui
]
"82
[; ;TAD_RFID.c: 82:     if (++timeout_counter > MAX_TIMEOUT) {
[e $ ! > =+ F2739 -> -> 1 `i `ui F2740 316  ]
{
"83
[; ;TAD_RFID.c: 83:         LATCbits.LATC3 = LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 3 = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"84
[; ;TAD_RFID.c: 84:         state_read = 0;
[e = _state_read -> -> 0 `i `uc ]
"85
[; ;TAD_RFID.c: 85:         timeout_counter = 0;
[e = F2739 -> -> 0 `i `ui ]
"86
[; ;TAD_RFID.c: 86:         return 0xFF;
[e ) -> -> 255 `i `uc ]
[e $UE 315  ]
"87
[; ;TAD_RFID.c: 87:     }
}
[e :U 316 ]
"89
[; ;TAD_RFID.c: 89:     switch(state_read) {
[e $U 318  ]
{
"90
[; ;TAD_RFID.c: 90:         case 0:
[e :U 319 ]
"91
[; ;TAD_RFID.c: 91:             timeout_counter = 0;
[e = F2739 -> -> 0 `i `ui ]
"92
[; ;TAD_RFID.c: 92:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"93
[; ;TAD_RFID.c: 93:             LATCbits.LATC3 = 0;
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
"94
[; ;TAD_RFID.c: 94:             ucAddr = ((addr<<1) & 0x7E) | 0x80;
[e = F2737 -> | & << -> _addr `i -> 1 `i -> 126 `i -> 128 `i `uc ]
"95
[; ;TAD_RFID.c: 95:             ucResult = 0;
[e = F2738 -> -> 0 `i `uc ]
"96
[; ;TAD_RFID.c: 96:             bit_count = 0;
[e = F2736 -> -> 0 `i `uc ]
"97
[; ;TAD_RFID.c: 97:             state_read = 1;
[e = _state_read -> -> 1 `i `uc ]
"98
[; ;TAD_RFID.c: 98:             return 0xFE;
[e ) -> -> 254 `i `uc ]
[e $UE 315  ]
"100
[; ;TAD_RFID.c: 100:         case 1:
[e :U 320 ]
"101
[; ;TAD_RFID.c: 101:             processBit(&ucAddr, &bit_count, &state_read, 2);
[e ( _processBit (4 , , , &U F2737 &U F2736 &U _state_read -> -> 2 `i `uc ]
"102
[; ;TAD_RFID.c: 102:             return 0xFE;
[e ) -> -> 254 `i `uc ]
[e $UE 315  ]
"104
[; ;TAD_RFID.c: 104:         case 2:
[e :U 321 ]
"105
[; ;TAD_RFID.c: 105:             LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"106
[; ;TAD_RFID.c: 106:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"107
[; ;TAD_RFID.c: 107:             ucResult = (ucResult << 1) | PORTCbits.RC0;
[e = F2738 -> | << -> F2738 `i -> 1 `i -> . . _PORTCbits 0 0 `i `uc ]
"108
[; ;TAD_RFID.c: 108:             LATCbits.LATC2 = 0;
[e = . . _LATCbits 0 2 -> -> 0 `i `uc ]
"109
[; ;TAD_RFID.c: 109:             delay_us(5);
[e ( _delay_us (1 -> -> 5 `i `uc ]
"111
[; ;TAD_RFID.c: 111:             if (++bit_count >= 8) {
[e $ ! >= -> =+ F2736 -> -> 1 `i `uc `i -> 8 `i 322  ]
{
"112
[; ;TAD_RFID.c: 112:                 LATCbits.LATC3 = LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 3 = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"113
[; ;TAD_RFID.c: 113:                 state_read = 0;
[e = _state_read -> -> 0 `i `uc ]
"114
[; ;TAD_RFID.c: 114:                 timeout_counter = 0;
[e = F2739 -> -> 0 `i `ui ]
"115
[; ;TAD_RFID.c: 115:                 return (ucResult == 0xFE || ucResult == 0xFF) ? 0xFD : ucResult;
[e ) -> ? || == -> F2738 `i -> 254 `i == -> F2738 `i -> 255 `i : -> 253 `i -> F2738 `i `uc ]
[e $UE 315  ]
"116
[; ;TAD_RFID.c: 116:             }
}
[e :U 322 ]
"117
[; ;TAD_RFID.c: 117:             return 0xFE;
[e ) -> -> 254 `i `uc ]
[e $UE 315  ]
"118
[; ;TAD_RFID.c: 118:     }
}
[e $U 317  ]
[e :U 318 ]
[e [\ _state_read , $ -> 0 `i 319
 , $ -> 1 `i 320
 , $ -> 2 `i 321
 317 ]
[e :U 317 ]
"119
[; ;TAD_RFID.c: 119:     return 0xFE;
[e ) -> -> 254 `i `uc ]
[e $UE 315  ]
"120
[; ;TAD_RFID.c: 120: }
[e :UE 315 ]
}
"123
[; ;TAD_RFID.c: 123: void initRFID() {
[v _initRFID `(v ~T0 @X0 1 ef ]
{
[e :U _initRFID ]
[f ]
"125
[; ;TAD_RFID.c: 125:     TRISCbits.TRISC0 = 1;
[e = . . _TRISCbits 0 0 -> -> 1 `i `uc ]
"126
[; ;TAD_RFID.c: 126:     TRISCbits.TRISC1 = 0;
[e = . . _TRISCbits 0 1 -> -> 0 `i `uc ]
"127
[; ;TAD_RFID.c: 127:     TRISCbits.TRISC2 = 0;
[e = . . _TRISCbits 0 2 -> -> 0 `i `uc ]
"128
[; ;TAD_RFID.c: 128:     TRISCbits.TRISC3 = 0;
[e = . . _TRISCbits 0 3 -> -> 0 `i `uc ]
"129
[; ;TAD_RFID.c: 129:     TRISCbits.TRISC4 = 0;
[e = . . _TRISCbits 0 4 -> -> 0 `i `uc ]
"131
[; ;TAD_RFID.c: 131:     state_read = state_write = 0;
[e = _state_read = _state_write -> -> 0 `i `uc ]
"132
[; ;TAD_RFID.c: 132:     LATCbits.LATC3 = LATCbits.LATC2 = 1;
[e = . . _LATCbits 0 3 = . . _LATCbits 0 2 -> -> 1 `i `uc ]
"133
[; ;TAD_RFID.c: 133:     LATCbits.LATC4 = 1;
[e = . . _LATCbits 0 4 -> -> 1 `i `uc ]
"134
[; ;TAD_RFID.c: 134:     delay_us(1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"135
[; ;TAD_RFID.c: 135:     LATCbits.LATC4 = 0;
[e = . . _LATCbits 0 4 -> -> 0 `i `uc ]
"136
[; ;TAD_RFID.c: 136:     delay_us(1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"137
[; ;TAD_RFID.c: 137:     LATCbits.LATC4 = 1;
[e = . . _LATCbits 0 4 -> -> 1 `i `uc ]
"138
[; ;TAD_RFID.c: 138:     delay_us(1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"141
[; ;TAD_RFID.c: 141:     while (!motor_Write(0x01, 0x0F)) { }
[e $U 324  ]
[e :U 325 ]
{
}
[e :U 324 ]
[e $ ! != -> ( _motor_Write (2 , -> -> 1 `i `uc -> -> 15 `i `uc `i -> 0 `i 325  ]
[e :U 326 ]
"142
[; ;TAD_RFID.c: 142:     delay_us(1);
[e ( _delay_us (1 -> -> 1 `i `uc ]
"145
[; ;TAD_RFID.c: 145:     while (!motor_Write(0x2A, 0x8D)) { }
[e $U 327  ]
[e :U 328 ]
{
}
[e :U 327 ]
[e $ ! != -> ( _motor_Write (2 , -> -> 42 `i `uc -> -> 141 `i `uc `i -> 0 `i 328  ]
[e :U 329 ]
"146
[; ;TAD_RFID.c: 146:     while (!motor_Write(0x2B, 0x3E)) { }
[e $U 330  ]
[e :U 331 ]
{
}
[e :U 330 ]
[e $ ! != -> ( _motor_Write (2 , -> -> 43 `i `uc -> -> 62 `i `uc `i -> 0 `i 331  ]
[e :U 332 ]
"147
[; ;TAD_RFID.c: 147:     while (!motor_Write(0x2D, 30)) { }
[e $U 333  ]
[e :U 334 ]
{
}
[e :U 333 ]
[e $ ! != -> ( _motor_Write (2 , -> -> 45 `i `uc -> -> 30 `i `uc `i -> 0 `i 334  ]
[e :U 335 ]
"148
[; ;TAD_RFID.c: 148:     while (!motor_Write(0x2C, 0)) { }
[e $U 336  ]
[e :U 337 ]
{
}
[e :U 336 ]
[e $ ! != -> ( _motor_Write (2 , -> -> 44 `i `uc -> -> 0 `i `uc `i -> 0 `i 337  ]
[e :U 338 ]
"149
[; ;TAD_RFID.c: 149:     while (!motor_Write(0x15, 0x40)) { }
[e $U 339  ]
[e :U 340 ]
{
}
[e :U 339 ]
[e $ ! != -> ( _motor_Write (2 , -> -> 21 `i `uc -> -> 64 `i `uc `i -> 0 `i 340  ]
[e :U 341 ]
"150
[; ;TAD_RFID.c: 150:     while (!motor_Write(0x11, 0x3D)) { }
[e $U 342  ]
[e :U 343 ]
{
}
[e :U 342 ]
[e $ ! != -> ( _motor_Write (2 , -> -> 17 `i `uc -> -> 61 `i `uc `i -> 0 `i 343  ]
[e :U 344 ]
"153
[; ;TAD_RFID.c: 153:     unsigned char regVal;
[v _regVal `uc ~T0 @X0 1 a ]
"154
[; ;TAD_RFID.c: 154:     do {
[e :U 347 ]
{
"155
[; ;TAD_RFID.c: 155:         regVal = motor_Read(0x14);
[e = _regVal -> ( _motor_Read (1 -> -> 20 `i `uc `uc ]
"156
[; ;TAD_RFID.c: 156:     } while (regVal == 0xFE);
}
[e $ == -> _regVal `i -> 254 `i 347  ]
[e :U 346 ]
"157
[; ;TAD_RFID.c: 157:     regVal |= 0x03;
[e =| _regVal -> -> 3 `i `uc ]
"158
[; ;TAD_RFID.c: 158:     while (!motor_Write(0x14, regVal)) { }
[e $U 348  ]
[e :U 349 ]
{
}
[e :U 348 ]
[e $ ! != -> ( _motor_Write (2 , -> -> 20 `i `uc -> _regVal `uc `i -> 0 `i 349  ]
[e :U 350 ]
"159
[; ;TAD_RFID.c: 159: }
[e :UE 323 ]
}
"161
[; ;TAD_RFID.c: 161: void motor_RFID(void) {
[v _motor_RFID `(v ~T0 @X0 1 ef ]
{
[e :U _motor_RFID ]
[f ]
"162
[; ;TAD_RFID.c: 162:     static char state = 0;
[v F2744 `uc ~T0 @X0 1 s state ]
[i F2744
-> -> 0 `i `uc
]
"163
[; ;TAD_RFID.c: 163:     static char substate = 0;
[v F2745 `uc ~T0 @X0 1 s substate ]
[i F2745
-> -> 0 `i `uc
]
"164
[; ;TAD_RFID.c: 164:     static char irqEn, waitIRq, n;
[v F2746 `uc ~T0 @X0 1 s irqEn ]
[v F2747 `uc ~T0 @X0 1 s waitIRq ]
[v F2748 `uc ~T0 @X0 1 s n ]
"165
[; ;TAD_RFID.c: 165:     static unsigned char i;
[v F2749 `uc ~T0 @X0 1 s i ]
"166
[; ;TAD_RFID.c: 166:     static char _status;
[v F2750 `uc ~T0 @X0 1 s _status ]
"167
[; ;TAD_RFID.c: 167:     static unsigned unLen;
[v F2751 `ui ~T0 @X0 1 s unLen ]
"168
[; ;TAD_RFID.c: 168:     static char TagType;
[v F2752 `uc ~T0 @X0 1 s TagType ]
"169
[; ;TAD_RFID.c: 169:     static unsigned char UID[6];
[v F2753 `uc ~T0 @X0 -> 6 `i s UID ]
"170
[; ;TAD_RFID.c: 170:     static unsigned char checksum;
[v F2754 `uc ~T0 @X0 1 s checksum ]
"171
[; ;TAD_RFID.c: 171:     static unsigned char allZero;
[v F2755 `uc ~T0 @X0 1 s allZero ]
"172
[; ;TAD_RFID.c: 172:     static unsigned char tempRegValue;
[v F2756 `uc ~T0 @X0 1 s tempRegValue ]
"173
[; ;TAD_RFID.c: 173:     static unsigned char lastBitsVal;
[v F2757 `uc ~T0 @X0 1 s lastBitsVal ]
"174
[; ;TAD_RFID.c: 174:     static unsigned char fifoLevel;
[v F2758 `uc ~T0 @X0 1 s fifoLevel ]
"175
[; ;TAD_RFID.c: 175:     static unsigned char backBitsCalc;
[v F2759 `uc ~T0 @X0 1 s backBitsCalc ]
"178
[; ;TAD_RFID.c: 178:     static char operation_pending = 0;
[v F2760 `uc ~T0 @X0 1 s operation_pending ]
[i F2760
-> -> 0 `i `uc
]
"179
[; ;TAD_RFID.c: 179:     static unsigned char addr;
[v F2761 `uc ~T0 @X0 1 s addr ]
"180
[; ;TAD_RFID.c: 180:     static unsigned char value;
[v F2762 `uc ~T0 @X0 1 s value ]
"181
[; ;TAD_RFID.c: 181:     unsigned char flag = 0;
[v _flag `uc ~T0 @X0 1 a ]
[e = _flag -> -> 0 `i `uc ]
"184
[; ;TAD_RFID.c: 184:     if (operation_pending == 1) {
[e $ ! == -> F2760 `i -> 1 `i 352  ]
{
"186
[; ;TAD_RFID.c: 186:         flag = motor_Read(addr);
[e = _flag -> ( _motor_Read (1 -> F2761 `uc `uc ]
"187
[; ;TAD_RFID.c: 187:         if (flag != 0xFE) {
[e $ ! != -> _flag `i -> 254 `i 353  ]
{
"188
[; ;TAD_RFID.c: 188:             tempRegValue = flag;
[e = F2756 _flag ]
"189
[; ;TAD_RFID.c: 189:             operation_pending = 0;
[e = F2760 -> -> 0 `i `uc ]
"190
[; ;TAD_RFID.c: 190:         } else {
}
[e $U 354  ]
[e :U 353 ]
{
"191
[; ;TAD_RFID.c: 191:             return;
[e $UE 351  ]
"192
[; ;TAD_RFID.c: 192:         }
}
[e :U 354 ]
"193
[; ;TAD_RFID.c: 193:     } else if (operation_pending == 2) {
}
[e $U 355  ]
[e :U 352 ]
[e $ ! == -> F2760 `i -> 2 `i 356  ]
{
"195
[; ;TAD_RFID.c: 195:         flag = motor_Write(addr, value);
[e = _flag -> ( _motor_Write (2 , -> F2761 `uc -> F2762 `uc `uc ]
"196
[; ;TAD_RFID.c: 196:         if (flag != 0) {
[e $ ! != -> _flag `i -> 0 `i 357  ]
{
"197
[; ;TAD_RFID.c: 197:             operation_pending = 0;
[e = F2760 -> -> 0 `i `uc ]
"198
[; ;TAD_RFID.c: 198:         } else {
}
[e $U 358  ]
[e :U 357 ]
{
"199
[; ;TAD_RFID.c: 199:             return;
[e $UE 351  ]
"200
[; ;TAD_RFID.c: 200:         }
}
[e :U 358 ]
"201
[; ;TAD_RFID.c: 201:     } else {
}
[e $U 359  ]
[e :U 356 ]
{
"203
[; ;TAD_RFID.c: 203:         switch(state) {
[e $U 361  ]
{
"205
[; ;TAD_RFID.c: 205:             case 0:
[e :U 362 ]
"206
[; ;TAD_RFID.c: 206:                 switch(substate) {
[e $U 364  ]
{
"207
[; ;TAD_RFID.c: 207:                     case 0:
[e :U 365 ]
"208
[; ;TAD_RFID.c: 208:                         addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"209
[; ;TAD_RFID.c: 209:                         value = 0x07;
[e = F2762 -> -> 7 `i `uc ]
"210
[; ;TAD_RFID.c: 210:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"211
[; ;TAD_RFID.c: 211:                         substate = 1;
[e = F2745 -> -> 1 `i `uc ]
"212
[; ;TAD_RFID.c: 212:                         break;
[e $U 363  ]
"213
[; ;TAD_RFID.c: 213:                     case 1:
[e :U 366 ]
"214
[; ;TAD_RFID.c: 214:                         TagType = 0x26;
[e = F2752 -> -> 38 `i `uc ]
"215
[; ;TAD_RFID.c: 215:                         irqEn = 0x77;
[e = F2746 -> -> 119 `i `uc ]
"216
[; ;TAD_RFID.c: 216:                         waitIRq = 0x30;
[e = F2747 -> -> 48 `i `uc ]
"217
[; ;TAD_RFID.c: 217:                         addr = 0x02;
[e = F2761 -> -> 2 `i `uc ]
"218
[; ;TAD_RFID.c: 218:                         value = irqEn | 0x80;
[e = F2762 -> | -> F2746 `i -> 128 `i `uc ]
"219
[; ;TAD_RFID.c: 219:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"220
[; ;TAD_RFID.c: 220:                         substate = 2;
[e = F2745 -> -> 2 `i `uc ]
"221
[; ;TAD_RFID.c: 221:                         break;
[e $U 363  ]
"222
[; ;TAD_RFID.c: 222:                     case 2:
[e :U 367 ]
"223
[; ;TAD_RFID.c: 223:                         addr = 0x04;
[e = F2761 -> -> 4 `i `uc ]
"224
[; ;TAD_RFID.c: 224:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"225
[; ;TAD_RFID.c: 225:                         substate = 3;
[e = F2745 -> -> 3 `i `uc ]
"226
[; ;TAD_RFID.c: 226:                         break;
[e $U 363  ]
"227
[; ;TAD_RFID.c: 227:                     case 3:
[e :U 368 ]
"228
[; ;TAD_RFID.c: 228:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 369  ]
{
"229
[; ;TAD_RFID.c: 229:                             substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"230
[; ;TAD_RFID.c: 230:                         } else {
}
[e $U 370  ]
[e :U 369 ]
{
"231
[; ;TAD_RFID.c: 231:                             addr = 0x02;
[e = F2761 -> -> 2 `i `uc ]
"232
[; ;TAD_RFID.c: 232:                             value = tempRegValue & ~0x80;
[e = F2762 -> & -> F2756 `i ~ -> 128 `i `uc ]
"233
[; ;TAD_RFID.c: 233:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"234
[; ;TAD_RFID.c: 234:                             substate = 4;
[e = F2745 -> -> 4 `i `uc ]
"235
[; ;TAD_RFID.c: 235:                         }
}
[e :U 370 ]
"236
[; ;TAD_RFID.c: 236:                         break;
[e $U 363  ]
"237
[; ;TAD_RFID.c: 237:                     case 4:
[e :U 371 ]
"238
[; ;TAD_RFID.c: 238:                         addr = 0x0A;
[e = F2761 -> -> 10 `i `uc ]
"239
[; ;TAD_RFID.c: 239:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"240
[; ;TAD_RFID.c: 240:                         substate = 5;
[e = F2745 -> -> 5 `i `uc ]
"241
[; ;TAD_RFID.c: 241:                         break;
[e $U 363  ]
"242
[; ;TAD_RFID.c: 242:                     case 5:
[e :U 372 ]
"243
[; ;TAD_RFID.c: 243:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 373  ]
{
"244
[; ;TAD_RFID.c: 244:                             substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"245
[; ;TAD_RFID.c: 245:                         } else {
}
[e $U 374  ]
[e :U 373 ]
{
"246
[; ;TAD_RFID.c: 246:                             addr = 0x0A;
[e = F2761 -> -> 10 `i `uc ]
"247
[; ;TAD_RFID.c: 247:                             value = tempRegValue | 0x80;
[e = F2762 -> | -> F2756 `i -> 128 `i `uc ]
"248
[; ;TAD_RFID.c: 248:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"249
[; ;TAD_RFID.c: 249:                             substate = 6;
[e = F2745 -> -> 6 `i `uc ]
"250
[; ;TAD_RFID.c: 250:                         }
}
[e :U 374 ]
"251
[; ;TAD_RFID.c: 251:                         break;
[e $U 363  ]
"252
[; ;TAD_RFID.c: 252:                     case 6:
[e :U 375 ]
"253
[; ;TAD_RFID.c: 253:                         addr = 0x01;
[e = F2761 -> -> 1 `i `uc ]
"254
[; ;TAD_RFID.c: 254:                         value = 0x00;
[e = F2762 -> -> 0 `i `uc ]
"255
[; ;TAD_RFID.c: 255:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"256
[; ;TAD_RFID.c: 256:                         substate = 7;
[e = F2745 -> -> 7 `i `uc ]
"257
[; ;TAD_RFID.c: 257:                         break;
[e $U 363  ]
"258
[; ;TAD_RFID.c: 258:                     case 7:
[e :U 376 ]
"259
[; ;TAD_RFID.c: 259:                         addr = 0x09;
[e = F2761 -> -> 9 `i `uc ]
"260
[; ;TAD_RFID.c: 260:                         value = TagType;
[e = F2762 -> F2752 `uc ]
"261
[; ;TAD_RFID.c: 261:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"262
[; ;TAD_RFID.c: 262:                         substate = 8;
[e = F2745 -> -> 8 `i `uc ]
"263
[; ;TAD_RFID.c: 263:                         break;
[e $U 363  ]
"264
[; ;TAD_RFID.c: 264:                     case 8:
[e :U 377 ]
"265
[; ;TAD_RFID.c: 265:                         addr = 0x01;
[e = F2761 -> -> 1 `i `uc ]
"266
[; ;TAD_RFID.c: 266:                         value = 0x0C;
[e = F2762 -> -> 12 `i `uc ]
"267
[; ;TAD_RFID.c: 267:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"268
[; ;TAD_RFID.c: 268:                         substate = 9;
[e = F2745 -> -> 9 `i `uc ]
"269
[; ;TAD_RFID.c: 269:                         break;
[e $U 363  ]
"270
[; ;TAD_RFID.c: 270:                     case 9:
[e :U 378 ]
"271
[; ;TAD_RFID.c: 271:                         addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"272
[; ;TAD_RFID.c: 272:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"273
[; ;TAD_RFID.c: 273:                         substate = 10;
[e = F2745 -> -> 10 `i `uc ]
"274
[; ;TAD_RFID.c: 274:                         break;
[e $U 363  ]
"275
[; ;TAD_RFID.c: 275:                     case 10:
[e :U 379 ]
"276
[; ;TAD_RFID.c: 276:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 380  ]
{
"277
[; ;TAD_RFID.c: 277:                             substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"278
[; ;TAD_RFID.c: 278:                         } else {
}
[e $U 381  ]
[e :U 380 ]
{
"279
[; ;TAD_RFID.c: 279:                             addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"280
[; ;TAD_RFID.c: 280:                             value = tempRegValue | 0x80;
[e = F2762 -> | -> F2756 `i -> 128 `i `uc ]
"281
[; ;TAD_RFID.c: 281:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"282
[; ;TAD_RFID.c: 282:                             substate = 11;
[e = F2745 -> -> 11 `i `uc ]
"283
[; ;TAD_RFID.c: 283:                         }
}
[e :U 381 ]
"284
[; ;TAD_RFID.c: 284:                         break;
[e $U 363  ]
"285
[; ;TAD_RFID.c: 285:                     case 11:
[e :U 382 ]
"286
[; ;TAD_RFID.c: 286:                         i = 0xFF;
[e = F2749 -> -> 255 `i `uc ]
"287
[; ;TAD_RFID.c: 287:                         addr = 0x04;
[e = F2761 -> -> 4 `i `uc ]
"288
[; ;TAD_RFID.c: 288:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"289
[; ;TAD_RFID.c: 289:                         substate = 12;
[e = F2745 -> -> 12 `i `uc ]
"290
[; ;TAD_RFID.c: 290:                         break;
[e $U 363  ]
"291
[; ;TAD_RFID.c: 291:                     case 12:
[e :U 383 ]
"292
[; ;TAD_RFID.c: 292:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 384  ]
{
"293
[; ;TAD_RFID.c: 293:                             substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"294
[; ;TAD_RFID.c: 294:                         } else {
}
[e $U 385  ]
[e :U 384 ]
{
"295
[; ;TAD_RFID.c: 295:                             n = tempRegValue;
[e = F2748 -> F2756 `uc ]
"296
[; ;TAD_RFID.c: 296:                             if ((n & 0x01) || (n & waitIRq) || (--i == 0)) {
[e $ ! || || != & -> F2748 `i -> 1 `i -> 0 `i != & -> F2748 `i -> F2747 `i -> 0 `i == -> =- F2749 -> -> 1 `i `uc `i -> 0 `i 386  ]
{
"297
[; ;TAD_RFID.c: 297:                                 addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"298
[; ;TAD_RFID.c: 298:                                 operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"299
[; ;TAD_RFID.c: 299:                                 substate = 13;
[e = F2745 -> -> 13 `i `uc ]
"300
[; ;TAD_RFID.c: 300:                             } else {
}
[e $U 387  ]
[e :U 386 ]
{
"301
[; ;TAD_RFID.c: 301:                                 addr = 0x04;
[e = F2761 -> -> 4 `i `uc ]
"302
[; ;TAD_RFID.c: 302:                                 operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"304
[; ;TAD_RFID.c: 304:                             }
}
[e :U 387 ]
"305
[; ;TAD_RFID.c: 305:                         }
}
[e :U 385 ]
"306
[; ;TAD_RFID.c: 306:                         break;
[e $U 363  ]
"307
[; ;TAD_RFID.c: 307:                     case 13:
[e :U 388 ]
"308
[; ;TAD_RFID.c: 308:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 389  ]
{
"309
[; ;TAD_RFID.c: 309:                             substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"310
[; ;TAD_RFID.c: 310:                         } else if (tempRegValue != 0x00) {
}
[e $U 390  ]
[e :U 389 ]
[e $ ! != -> F2756 `i -> 0 `i 391  ]
{
"311
[; ;TAD_RFID.c: 311:                             addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"312
[; ;TAD_RFID.c: 312:                             value = tempRegValue & ~0x80;
[e = F2762 -> & -> F2756 `i ~ -> 128 `i `uc ]
"313
[; ;TAD_RFID.c: 313:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"314
[; ;TAD_RFID.c: 314:                             substate = 14;
[e = F2745 -> -> 14 `i `uc ]
"315
[; ;TAD_RFID.c: 315:                         } else {
}
[e $U 392  ]
[e :U 391 ]
{
"316
[; ;TAD_RFID.c: 316:                             addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"317
[; ;TAD_RFID.c: 317:                             operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"319
[; ;TAD_RFID.c: 319:                         }
}
[e :U 392 ]
[e :U 390 ]
"320
[; ;TAD_RFID.c: 320:                         break;
[e $U 363  ]
"321
[; ;TAD_RFID.c: 321:                     case 14:
[e :U 393 ]
"322
[; ;TAD_RFID.c: 322:                         addr = 0x06;
[e = F2761 -> -> 6 `i `uc ]
"323
[; ;TAD_RFID.c: 323:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"324
[; ;TAD_RFID.c: 324:                         substate = 15;
[e = F2745 -> -> 15 `i `uc ]
"325
[; ;TAD_RFID.c: 325:                         break;
[e $U 363  ]
"326
[; ;TAD_RFID.c: 326:                     case 15:
[e :U 394 ]
"327
[; ;TAD_RFID.c: 327:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 395  ]
{
"328
[; ;TAD_RFID.c: 328:                             substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"329
[; ;TAD_RFID.c: 329:                         } else if (i != 0 && !(tempRegValue & 0x1B)) {
}
[e $U 396  ]
[e :U 395 ]
[e $ ! && != -> F2749 `i -> 0 `i ! != & -> F2756 `i -> 27 `i -> 0 `i 397  ]
{
"330
[; ;TAD_RFID.c: 330:                             addr = 0x0A;
[e = F2761 -> -> 10 `i `uc ]
"331
[; ;TAD_RFID.c: 331:                             operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"332
[; ;TAD_RFID.c: 332:                             substate = 16;
[e = F2745 -> -> 16 `i `uc ]
"333
[; ;TAD_RFID.c: 333:                         } else {
}
[e $U 398  ]
[e :U 397 ]
{
"334
[; ;TAD_RFID.c: 334:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"335
[; ;TAD_RFID.c: 335:                         }
}
[e :U 398 ]
[e :U 396 ]
"336
[; ;TAD_RFID.c: 336:                         break;
[e $U 363  ]
"337
[; ;TAD_RFID.c: 337:                     case 16:
[e :U 399 ]
"338
[; ;TAD_RFID.c: 338:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 400  ]
{
"339
[; ;TAD_RFID.c: 339:                             substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"340
[; ;TAD_RFID.c: 340:                         } else {
}
[e $U 401  ]
[e :U 400 ]
{
"341
[; ;TAD_RFID.c: 341:                             fifoLevel = tempRegValue;
[e = F2758 F2756 ]
"342
[; ;TAD_RFID.c: 342:                             addr = 0x0C;
[e = F2761 -> -> 12 `i `uc ]
"343
[; ;TAD_RFID.c: 343:                             operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"344
[; ;TAD_RFID.c: 344:                             substate = 17;
[e = F2745 -> -> 17 `i `uc ]
"345
[; ;TAD_RFID.c: 345:                         }
}
[e :U 401 ]
"346
[; ;TAD_RFID.c: 346:                         break;
[e $U 363  ]
"347
[; ;TAD_RFID.c: 347:                     case 17:
[e :U 402 ]
"348
[; ;TAD_RFID.c: 348:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 403  ]
{
"349
[; ;TAD_RFID.c: 349:                             substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"350
[; ;TAD_RFID.c: 350:                         } else {
}
[e $U 404  ]
[e :U 403 ]
{
"351
[; ;TAD_RFID.c: 351:                             lastBitsVal = tempRegValue & 0x07;
[e = F2757 -> & -> F2756 `i -> 7 `i `uc ]
"352
[; ;TAD_RFID.c: 352:                             backBitsCalc = lastBitsVal ? (fifoLevel - 1) * 8 + lastBitsVal : fifoLevel * 8;
[e = F2759 -> ? != -> F2757 `i -> 0 `i : + * - -> F2758 `i -> 1 `i -> 8 `i -> F2757 `i * -> F2758 `i -> 8 `i `uc ]
"353
[; ;TAD_RFID.c: 353:                             if (backBitsCalc == 0x10) {
[e $ ! == -> F2759 `i -> 16 `i 405  ]
{
"354
[; ;TAD_RFID.c: 354:                                 state = 1;
[e = F2744 -> -> 1 `i `uc ]
"355
[; ;TAD_RFID.c: 355:                                 substate = 0;
[e = F2745 -> -> 0 `i `uc ]
"356
[; ;TAD_RFID.c: 356:                             } else {
}
[e $U 406  ]
[e :U 405 ]
{
"357
[; ;TAD_RFID.c: 357:                                 state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"358
[; ;TAD_RFID.c: 358:                             }
}
[e :U 406 ]
"359
[; ;TAD_RFID.c: 359:                         }
}
[e :U 404 ]
"360
[; ;TAD_RFID.c: 360:                         break;
[e $U 363  ]
"361
[; ;TAD_RFID.c: 361:                 }
}
[e $U 363  ]
[e :U 364 ]
[e [\ F2745 , $ -> 0 `i 365
 , $ -> 1 `i 366
 , $ -> 2 `i 367
 , $ -> 3 `i 368
 , $ -> 4 `i 371
 , $ -> 5 `i 372
 , $ -> 6 `i 375
 , $ -> 7 `i 376
 , $ -> 8 `i 377
 , $ -> 9 `i 378
 , $ -> 10 `i 379
 , $ -> 11 `i 382
 , $ -> 12 `i 383
 , $ -> 13 `i 388
 , $ -> 14 `i 393
 , $ -> 15 `i 394
 , $ -> 16 `i 399
 , $ -> 17 `i 402
 363 ]
[e :U 363 ]
"362
[; ;TAD_RFID.c: 362:                 break;
[e $U 360  ]
"364
[; ;TAD_RFID.c: 364:             case 1:
[e :U 407 ]
"365
[; ;TAD_RFID.c: 365:                 switch(substate) {
[e $U 409  ]
{
"366
[; ;TAD_RFID.c: 366:                     case 0:
[e :U 410 ]
"367
[; ;TAD_RFID.c: 367:                         addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"368
[; ;TAD_RFID.c: 368:                         value = 0x00;
[e = F2762 -> -> 0 `i `uc ]
"369
[; ;TAD_RFID.c: 369:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"370
[; ;TAD_RFID.c: 370:                         substate = 1;
[e = F2745 -> -> 1 `i `uc ]
"371
[; ;TAD_RFID.c: 371:                         break;
[e $U 408  ]
"372
[; ;TAD_RFID.c: 372:                     case 1:
[e :U 411 ]
"373
[; ;TAD_RFID.c: 373:                         UID[0] = 0x93;
[e = *U + &U F2753 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2753 `ui `ux -> -> 147 `i `uc ]
"374
[; ;TAD_RFID.c: 374:                         UID[1] = 0x20;
[e = *U + &U F2753 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2753 `ui `ux -> -> 32 `i `uc ]
"375
[; ;TAD_RFID.c: 375:                         addr = 0x08;
[e = F2761 -> -> 8 `i `uc ]
"376
[; ;TAD_RFID.c: 376:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"377
[; ;TAD_RFID.c: 377:                         substate = 2;
[e = F2745 -> -> 2 `i `uc ]
"378
[; ;TAD_RFID.c: 378:                         break;
[e $U 408  ]
"379
[; ;TAD_RFID.c: 379:                     case 2:
[e :U 412 ]
"380
[; ;TAD_RFID.c: 380:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 413  ]
{
"381
[; ;TAD_RFID.c: 381:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"382
[; ;TAD_RFID.c: 382:                         } else {
}
[e $U 414  ]
[e :U 413 ]
{
"383
[; ;TAD_RFID.c: 383:                             addr = 0x08;
[e = F2761 -> -> 8 `i `uc ]
"384
[; ;TAD_RFID.c: 384:                             value = tempRegValue & ~0x08;
[e = F2762 -> & -> F2756 `i ~ -> 8 `i `uc ]
"385
[; ;TAD_RFID.c: 385:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"386
[; ;TAD_RFID.c: 386:                             substate = 3;
[e = F2745 -> -> 3 `i `uc ]
"387
[; ;TAD_RFID.c: 387:                         }
}
[e :U 414 ]
"388
[; ;TAD_RFID.c: 388:                         break;
[e $U 408  ]
"389
[; ;TAD_RFID.c: 389:                     case 3:
[e :U 415 ]
"390
[; ;TAD_RFID.c: 390:                         irqEn = 0x77;
[e = F2746 -> -> 119 `i `uc ]
"391
[; ;TAD_RFID.c: 391:                         waitIRq = 0x30;
[e = F2747 -> -> 48 `i `uc ]
"392
[; ;TAD_RFID.c: 392:                         addr = 0x02;
[e = F2761 -> -> 2 `i `uc ]
"393
[; ;TAD_RFID.c: 393:                         value = irqEn | 0x80;
[e = F2762 -> | -> F2746 `i -> 128 `i `uc ]
"394
[; ;TAD_RFID.c: 394:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"395
[; ;TAD_RFID.c: 395:                         substate = 4;
[e = F2745 -> -> 4 `i `uc ]
"396
[; ;TAD_RFID.c: 396:                         break;
[e $U 408  ]
"397
[; ;TAD_RFID.c: 397:                     case 4:
[e :U 416 ]
"398
[; ;TAD_RFID.c: 398:                         addr = 0x04;
[e = F2761 -> -> 4 `i `uc ]
"399
[; ;TAD_RFID.c: 399:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"400
[; ;TAD_RFID.c: 400:                         substate = 5;
[e = F2745 -> -> 5 `i `uc ]
"401
[; ;TAD_RFID.c: 401:                         break;
[e $U 408  ]
"402
[; ;TAD_RFID.c: 402:                     case 5:
[e :U 417 ]
"403
[; ;TAD_RFID.c: 403:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 418  ]
{
"404
[; ;TAD_RFID.c: 404:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"405
[; ;TAD_RFID.c: 405:                         } else {
}
[e $U 419  ]
[e :U 418 ]
{
"406
[; ;TAD_RFID.c: 406:                             addr = 0x04;
[e = F2761 -> -> 4 `i `uc ]
"407
[; ;TAD_RFID.c: 407:                             value = tempRegValue & ~0x80;
[e = F2762 -> & -> F2756 `i ~ -> 128 `i `uc ]
"408
[; ;TAD_RFID.c: 408:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"409
[; ;TAD_RFID.c: 409:                             substate = 6;
[e = F2745 -> -> 6 `i `uc ]
"410
[; ;TAD_RFID.c: 410:                         }
}
[e :U 419 ]
"411
[; ;TAD_RFID.c: 411:                         break;
[e $U 408  ]
"412
[; ;TAD_RFID.c: 412:                     case 6:
[e :U 420 ]
"413
[; ;TAD_RFID.c: 413:                         addr = 0x0A;
[e = F2761 -> -> 10 `i `uc ]
"414
[; ;TAD_RFID.c: 414:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"415
[; ;TAD_RFID.c: 415:                         substate = 7;
[e = F2745 -> -> 7 `i `uc ]
"416
[; ;TAD_RFID.c: 416:                         break;
[e $U 408  ]
"417
[; ;TAD_RFID.c: 417:                     case 7:
[e :U 421 ]
"418
[; ;TAD_RFID.c: 418:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 422  ]
{
"419
[; ;TAD_RFID.c: 419:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"420
[; ;TAD_RFID.c: 420:                         } else {
}
[e $U 423  ]
[e :U 422 ]
{
"421
[; ;TAD_RFID.c: 421:                             addr = 0x0A;
[e = F2761 -> -> 10 `i `uc ]
"422
[; ;TAD_RFID.c: 422:                             value = tempRegValue | 0x80;
[e = F2762 -> | -> F2756 `i -> 128 `i `uc ]
"423
[; ;TAD_RFID.c: 423:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"424
[; ;TAD_RFID.c: 424:                             substate = 8;
[e = F2745 -> -> 8 `i `uc ]
"425
[; ;TAD_RFID.c: 425:                         }
}
[e :U 423 ]
"426
[; ;TAD_RFID.c: 426:                         break;
[e $U 408  ]
"427
[; ;TAD_RFID.c: 427:                     case 8:
[e :U 424 ]
"428
[; ;TAD_RFID.c: 428:                         addr = 0x01;
[e = F2761 -> -> 1 `i `uc ]
"429
[; ;TAD_RFID.c: 429:                         value = 0x00;
[e = F2762 -> -> 0 `i `uc ]
"430
[; ;TAD_RFID.c: 430:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"431
[; ;TAD_RFID.c: 431:                         substate = 9;
[e = F2745 -> -> 9 `i `uc ]
"432
[; ;TAD_RFID.c: 432:                         break;
[e $U 408  ]
"433
[; ;TAD_RFID.c: 433:                     case 9:
[e :U 425 ]
"434
[; ;TAD_RFID.c: 434:                         addr = 0x09;
[e = F2761 -> -> 9 `i `uc ]
"435
[; ;TAD_RFID.c: 435:                         value = UID[0];
[e = F2762 *U + &U F2753 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2753 `ui `ux ]
"436
[; ;TAD_RFID.c: 436:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"437
[; ;TAD_RFID.c: 437:                         substate = 10;
[e = F2745 -> -> 10 `i `uc ]
"438
[; ;TAD_RFID.c: 438:                         break;
[e $U 408  ]
"439
[; ;TAD_RFID.c: 439:                     case 10:
[e :U 426 ]
"440
[; ;TAD_RFID.c: 440:                         addr = 0x09;
[e = F2761 -> -> 9 `i `uc ]
"441
[; ;TAD_RFID.c: 441:                         value = UID[1];
[e = F2762 *U + &U F2753 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2753 `ui `ux ]
"442
[; ;TAD_RFID.c: 442:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"443
[; ;TAD_RFID.c: 443:                         substate = 11;
[e = F2745 -> -> 11 `i `uc ]
"444
[; ;TAD_RFID.c: 444:                         break;
[e $U 408  ]
"445
[; ;TAD_RFID.c: 445:                     case 11:
[e :U 427 ]
"446
[; ;TAD_RFID.c: 446:                         addr = 0x01;
[e = F2761 -> -> 1 `i `uc ]
"447
[; ;TAD_RFID.c: 447:                         value = 0x0C;
[e = F2762 -> -> 12 `i `uc ]
"448
[; ;TAD_RFID.c: 448:                         operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"449
[; ;TAD_RFID.c: 449:                         substate = 12;
[e = F2745 -> -> 12 `i `uc ]
"450
[; ;TAD_RFID.c: 450:                         break;
[e $U 408  ]
"451
[; ;TAD_RFID.c: 451:                     case 12:
[e :U 428 ]
"452
[; ;TAD_RFID.c: 452:                         addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"453
[; ;TAD_RFID.c: 453:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"454
[; ;TAD_RFID.c: 454:                         substate = 13;
[e = F2745 -> -> 13 `i `uc ]
"455
[; ;TAD_RFID.c: 455:                         break;
[e $U 408  ]
"456
[; ;TAD_RFID.c: 456:                     case 13:
[e :U 429 ]
"457
[; ;TAD_RFID.c: 457:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 430  ]
{
"458
[; ;TAD_RFID.c: 458:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"459
[; ;TAD_RFID.c: 459:                         } else {
}
[e $U 431  ]
[e :U 430 ]
{
"460
[; ;TAD_RFID.c: 460:                             addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"461
[; ;TAD_RFID.c: 461:                             value = tempRegValue | 0x80;
[e = F2762 -> | -> F2756 `i -> 128 `i `uc ]
"462
[; ;TAD_RFID.c: 462:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"463
[; ;TAD_RFID.c: 463:                             substate = 14;
[e = F2745 -> -> 14 `i `uc ]
"464
[; ;TAD_RFID.c: 464:                         }
}
[e :U 431 ]
"465
[; ;TAD_RFID.c: 465:                         break;
[e $U 408  ]
"466
[; ;TAD_RFID.c: 466:                     case 14:
[e :U 432 ]
"467
[; ;TAD_RFID.c: 467:                         i = 0xFF;
[e = F2749 -> -> 255 `i `uc ]
"468
[; ;TAD_RFID.c: 468:                         addr = 0x04;
[e = F2761 -> -> 4 `i `uc ]
"469
[; ;TAD_RFID.c: 469:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"470
[; ;TAD_RFID.c: 470:                         substate = 15;
[e = F2745 -> -> 15 `i `uc ]
"471
[; ;TAD_RFID.c: 471:                         break;
[e $U 408  ]
"472
[; ;TAD_RFID.c: 472:                     case 15:
[e :U 433 ]
"473
[; ;TAD_RFID.c: 473:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 434  ]
{
"474
[; ;TAD_RFID.c: 474:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"475
[; ;TAD_RFID.c: 475:                         } else {
}
[e $U 435  ]
[e :U 434 ]
{
"476
[; ;TAD_RFID.c: 476:                             n = tempRegValue;
[e = F2748 -> F2756 `uc ]
"477
[; ;TAD_RFID.c: 477:                             if ((n & 0x01) || (n & waitIRq) || (--i == 0)) {
[e $ ! || || != & -> F2748 `i -> 1 `i -> 0 `i != & -> F2748 `i -> F2747 `i -> 0 `i == -> =- F2749 -> -> 1 `i `uc `i -> 0 `i 436  ]
{
"478
[; ;TAD_RFID.c: 478:                                 addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"479
[; ;TAD_RFID.c: 479:                                 operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"480
[; ;TAD_RFID.c: 480:                                 substate = 16;
[e = F2745 -> -> 16 `i `uc ]
"481
[; ;TAD_RFID.c: 481:                             } else {
}
[e $U 437  ]
[e :U 436 ]
{
"482
[; ;TAD_RFID.c: 482:                                 addr = 0x04;
[e = F2761 -> -> 4 `i `uc ]
"483
[; ;TAD_RFID.c: 483:                                 operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"485
[; ;TAD_RFID.c: 485:                             }
}
[e :U 437 ]
"486
[; ;TAD_RFID.c: 486:                         }
}
[e :U 435 ]
"487
[; ;TAD_RFID.c: 487:                         break;
[e $U 408  ]
"488
[; ;TAD_RFID.c: 488:                     case 16:
[e :U 438 ]
"489
[; ;TAD_RFID.c: 489:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 439  ]
{
"490
[; ;TAD_RFID.c: 490:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"491
[; ;TAD_RFID.c: 491:                         } else {
}
[e $U 440  ]
[e :U 439 ]
{
"492
[; ;TAD_RFID.c: 492:                             addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"493
[; ;TAD_RFID.c: 493:                             value = tempRegValue & ~0x80;
[e = F2762 -> & -> F2756 `i ~ -> 128 `i `uc ]
"494
[; ;TAD_RFID.c: 494:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"495
[; ;TAD_RFID.c: 495:                             substate = 17;
[e = F2745 -> -> 17 `i `uc ]
"496
[; ;TAD_RFID.c: 496:                         }
}
[e :U 440 ]
"497
[; ;TAD_RFID.c: 497:                         break;
[e $U 408  ]
"498
[; ;TAD_RFID.c: 498:                     case 17:
[e :U 441 ]
"499
[; ;TAD_RFID.c: 499:                         addr = 0x06;
[e = F2761 -> -> 6 `i `uc ]
"500
[; ;TAD_RFID.c: 500:                         operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"501
[; ;TAD_RFID.c: 501:                         substate = 18;
[e = F2745 -> -> 18 `i `uc ]
"502
[; ;TAD_RFID.c: 502:                         break;
[e $U 408  ]
"503
[; ;TAD_RFID.c: 503:                     case 18:
[e :U 442 ]
"504
[; ;TAD_RFID.c: 504:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 443  ]
{
"505
[; ;TAD_RFID.c: 505:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"506
[; ;TAD_RFID.c: 506:                         } else if (i != 0 && !(tempRegValue & 0x1B)) {
}
[e $U 444  ]
[e :U 443 ]
[e $ ! && != -> F2749 `i -> 0 `i ! != & -> F2756 `i -> 27 `i -> 0 `i 445  ]
{
"507
[; ;TAD_RFID.c: 507:                             addr = 0x09;
[e = F2761 -> -> 9 `i `uc ]
"508
[; ;TAD_RFID.c: 508:                             operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"509
[; ;TAD_RFID.c: 509:                             substate = 19;
[e = F2745 -> -> 19 `i `uc ]
"510
[; ;TAD_RFID.c: 510:                         } else {
}
[e $U 446  ]
[e :U 445 ]
{
"511
[; ;TAD_RFID.c: 511:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"512
[; ;TAD_RFID.c: 512:                         }
}
[e :U 446 ]
[e :U 444 ]
"513
[; ;TAD_RFID.c: 513:                         break;
[e $U 408  ]
"514
[; ;TAD_RFID.c: 514:                     case 19:
[e :U 447 ]
"515
[; ;TAD_RFID.c: 515:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 448  ]
{
"516
[; ;TAD_RFID.c: 516:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"517
[; ;TAD_RFID.c: 517:                         } else {
}
[e $U 449  ]
[e :U 448 ]
{
"518
[; ;TAD_RFID.c: 518:                             UID[0] = tempRegValue;
[e = *U + &U F2753 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2753 `ui `ux F2756 ]
"519
[; ;TAD_RFID.c: 519:                             addr = 0x09;
[e = F2761 -> -> 9 `i `uc ]
"520
[; ;TAD_RFID.c: 520:                             operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"521
[; ;TAD_RFID.c: 521:                             substate = 20;
[e = F2745 -> -> 20 `i `uc ]
"522
[; ;TAD_RFID.c: 522:                         }
}
[e :U 449 ]
"523
[; ;TAD_RFID.c: 523:                         break;
[e $U 408  ]
"524
[; ;TAD_RFID.c: 524:                     case 20:
[e :U 450 ]
"525
[; ;TAD_RFID.c: 525:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 451  ]
{
"526
[; ;TAD_RFID.c: 526:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"527
[; ;TAD_RFID.c: 527:                         } else {
}
[e $U 452  ]
[e :U 451 ]
{
"528
[; ;TAD_RFID.c: 528:                             UID[1] = tempRegValue;
[e = *U + &U F2753 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2753 `ui `ux F2756 ]
"529
[; ;TAD_RFID.c: 529:                             addr = 0x09;
[e = F2761 -> -> 9 `i `uc ]
"530
[; ;TAD_RFID.c: 530:                             operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"531
[; ;TAD_RFID.c: 531:                             substate = 21;
[e = F2745 -> -> 21 `i `uc ]
"532
[; ;TAD_RFID.c: 532:                         }
}
[e :U 452 ]
"533
[; ;TAD_RFID.c: 533:                         break;
[e $U 408  ]
"534
[; ;TAD_RFID.c: 534:                     case 21:
[e :U 453 ]
"535
[; ;TAD_RFID.c: 535:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 454  ]
{
"536
[; ;TAD_RFID.c: 536:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"537
[; ;TAD_RFID.c: 537:                         } else {
}
[e $U 455  ]
[e :U 454 ]
{
"538
[; ;TAD_RFID.c: 538:                             UID[2] = tempRegValue;
[e = *U + &U F2753 * -> -> -> 2 `i `ui `ux -> -> # *U &U F2753 `ui `ux F2756 ]
"539
[; ;TAD_RFID.c: 539:                             addr = 0x09;
[e = F2761 -> -> 9 `i `uc ]
"540
[; ;TAD_RFID.c: 540:                             operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"541
[; ;TAD_RFID.c: 541:                             substate = 22;
[e = F2745 -> -> 22 `i `uc ]
"542
[; ;TAD_RFID.c: 542:                         }
}
[e :U 455 ]
"543
[; ;TAD_RFID.c: 543:                         break;
[e $U 408  ]
"544
[; ;TAD_RFID.c: 544:                     case 22:
[e :U 456 ]
"545
[; ;TAD_RFID.c: 545:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 457  ]
{
"546
[; ;TAD_RFID.c: 546:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"547
[; ;TAD_RFID.c: 547:                         } else {
}
[e $U 458  ]
[e :U 457 ]
{
"548
[; ;TAD_RFID.c: 548:                             UID[3] = tempRegValue;
[e = *U + &U F2753 * -> -> -> 3 `i `ui `ux -> -> # *U &U F2753 `ui `ux F2756 ]
"549
[; ;TAD_RFID.c: 549:                             addr = 0x09;
[e = F2761 -> -> 9 `i `uc ]
"550
[; ;TAD_RFID.c: 550:                             operation_pending = 1;
[e = F2760 -> -> 1 `i `uc ]
"551
[; ;TAD_RFID.c: 551:                             substate = 23;
[e = F2745 -> -> 23 `i `uc ]
"552
[; ;TAD_RFID.c: 552:                         }
}
[e :U 458 ]
"553
[; ;TAD_RFID.c: 553:                         break;
[e $U 408  ]
"554
[; ;TAD_RFID.c: 554:                     case 23:
[e :U 459 ]
"555
[; ;TAD_RFID.c: 555:                         if (tempRegValue == 0xFF) {
[e $ ! == -> F2756 `i -> 255 `i 460  ]
{
"556
[; ;TAD_RFID.c: 556:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"557
[; ;TAD_RFID.c: 557:                         } else {
}
[e $U 461  ]
[e :U 460 ]
{
"558
[; ;TAD_RFID.c: 558:                             UID[4] = tempRegValue;
[e = *U + &U F2753 * -> -> -> 4 `i `ui `ux -> -> # *U &U F2753 `ui `ux F2756 ]
"559
[; ;TAD_RFID.c: 559:                             UID[5] = 0;
[e = *U + &U F2753 * -> -> -> 5 `i `ui `ux -> -> # *U &U F2753 `ui `ux -> -> 0 `i `uc ]
"560
[; ;TAD_RFID.c: 560:                             checksum = UID[0] ^ UID[1] ^ UID[2] ^ UID[3];
[e = F2754 -> ^ ^ ^ -> *U + &U F2753 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i -> *U + &U F2753 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i -> *U + &U F2753 * -> -> -> 2 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i -> *U + &U F2753 * -> -> -> 3 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i `uc ]
"561
[; ;TAD_RFID.c: 561:                             allZero = ((UID[0] | UID[1] | UID[2] | UID[3]) == 0);
[e = F2755 -> -> == | | | -> *U + &U F2753 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i -> *U + &U F2753 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i -> *U + &U F2753 * -> -> -> 2 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i -> *U + &U F2753 * -> -> -> 3 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i -> 0 `i `i `uc ]
"562
[; ;TAD_RFID.c: 562:                             substate = 24;
[e = F2745 -> -> 24 `i `uc ]
"563
[; ;TAD_RFID.c: 563:                         }
}
[e :U 461 ]
"564
[; ;TAD_RFID.c: 564:                         break;
[e $U 408  ]
"565
[; ;TAD_RFID.c: 565:                     case 24:
[e :U 462 ]
"566
[; ;TAD_RFID.c: 566:                         if (checksum != UID[4] || allZero) {
[e $ ! || != -> F2754 `i -> *U + &U F2753 * -> -> -> 4 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i != -> F2755 `i -> 0 `i 463  ]
{
"567
[; ;TAD_RFID.c: 567:                             state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"568
[; ;TAD_RFID.c: 568:                         } else {
}
[e $U 464  ]
[e :U 463 ]
{
"569
[; ;TAD_RFID.c: 569:                             char differentUID = 1;
[v _differentUID `uc ~T0 @X0 1 a ]
[e = _differentUID -> -> 1 `i `uc ]
"570
[; ;TAD_RFID.c: 570:                             unsigned char currentUser[5];
[v _currentUser `uc ~T0 @X0 -> 5 `i a ]
"571
[; ;TAD_RFID.c: 571:                             getActualUID(currentUser, 0xFF);
[e ( _getActualUID (2 , &U _currentUser -> -> 255 `i `uc ]
"573
[; ;TAD_RFID.c: 573:                             if(currentUser[0] != UID[0]) {
[e $ ! != -> *U + &U _currentUser * -> -> -> 0 `i `ui `ux -> -> # *U &U _currentUser `ui `ux `i -> *U + &U F2753 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2753 `ui `ux `i 465  ]
{
"574
[; ;TAD_RFID.c: 574:                                 setCurrentUser(UID[0], UID[1], UID[2], UID[3], UID[4]);
[e ( _setCurrentUser (4 , , , , -> *U + &U F2753 * -> -> -> 0 `i `ui `ux -> -> # *U &U F2753 `ui `ux `uc -> *U + &U F2753 * -> -> -> 1 `i `ui `ux -> -> # *U &U F2753 `ui `ux `uc -> *U + &U F2753 * -> -> -> 2 `i `ui `ux -> -> # *U &U F2753 `ui `ux `uc -> *U + &U F2753 * -> -> -> 3 `i `ui `ux -> -> # *U &U F2753 `ui `ux `uc -> *U + &U F2753 * -> -> -> 4 `i `ui `ux -> -> # *U &U F2753 `ui `ux `uc ]
"575
[; ;TAD_RFID.c: 575:                             }
}
[e :U 465 ]
"576
[; ;TAD_RFID.c: 576:                             addr = 0x0D;
[e = F2761 -> -> 13 `i `uc ]
"577
[; ;TAD_RFID.c: 577:                             value = 0x00;
[e = F2762 -> -> 0 `i `uc ]
"578
[; ;TAD_RFID.c: 578:                             operation_pending = 2;
[e = F2760 -> -> 2 `i `uc ]
"579
[; ;TAD_RFID.c: 579:                             substate = 25;
[e = F2745 -> -> 25 `i `uc ]
"580
[; ;TAD_RFID.c: 580:                         }
}
[e :U 464 ]
"581
[; ;TAD_RFID.c: 581:                         break;
[e $U 408  ]
"582
[; ;TAD_RFID.c: 582:                     case 25:
[e :U 466 ]
"583
[; ;TAD_RFID.c: 583:                         state = substate = 0;
[e = F2744 = F2745 -> -> 0 `i `uc ]
"584
[; ;TAD_RFID.c: 584:                         break;
[e $U 408  ]
"585
[; ;TAD_RFID.c: 585:                 }
}
[e $U 408  ]
[e :U 409 ]
[e [\ F2745 , $ -> 0 `i 410
 , $ -> 1 `i 411
 , $ -> 2 `i 412
 , $ -> 3 `i 415
 , $ -> 4 `i 416
 , $ -> 5 `i 417
 , $ -> 6 `i 420
 , $ -> 7 `i 421
 , $ -> 8 `i 424
 , $ -> 9 `i 425
 , $ -> 10 `i 426
 , $ -> 11 `i 427
 , $ -> 12 `i 428
 , $ -> 13 `i 429
 , $ -> 14 `i 432
 , $ -> 15 `i 433
 , $ -> 16 `i 438
 , $ -> 17 `i 441
 , $ -> 18 `i 442
 , $ -> 19 `i 447
 , $ -> 20 `i 450
 , $ -> 21 `i 453
 , $ -> 22 `i 456
 , $ -> 23 `i 459
 , $ -> 24 `i 462
 , $ -> 25 `i 466
 408 ]
[e :U 408 ]
"586
[; ;TAD_RFID.c: 586:                 break;
[e $U 360  ]
"587
[; ;TAD_RFID.c: 587:         }
}
[e $U 360  ]
[e :U 361 ]
[e [\ F2744 , $ -> 0 `i 362
 , $ -> 1 `i 407
 360 ]
[e :U 360 ]
"588
[; ;TAD_RFID.c: 588:     }
}
[e :U 359 ]
[e :U 355 ]
"589
[; ;TAD_RFID.c: 589: }
[e :UE 351 ]
}
